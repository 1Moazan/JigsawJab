<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.ECS</name>
    </assembly>
    <members>
        <member name="T:Amazon.ECS.AmazonECSConfig">
            <summary>
            Configuration for accessing Amazon ECS service
            </summary>
        </member>
        <member name="P:Amazon.ECS.AmazonECSConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.ECS.AmazonECSConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.ECS.AmazonECSConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.ECS.AmazonECSConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.ECS.AmazonECSConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.ECS.AmazonECSDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon ECS service
            </summary>
        </member>
        <member name="M:Amazon.ECS.AmazonECSDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            ECS
            </summary>
        </member>
        <member name="P:Amazon.ECS.AmazonECSDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.ECS.AmazonECSDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.ECS.AmazonECSDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.ECS.AmazonECSDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.ECS.AmazonECSDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.ECS.AmazonECSDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Endpoints.ECSEndpointParameters">
            <summary>
            Contains parameters used for resolving ECS endpoints
            Parameters can be sourced from client config and service operations
            Used by internal ECSEndpointProvider and ECSEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.ECS.Endpoints.ECSEndpointParameters.#ctor">
            <summary>
            ECSEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.ECS.Endpoints.ECSEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.ECS.Endpoints.ECSEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.ECS.Endpoints.ECSEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.ECS.Endpoints.ECSEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.ECS.AmazonECSException">
            <summary>
             Common exception for the ECS service.
             </summary>
        </member>
        <member name="M:Amazon.ECS.AmazonECSException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonECSException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonECSException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonECSException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonECSException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonECSException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Internal.AmazonECSEndpointProvider">
            <summary>
            Amazon ECS endpoint provider.
            Resolves endpoint for given set of ECSEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Internal.AmazonECSEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for ECSEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.ECS.Internal.AmazonECSEndpointResolver">
            <summary>
            Amazon ECS endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for ECS service requests.
            Collects values for ECSEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses ECSEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Internal.AmazonECSMetadata">
            <summary>
            Service metadata for  Amazon ECS service
            </summary>
        </member>
        <member name="P:Amazon.ECS.Internal.AmazonECSMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Internal.AmazonECSMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.AccessDeniedException">
            <summary>
            You don't have authorization to perform the requested action.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.Attachment">
            <summary>
            An object representing a container instance or task attachment.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Attachment.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            Details of the attachment.
            </para>
             
            <para>
            For elastic network interfaces, this includes the network interface ID, the MAC address,
            the subnet ID, and the private IPv4 address.
            </para>
             
            <para>
            For Service Connect services, this includes <c>portName</c>, <c>clientAliases</c>,
            <c>discoveryName</c>, and <c>ingressPortOverride</c>.
            </para>
             
            <para>
            For Elastic Block Storage, this includes <c>roleArn</c>, <c>deleteOnTermination</c>,
            <c>volumeName</c>, <c>volumeId</c>, and <c>statusReason</c> (only when the attachment
            fails to create or attach).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Attachment.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The unique identifier for the attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Attachment.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
             The status of the attachment. Valid values are <c>PRECREATED</c>, <c>CREATED</c>,
            <c>ATTACHING</c>, <c>ATTACHED</c>, <c>DETACHING</c>, <c>DETACHED</c>, <c>DELETED</c>,
            and <c>FAILED</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Attachment.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the attachment, such as <c>ElasticNetworkInterface</c>, <c>Service Connect</c>,
            and <c>AmazonElasticBlockStorage</c>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.AttachmentStateChange">
            <summary>
            An object representing a change in state for a task attachment.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.AttachmentStateChange.AttachmentArn">
            <summary>
            Gets and sets the property AttachmentArn. 
            <para>
            The Amazon Resource Name (ARN) of the attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.AttachmentStateChange.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the attachment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Attribute">
            <summary>
            An attribute is a name-value pair that's associated with an Amazon ECS object. Use
            attributes to extend the Amazon ECS data model by adding custom metadata to your resources.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes">Attributes</a>
            in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Attribute.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the attribute. The <c>name</c> must contain between 1 and 128 characters.
            The name may contain letters (uppercase and lowercase), numbers, hyphens (-), underscores
            (_), forward slashes (/), back slashes (\), or periods (.).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Attribute.TargetId">
            <summary>
            Gets and sets the property TargetId. 
            <para>
            The ID of the target. You can specify the short form ID for a resource or the full
            Amazon Resource Name (ARN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Attribute.TargetType">
            <summary>
            Gets and sets the property TargetType. 
            <para>
            The type of the target to attach the attribute with. This parameter is required if
            you use the short form ID for a resource instead of the full ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Attribute.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the attribute. The <c>value</c> must contain between 1 and 128 characters.
            It can contain letters (uppercase and lowercase), numbers, hyphens (-), underscores
            (_), periods (.), at signs (@), forward slashes (/), back slashes (\), colons (:),
            or spaces. The value can't start or end with a space.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.AttributeLimitExceededException">
            <summary>
            You can apply up to 10 custom attributes for each resource. You can view the attributes
            of a resource with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListAttributes.html">ListAttributes</a>.
            You can remove existing attributes on a resource with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeleteAttributes.html">DeleteAttributes</a>.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.AttributeLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new AttributeLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.AttributeLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AttributeLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.AttributeLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of AttributeLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.AttributeLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AttributeLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.AttributeLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AttributeLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.AutoScalingGroupProvider">
            <summary>
            The details of the Auto Scaling group for the capacity provider.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.AutoScalingGroupProvider.AutoScalingGroupArn">
            <summary>
            Gets and sets the property AutoScalingGroupArn. 
            <para>
            The Amazon Resource Name (ARN) that identifies the Auto Scaling group, or the Auto
            Scaling group name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.AutoScalingGroupProvider.ManagedDraining">
            <summary>
            Gets and sets the property ManagedDraining. 
            <para>
            The managed draining option for the Auto Scaling group capacity provider. When you
            enable this, Amazon ECS manages and gracefully drains the EC2 container instances
            that are in the Auto Scaling group capacity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.AutoScalingGroupProvider.ManagedScaling">
            <summary>
            Gets and sets the property ManagedScaling. 
            <para>
            The managed scaling settings for the Auto Scaling group capacity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.AutoScalingGroupProvider.ManagedTerminationProtection">
            <summary>
            Gets and sets the property ManagedTerminationProtection. 
            <para>
            The managed termination protection setting to use for the Auto Scaling group capacity
            provider. This determines whether the Auto Scaling group has managed termination protection.
            The default is off.
            </para>
             <important> 
            <para>
            When using managed termination protection, managed scaling must also be used otherwise
            managed termination protection doesn't work.
            </para>
             </important> 
            <para>
            When managed termination protection is on, Amazon ECS prevents the Amazon EC2 instances
            in an Auto Scaling group that contain tasks from being terminated during a scale-in
            action. The Auto Scaling group and each instance in the Auto Scaling group must have
            instance protection from scale-in actions on as well. For more information, see <a
            href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection">Instance
            Protection</a> in the <i>Auto Scaling User Guide</i>.
            </para>
             
            <para>
            When managed termination protection is off, your Amazon EC2 instances aren't protected
            from termination when the Auto Scaling group scales in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.AutoScalingGroupProviderUpdate">
            <summary>
            The details of the Auto Scaling group capacity provider to update.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.AutoScalingGroupProviderUpdate.ManagedDraining">
            <summary>
            Gets and sets the property ManagedDraining. 
            <para>
            The managed draining option for the Auto Scaling group capacity provider. When you
            enable this, Amazon ECS manages and gracefully drains the EC2 container instances
            that are in the Auto Scaling group capacity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.AutoScalingGroupProviderUpdate.ManagedScaling">
            <summary>
            Gets and sets the property ManagedScaling. 
            <para>
            The managed scaling settings for the Auto Scaling group capacity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.AutoScalingGroupProviderUpdate.ManagedTerminationProtection">
            <summary>
            Gets and sets the property ManagedTerminationProtection. 
            <para>
            The managed termination protection setting to use for the Auto Scaling group capacity
            provider. This determines whether the Auto Scaling group has managed termination protection.
            </para>
             <important> 
            <para>
            When using managed termination protection, managed scaling must also be used otherwise
            managed termination protection doesn't work.
            </para>
             </important> 
            <para>
            When managed termination protection is on, Amazon ECS prevents the Amazon EC2 instances
            in an Auto Scaling group that contain tasks from being terminated during a scale-in
            action. The Auto Scaling group and each instance in the Auto Scaling group must have
            instance protection from scale-in actions on. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection">Instance
            Protection</a> in the <i>Auto Scaling User Guide</i>.
            </para>
             
            <para>
            When managed termination protection is off, your Amazon EC2 instances aren't protected
            from termination when the Auto Scaling group scales in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.AwsVpcConfiguration">
            <summary>
            An object representing the networking details for a task or service. For example <c>awsVpcConfiguration={subnets=["subnet-12344321"],securityGroups=["sg-12344321"]}</c>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.AwsVpcConfiguration.AssignPublicIp">
            <summary>
            Gets and sets the property AssignPublicIp. 
            <para>
            Whether the task's elastic network interface receives a public IP address. The default
            value is <c>ENABLED</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.AwsVpcConfiguration.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            The IDs of the security groups associated with the task or service. If you don't specify
            a security group, the default security group for the VPC is used. There's a limit
            of 5 security groups that can be specified per <c>awsvpcConfiguration</c>.
            </para>
             <note> 
            <para>
            All specified security groups must be from the same VPC.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.AwsVpcConfiguration.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
            The IDs of the subnets associated with the task or service. There's a limit of 16
            subnets that can be specified per <c>awsvpcConfiguration</c>.
            </para>
             <note> 
            <para>
            All specified subnets must be from the same VPC.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.BlockedException">
            <summary>
            Your Amazon Web Services account was blocked. For more information, contact <a href="http://aws.amazon.com/contact-us/">
            Amazon Web Services Support</a>.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.BlockedException.#ctor(System.String)">
            <summary>
            Constructs a new BlockedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.BlockedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BlockedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.BlockedException.#ctor(System.Exception)">
            <summary>
            Construct instance of BlockedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.BlockedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BlockedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.BlockedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BlockedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.CapacityProvider">
            <summary>
            The details for a capacity provider.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CapacityProvider.AutoScalingGroupProvider">
            <summary>
            Gets and sets the property AutoScalingGroupProvider. 
            <para>
            The Auto Scaling group settings for the capacity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CapacityProvider.CapacityProviderArn">
            <summary>
            Gets and sets the property CapacityProviderArn. 
            <para>
            The Amazon Resource Name (ARN) that identifies the capacity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CapacityProvider.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the capacity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CapacityProvider.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the capacity provider. Only capacity providers in an <c>ACTIVE</c>
            state can be used in a cluster. When a capacity provider is successfully deleted,
            it has an <c>INACTIVE</c> status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CapacityProvider.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the capacity provider to help you categorize and organize
            it. Each tag consists of a key and an optional value. You define both.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <c>aws:</c>, <c>AWS:</c>, or any upper or lowercase combination of such
            as a prefix for either keys or values as it is reserved for Amazon Web Services use.
            You cannot edit or delete tag keys or values with this prefix. Tags with this prefix
            do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CapacityProvider.UpdateStatus">
            <summary>
            Gets and sets the property UpdateStatus. 
            <para>
            The update status of the capacity provider. The following are the possible states
            that is returned.
            </para>
             <dl> <dt>DELETE_IN_PROGRESS</dt> <dd> 
            <para>
            The capacity provider is in the process of being deleted.
            </para>
             </dd> <dt>DELETE_COMPLETE</dt> <dd> 
            <para>
            The capacity provider was successfully deleted and has an <c>INACTIVE</c> status.
            </para>
             </dd> <dt>DELETE_FAILED</dt> <dd> 
            <para>
            The capacity provider can't be deleted. The update status reason provides further
            details about why the delete failed.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CapacityProvider.UpdateStatusReason">
            <summary>
            Gets and sets the property UpdateStatusReason. 
            <para>
            The update status reason. This provides further details about the update status for
            the capacity provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CapacityProviderStrategyItem">
            <summary>
            The details of a capacity provider strategy. A capacity provider strategy can be set
            when using the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html">RunTask</a>or
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateCluster.html">CreateCluster</a>
            APIs or as the default capacity provider strategy for a cluster with the <c>CreateCluster</c>
            API.
            
             
            <para>
            Only capacity providers that are already associated with a cluster and have an <c>ACTIVE</c>
            or <c>UPDATING</c> status can be used in a capacity provider strategy. The <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutClusterCapacityProviders.html">PutClusterCapacityProviders</a>
            API is used to associate a capacity provider with a cluster.
            </para>
             
            <para>
            If specifying a capacity provider that uses an Auto Scaling group, the capacity provider
            must already be created. New Auto Scaling group capacity providers can be created
            with the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateClusterCapacityProvider.html">CreateClusterCapacityProvider</a>
            API operation.
            </para>
             
            <para>
            To use a Fargate capacity provider, specify either the <c>FARGATE</c> or <c>FARGATE_SPOT</c>
            capacity providers. The Fargate capacity providers are available to all accounts and
            only need to be associated with a cluster to be used in a capacity provider strategy.
            </para>
             
            <para>
            With <c>FARGATE_SPOT</c>, you can run interruption tolerant tasks at a rate that's
            discounted compared to the <c>FARGATE</c> price. <c>FARGATE_SPOT</c> runs tasks on
            spare compute capacity. When Amazon Web Services needs the capacity back, your tasks
            are interrupted with a two-minute warning. <c>FARGATE_SPOT</c> supports Linux tasks
            with the X86_64 architecture on platform version 1.3.0 or later. <c>FARGATE_SPOT</c>
            supports Linux tasks with the ARM64 architecture on platform version 1.4.0 or later.
            </para>
             
            <para>
            A capacity provider strategy can contain a maximum of 20 capacity providers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CapacityProviderStrategyItem.Base">
            <summary>
            Gets and sets the property Base. 
            <para>
            The <i>base</i> value designates how many tasks, at a minimum, to run on the specified
            capacity provider. Only one capacity provider in a capacity provider strategy can
            have a <i>base</i> defined. If no value is specified, the default value of <c>0</c>
            is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CapacityProviderStrategyItem.CapacityProvider">
            <summary>
            Gets and sets the property CapacityProvider. 
            <para>
            The short name of the capacity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CapacityProviderStrategyItem.Weight">
            <summary>
            Gets and sets the property Weight. 
            <para>
            The <i>weight</i> value designates the relative percentage of the total number of
            tasks launched that should use the specified capacity provider. The <c>weight</c>
            value is taken into consideration after the <c>base</c> value, if defined, is satisfied.
            </para>
             
            <para>
            If no <c>weight</c> value is specified, the default value of <c>0</c> is used. When
            multiple capacity providers are specified within a capacity provider strategy, at
            least one of the capacity providers must have a weight value greater than zero and
            any capacity providers with a weight of <c>0</c> can't be used to place tasks. If
            you specify multiple capacity providers in a strategy that all have a weight of <c>0</c>,
            any <c>RunTask</c> or <c>CreateService</c> actions using the capacity provider strategy
            will fail.
            </para>
             
            <para>
            An example scenario for using weights is defining a strategy that contains two capacity
            providers and both have a weight of <c>1</c>, then when the <c>base</c> is satisfied,
            the tasks will be split evenly across the two capacity providers. Using that same
            logic, if you specify a weight of <c>1</c> for <i>capacityProviderA</i> and a weight
            of <c>4</c> for <i>capacityProviderB</i>, then for every one task that's run using
            <i>capacityProviderA</i>, four tasks would use <i>capacityProviderB</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ClientException">
            <summary>
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ClientException.#ctor(System.String)">
            <summary>
            Constructs a new ClientException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ClientException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClientException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClientException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClientException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.Cluster">
            <summary>
            A regional grouping of one or more container instances where you can run task requests.
            Each account receives a default cluster the first time you use the Amazon ECS service,
            but you may also create other clusters. Clusters may contain more than one instance
            type simultaneously.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.ActiveServicesCount">
            <summary>
            Gets and sets the property ActiveServicesCount. 
            <para>
            The number of services that are running on the cluster in an <c>ACTIVE</c> state.
            You can view these services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">PListServices</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.Attachments">
            <summary>
            Gets and sets the property Attachments. 
            <para>
            The resources attached to a cluster. When using a capacity provider with a cluster,
            the capacity provider and associated resources are returned as cluster attachments.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.AttachmentsStatus">
            <summary>
            Gets and sets the property AttachmentsStatus. 
            <para>
            The status of the capacity providers associated with the cluster. The following are
            the states that are returned.
            </para>
             <dl> <dt>UPDATE_IN_PROGRESS</dt> <dd> 
            <para>
            The available capacity providers for the cluster are updating.
            </para>
             </dd> <dt>UPDATE_COMPLETE</dt> <dd> 
            <para>
            The capacity providers have successfully updated.
            </para>
             </dd> <dt>UPDATE_FAILED</dt> <dd> 
            <para>
            The capacity provider updates failed.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.CapacityProviders">
            <summary>
            Gets and sets the property CapacityProviders. 
            <para>
            The capacity providers associated with the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.ClusterArn">
            <summary>
            Gets and sets the property ClusterArn. 
            <para>
            The Amazon Resource Name (ARN) that identifies the cluster. For more information about
            the ARN format, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html#ecs-resource-ids">Amazon
            Resource Name (ARN)</a> in the <i>Amazon ECS Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            A user-generated string that you use to identify your cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.Configuration">
            <summary>
            Gets and sets the property Configuration. 
            <para>
            The execute command configuration for the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.DefaultCapacityProviderStrategy">
            <summary>
            Gets and sets the property DefaultCapacityProviderStrategy. 
            <para>
            The default capacity provider strategy for the cluster. When services or tasks are
            run in the cluster with no launch type or capacity provider strategy specified, the
            default capacity provider strategy is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.PendingTasksCount">
            <summary>
            Gets and sets the property PendingTasksCount. 
            <para>
            The number of tasks in the cluster that are in the <c>PENDING</c> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.RegisteredContainerInstancesCount">
            <summary>
            Gets and sets the property RegisteredContainerInstancesCount. 
            <para>
            The number of container instances registered into the cluster. This includes container
            instances in both <c>ACTIVE</c> and <c>DRAINING</c> status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.RunningTasksCount">
            <summary>
            Gets and sets the property RunningTasksCount. 
            <para>
            The number of tasks in the cluster that are in the <c>RUNNING</c> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.ServiceConnectDefaults">
            <summary>
            Gets and sets the property ServiceConnectDefaults. 
            <para>
            Use this parameter to set a default Service Connect namespace. After you set a default
            Service Connect namespace, any new services with Service Connect turned on that are
            created in the cluster are added as client services in the namespace. This setting
            only applies to new services that set the <c>enabled</c> parameter to <c>true</c>
            in the <c>ServiceConnectConfiguration</c>. You can set the namespace of each service
            individually in the <c>ServiceConnectConfiguration</c> to override this default parameter.
            </para>
             
            <para>
            Tasks that run in a namespace can use short names to connect to services in the namespace.
            Tasks can connect to services across all of the clusters in the namespace. Tasks connect
            through a managed proxy container that collects logs and metrics for increased visibility.
            Only the tasks that Amazon ECS services create are supported with Service Connect.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html">Service
            Connect</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.Settings">
            <summary>
            Gets and sets the property Settings. 
            <para>
            The settings for the cluster. This parameter indicates whether CloudWatch Container
            Insights is on or off for a cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.Statistics">
            <summary>
            Gets and sets the property Statistics. 
            <para>
            Additional information about your clusters that are separated by launch type. They
            include the following:
            </para>
             <ul> <li> 
            <para>
            runningEC2TasksCount
            </para>
             </li> <li> 
            <para>
            RunningFargateTasksCount
            </para>
             </li> <li> 
            <para>
            pendingEC2TasksCount
            </para>
             </li> <li> 
            <para>
            pendingFargateTasksCount
            </para>
             </li> <li> 
            <para>
            activeEC2ServiceCount
            </para>
             </li> <li> 
            <para>
            activeFargateServiceCount
            </para>
             </li> <li> 
            <para>
            drainingEC2ServiceCount
            </para>
             </li> <li> 
            <para>
            drainingFargateServiceCount
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the cluster. The following are the possible states that are returned.
            </para>
             <dl> <dt>ACTIVE</dt> <dd> 
            <para>
            The cluster is ready to accept tasks and if applicable you can register container
            instances with the cluster.
            </para>
             </dd> <dt>PROVISIONING</dt> <dd> 
            <para>
            The cluster has capacity providers that are associated with it and the resources needed
            for the capacity provider are being created.
            </para>
             </dd> <dt>DEPROVISIONING</dt> <dd> 
            <para>
            The cluster has capacity providers that are associated with it and the resources needed
            for the capacity provider are being deleted.
            </para>
             </dd> <dt>FAILED</dt> <dd> 
            <para>
            The cluster has capacity providers that are associated with it and the resources needed
            for the capacity provider have failed to create.
            </para>
             </dd> <dt>INACTIVE</dt> <dd> 
            <para>
            The cluster has been deleted. Clusters with an <c>INACTIVE</c> status may remain discoverable
            in your account for a period of time. However, this behavior is subject to change
            in the future. We don't recommend that you rely on <c>INACTIVE</c> clusters persisting.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the cluster to help you categorize and organize them.
            Each tag consists of a key and an optional value. You define both.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <c>aws:</c>, <c>AWS:</c>, or any upper or lowercase combination of such
            as a prefix for either keys or values as it is reserved for Amazon Web Services use.
            You cannot edit or delete tag keys or values with this prefix. Tags with this prefix
            do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ClusterConfiguration">
            <summary>
            The execute command and managed storage configuration for the cluster.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ClusterConfiguration.ExecuteCommandConfiguration">
            <summary>
            Gets and sets the property ExecuteCommandConfiguration. 
            <para>
            The details of the execute command configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ClusterConfiguration.ManagedStorageConfiguration">
            <summary>
            Gets and sets the property ManagedStorageConfiguration. 
            <para>
            The details of the managed storage configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ClusterContainsContainerInstancesException">
            <summary>
            You can't delete a cluster that has registered container instances. First, deregister
            the container instances before you can delete the cluster. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeregisterContainerInstance.html">DeregisterContainerInstance</a>.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsContainerInstancesException.#ctor(System.String)">
            <summary>
            Constructs a new ClusterContainsContainerInstancesException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsContainerInstancesException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClusterContainsContainerInstancesException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsContainerInstancesException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClusterContainsContainerInstancesException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsContainerInstancesException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterContainsContainerInstancesException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsContainerInstancesException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterContainsContainerInstancesException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.ClusterContainsServicesException">
            <summary>
            You can't delete a cluster that contains services. First, update the service to reduce
            its desired task count to 0, and then delete the service. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>
            and <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeleteService.html">DeleteService</a>.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsServicesException.#ctor(System.String)">
            <summary>
            Constructs a new ClusterContainsServicesException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsServicesException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClusterContainsServicesException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsServicesException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClusterContainsServicesException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsServicesException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterContainsServicesException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsServicesException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterContainsServicesException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.ClusterContainsTasksException">
            <summary>
            You can't delete a cluster that has active tasks.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsTasksException.#ctor(System.String)">
            <summary>
            Constructs a new ClusterContainsTasksException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsTasksException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClusterContainsTasksException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsTasksException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClusterContainsTasksException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsTasksException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterContainsTasksException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsTasksException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterContainsTasksException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.ClusterNotFoundException">
            <summary>
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ClusterNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClusterNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClusterNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.ClusterServiceConnectDefaults">
            <summary>
            Use this parameter to set a default Service Connect namespace. After you set a default
            Service Connect namespace, any new services with Service Connect turned on that are
            created in the cluster are added as client services in the namespace. This setting
            only applies to new services that set the <c>enabled</c> parameter to <c>true</c>
            in the <c>ServiceConnectConfiguration</c>. You can set the namespace of each service
            individually in the <c>ServiceConnectConfiguration</c> to override this default parameter.
            
             
            <para>
            Tasks that run in a namespace can use short names to connect to services in the namespace.
            Tasks can connect to services across all of the clusters in the namespace. Tasks connect
            through a managed proxy container that collects logs and metrics for increased visibility.
            Only the tasks that Amazon ECS services create are supported with Service Connect.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html">Service
            Connect</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ClusterServiceConnectDefaults.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace name or full Amazon Resource Name (ARN) of the Cloud Map namespace.
            When you create a service and don't specify a Service Connect configuration, this
            namespace is used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ClusterServiceConnectDefaultsRequest">
            <summary>
            Use this parameter to set a default Service Connect namespace. After you set a default
            Service Connect namespace, any new services with Service Connect turned on that are
            created in the cluster are added as client services in the namespace. This setting
            only applies to new services that set the <c>enabled</c> parameter to <c>true</c>
            in the <c>ServiceConnectConfiguration</c>. You can set the namespace of each service
            individually in the <c>ServiceConnectConfiguration</c> to override this default parameter.
            
             
            <para>
            Tasks that run in a namespace can use short names to connect to services in the namespace.
            Tasks can connect to services across all of the clusters in the namespace. Tasks connect
            through a managed proxy container that collects logs and metrics for increased visibility.
            Only the tasks that Amazon ECS services create are supported with Service Connect.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html">Service
            Connect</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ClusterServiceConnectDefaultsRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace name or full Amazon Resource Name (ARN) of the Cloud Map namespace that's
            used when you create a service and don't specify a Service Connect configuration.
            The namespace name can include up to 1024 characters. The name is case-sensitive.
            The name can't include hyphens (-), tilde (~), greater than (&gt;), less than (&lt;),
            or slash (/).
            </para>
             
            <para>
            If you enter an existing namespace name or ARN, then that namespace will be used.
            Any namespace type is supported. The namespace must be in this account and this Amazon
            Web Services Region.
            </para>
             
            <para>
            If you enter a new name, a Cloud Map namespace will be created. Amazon ECS creates
            a Cloud Map namespace with the "API calls" method of instance discovery only. This
            instance discovery method is the "HTTP" namespace type in the Command Line Interface.
            Other types of instance discovery aren't used by Service Connect.
            </para>
             
            <para>
            If you update the cluster with an empty string <c>""</c> for the namespace name, the
            cluster configuration for Service Connect is removed. Note that the namespace will
            remain in Cloud Map and must be deleted separately.
            </para>
             
            <para>
            For more information about Cloud Map, see <a href="https://docs.aws.amazon.com/cloud-map/latest/dg/working-with-services.html">Working
            with Services</a> in the <i>Cloud Map Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ClusterSetting">
            <summary>
            The settings to use when creating a cluster. This parameter is used to turn on CloudWatch
            Container Insights with enhanced observability or CloudWatch Container Insights for
            a cluster.
            
             
            <para>
            Container Insights with enhanced observability provides all the Container Insights
            metrics, plus additional task and container metrics. This version supports enhanced
            observability for Amazon ECS clusters using the Amazon EC2 and Fargate launch types.
            After you configure Container Insights with enhanced observability on Amazon ECS,
            Container Insights auto-collects detailed infrastructure telemetry from the cluster
            level down to the container level in your environment and displays these critical
            performance data in curated dashboards removing the heavy lifting in observability
            set-up. 
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cloudwatch-container-insights.html">Monitor
            Amazon ECS containers using Container Insights with enhanced observability</a> in
            the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ClusterSetting.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the cluster setting. The value is <c>containerInsights</c> .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ClusterSetting.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value to set for the cluster setting. The supported values are <c>enhanced</c>,
            <c>enabled</c>, and <c>disabled</c>. 
            </para>
             
            <para>
            To use Container Insights with enhanced observability, set the <c>containerInsights</c>
            account setting to <c>enhanced</c>.
            </para>
             
            <para>
            To use Container Insights, set the <c>containerInsights</c> account setting to <c>enabled</c>.
            </para>
             
            <para>
            If a cluster value is specified, it will override the <c>containerInsights</c> value
            set with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutAccountSetting.html">PutAccountSetting</a>
            or <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutAccountSettingDefault.html">PutAccountSettingDefault</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ConflictException">
            <summary>
            The <c>RunTask</c> request could not be processed due to conflicts. The provided <c>clientToken</c>
            is already in use with a different <c>RunTask</c> request. The <c>resourceIds</c>
            are the existing task ARNs which are already associated with the <c>clientToken</c>.
            
            
             
            <para>
            To fix this issue:
            </para>
             <ul> <li> 
            <para>
            Run <c>RunTask</c> with a unique <c>clientToken</c>.
            </para>
             </li> <li> 
            <para>
            Run <c>RunTask</c> with the <c>clientToken</c> and the original set of parameters
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.ECS.Model.ConflictException.ResourceIds">
            <summary>
            Gets and sets the property ResourceIds. 
            <para>
            The existing task ARNs which are already associated with the <c>clientToken</c>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Container">
            <summary>
            A Docker container that's part of a task.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.ContainerArn">
            <summary>
            Gets and sets the property ContainerArn. 
            <para>
            The Amazon Resource Name (ARN) of the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.Cpu">
            <summary>
            Gets and sets the property Cpu. 
            <para>
            The number of CPU units set for the container. The value is <c>0</c> if no value was
            specified in the container definition when the task definition was registered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.ExitCode">
            <summary>
            Gets and sets the property ExitCode. 
            <para>
            The exit code returned from the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.GpuIds">
            <summary>
            Gets and sets the property GpuIds. 
            <para>
            The IDs of each GPU assigned to the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.HealthStatus">
            <summary>
            Gets and sets the property HealthStatus. 
            <para>
            The health status of the container. If health checks aren't configured for this container
            in its task definition, then it reports the health status as <c>UNKNOWN</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The image used for the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.ImageDigest">
            <summary>
            Gets and sets the property ImageDigest. 
            <para>
            The container image manifest digest.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.LastStatus">
            <summary>
            Gets and sets the property LastStatus. 
            <para>
            The last known status of the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.ManagedAgents">
            <summary>
            Gets and sets the property ManagedAgents. 
            <para>
            The details of any Amazon ECS managed agents associated with the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            The hard limit (in MiB) of memory set for the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.MemoryReservation">
            <summary>
            Gets and sets the property MemoryReservation. 
            <para>
            The soft limit (in MiB) of memory set for the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.NetworkBindings">
            <summary>
            Gets and sets the property NetworkBindings. 
            <para>
            The network bindings associated with the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.NetworkInterfaces">
            <summary>
            Gets and sets the property NetworkInterfaces. 
            <para>
            The network interfaces associated with the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            A short (255 max characters) human-readable string to provide additional details about
            a running or stopped container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.RuntimeId">
            <summary>
            Gets and sets the property RuntimeId. 
            <para>
            The ID of the Docker container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.TaskArn">
            <summary>
            Gets and sets the property TaskArn. 
            <para>
            The ARN of the task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ContainerDefinition">
            <summary>
            Container definitions are used in task definitions to describe the different containers
            that are launched as part of a task.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            The command that's passed to the container. This parameter maps to <c>Cmd</c> in the
            docker container create command and the <c>COMMAND</c> parameter to docker run. If
            there are multiple arguments, each argument is a separated string in the array.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Cpu">
            <summary>
            Gets and sets the property Cpu. 
            <para>
            The number of <c>cpu</c> units reserved for the container. This parameter maps to
            <c>CpuShares</c> in the docker container create commandand the <c>--cpu-shares</c>
            option to docker run.
            </para>
             
            <para>
            This field is optional for tasks using the Fargate launch type, and the only requirement
            is that the total amount of CPU reserved for all containers within a task be lower
            than the task-level <c>cpu</c> value.
            </para>
             <note> 
            <para>
            You can determine the number of CPU units that are available per EC2 instance type
            by multiplying the vCPUs listed for that instance type on the <a href="http://aws.amazon.com/ec2/instance-types/">Amazon
            EC2 Instances</a> detail page by 1,024.
            </para>
             </note> 
            <para>
            Linux containers share unallocated CPU units with other containers on the container
            instance with the same ratio as their allocated amount. For example, if you run a
            single-container task on a single-core instance type with 512 CPU units specified
            for that container, and that's the only task running on the container instance, that
            container could use the full 1,024 CPU unit share at any given time. However, if you
            launched another copy of the same task on that container instance, each task is guaranteed
            a minimum of 512 CPU units when needed. Moreover, each container could float to higher
            CPU usage if the other container was not using it. If both tasks were 100% active
            all of the time, they would be limited to 512 CPU units.
            </para>
             
            <para>
            On Linux container instances, the Docker daemon on the container instance uses the
            CPU value to calculate the relative CPU share ratios for running containers. The minimum
            valid CPU share value that the Linux kernel allows is 2, and the maximum valid CPU
            share value that the Linux kernel allows is 262144. However, the CPU parameter isn't
            required, and you can use CPU values below 2 or above 262144 in your container definitions.
            For CPU values below 2 (including null) or above 262144, the behavior varies based
            on your Amazon ECS container agent version:
            </para>
             <ul> <li> 
            <para>
             <b>Agent versions less than or equal to 1.1.0:</b> Null and zero CPU values are passed
            to Docker as 0, which Docker then converts to 1,024 CPU shares. CPU values of 1 are
            passed to Docker as 1, which the Linux kernel converts to two CPU shares.
            </para>
             </li> <li> 
            <para>
             <b>Agent versions greater than or equal to 1.2.0:</b> Null, zero, and CPU values
            of 1 are passed to Docker as 2.
            </para>
             </li> <li> 
            <para>
             <b>Agent versions greater than or equal to 1.84.0:</b> CPU values greater than 256
            vCPU are passed to Docker as 256, which is equivalent to 262144 CPU shares.
            </para>
             </li> </ul> 
            <para>
            On Windows container instances, the CPU limit is enforced as an absolute limit, or
            a quota. Windows containers only have access to the specified amount of CPU that's
            described in the task definition. A null or zero CPU value is passed to Docker as
            <c>0</c>, which Windows interprets as 1% of one CPU.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.CredentialSpecs">
            <summary>
            Gets and sets the property CredentialSpecs. 
            <para>
            A list of ARNs in SSM or Amazon S3 to a credential spec (<c>CredSpec</c>) file that
            configures the container for Active Directory authentication. We recommend that you
            use this parameter instead of the <c>dockerSecurityOptions</c>. The maximum number
            of ARNs is 1.
            </para>
             
            <para>
            There are two formats for each ARN.
            </para>
             <dl> <dt>credentialspecdomainless:MyARN</dt> <dd> 
            <para>
            You use <c>credentialspecdomainless:MyARN</c> to provide a <c>CredSpec</c> with an
            additional section for a secret in Secrets Manager. You provide the login credentials
            to the domain in the secret.
            </para>
             
            <para>
            Each task that runs on any container instance can join different domains.
            </para>
             
            <para>
            You can use this format without joining the container instance to a domain.
            </para>
             </dd> <dt>credentialspec:MyARN</dt> <dd> 
            <para>
            You use <c>credentialspec:MyARN</c> to provide a <c>CredSpec</c> for a single domain.
            </para>
             
            <para>
            You must join the container instance to the domain before you start any tasks that
            use this task definition.
            </para>
             </dd> </dl> 
            <para>
            In both formats, replace <c>MyARN</c> with the ARN in SSM or Amazon S3.
            </para>
             
            <para>
            If you provide a <c>credentialspecdomainless:MyARN</c>, the <c>credspec</c> must provide
            a ARN in Secrets Manager for a secret containing the username, password, and the domain
            to connect to. For better security, the instance isn't joined to the domain for domainless
            authentication. Other applications on the instance can't use the domainless credentials.
            You can use this parameter to run tasks on the same instance, even it the tasks need
            to join different domains. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/windows-gmsa.html">Using
            gMSAs for Windows Containers</a> and <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/linux-gmsa.html">Using
            gMSAs for Linux Containers</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.DependsOn">
            <summary>
            Gets and sets the property DependsOn. 
            <para>
            The dependencies defined for container startup and shutdown. A container can contain
            multiple dependencies on other containers in a task definition. When a dependency
            is defined for container startup, for container shutdown it is reversed.
            </para>
             
            <para>
            For tasks using the EC2 launch type, the container instances require at least version
            1.26.0 of the container agent to turn on container dependencies. However, we recommend
            using the latest container agent version. For information about checking your agent
            version and updating to the latest version, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html">Updating
            the Amazon ECS Container Agent</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>. If you're using an Amazon ECS-optimized Linux AMI, your instance needs
            at least version 1.26.0-1 of the <c>ecs-init</c> package. If your container instances
            are launched from version <c>20190301</c> or later, then they contain the required
            versions of the container agent and <c>ecs-init</c>. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html">Amazon
            ECS-optimized Linux AMI</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            For tasks using the Fargate launch type, the task or service requires the following
            platforms:
            </para>
             <ul> <li> 
            <para>
            Linux platform version <c>1.3.0</c> or later.
            </para>
             </li> <li> 
            <para>
            Windows platform version <c>1.0.0</c> or later.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.DisableNetworking">
            <summary>
            Gets and sets the property DisableNetworking. 
            <para>
            When this parameter is true, networking is off within the container. This parameter
            maps to <c>NetworkDisabled</c> in the docker container create command.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.DnsSearchDomains">
            <summary>
            Gets and sets the property DnsSearchDomains. 
            <para>
            A list of DNS search domains that are presented to the container. This parameter maps
            to <c>DnsSearch</c> in the docker container create command and the <c>--dns-search</c>
            option to docker run.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.DnsServers">
            <summary>
            Gets and sets the property DnsServers. 
            <para>
            A list of DNS servers that are presented to the container. This parameter maps to
            <c>Dns</c> in the docker container create command and the <c>--dns</c> option to docker
            run.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.DockerLabels">
            <summary>
            Gets and sets the property DockerLabels. 
            <para>
            A key/value map of labels to add to the container. This parameter maps to <c>Labels</c>
            in the docker container create command and the <c>--label</c> option to docker run.
            This parameter requires version 1.18 of the Docker Remote API or greater on your container
            instance. To check the Docker Remote API version on your container instance, log in
            to your container instance and run the following command: <c>sudo docker version --format
            '{{.Server.APIVersion}}'</c> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.DockerSecurityOptions">
            <summary>
            Gets and sets the property DockerSecurityOptions. 
            <para>
            A list of strings to provide custom configuration for multiple security systems. This
            field isn't valid for containers in tasks using the Fargate launch type.
            </para>
             
            <para>
            For Linux tasks on EC2, this parameter can be used to reference custom labels for
            SELinux and AppArmor multi-level security systems.
            </para>
             
            <para>
            For any tasks on EC2, this parameter can be used to reference a credential spec file
            that configures a container for Active Directory authentication. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/windows-gmsa.html">Using
            gMSAs for Windows Containers</a> and <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/linux-gmsa.html">Using
            gMSAs for Linux Containers</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             
            <para>
            This parameter maps to <c>SecurityOpt</c> in the docker container create command and
            the <c>--security-opt</c> option to docker run.
            </para>
             <note> 
            <para>
            The Amazon ECS container agent running on a container instance must register with
            the <c>ECS_SELINUX_CAPABLE=true</c> or <c>ECS_APPARMOR_CAPABLE=true</c> environment
            variables before containers placed on that instance can use these security options.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS Container Agent Configuration</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            Valid values: "no-new-privileges" | "apparmor:PROFILE" | "label:value" | "credentialspec:CredentialSpecFilePath"
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.EntryPoint">
            <summary>
            Gets and sets the property EntryPoint. <important> 
            <para>
            Early versions of the Amazon ECS container agent don't properly handle <c>entryPoint</c>
            parameters. If you have problems using <c>entryPoint</c>, update your container agent
            or enter your commands and arguments as <c>command</c> array items instead.
            </para>
             </important> 
            <para>
            The entry point that's passed to the container. This parameter maps to <c>Entrypoint</c>
            in the docker container create command and the <c>--entrypoint</c> option to docker
            run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Environment">
            <summary>
            Gets and sets the property Environment. 
            <para>
            The environment variables to pass to a container. This parameter maps to <c>Env</c>
            in the docker container create command and the <c>--env</c> option to docker run.
            </para>
             <important> 
            <para>
            We don't recommend that you use plaintext environment variables for sensitive information,
            such as credential data.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.EnvironmentFiles">
            <summary>
            Gets and sets the property EnvironmentFiles. 
            <para>
            A list of files containing the environment variables to pass to a container. This
            parameter maps to the <c>--env-file</c> option to docker run.
            </para>
             
            <para>
            You can specify up to ten environment files. The file must have a <c>.env</c> file
            extension. Each line in an environment file contains an environment variable in <c>VARIABLE=VALUE</c>
            format. Lines beginning with <c>#</c> are treated as comments and are ignored.
            </para>
             
            <para>
            If there are environment variables specified using the <c>environment</c> parameter
            in a container definition, they take precedence over the variables contained within
            an environment file. If multiple environment files are specified that contain the
            same variable, they're processed from the top down. We recommend that you use unique
            variable names. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/taskdef-envfiles.html">Specifying
            Environment Variables</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Essential">
            <summary>
            Gets and sets the property Essential. 
            <para>
            If the <c>essential</c> parameter of a container is marked as <c>true</c>, and that
            container fails or stops for any reason, all other containers that are part of the
            task are stopped. If the <c>essential</c> parameter of a container is marked as <c>false</c>,
            its failure doesn't affect the rest of the containers in a task. If this parameter
            is omitted, a container is assumed to be essential.
            </para>
             
            <para>
            All tasks must have at least one essential container. If you have an application that's
            composed of multiple containers, group containers that are used for a common purpose
            into components, and separate the different components into multiple task definitions.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/application_architecture.html">Application
            Architecture</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.ExtraHosts">
            <summary>
            Gets and sets the property ExtraHosts. 
            <para>
            A list of hostnames and IP address mappings to append to the <c>/etc/hosts</c> file
            on the container. This parameter maps to <c>ExtraHosts</c> in the docker container
            create command and the <c>--add-host</c> option to docker run.
            </para>
             <note> 
            <para>
            This parameter isn't supported for Windows containers or tasks that use the <c>awsvpc</c>
            network mode.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.FirelensConfiguration">
            <summary>
            Gets and sets the property FirelensConfiguration. 
            <para>
            The FireLens configuration for the container. This is used to specify and configure
            a log router for container logs. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html">Custom
            Log Routing</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.HealthCheck">
            <summary>
            Gets and sets the property HealthCheck. 
            <para>
            The container health check command and associated configuration parameters for the
            container. This parameter maps to <c>HealthCheck</c> in the docker container create
            command and the <c>HEALTHCHECK</c> parameter of docker run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Hostname">
            <summary>
            Gets and sets the property Hostname. 
            <para>
            The hostname to use for your container. This parameter maps to <c>Hostname</c> in
            the docker container create command and the <c>--hostname</c> option to docker run.
            </para>
             <note> 
            <para>
            The <c>hostname</c> parameter is not supported if you're using the <c>awsvpc</c> network
            mode.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The image used to start a container. This string is passed directly to the Docker
            daemon. By default, images in the Docker Hub registry are available. Other repositories
            are specified with either <c> <i>repository-url</i>/<i>image</i>:<i>tag</i> </c> or
            <c> <i>repository-url</i>/<i>image</i>@<i>digest</i> </c>. Up to 255 letters (uppercase
            and lowercase), numbers, hyphens, underscores, colons, periods, forward slashes, and
            number signs are allowed. This parameter maps to <c>Image</c> in the docker container
            create command and the <c>IMAGE</c> parameter of docker run.
            </para>
             <ul> <li> 
            <para>
            When a new task starts, the Amazon ECS container agent pulls the latest version of
            the specified image and tag for the container to use. However, subsequent updates
            to a repository image aren't propagated to already running tasks.
            </para>
             </li> <li> 
            <para>
            Images in Amazon ECR repositories can be specified by either using the full <c>registry/repository:tag</c>
            or <c>registry/repository@digest</c>. For example, <c>012345678910.dkr.ecr.&lt;region-name&gt;.amazonaws.com/&lt;repository-name&gt;:latest</c>
            or <c>012345678910.dkr.ecr.&lt;region-name&gt;.amazonaws.com/&lt;repository-name&gt;@sha256:94afd1f2e64d908bc90dbca0035a5b567EXAMPLE</c>.
            
            </para>
             </li> <li> 
            <para>
            Images in official repositories on Docker Hub use a single name (for example, <c>ubuntu</c>
            or <c>mongo</c>).
            </para>
             </li> <li> 
            <para>
            Images in other repositories on Docker Hub are qualified with an organization name
            (for example, <c>amazon/amazon-ecs-agent</c>).
            </para>
             </li> <li> 
            <para>
            Images in other online repositories are qualified further by a domain name (for example,
            <c>quay.io/assemblyline/ubuntu</c>).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Interactive">
            <summary>
            Gets and sets the property Interactive. 
            <para>
            When this parameter is <c>true</c>, you can deploy containerized applications that
            require <c>stdin</c> or a <c>tty</c> to be allocated. This parameter maps to <c>OpenStdin</c>
            in the docker container create command and the <c>--interactive</c> option to docker
            run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Links">
            <summary>
            Gets and sets the property Links. 
            <para>
            The <c>links</c> parameter allows containers to communicate with each other without
            the need for port mappings. This parameter is only supported if the network mode of
            a task definition is <c>bridge</c>. The <c>name:internalName</c> construct is analogous
            to <c>name:alias</c> in Docker links. Up to 255 letters (uppercase and lowercase),
            numbers, underscores, and hyphens are allowed.. This parameter maps to <c>Links</c>
            in the docker container create command and the <c>--link</c> option to docker run.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note> <important> 
            <para>
            Containers that are collocated on a single container instance may be able to communicate
            with each other without requiring links or host port mappings. Network isolation is
            achieved on the container instance using security groups and VPC settings.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.LinuxParameters">
            <summary>
            Gets and sets the property LinuxParameters. 
            <para>
            Linux-specific modifications that are applied to the container, such as Linux kernel
            capabilities. For more information see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_KernelCapabilities.html">KernelCapabilities</a>.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.LogConfiguration">
            <summary>
            Gets and sets the property LogConfiguration. 
            <para>
            The log configuration specification for the container.
            </para>
             
            <para>
            This parameter maps to <c>LogConfig</c> in the docker container create command and
            the <c>--log-driver</c> option to docker run. By default, containers use the same
            logging driver that the Docker daemon uses. However the container can use a different
            logging driver than the Docker daemon by specifying a log driver with this parameter
            in the container definition. To use a different logging driver for a container, the
            log system must be configured properly on the container instance (or on a different
            log server for remote logging options). 
            </para>
             <note> 
            <para>
            Amazon ECS currently supports a subset of the logging drivers available to the Docker
            daemon (shown in the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_LogConfiguration.html">LogConfiguration</a>
            data type). Additional log drivers may be available in future releases of the Amazon
            ECS container agent.
            </para>
             </note> 
            <para>
            This parameter requires version 1.18 of the Docker Remote API or greater on your container
            instance. To check the Docker Remote API version on your container instance, log in
            to your container instance and run the following command: <c>sudo docker version --format
            '{{.Server.APIVersion}}'</c> 
            </para>
             <note> 
            <para>
            The Amazon ECS container agent running on a container instance must register the logging
            drivers available on that instance with the <c>ECS_AVAILABLE_LOGGING_DRIVERS</c> environment
            variable before containers placed on that instance can use these log configuration
            options. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS Container Agent Configuration</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            The amount (in MiB) of memory to present to the container. If your container attempts
            to exceed the memory specified here, the container is killed. The total amount of
            memory reserved for all containers within a task must be lower than the task <c>memory</c>
            value, if one is specified. This parameter maps to <c>Memory</c> in the docker container
            create command and the <c>--memory</c> option to docker run.
            </para>
             
            <para>
            If using the Fargate launch type, this parameter is optional.
            </para>
             
            <para>
            If using the EC2 launch type, you must specify either a task-level memory value or
            a container-level memory value. If you specify both a container-level <c>memory</c>
            and <c>memoryReservation</c> value, <c>memory</c> must be greater than <c>memoryReservation</c>.
            If you specify <c>memoryReservation</c>, then that value is subtracted from the available
            memory resources for the container instance where the container is placed. Otherwise,
            the value of <c>memory</c> is used.
            </para>
             
            <para>
            The Docker 20.10.0 or later daemon reserves a minimum of 6 MiB of memory for a container.
            So, don't specify less than 6 MiB of memory for your containers. 
            </para>
             
            <para>
            The Docker 19.03.13-ce or earlier daemon reserves a minimum of 4 MiB of memory for
            a container. So, don't specify less than 4 MiB of memory for your containers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.MemoryReservation">
            <summary>
            Gets and sets the property MemoryReservation. 
            <para>
            The soft limit (in MiB) of memory to reserve for the container. When system memory
            is under heavy contention, Docker attempts to keep the container memory to this soft
            limit. However, your container can consume more memory when it needs to, up to either
            the hard limit specified with the <c>memory</c> parameter (if applicable), or all
            of the available memory on the container instance, whichever comes first. This parameter
            maps to <c>MemoryReservation</c> in the docker container create command and the <c>--memory-reservation</c>
            option to docker run.
            </para>
             
            <para>
            If a task-level memory value is not specified, you must specify a non-zero integer
            for one or both of <c>memory</c> or <c>memoryReservation</c> in a container definition.
            If you specify both, <c>memory</c> must be greater than <c>memoryReservation</c>.
            If you specify <c>memoryReservation</c>, then that value is subtracted from the available
            memory resources for the container instance where the container is placed. Otherwise,
            the value of <c>memory</c> is used.
            </para>
             
            <para>
            For example, if your container normally uses 128 MiB of memory, but occasionally bursts
            to 256 MiB of memory for short periods of time, you can set a <c>memoryReservation</c>
            of 128 MiB, and a <c>memory</c> hard limit of 300 MiB. This configuration would allow
            the container to only reserve 128 MiB of memory from the remaining resources on the
            container instance, but also allow the container to consume more memory resources
            when needed.
            </para>
             
            <para>
            The Docker 20.10.0 or later daemon reserves a minimum of 6 MiB of memory for a container.
            So, don't specify less than 6 MiB of memory for your containers. 
            </para>
             
            <para>
            The Docker 19.03.13-ce or earlier daemon reserves a minimum of 4 MiB of memory for
            a container. So, don't specify less than 4 MiB of memory for your containers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.MountPoints">
            <summary>
            Gets and sets the property MountPoints. 
            <para>
            The mount points for data volumes in your container.
            </para>
             
            <para>
            This parameter maps to <c>Volumes</c> in the docker container create command and the
            <c>--volume</c> option to docker run.
            </para>
             
            <para>
            Windows containers can mount whole directories on the same drive as <c>$env:ProgramData</c>.
            Windows containers can't mount directories on a different drive, and mount point can't
            be across drives.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of a container. If you're linking multiple containers together in a task
            definition, the <c>name</c> of one container can be entered in the <c>links</c> of
            another container to connect the containers. Up to 255 letters (uppercase and lowercase),
            numbers, underscores, and hyphens are allowed. This parameter maps to <c>name</c>
            in the docker container create command and the <c>--name</c> option to docker run.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.PortMappings">
            <summary>
            Gets and sets the property PortMappings. 
            <para>
            The list of port mappings for the container. Port mappings allow containers to access
            ports on the host container instance to send or receive traffic.
            </para>
             
            <para>
            For task definitions that use the <c>awsvpc</c> network mode, only specify the <c>containerPort</c>.
            The <c>hostPort</c> can be left blank or it must be the same value as the <c>containerPort</c>.
            </para>
             
            <para>
            Port mappings on Windows use the <c>NetNAT</c> gateway address rather than <c>localhost</c>.
            There's no loopback for port mappings on Windows, so you can't access a container's
            mapped port from the host itself. 
            </para>
             
            <para>
            This parameter maps to <c>PortBindings</c> in the the docker container create command
            and the <c>--publish</c> option to docker run. If the network mode of a task definition
            is set to <c>none</c>, then you can't specify port mappings. If the network mode of
            a task definition is set to <c>host</c>, then host ports must either be undefined
            or they must match the container port in the port mapping.
            </para>
             <note> 
            <para>
            After a task reaches the <c>RUNNING</c> status, manual and automatic host and container
            port assignments are visible in the <b>Network Bindings</b> section of a container
            description for a selected task in the Amazon ECS console. The assignments are also
            visible in the <c>networkBindings</c> section <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTasks.html">DescribeTasks</a>
            responses.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Privileged">
            <summary>
            Gets and sets the property Privileged. 
            <para>
            When this parameter is true, the container is given elevated privileges on the host
            container instance (similar to the <c>root</c> user). This parameter maps to <c>Privileged</c>
            in the docker container create command and the <c>--privileged</c> option to docker
            run
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers or tasks run on Fargate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.PseudoTerminal">
            <summary>
            Gets and sets the property PseudoTerminal. 
            <para>
            When this parameter is <c>true</c>, a TTY is allocated. This parameter maps to <c>Tty</c>
            in the docker container create command and the <c>--tty</c> option to docker run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.ReadonlyRootFilesystem">
            <summary>
            Gets and sets the property ReadonlyRootFilesystem. 
            <para>
            When this parameter is true, the container is given read-only access to its root file
            system. This parameter maps to <c>ReadonlyRootfs</c> in the docker container create
            command and the <c>--read-only</c> option to docker run.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.RepositoryCredentials">
            <summary>
            Gets and sets the property RepositoryCredentials. 
            <para>
            The private repository authentication credentials to use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.ResourceRequirements">
            <summary>
            Gets and sets the property ResourceRequirements. 
            <para>
            The type and amount of a resource to assign to a container. The only supported resource
            is a GPU.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.RestartPolicy">
            <summary>
            Gets and sets the property RestartPolicy. 
            <para>
            The restart policy for a container. When you set up a restart policy, Amazon ECS can
            restart the container without needing to replace the task. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container-restart-policy.html">Restart
            individual containers in Amazon ECS tasks with container restart policies</a> in the
            <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Secrets">
            <summary>
            Gets and sets the property Secrets. 
            <para>
            The secrets to pass to the container. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html">Specifying
            Sensitive Data</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.StartTimeout">
            <summary>
            Gets and sets the property StartTimeout. 
            <para>
            Time duration (in seconds) to wait before giving up on resolving dependencies for
            a container. For example, you specify two containers in a task definition with containerA
            having a dependency on containerB reaching a <c>COMPLETE</c>, <c>SUCCESS</c>, or <c>HEALTHY</c>
            status. If a <c>startTimeout</c> value is specified for containerB and it doesn't
            reach the desired status within that time then containerA gives up and not start.
            This results in the task transitioning to a <c>STOPPED</c> state.
            </para>
             <note> 
            <para>
            When the <c>ECS_CONTAINER_START_TIMEOUT</c> container agent configuration variable
            is used, it's enforced independently from this start timeout value.
            </para>
             </note> 
            <para>
            For tasks using the Fargate launch type, the task or service requires the following
            platforms:
            </para>
             <ul> <li> 
            <para>
            Linux platform version <c>1.3.0</c> or later.
            </para>
             </li> <li> 
            <para>
            Windows platform version <c>1.0.0</c> or later.
            </para>
             </li> </ul> 
            <para>
            For tasks using the EC2 launch type, your container instances require at least version
            <c>1.26.0</c> of the container agent to use a container start timeout value. However,
            we recommend using the latest container agent version. For information about checking
            your agent version and updating to the latest version, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html">Updating
            the Amazon ECS Container Agent</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>. If you're using an Amazon ECS-optimized Linux AMI, your instance needs
            at least version <c>1.26.0-1</c> of the <c>ecs-init</c> package. If your container
            instances are launched from version <c>20190301</c> or later, then they contain the
            required versions of the container agent and <c>ecs-init</c>. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html">Amazon
            ECS-optimized Linux AMI</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            The valid values for Fargate are 2-120 seconds.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.StopTimeout">
            <summary>
            Gets and sets the property StopTimeout. 
            <para>
            Time duration (in seconds) to wait before the container is forcefully killed if it
            doesn't exit normally on its own.
            </para>
             
            <para>
            For tasks using the Fargate launch type, the task or service requires the following
            platforms:
            </para>
             <ul> <li> 
            <para>
            Linux platform version <c>1.3.0</c> or later.
            </para>
             </li> <li> 
            <para>
            Windows platform version <c>1.0.0</c> or later.
            </para>
             </li> </ul> 
            <para>
            For tasks that use the Fargate launch type, the max stop timeout value is 120 seconds
            and if the parameter is not specified, the default value of 30 seconds is used.
            </para>
             
            <para>
            For tasks that use the EC2 launch type, if the <c>stopTimeout</c> parameter isn't
            specified, the value set for the Amazon ECS container agent configuration variable
            <c>ECS_CONTAINER_STOP_TIMEOUT</c> is used. If neither the <c>stopTimeout</c> parameter
            or the <c>ECS_CONTAINER_STOP_TIMEOUT</c> agent configuration variable are set, then
            the default values of 30 seconds for Linux containers and 30 seconds on Windows containers
            are used. Your container instances require at least version 1.26.0 of the container
            agent to use a container stop timeout value. However, we recommend using the latest
            container agent version. For information about checking your agent version and updating
            to the latest version, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html">Updating
            the Amazon ECS Container Agent</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>. If you're using an Amazon ECS-optimized Linux AMI, your instance needs
            at least version 1.26.0-1 of the <c>ecs-init</c> package. If your container instances
            are launched from version <c>20190301</c> or later, then they contain the required
            versions of the container agent and <c>ecs-init</c>. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html">Amazon
            ECS-optimized Linux AMI</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            The valid values for Fargate are 2-120 seconds.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.SystemControls">
            <summary>
            Gets and sets the property SystemControls. 
            <para>
            A list of namespaced kernel parameters to set in the container. This parameter maps
            to <c>Sysctls</c> in the docker container create command and the <c>--sysctl</c> option
            to docker run. For example, you can configure <c>net.ipv4.tcp_keepalive_time</c> setting
            to maintain longer lived connections.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Ulimits">
            <summary>
            Gets and sets the property Ulimits. 
            <para>
            A list of <c>ulimits</c> to set in the container. If a <c>ulimit</c> value is specified
            in a task definition, it overrides the default values set by Docker. This parameter
            maps to <c>Ulimits</c> in the docker container create command and the <c>--ulimit</c>
            option to docker run. Valid naming values are displayed in the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_Ulimit.html">Ulimit</a>
            data type.
            </para>
             
            <para>
            Amazon ECS tasks hosted on Fargate use the default resource limit values set by the
            operating system with the exception of the <c>nofile</c> resource limit parameter
            which Fargate overrides. The <c>nofile</c> resource limit sets a restriction on the
            number of open files that a container can use. The default <c>nofile</c> soft limit
            is <c> 65535</c> and the default hard limit is <c>65535</c>.
            </para>
             
            <para>
            This parameter requires version 1.18 of the Docker Remote API or greater on your container
            instance. To check the Docker Remote API version on your container instance, log in
            to your container instance and run the following command: <c>sudo docker version --format
            '{{.Server.APIVersion}}'</c> 
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.User">
            <summary>
            Gets and sets the property User. 
            <para>
            The user to use inside the container. This parameter maps to <c>User</c> in the docker
            container create command and the <c>--user</c> option to docker run.
            </para>
             <important> 
            <para>
            When running tasks using the <c>host</c> network mode, don't run containers using
            the root user (UID 0). We recommend using a non-root user for better security.
            </para>
             </important> 
            <para>
            You can specify the <c>user</c> using the following formats. If specifying a UID or
            GID, you must specify it as a positive integer.
            </para>
             <ul> <li> 
            <para>
             <c>user</c> 
            </para>
             </li> <li> 
            <para>
             <c>user:group</c> 
            </para>
             </li> <li> 
            <para>
             <c>uid</c> 
            </para>
             </li> <li> 
            <para>
             <c>uid:gid</c> 
            </para>
             </li> <li> 
            <para>
             <c>user:gid</c> 
            </para>
             </li> <li> 
            <para>
             <c>uid:group</c> 
            </para>
             </li> </ul> <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.VersionConsistency">
            <summary>
            Gets and sets the property VersionConsistency. 
            <para>
            Specifies whether Amazon ECS will resolve the container image tag provided in the
            container definition to an image digest. By default, the value is <c>enabled</c>.
            If you set the value for a container as <c>disabled</c>, Amazon ECS will not resolve
            the provided container image tag to a digest and will use the original image URI specified
            in the container definition for deployment. For more information about container image
            resolution, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-ecs.html#deployment-container-image-stability">Container
            image resolution</a> in the <i>Amazon ECS Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.VolumesFrom">
            <summary>
            Gets and sets the property VolumesFrom. 
            <para>
            Data volumes to mount from another container. This parameter maps to <c>VolumesFrom</c>
            in the docker container create command and the <c>--volumes-from</c> option to docker
            run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.WorkingDirectory">
            <summary>
            Gets and sets the property WorkingDirectory. 
            <para>
            The working directory to run commands inside the container in. This parameter maps
            to <c>WorkingDir</c> in the docker container create command and the <c>--workdir</c>
            option to docker run.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ContainerDependency">
            <summary>
            The dependencies defined for container startup and shutdown. A container can contain
            multiple dependencies. When a dependency is defined for container startup, for container
            shutdown it is reversed.
            
             
            <para>
            Your Amazon ECS container instances require at least version 1.26.0 of the container
            agent to use container dependencies. However, we recommend using the latest container
            agent version. For information about checking your agent version and updating to the
            latest version, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html">Updating
            the Amazon ECS Container Agent</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>. If you're using an Amazon ECS-optimized Linux AMI, your instance needs
            at least version 1.26.0-1 of the <c>ecs-init</c> package. If your container instances
            are launched from version <c>20190301</c> or later, then they contain the required
            versions of the container agent and <c>ecs-init</c>. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html">Amazon
            ECS-optimized Linux AMI</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             <note> 
            <para>
            For tasks that use the Fargate launch type, the task or service requires the following
            platforms:
            </para>
             <ul> <li> 
            <para>
            Linux platform version <c>1.3.0</c> or later.
            </para>
             </li> <li> 
            <para>
            Windows platform version <c>1.0.0</c> or later.
            </para>
             </li> </ul> </note> 
            <para>
            For more information about how to create a container dependency, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/example_task_definitions.html#example_task_definition-containerdependency">Container
            dependency</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDependency.Condition">
            <summary>
            Gets and sets the property Condition. 
            <para>
            The dependency condition of the container. The following are the available conditions
            and their behavior:
            </para>
             <ul> <li> 
            <para>
             <c>START</c> - This condition emulates the behavior of links and volumes today. It
            validates that a dependent container is started before permitting other containers
            to start.
            </para>
             </li> <li> 
            <para>
             <c>COMPLETE</c> - This condition validates that a dependent container runs to completion
            (exits) before permitting other containers to start. This can be useful for nonessential
            containers that run a script and then exit. This condition can't be set on an essential
            container.
            </para>
             </li> <li> 
            <para>
             <c>SUCCESS</c> - This condition is the same as <c>COMPLETE</c>, but it also requires
            that the container exits with a <c>zero</c> status. This condition can't be set on
            an essential container.
            </para>
             </li> <li> 
            <para>
             <c>HEALTHY</c> - This condition validates that the dependent container passes its
            Docker health check before permitting other containers to start. This requires that
            the dependent container has health checks configured. This condition is confirmed
            only at task startup.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDependency.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of a container.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ContainerImage">
            <summary>
            The details about the container image a service revision uses. 
            
             
            <para>
            To ensure that all tasks in a service use the same container image, Amazon ECS resolves
            container image names and any image tags specified in the task definition to container
            image digests. 
            </para>
             
            <para>
            After the container image digest has been established, Amazon ECS uses the digest
            to start any other desired tasks, and for any future service and service revision
            updates. This leads to all tasks in a service always running identical container images,
            resulting in version consistency for your software. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-ecs.html#deployment-container-image-stability">Container
            image resolution</a> in the Amazon ECS Developer Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerImage.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerImage.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The container image. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerImage.ImageDigest">
            <summary>
            Gets and sets the property ImageDigest. 
            <para>
            The container image digest.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ContainerInstance">
            <summary>
            An Amazon EC2 or External instance that's running the Amazon ECS agent and has been
            registered with a cluster.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.AgentConnected">
            <summary>
            Gets and sets the property AgentConnected. 
            <para>
            This parameter returns <c>true</c> if the agent is connected to Amazon ECS. An instance
            with an agent that may be unhealthy or stopped return <c>false</c>. Only instances
            connected to an agent can accept task placement requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.AgentUpdateStatus">
            <summary>
            Gets and sets the property AgentUpdateStatus. 
            <para>
            The status of the most recent agent update. If an update wasn't ever requested, this
            value is <c>NULL</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.Attachments">
            <summary>
            Gets and sets the property Attachments. 
            <para>
            The resources attached to a container instance, such as an elastic network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            The attributes set for the container instance, either by the Amazon ECS container
            agent at instance registration or manually with the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutAttributes.html">PutAttributes</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.CapacityProviderName">
            <summary>
            Gets and sets the property CapacityProviderName. 
            <para>
            The capacity provider that's associated with the container instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.ContainerInstanceArn">
            <summary>
            Gets and sets the property ContainerInstanceArn. 
            <para>
            The Amazon Resource Name (ARN) of the container instance. For more information about
            the ARN format, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html#ecs-resource-ids">Amazon
            Resource Name (ARN)</a> in the <i>Amazon ECS Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.Ec2InstanceId">
            <summary>
            Gets and sets the property Ec2InstanceId. 
            <para>
            The ID of the container instance. For Amazon EC2 instances, this value is the Amazon
            EC2 instance ID. For external instances, this value is the Amazon Web Services Systems
            Manager managed instance ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.HealthStatus">
            <summary>
            Gets and sets the property HealthStatus. 
            <para>
            An object representing the health status of the container instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.PendingTasksCount">
            <summary>
            Gets and sets the property PendingTasksCount. 
            <para>
            The number of tasks on the container instance that are in the <c>PENDING</c> status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.RegisteredAt">
            <summary>
            Gets and sets the property RegisteredAt. 
            <para>
            The Unix timestamp for the time when the container instance was registered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.RegisteredResources">
            <summary>
            Gets and sets the property RegisteredResources. 
            <para>
            For CPU and memory resource types, this parameter describes the amount of each resource
            that was available on the container instance when the container agent registered it
            with Amazon ECS. This value represents the total amount of CPU and memory that can
            be allocated on this container instance to tasks. For port resource types, this parameter
            describes the ports that were reserved by the Amazon ECS container agent when it registered
            the container instance with Amazon ECS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.RemainingResources">
            <summary>
            Gets and sets the property RemainingResources. 
            <para>
            For CPU and memory resource types, this parameter describes the remaining CPU and
            memory that wasn't already allocated to tasks and is therefore available for new tasks.
            For port resource types, this parameter describes the ports that were reserved by
            the Amazon ECS container agent (at instance registration time) and any task containers
            that have reserved port mappings on the host (with the <c>host</c> or <c>bridge</c>
            network mode). Any port that's not specified here is available for new tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.RunningTasksCount">
            <summary>
            Gets and sets the property RunningTasksCount. 
            <para>
            The number of tasks on the container instance that have a desired status (<c>desiredStatus</c>)
            of <c>RUNNING</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the container instance. The valid values are <c>REGISTERING</c>, <c>REGISTRATION_FAILED</c>,
            <c>ACTIVE</c>, <c>INACTIVE</c>, <c>DEREGISTERING</c>, or <c>DRAINING</c>.
            </para>
             
            <para>
            If your account has opted in to the <c>awsvpcTrunking</c> account setting, then any
            newly registered container instance will transition to a <c>REGISTERING</c> status
            while the trunk elastic network interface is provisioned for the instance. If the
            registration fails, the instance will transition to a <c>REGISTRATION_FAILED</c> status.
            You can describe the container instance and see the reason for failure in the <c>statusReason</c>
            parameter. Once the container instance is terminated, the instance transitions to
            a <c>DEREGISTERING</c> status while the trunk elastic network interface is deprovisioned.
            The instance then transitions to an <c>INACTIVE</c> status.
            </para>
             
            <para>
            The <c>ACTIVE</c> status indicates that the container instance can accept tasks. The
            <c>DRAINING</c> indicates that new tasks aren't placed on the container instance and
            any service tasks running on the container instance are removed if possible. For more
            information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container-instance-draining.html">Container
            instance draining</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.StatusReason">
            <summary>
            Gets and sets the property StatusReason. 
            <para>
            The reason that the container instance reached its current status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the container instance to help you categorize and organize
            them. Each tag consists of a key and an optional value. You define both.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <c>aws:</c>, <c>AWS:</c>, or any upper or lowercase combination of such
            as a prefix for either keys or values as it is reserved for Amazon Web Services use.
            You cannot edit or delete tag keys or values with this prefix. Tags with this prefix
            do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version counter for the container instance. Every time a container instance experiences
            a change that triggers a CloudWatch event, the version counter is incremented. If
            you're replicating your Amazon ECS container instance state with CloudWatch Events,
            you can compare the version of a container instance reported by the Amazon ECS APIs
            with the version reported in CloudWatch Events for the container instance (inside
            the <c>detail</c> object) to verify that the version in your event stream is current.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.VersionInfo">
            <summary>
            Gets and sets the property VersionInfo. 
            <para>
            The version information for the Amazon ECS container agent and Docker daemon running
            on the container instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ContainerInstanceHealthStatus">
            <summary>
            An object representing the health status of the container instance.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstanceHealthStatus.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            An array of objects representing the details of the container instance health status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstanceHealthStatus.OverallStatus">
            <summary>
            Gets and sets the property OverallStatus. 
            <para>
            The overall health status of the container instance. This is an aggregate status of
            all container instance health checks.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ContainerOverride">
            <summary>
            The overrides that are sent to a container. An empty container override can be passed
            in. An example of an empty container override is <c>{"containerOverrides": [ ] }</c>.
            If a non-empty container override is specified, the <c>name</c> parameter must be
            included.
            
             
            <para>
            You can use Secrets Manager or Amazon Web Services Systems Manager Parameter Store
            to store the sensitive data. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/secrets-envvar.html">Retrieve
            secrets through environment variables</a> in the Amazon ECS Developer Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerOverride.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            The command to send to the container that overrides the default command from the Docker
            image or the task definition. You must also specify a container name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerOverride.Cpu">
            <summary>
            Gets and sets the property Cpu. 
            <para>
            The number of <c>cpu</c> units reserved for the container, instead of the default
            value from the task definition. You must also specify a container name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerOverride.Environment">
            <summary>
            Gets and sets the property Environment. 
            <para>
            The environment variables to send to the container. You can add new environment variables,
            which are added to the container at launch, or you can override the existing environment
            variables from the Docker image or the task definition. You must also specify a container
            name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerOverride.EnvironmentFiles">
            <summary>
            Gets and sets the property EnvironmentFiles. 
            <para>
            A list of files containing the environment variables to pass to a container, instead
            of the value from the container definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerOverride.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            The hard limit (in MiB) of memory to present to the container, instead of the default
            value from the task definition. If your container attempts to exceed the memory specified
            here, the container is killed. You must also specify a container name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerOverride.MemoryReservation">
            <summary>
            Gets and sets the property MemoryReservation. 
            <para>
            The soft limit (in MiB) of memory to reserve for the container, instead of the default
            value from the task definition. You must also specify a container name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerOverride.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the container that receives the override. This parameter is required if
            any override is specified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerOverride.ResourceRequirements">
            <summary>
            Gets and sets the property ResourceRequirements. 
            <para>
            The type and amount of a resource to assign to a container, instead of the default
            value from the task definition. The only supported resource is a GPU.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ContainerRestartPolicy">
            <summary>
            You can enable a restart policy for each container defined in your task definition,
            to overcome transient failures faster and maintain task availability. When you enable
            a restart policy for a container, Amazon ECS can restart the container if it exits,
            without needing to replace the task. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container-restart-policy.html">Restart
            individual containers in Amazon ECS tasks with container restart policies</a> in the
            <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerRestartPolicy.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Specifies whether a restart policy is enabled for the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerRestartPolicy.IgnoredExitCodes">
            <summary>
            Gets and sets the property IgnoredExitCodes. 
            <para>
            A list of exit codes that Amazon ECS will ignore and not attempt a restart on. You
            can specify a maximum of 50 container exit codes. By default, Amazon ECS does not
            ignore any exit codes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerRestartPolicy.RestartAttemptPeriod">
            <summary>
            Gets and sets the property RestartAttemptPeriod. 
            <para>
            A period of time (in seconds) that the container must run for before a restart can
            be attempted. A container can be restarted only once every <c>restartAttemptPeriod</c>
            seconds. If a container isn't able to run for this time period and exits early, it
            will not be restarted. You can set a minimum <c>restartAttemptPeriod</c> of 60 seconds
            and a maximum <c>restartAttemptPeriod</c> of 1800 seconds. By default, a container
            must run for 300 seconds before it can be restarted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CreateCapacityProviderRequest">
            <summary>
            Container for the parameters to the CreateCapacityProvider operation.
            Creates a new capacity provider. Capacity providers are associated with an Amazon
            ECS cluster and are used in capacity provider strategies to facilitate cluster auto
            scaling.
            
             
            <para>
            Only capacity providers that use an Auto Scaling group can be created. Amazon ECS
            tasks on Fargate use the <c>FARGATE</c> and <c>FARGATE_SPOT</c> capacity providers.
            These providers are available to all accounts in the Amazon Web Services Regions that
            Fargate supports.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateCapacityProviderRequest.AutoScalingGroupProvider">
            <summary>
            Gets and sets the property AutoScalingGroupProvider. 
            <para>
            The details of the Auto Scaling group for the capacity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateCapacityProviderRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the capacity provider. Up to 255 characters are allowed. They include
            letters (both upper and lowercase letters), numbers, underscores (_), and hyphens
            (-). The name can't be prefixed with "<c>aws</c>", "<c>ecs</c>", or "<c>fargate</c>".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateCapacityProviderRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the capacity provider to categorize and organize them
            more conveniently. Each tag consists of a key and an optional value. You define both
            of them.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <c>aws:</c>, <c>AWS:</c>, or any upper or lowercase combination of such
            as a prefix for either keys or values as it is reserved for Amazon Web Services use.
            You cannot edit or delete tag keys or values with this prefix. Tags with this prefix
            do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CreateCapacityProviderResponse">
            <summary>
            This is the response object from the CreateCapacityProvider operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateCapacityProviderResponse.CapacityProvider">
            <summary>
            Gets and sets the property CapacityProvider. 
            <para>
            The full description of the new capacity provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CreateClusterRequest">
            <summary>
            Container for the parameters to the CreateCluster operation.
            Creates a new Amazon ECS cluster. By default, your account receives a <c>default</c>
            cluster when you launch your first container instance. However, you can create your
            own cluster with a unique name.
            
             <note> 
            <para>
            When you call the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateCluster.html">CreateCluster</a>
            API operation, Amazon ECS attempts to create the Amazon ECS service-linked role for
            your account. This is so that it can manage required resources in other Amazon Web
            Services services on your behalf. However, if the user that makes the call doesn't
            have permissions to create the service-linked role, it isn't created. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using-service-linked-roles.html">Using
            service-linked roles for Amazon ECS</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateClusterRequest.CapacityProviders">
            <summary>
            Gets and sets the property CapacityProviders. 
            <para>
            The short name of one or more capacity providers to associate with the cluster. A
            capacity provider must be associated with a cluster before it can be included as part
            of the default capacity provider strategy of the cluster or used in a capacity provider
            strategy when calling the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html">CreateService</a>
            or <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html">RunTask</a>
            actions.
            </para>
             
            <para>
            If specifying a capacity provider that uses an Auto Scaling group, the capacity provider
            must be created but not associated with another cluster. New Auto Scaling group capacity
            providers can be created with the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateCapacityProvider.html">CreateCapacityProvider</a>
            API operation.
            </para>
             
            <para>
            To use a Fargate capacity provider, specify either the <c>FARGATE</c> or <c>FARGATE_SPOT</c>
            capacity providers. The Fargate capacity providers are available to all accounts and
            only need to be associated with a cluster to be used.
            </para>
             
            <para>
            The <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutCapacityProvider.html">PutCapacityProvider</a>
            API operation is used to update the list of available capacity providers for a cluster
            after the cluster is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateClusterRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of your cluster. If you don't specify a name for your cluster, you create
            a cluster that's named <c>default</c>. Up to 255 letters (uppercase and lowercase),
            numbers, underscores, and hyphens are allowed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateClusterRequest.Configuration">
            <summary>
            Gets and sets the property Configuration. 
            <para>
            The <c>execute</c> command configuration for the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateClusterRequest.DefaultCapacityProviderStrategy">
            <summary>
            Gets and sets the property DefaultCapacityProviderStrategy. 
            <para>
            The capacity provider strategy to set as the default for the cluster. After a default
            capacity provider strategy is set for a cluster, when you call the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html">CreateService</a>
            or <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html">RunTask</a>
            APIs with no capacity provider strategy or launch type specified, the default capacity
            provider strategy for the cluster is used.
            </para>
             
            <para>
            If a default capacity provider strategy isn't defined for a cluster when it was created,
            it can be defined later with the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutClusterCapacityProviders.html">PutClusterCapacityProviders</a>
            API operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateClusterRequest.ServiceConnectDefaults">
            <summary>
            Gets and sets the property ServiceConnectDefaults. 
            <para>
            Use this parameter to set a default Service Connect namespace. After you set a default
            Service Connect namespace, any new services with Service Connect turned on that are
            created in the cluster are added as client services in the namespace. This setting
            only applies to new services that set the <c>enabled</c> parameter to <c>true</c>
            in the <c>ServiceConnectConfiguration</c>. You can set the namespace of each service
            individually in the <c>ServiceConnectConfiguration</c> to override this default parameter.
            </para>
             
            <para>
            Tasks that run in a namespace can use short names to connect to services in the namespace.
            Tasks can connect to services across all of the clusters in the namespace. Tasks connect
            through a managed proxy container that collects logs and metrics for increased visibility.
            Only the tasks that Amazon ECS services create are supported with Service Connect.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html">Service
            Connect</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateClusterRequest.Settings">
            <summary>
            Gets and sets the property Settings. 
            <para>
            The setting to use when creating a cluster. This parameter is used to turn on CloudWatch
            Container Insights for a cluster. If this value is specified, it overrides the <c>containerInsights</c>
            value set with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutAccountSetting.html">PutAccountSetting</a>
            or <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutAccountSettingDefault.html">PutAccountSettingDefault</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateClusterRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the cluster to help you categorize and organize them.
            Each tag consists of a key and an optional value. You define both.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <c>aws:</c>, <c>AWS:</c>, or any upper or lowercase combination of such
            as a prefix for either keys or values as it is reserved for Amazon Web Services use.
            You cannot edit or delete tag keys or values with this prefix. Tags with this prefix
            do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CreateClusterResponse">
            <summary>
            This is the response object from the CreateCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateClusterResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The full description of your new cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CreatedAt">
            <summary>
            The optional filter to narrow the <c>ListServiceDeployment</c> results.
            
             
            <para>
             If you do not specify a value, service deployments that were created before the current
            time are included in the result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreatedAt.After">
            <summary>
            Gets and sets the property After. 
            <para>
            Include service deployments in the result that were created after this time. The format
            is yyyy-MM-dd HH:mm:ss.SSSSSS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreatedAt.Before">
            <summary>
            Gets and sets the property Before. 
            <para>
            Include service deployments in the result that were created before this time. The
            format is yyyy-MM-dd HH:mm:ss.SSSSSS.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CreateServiceRequest">
            <summary>
            Container for the parameters to the CreateService operation.
            Runs and maintains your desired number of tasks from a specified task definition.
            If the number of tasks running in a service drops below the <c>desiredCount</c>, Amazon
            ECS runs another copy of the task in the specified cluster. To update an existing
            service, use <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>.
            
             <note> 
            <para>
            On March 21, 2024, a change was made to resolve the task definition revision before
            authorization. When a task definition revision is not specified, authorization will
            occur using the latest revision of a task definition.
            </para>
             </note> <note> 
            <para>
            Amazon Elastic Inference (EI) is no longer available to customers.
            </para>
             </note> 
            <para>
            In addition to maintaining the desired count of tasks in your service, you can optionally
            run your service behind one or more load balancers. The load balancers distribute
            traffic across the tasks that are associated with the service. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-load-balancing.html">Service
            load balancing</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            You can attach Amazon EBS volumes to Amazon ECS tasks by configuring the volume when
            creating or updating a service. <c>volumeConfigurations</c> is only supported for
            REPLICA service and not DAEMON service. For more infomation, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volume-types">Amazon
            EBS volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            Tasks for services that don't use a load balancer are considered healthy if they're
            in the <c>RUNNING</c> state. Tasks for services that use a load balancer are considered
            healthy if they're in the <c>RUNNING</c> state and are reported as healthy by the
            load balancer.
            </para>
             
            <para>
            There are two service scheduler strategies available:
            </para>
             <ul> <li> 
            <para>
             <c>REPLICA</c> - The replica scheduling strategy places and maintains your desired
            number of tasks across your cluster. By default, the service scheduler spreads tasks
            across Availability Zones. You can use task placement strategies and constraints to
            customize task placement decisions. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html">Service
            scheduler concepts</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             </li> <li> 
            <para>
             <c>DAEMON</c> - The daemon scheduling strategy deploys exactly one task on each active
            container instance that meets all of the task placement constraints that you specify
            in your cluster. The service scheduler also evaluates the task placement constraints
            for running tasks. It also stops tasks that don't meet the placement constraints.
            When using this strategy, you don't need to specify a desired number of tasks, a task
            placement strategy, or use Service Auto Scaling policies. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html">Service
            scheduler concepts</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             </li> </ul> 
            <para>
            You can optionally specify a deployment configuration for your service. The deployment
            is initiated by changing properties. For example, the deployment might be initiated
            by the task definition or by your desired count of a service. You can use <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>.
            The default value for a replica service for <c>minimumHealthyPercent</c> is 100%.
            The default value for a daemon service for <c>minimumHealthyPercent</c> is 0%.
            </para>
             
            <para>
            If a service uses the <c>ECS</c> deployment controller, the minimum healthy percent
            represents a lower limit on the number of tasks in a service that must remain in the
            <c>RUNNING</c> state during a deployment. Specifically, it represents it as a percentage
            of your desired number of tasks (rounded up to the nearest integer). This happens
            when any of your container instances are in the <c>DRAINING</c> state if the service
            contains tasks using the EC2 launch type. Using this parameter, you can deploy without
            using additional cluster capacity. For example, if you set your service to have desired
            number of four tasks and a minimum healthy percent of 50%, the scheduler might stop
            two existing tasks to free up cluster capacity before starting two new tasks. If they're
            in the <c>RUNNING</c> state, tasks for services that don't use a load balancer are
            considered healthy . If they're in the <c>RUNNING</c> state and reported as healthy
            by the load balancer, tasks for services that <i>do</i> use a load balancer are considered
            healthy . The default value for minimum healthy percent is 100%.
            </para>
             
            <para>
            If a service uses the <c>ECS</c> deployment controller, the <b>maximum percent</b>
            parameter represents an upper limit on the number of tasks in a service that are allowed
            in the <c>RUNNING</c> or <c>PENDING</c> state during a deployment. Specifically, it
            represents it as a percentage of the desired number of tasks (rounded down to the
            nearest integer). This happens when any of your container instances are in the <c>DRAINING</c>
            state if the service contains tasks using the EC2 launch type. Using this parameter,
            you can define the deployment batch size. For example, if your service has a desired
            number of four tasks and a maximum percent value of 200%, the scheduler may start
            four new tasks before stopping the four older tasks (provided that the cluster resources
            required to do this are available). The default value for maximum percent is 200%.
            </para>
             
            <para>
            If a service uses either the <c>CODE_DEPLOY</c> or <c>EXTERNAL</c> deployment controller
            types and tasks that use the EC2 launch type, the <b>minimum healthy percent</b> and
            <b>maximum percent</b> values are used only to define the lower and upper limit on
            the number of the tasks in the service that remain in the <c>RUNNING</c> state. This
            is while the container instances are in the <c>DRAINING</c> state. If the tasks in
            the service use the Fargate launch type, the minimum healthy percent and maximum percent
            values aren't used. This is the case even if they're currently visible when describing
            your service.
            </para>
             
            <para>
            When creating a service that uses the <c>EXTERNAL</c> deployment controller, you can
            specify only parameters that aren't controlled at the task set level. The only required
            parameter is the service name. You control your services using the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateTaskSet.html">CreateTaskSet</a>.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS deployment types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            When the service scheduler launches new tasks, it determines task placement. For information
            about task placement and task placement strategies, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement.html">Amazon
            ECS task placement</a> in the <i>Amazon Elastic Container Service Developer Guide</i>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.AvailabilityZoneRebalancing">
            <summary>
            Gets and sets the property AvailabilityZoneRebalancing. 
            <para>
            Indicates whether to use Availability Zone rebalancing for the service.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-rebalancing.html">Balancing
            an Amazon ECS service across Availability Zones</a> in the <i>Amazon Elastic Container
            Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.CapacityProviderStrategy">
            <summary>
            Gets and sets the property CapacityProviderStrategy. 
            <para>
            The capacity provider strategy to use for the service.
            </para>
             
            <para>
            If a <c>capacityProviderStrategy</c> is specified, the <c>launchType</c> parameter
            must be omitted. If no <c>capacityProviderStrategy</c> or <c>launchType</c> is specified,
            the <c>defaultCapacityProviderStrategy</c> for the cluster is used.
            </para>
             
            <para>
            A capacity provider strategy can contain a maximum of 20 capacity providers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            An identifier that you provide to ensure the idempotency of the request. It must be
            unique and is case sensitive. Up to 36 ASCII characters in the range of 33-126 (inclusive)
            are allowed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that you run your
            service on. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.DeploymentConfiguration">
            <summary>
            Gets and sets the property DeploymentConfiguration. 
            <para>
            Optional deployment parameters that control how many tasks run during the deployment
            and the ordering of stopping and starting tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.DeploymentController">
            <summary>
            Gets and sets the property DeploymentController. 
            <para>
            The deployment controller to use for the service. If no deployment controller is specified,
            the default value of <c>ECS</c> is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.DesiredCount">
            <summary>
            Gets and sets the property DesiredCount. 
            <para>
            The number of instantiations of the specified task definition to place and keep running
            in your service.
            </para>
             
            <para>
            This is required if <c>schedulingStrategy</c> is <c>REPLICA</c> or isn't specified.
            If <c>schedulingStrategy</c> is <c>DAEMON</c> then this isn't required.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.EnableECSManagedTags">
            <summary>
            Gets and sets the property EnableECSManagedTags. 
            <para>
            Specifies whether to turn on Amazon ECS managed tags for the tasks within the service.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html">Tagging
            your Amazon ECS resources</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             
            <para>
            When you use Amazon ECS managed tags, you need to set the <c>propagateTags</c> request
            parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.EnableExecuteCommand">
            <summary>
            Gets and sets the property EnableExecuteCommand. 
            <para>
            Determines whether the execute command functionality is turned on for the service.
            If <c>true</c>, this enables execute command functionality on all containers in the
            service tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.HealthCheckGracePeriodSeconds">
            <summary>
            Gets and sets the property HealthCheckGracePeriodSeconds. 
            <para>
            The period of time, in seconds, that the Amazon ECS service scheduler ignores unhealthy
            Elastic Load Balancing, VPC Lattice, and container health checks after a task has
            first started. If you don't specify a health check grace period value, the default
            value of <c>0</c> is used. If you don't use any of the health checks, then <c>healthCheckGracePeriodSeconds</c>
            is unused.
            </para>
             
            <para>
            If your service's tasks take a while to start and respond to health checks, you can
            specify a health check grace period of up to 2,147,483,647 seconds (about 69 years).
            During that time, the Amazon ECS service scheduler ignores health check status. This
            grace period can prevent the service scheduler from marking tasks as unhealthy and
            stopping them before they have time to come up.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.LaunchType">
            <summary>
            Gets and sets the property LaunchType. 
            <para>
            The infrastructure that you run your service on. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html">Amazon
            ECS launch types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            The <c>FARGATE</c> launch type runs your tasks on Fargate On-Demand infrastructure.
            </para>
             <note> 
            <para>
            Fargate Spot infrastructure is available for use but a capacity provider strategy
            must be used. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/fargate-capacity-providers.html">Fargate
            capacity providers</a> in the <i>Amazon ECS Developer Guide</i>.
            </para>
             </note> 
            <para>
            The <c>EC2</c> launch type runs your tasks on Amazon EC2 instances registered to your
            cluster.
            </para>
             
            <para>
            The <c>EXTERNAL</c> launch type runs your tasks on your on-premises server or virtual
            machine (VM) capacity registered to your cluster.
            </para>
             
            <para>
            A service can use either a launch type or a capacity provider strategy. If a <c>launchType</c>
            is specified, the <c>capacityProviderStrategy</c> parameter must be omitted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.LoadBalancers">
            <summary>
            Gets and sets the property LoadBalancers. 
            <para>
            A load balancer object representing the load balancers to use with your service. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-load-balancing.html">Service
            load balancing</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            If the service uses the rolling update (<c>ECS</c>) deployment controller and using
            either an Application Load Balancer or Network Load Balancer, you must specify one
            or more target group ARNs to attach to the service. The service-linked role is required
            for services that use multiple target groups. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using-service-linked-roles.html">Using
            service-linked roles for Amazon ECS</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
             
            <para>
            If the service uses the <c>CODE_DEPLOY</c> deployment controller, the service is required
            to use either an Application Load Balancer or Network Load Balancer. When creating
            an CodeDeploy deployment group, you specify two target groups (referred to as a <c>targetGroupPair</c>).
            During a deployment, CodeDeploy determines which task set in your service has the
            status <c>PRIMARY</c>, and it associates one target group with it. Then, it also associates
            the other target group with the replacement task set. The load balancer can also have
            up to two listeners: a required listener for production traffic and an optional listener
            that you can use to perform validation tests with Lambda functions before routing
            production traffic to it.
            </para>
             
            <para>
            If you use the <c>CODE_DEPLOY</c> deployment controller, these values can be changed
            when updating the service.
            </para>
             
            <para>
            For Application Load Balancers and Network Load Balancers, this object must contain
            the load balancer target group ARN, the container name, and the container port to
            access from the load balancer. The container name must be as it appears in a container
            definition. The load balancer name parameter must be omitted. When a task from this
            service is placed on a container instance, the container instance and port combination
            is registered as a target in the target group that's specified here.
            </para>
             
            <para>
            For Classic Load Balancers, this object must contain the load balancer name, the container
            name , and the container port to access from the load balancer. The container name
            must be as it appears in a container definition. The target group ARN parameter must
            be omitted. When a task from this service is placed on a container instance, the container
            instance is registered with the load balancer that's specified here.
            </para>
             
            <para>
            Services with tasks that use the <c>awsvpc</c> network mode (for example, those with
            the Fargate launch type) only support Application Load Balancers and Network Load
            Balancers. Classic Load Balancers aren't supported. Also, when you create any target
            groups for these services, you must choose <c>ip</c> as the target type, not <c>instance</c>.
            This is because tasks that use the <c>awsvpc</c> network mode are associated with
            an elastic network interface, not an Amazon EC2 instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.NetworkConfiguration">
            <summary>
            Gets and sets the property NetworkConfiguration. 
            <para>
            The network configuration for the service. This parameter is required for task definitions
            that use the <c>awsvpc</c> network mode to receive their own elastic network interface,
            and it isn't supported for other network modes. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html">Task
            networking</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.PlacementConstraints">
            <summary>
            Gets and sets the property PlacementConstraints. 
            <para>
            An array of placement constraint objects to use for tasks in your service. You can
            specify a maximum of 10 constraints for each task. This limit includes constraints
            in the task definition and those specified at runtime.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.PlacementStrategy">
            <summary>
            Gets and sets the property PlacementStrategy. 
            <para>
            The placement strategy objects to use for tasks in your service. You can specify a
            maximum of 5 strategy rules for each service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            The platform version that your tasks in the service are running on. A platform version
            is specified only for tasks using the Fargate launch type. If one isn't specified,
            the <c>LATEST</c> platform version is used. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html">Fargate
            platform versions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.PropagateTags">
            <summary>
            Gets and sets the property PropagateTags. 
            <para>
            Specifies whether to propagate the tags from the task definition to the task. If no
            value is specified, the tags aren't propagated. Tags can only be propagated to the
            task during task creation. To add tags to a task after task creation, use the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_TagResource.html">TagResource</a>
            API action.
            </para>
             
            <para>
            You must set this to a value other than <c>NONE</c> when you use Cost Explorer. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/usage-reports.html">Amazon
            ECS usage reports</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            The default is <c>NONE</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.Role">
            <summary>
            Gets and sets the property Role. 
            <para>
            The name or full Amazon Resource Name (ARN) of the IAM role that allows Amazon ECS
            to make calls to your load balancer on your behalf. This parameter is only permitted
            if you are using a load balancer with your service and your task definition doesn't
            use the <c>awsvpc</c> network mode. If you specify the <c>role</c> parameter, you
            must also specify a load balancer object with the <c>loadBalancers</c> parameter.
            </para>
             <important> 
            <para>
            If your account has already created the Amazon ECS service-linked role, that role
            is used for your service unless you specify a role here. The service-linked role is
            required if your task definition uses the <c>awsvpc</c> network mode or if the service
            is configured to use service discovery, an external deployment controller, multiple
            target groups, or Elastic Inference accelerators in which case you don't specify a
            role here. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using-service-linked-roles.html">Using
            service-linked roles for Amazon ECS</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
             </important> 
            <para>
            If your specified role has a path other than <c>/</c>, then you must either specify
            the full role ARN (this is recommended) or prefix the role name with the path. For
            example, if a role with the name <c>bar</c> has a path of <c>/foo/</c> then you would
            specify <c>/foo/bar</c> as the role name. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names">Friendly
            names and paths</a> in the <i>IAM User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.SchedulingStrategy">
            <summary>
            Gets and sets the property SchedulingStrategy. 
            <para>
            The scheduling strategy to use for the service. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html">Services</a>.
            </para>
             
            <para>
            There are two service scheduler strategies available:
            </para>
             <ul> <li> 
            <para>
             <c>REPLICA</c>-The replica scheduling strategy places and maintains the desired number
            of tasks across your cluster. By default, the service scheduler spreads tasks across
            Availability Zones. You can use task placement strategies and constraints to customize
            task placement decisions. This scheduler strategy is required if the service uses
            the <c>CODE_DEPLOY</c> or <c>EXTERNAL</c> deployment controller types.
            </para>
             </li> <li> 
            <para>
             <c>DAEMON</c>-The daemon scheduling strategy deploys exactly one task on each active
            container instance that meets all of the task placement constraints that you specify
            in your cluster. The service scheduler also evaluates the task placement constraints
            for running tasks and will stop tasks that don't meet the placement constraints. When
            you're using this strategy, you don't need to specify a desired number of tasks, a
            task placement strategy, or use Service Auto Scaling policies.
            </para>
             <note> 
            <para>
            Tasks using the Fargate launch type or the <c>CODE_DEPLOY</c> or <c>EXTERNAL</c> deployment
            controller types don't support the <c>DAEMON</c> scheduling strategy.
            </para>
             </note> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.ServiceConnectConfiguration">
            <summary>
            Gets and sets the property ServiceConnectConfiguration. 
            <para>
            The configuration for this service to discover and connect to services, and be discovered
            by, and connected from, other services within a namespace.
            </para>
             
            <para>
            Tasks that run in a namespace can use short names to connect to services in the namespace.
            Tasks can connect to services across all of the clusters in the namespace. Tasks connect
            through a managed proxy container that collects logs and metrics for increased visibility.
            Only the tasks that Amazon ECS services create are supported with Service Connect.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html">Service
            Connect</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.ServiceName">
            <summary>
            Gets and sets the property ServiceName. 
            <para>
            The name of your service. Up to 255 letters (uppercase and lowercase), numbers, underscores,
            and hyphens are allowed. Service names must be unique within a cluster, but you can
            have similarly named services in multiple clusters within a Region or across multiple
            Regions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.ServiceRegistries">
            <summary>
            Gets and sets the property ServiceRegistries. 
            <para>
            The details of the service discovery registry to associate with this service. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html">Service
            discovery</a>.
            </para>
             <note> 
            <para>
            Each service may be associated with one service registry. Multiple service registries
            for each service isn't supported.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the service to help you categorize and organize them.
            Each tag consists of a key and an optional value, both of which you define. When a
            service is deleted, the tags are deleted as well.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <c>aws:</c>, <c>AWS:</c>, or any upper or lowercase combination of such
            as a prefix for either keys or values as it is reserved for Amazon Web Services use.
            You cannot edit or delete tag keys or values with this prefix. Tags with this prefix
            do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The <c>family</c> and <c>revision</c> (<c>family:revision</c>) or full ARN of the
            task definition to run in your service. If a <c>revision</c> isn't specified, the
            latest <c>ACTIVE</c> revision is used.
            </para>
             
            <para>
            A task definition must be specified if the service uses either the <c>ECS</c> or <c>CODE_DEPLOY</c>
            deployment controllers.
            </para>
             
            <para>
            For more information about deployment types, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS deployment types</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.VolumeConfigurations">
            <summary>
            Gets and sets the property VolumeConfigurations. 
            <para>
            The configuration for a volume specified in the task definition as a volume that is
            configured at launch time. Currently, the only supported volume type is an Amazon
            EBS volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.VpcLatticeConfigurations">
            <summary>
            Gets and sets the property VpcLatticeConfigurations. 
            <para>
            The VPC Lattice configuration for the service being created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CreateServiceResponse">
            <summary>
            This is the response object from the CreateService operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceResponse.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The full description of your service following the create call.
            </para>
             
            <para>
            A service will return either a <c>capacityProviderStrategy</c> or <c>launchType</c>
            parameter, but not both, depending where one was specified when it was created.
            </para>
             
            <para>
            If a service is using the <c>ECS</c> deployment controller, the <c>deploymentController</c>
            and <c>taskSets</c> parameters will not be returned.
            </para>
             
            <para>
            if the service uses the <c>CODE_DEPLOY</c> deployment controller, the <c>deploymentController</c>,
            <c>taskSets</c> and <c>deployments</c> parameters will be returned, however the <c>deployments</c>
            parameter will be an empty list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CreateTaskSetRequest">
            <summary>
            Container for the parameters to the CreateTaskSet operation.
            Create a task set in the specified cluster and service. This is used when a service
            uses the <c>EXTERNAL</c> deployment controller type. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS deployment types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            
             <note> 
            <para>
            On March 21, 2024, a change was made to resolve the task definition revision before
            authorization. When a task definition revision is not specified, authorization will
            occur using the latest revision of a task definition.
            </para>
             </note> 
            <para>
            For information about the maximum number of task sets and other quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.CapacityProviderStrategy">
            <summary>
            Gets and sets the property CapacityProviderStrategy. 
            <para>
            The capacity provider strategy to use for the task set.
            </para>
             
            <para>
            A capacity provider strategy consists of one or more capacity providers along with
            the <c>base</c> and <c>weight</c> to assign to them. A capacity provider must be associated
            with the cluster to be used in a capacity provider strategy. The <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutClusterCapacityProviders.html">PutClusterCapacityProviders</a>
            API is used to associate a capacity provider with a cluster. Only capacity providers
            with an <c>ACTIVE</c> or <c>UPDATING</c> status can be used.
            </para>
             
            <para>
            If a <c>capacityProviderStrategy</c> is specified, the <c>launchType</c> parameter
            must be omitted. If no <c>capacityProviderStrategy</c> or <c>launchType</c> is specified,
            the <c>defaultCapacityProviderStrategy</c> for the cluster is used.
            </para>
             
            <para>
            If specifying a capacity provider that uses an Auto Scaling group, the capacity provider
            must already be created. New capacity providers can be created with the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateCapacityProviderProvider.html">CreateCapacityProviderProvider</a>API
            operation.
            </para>
             
            <para>
            To use a Fargate capacity provider, specify either the <c>FARGATE</c> or <c>FARGATE_SPOT</c>
            capacity providers. The Fargate capacity providers are available to all accounts and
            only need to be associated with a cluster to be used.
            </para>
             
            <para>
            The <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutClusterCapacityProviders.html">PutClusterCapacityProviders</a>
            API operation is used to update the list of available capacity providers for a cluster
            after the cluster is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            An identifier that you provide to ensure the idempotency of the request. It must be
            unique and is case sensitive. Up to 36 ASCII characters in the range of 33-126 (inclusive)
            are allowed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service
            to create the task set in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.ExternalId">
            <summary>
            Gets and sets the property ExternalId. 
            <para>
            An optional non-unique tag that identifies this task set in external systems. If the
            task set is associated with a service discovery registry, the tasks in this task set
            will have the <c>ECS_TASK_SET_EXTERNAL_ID</c> Cloud Map attribute set to the provided
            value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.LaunchType">
            <summary>
            Gets and sets the property LaunchType. 
            <para>
            The launch type that new tasks in the task set uses. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html">Amazon
            ECS launch types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            If a <c>launchType</c> is specified, the <c>capacityProviderStrategy</c> parameter
            must be omitted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.LoadBalancers">
            <summary>
            Gets and sets the property LoadBalancers. 
            <para>
            A load balancer object representing the load balancer to use with the task set. The
            supported load balancer types are either an Application Load Balancer or a Network
            Load Balancer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.NetworkConfiguration">
            <summary>
            Gets and sets the property NetworkConfiguration. 
            <para>
            An object representing the network configuration for a task set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            The platform version that the tasks in the task set uses. A platform version is specified
            only for tasks using the Fargate launch type. If one isn't specified, the <c>LATEST</c>
            platform version is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.Scale">
            <summary>
            Gets and sets the property Scale. 
            <para>
            A floating-point percentage of the desired number of tasks to place and keep running
            in the task set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the service to create the task
            set in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.ServiceRegistries">
            <summary>
            Gets and sets the property ServiceRegistries. 
            <para>
            The details of the service discovery registries to assign to this task set. For more
            information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html">Service
            discovery</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the task set to help you categorize and organize them.
            Each tag consists of a key and an optional value. You define both. When a service
            is deleted, the tags are deleted.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <c>aws:</c>, <c>AWS:</c>, or any upper or lowercase combination of such
            as a prefix for either keys or values as it is reserved for Amazon Web Services use.
            You cannot edit or delete tag keys or values with this prefix. Tags with this prefix
            do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The task definition for the tasks in the task set to use. If a revision isn't specified,
            the latest <c>ACTIVE</c> revision is used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CreateTaskSetResponse">
            <summary>
            This is the response object from the CreateTaskSet operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetResponse.TaskSet">
            <summary>
            Gets and sets the property TaskSet. 
            <para>
            Information about a set of Amazon ECS tasks in either an CodeDeploy or an <c>EXTERNAL</c>
            deployment. A task set includes details such as the desired number of tasks, how many
            tasks are running, and whether the task set serves production traffic.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteAccountSettingRequest">
            <summary>
            Container for the parameters to the DeleteAccountSetting operation.
            Disables an account setting for a specified user, role, or the root user for an account.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteAccountSettingRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The resource name to disable the account setting for. If <c>serviceLongArnFormat</c>
            is specified, the ARN for your Amazon ECS services is affected. If <c>taskLongArnFormat</c>
            is specified, the ARN and resource ID for your Amazon ECS tasks is affected. If <c>containerInstanceLongArnFormat</c>
            is specified, the ARN and resource ID for your Amazon ECS container instances is affected.
            If <c>awsvpcTrunking</c> is specified, the ENI limit for your Amazon ECS container
            instances is affected.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteAccountSettingRequest.PrincipalArn">
            <summary>
            Gets and sets the property PrincipalArn. 
            <para>
            The Amazon Resource Name (ARN) of the principal. It can be an user, role, or the root
            user. If you specify the root user, it disables the account setting for all users,
            roles, and the root user of the account unless a user or role explicitly overrides
            these settings. If this field is omitted, the setting is changed only for the authenticated
            user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteAccountSettingResponse">
            <summary>
            This is the response object from the DeleteAccountSetting operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteAccountSettingResponse.Setting">
            <summary>
            Gets and sets the property Setting. 
            <para>
            The account setting for the specified principal ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteAttributesRequest">
            <summary>
            Container for the parameters to the DeleteAttributes operation.
            Deletes one or more custom attributes from an Amazon ECS resource.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteAttributesRequest.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            The attributes to delete from your resource. You can specify up to 10 attributes for
            each request. For custom attributes, specify the attribute name and target ID, but
            don't specify the value. If you specify the target ID using the short form, you must
            also specify the target type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteAttributesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that contains the
            resource to delete attributes. If you do not specify a cluster, the default cluster
            is assumed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteAttributesResponse">
            <summary>
            This is the response object from the DeleteAttributes operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteAttributesResponse.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A list of attribute objects that were successfully deleted from your resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteCapacityProviderRequest">
            <summary>
            Container for the parameters to the DeleteCapacityProvider operation.
            Deletes the specified capacity provider.
            
             <note> 
            <para>
            The <c>FARGATE</c> and <c>FARGATE_SPOT</c> capacity providers are reserved and can't
            be deleted. You can disassociate them from a cluster using either <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutClusterCapacityProviders.html">PutClusterCapacityProviders</a>
            or by deleting the cluster.
            </para>
             </note> 
            <para>
            Prior to a capacity provider being deleted, the capacity provider must be removed
            from the capacity provider strategy from all services. The <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>
            API can be used to remove a capacity provider from a service's capacity provider strategy.
            When updating a service, the <c>forceNewDeployment</c> option can be used to ensure
            that any tasks using the Amazon EC2 instance capacity provided by the capacity provider
            are transitioned to use the capacity from the remaining capacity providers. Only capacity
            providers that aren't associated with a cluster can be deleted. To remove a capacity
            provider from a cluster, you can either use <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutClusterCapacityProviders.html">PutClusterCapacityProviders</a>
            or delete the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteCapacityProviderRequest.CapacityProvider">
            <summary>
            Gets and sets the property CapacityProvider. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the capacity provider to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteCapacityProviderResponse">
            <summary>
            This is the response object from the DeleteCapacityProvider operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteCapacityProviderResponse.CapacityProvider">
            <summary>
            Gets and sets the property CapacityProvider. 
            <para>
            The details of the capacity provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteClusterRequest">
            <summary>
            Container for the parameters to the DeleteCluster operation.
            Deletes the specified cluster. The cluster transitions to the <c>INACTIVE</c> state.
            Clusters with an <c>INACTIVE</c> status might remain discoverable in your account
            for a period of time. However, this behavior is subject to change in the future. We
            don't recommend that you rely on <c>INACTIVE</c> clusters persisting.
            
             
            <para>
            You must deregister all container instances from this cluster before you may delete
            it. You can list the container instances in a cluster with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListContainerInstances.html">ListContainerInstances</a>
            and deregister them with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeregisterContainerInstance.html">DeregisterContainerInstance</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteClusterRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteClusterResponse">
            <summary>
            This is the response object from the DeleteCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteClusterResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The full description of the deleted cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteServiceRequest">
            <summary>
            Container for the parameters to the DeleteService operation.
            Deletes a specified service within a cluster. You can delete a service if you have
            no running tasks in it and the desired task count is zero. If the service is actively
            maintaining tasks, you can't delete it, and you must update the service to a desired
            task count of zero. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>.
            
             <note> 
            <para>
            When you delete a service, if there are still running tasks that require cleanup,
            the service status moves from <c>ACTIVE</c> to <c>DRAINING</c>, and the service is
            no longer visible in the console or in the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>
            API operation. After all tasks have transitioned to either <c>STOPPING</c> or <c>STOPPED</c>
            status, the service status moves from <c>DRAINING</c> to <c>INACTIVE</c>. Services
            in the <c>DRAINING</c> or <c>INACTIVE</c> status can still be viewed with the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeServices.html">DescribeServices</a>
            API operation. However, in the future, <c>INACTIVE</c> services may be cleaned up
            and purged from Amazon ECS record keeping, and <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeServices.html">DescribeServices</a>
            calls on those services return a <c>ServiceNotFoundException</c> error.
            </para>
             </note> <important> 
            <para>
            If you attempt to create a new service with the same name as an existing service in
            either <c>ACTIVE</c> or <c>DRAINING</c> status, you receive an error.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteServiceRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service
            to delete. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteServiceRequest.Force">
            <summary>
            Gets and sets the property Force. 
            <para>
            If <c>true</c>, allows you to delete a service even if it wasn't scaled down to zero
            tasks. It's only necessary to use this if the service uses the <c>REPLICA</c> scheduling
            strategy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteServiceRequest.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The name of the service to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteServiceResponse">
            <summary>
            This is the response object from the DeleteService operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteServiceResponse.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The full description of the deleted service.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteTaskDefinitionsRequest">
            <summary>
            Container for the parameters to the DeleteTaskDefinitions operation.
            Deletes one or more task definitions.
            
             
            <para>
            You must deregister a task definition revision before you delete it. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeregisterTaskDefinition.html">DeregisterTaskDefinition</a>.
            </para>
             
            <para>
            When you delete a task definition revision, it is immediately transitions from the
            <c>INACTIVE</c> to <c>DELETE_IN_PROGRESS</c>. Existing tasks and services that reference
            a <c>DELETE_IN_PROGRESS</c> task definition revision continue to run without disruption.
            Existing services that reference a <c>DELETE_IN_PROGRESS</c> task definition revision
            can still scale up or down by modifying the service's desired count.
            </para>
             
            <para>
            You can't use a <c>DELETE_IN_PROGRESS</c> task definition revision to run new tasks
            or create new services. You also can't update an existing service to reference a <c>DELETE_IN_PROGRESS</c>
            task definition revision.
            </para>
             
            <para>
             A task definition revision will stay in <c>DELETE_IN_PROGRESS</c> status until all
            the associated tasks and services have been terminated.
            </para>
             
            <para>
            When you delete all <c>INACTIVE</c> task definition revisions, the task definition
            name is not displayed in the console and not returned in the API. If a task definition
            revisions are in the <c>DELETE_IN_PROGRESS</c> state, the task definition name is
            displayed in the console and returned in the API. The task definition name is retained
            by Amazon ECS and the revision is incremented the next time you create a task definition
            with that name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteTaskDefinitionsRequest.TaskDefinitions">
            <summary>
            Gets and sets the property TaskDefinitions. 
            <para>
            The <c>family</c> and <c>revision</c> (<c>family:revision</c>) or full Amazon Resource
            Name (ARN) of the task definition to delete. You must specify a <c>revision</c>.
            </para>
             
            <para>
            You can specify up to 10 task definitions as a comma separated list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteTaskDefinitionsResponse">
            <summary>
            This is the response object from the DeleteTaskDefinitions operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteTaskDefinitionsResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteTaskDefinitionsResponse.TaskDefinitions">
            <summary>
            Gets and sets the property TaskDefinitions. 
            <para>
            The list of deleted task definitions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteTaskSetRequest">
            <summary>
            Container for the parameters to the DeleteTaskSet operation.
            Deletes a specified task set within a service. This is used when a service uses the
            <c>EXTERNAL</c> deployment controller type. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS deployment types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteTaskSetRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service
            that the task set found in to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteTaskSetRequest.Force">
            <summary>
            Gets and sets the property Force. 
            <para>
            If <c>true</c>, you can delete a task set even if it hasn't been scaled down to zero.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteTaskSetRequest.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the service that hosts the task
            set to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteTaskSetRequest.TaskSet">
            <summary>
            Gets and sets the property TaskSet. 
            <para>
            The task set ID or full Amazon Resource Name (ARN) of the task set to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteTaskSetResponse">
            <summary>
            This is the response object from the DeleteTaskSet operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteTaskSetResponse.TaskSet">
            <summary>
            Gets and sets the property TaskSet. 
            <para>
            Details about the task set.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Deployment">
            <summary>
            The details of an Amazon ECS service deployment. This is used only when a service
            uses the <c>ECS</c> deployment controller type.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.CapacityProviderStrategy">
            <summary>
            Gets and sets the property CapacityProviderStrategy. 
            <para>
            The capacity provider strategy that the deployment is using.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix timestamp for the time when the service deployment was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.DesiredCount">
            <summary>
            Gets and sets the property DesiredCount. 
            <para>
            The most recent desired count of tasks that was specified for the service to deploy
            or maintain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.FailedTasks">
            <summary>
            Gets and sets the property FailedTasks. 
            <para>
            The number of consecutively failed tasks in the deployment. A task is considered a
            failure if the service scheduler can't launch the task, the task doesn't transition
            to a <c>RUNNING</c> state, or if it fails any of its defined health checks and is
            stopped.
            </para>
             <note> 
            <para>
            Once a service deployment has one or more successfully running tasks, the failed task
            count resets to zero and stops being evaluated.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.FargateEphemeralStorage">
            <summary>
            Gets and sets the property FargateEphemeralStorage. 
            <para>
            The Fargate ephemeral storage settings for the deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID of the deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.LaunchType">
            <summary>
            Gets and sets the property LaunchType. 
            <para>
            The launch type the tasks in the service are using. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html">Amazon
            ECS Launch Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.NetworkConfiguration">
            <summary>
            Gets and sets the property NetworkConfiguration. 
            <para>
            The VPC subnet and security group configuration for tasks that receive their own elastic
            network interface by using the <c>awsvpc</c> networking mode.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.PendingCount">
            <summary>
            Gets and sets the property PendingCount. 
            <para>
            The number of tasks in the deployment that are in the <c>PENDING</c> status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.PlatformFamily">
            <summary>
            Gets and sets the property PlatformFamily. 
            <para>
            The operating system that your tasks in the service, or tasks are running on. A platform
            family is specified only for tasks using the Fargate launch type. 
            </para>
             
            <para>
             All tasks that run as part of this service must use the same <c>platformFamily</c>
            value as the service, for example, <c> LINUX.</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            The platform version that your tasks in the service run on. A platform version is
            only specified for tasks using the Fargate launch type. If one isn't specified, the
            <c>LATEST</c> platform version is used. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html">Fargate
            Platform Versions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.RolloutState">
            <summary>
            Gets and sets the property RolloutState. <note> 
            <para>
            The <c>rolloutState</c> of a service is only returned for services that use the rolling
            update (<c>ECS</c>) deployment type that aren't behind a Classic Load Balancer.
            </para>
             </note> 
            <para>
            The rollout state of the deployment. When a service deployment is started, it begins
            in an <c>IN_PROGRESS</c> state. When the service reaches a steady state, the deployment
            transitions to a <c>COMPLETED</c> state. If the service fails to reach a steady state
            and circuit breaker is turned on, the deployment transitions to a <c>FAILED</c> state.
            A deployment in <c>FAILED</c> state doesn't launch any new tasks. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeploymentCircuitBreaker.html">DeploymentCircuitBreaker</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.RolloutStateReason">
            <summary>
            Gets and sets the property RolloutStateReason. 
            <para>
            A description of the rollout state of a deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.RunningCount">
            <summary>
            Gets and sets the property RunningCount. 
            <para>
            The number of tasks in the deployment that are in the <c>RUNNING</c> status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.ServiceConnectConfiguration">
            <summary>
            Gets and sets the property ServiceConnectConfiguration. 
            <para>
            The details of the Service Connect configuration that's used by this deployment. Compare
            the configuration between multiple deployments when troubleshooting issues with new
            deployments.
            </para>
             
            <para>
            The configuration for this service to discover and connect to services, and be discovered
            by, and connected from, other services within a namespace.
            </para>
             
            <para>
            Tasks that run in a namespace can use short names to connect to services in the namespace.
            Tasks can connect to services across all of the clusters in the namespace. Tasks connect
            through a managed proxy container that collects logs and metrics for increased visibility.
            Only the tasks that Amazon ECS services create are supported with Service Connect.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html">Service
            Connect</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.ServiceConnectResources">
            <summary>
            Gets and sets the property ServiceConnectResources. 
            <para>
            The list of Service Connect resources that are associated with this deployment. Each
            list entry maps a discovery name to a Cloud Map service name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the deployment. The following describes each state.
            </para>
             <dl> <dt>PRIMARY</dt> <dd> 
            <para>
            The most recent deployment of a service.
            </para>
             </dd> <dt>ACTIVE</dt> <dd> 
            <para>
            A service deployment that still has running tasks, but are in the process of being
            replaced with a new <c>PRIMARY</c> deployment.
            </para>
             </dd> <dt>INACTIVE</dt> <dd> 
            <para>
            A deployment that has been completely replaced.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The most recent task definition that was specified for the tasks in the service to
            use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
            The Unix timestamp for the time when the service deployment was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.VolumeConfigurations">
            <summary>
            Gets and sets the property VolumeConfigurations. 
            <para>
            The details of the volume that was <c>configuredAtLaunch</c>. You can configure different
            settings like the size, throughput, volumeType, and ecryption in <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ServiceManagedEBSVolumeConfiguration.html">ServiceManagedEBSVolumeConfiguration</a>.
            The <c>name</c> of the volume must match the <c>name</c> from the task definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.VpcLatticeConfigurations">
            <summary>
            Gets and sets the property VpcLatticeConfigurations. 
            <para>
            The VPC Lattice configuration for the service deployment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeploymentAlarms">
            <summary>
            One of the methods which provide a way for you to quickly identify when a deployment
            has failed, and then to optionally roll back the failure to the last working deployment.
            
             
            <para>
            When the alarms are generated, Amazon ECS sets the service deployment to failed. Set
            the rollback parameter to have Amazon ECS to roll back your service to the last completed
            deployment after a failure.
            </para>
             
            <para>
            You can only use the <c>DeploymentAlarms</c> method to detect failures when the <c>DeploymentController</c>
            is set to <c>ECS</c> (rolling update).
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-ecs.html">Rolling
            update</a> in the <i> <i>Amazon Elastic Container Service Developer Guide</i> </i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeploymentAlarms.AlarmNames">
            <summary>
            Gets and sets the property AlarmNames. 
            <para>
            One or more CloudWatch alarm names. Use a "," to separate the alarms.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeploymentAlarms.Enable">
            <summary>
            Gets and sets the property Enable. 
            <para>
            Determines whether to use the CloudWatch alarm option in the service deployment process.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeploymentAlarms.Rollback">
            <summary>
            Gets and sets the property Rollback. 
            <para>
            Determines whether to configure Amazon ECS to roll back the service if a service deployment
            fails. If rollback is used, when a service deployment fails, the service is rolled
            back to the last deployment that completed successfully.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeploymentCircuitBreaker">
            <summary>
            <note> 
            <para>
            The deployment circuit breaker can only be used for services using the rolling update
            (<c>ECS</c>) deployment type.
            </para>
             </note> 
            <para>
            The <b>deployment circuit breaker</b> determines whether a service deployment will
            fail if the service can't reach a steady state. If it is turned on, a service deployment
            will transition to a failed state and stop launching new tasks. You can also configure
            Amazon ECS to roll back your service to the last completed deployment after a failure.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-ecs.html">Rolling
            update</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            For more information about API failure reasons, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/api_failures_messages.html">API
            failure reasons</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeploymentCircuitBreaker.Enable">
            <summary>
            Gets and sets the property Enable. 
            <para>
            Determines whether to use the deployment circuit breaker logic for the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeploymentCircuitBreaker.Rollback">
            <summary>
            Gets and sets the property Rollback. 
            <para>
            Determines whether to configure Amazon ECS to roll back the service if a service deployment
            fails. If rollback is on, when a service deployment fails, the service is rolled back
            to the last deployment that completed successfully.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeploymentConfiguration">
            <summary>
            Optional deployment parameters that control how many tasks run during a deployment
            and the ordering of stopping and starting tasks.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeploymentConfiguration.Alarms">
            <summary>
            Gets and sets the property Alarms. 
            <para>
            Information about the CloudWatch alarms.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeploymentConfiguration.DeploymentCircuitBreaker">
            <summary>
            Gets and sets the property DeploymentCircuitBreaker. <note> 
            <para>
            The deployment circuit breaker can only be used for services using the rolling update
            (<c>ECS</c>) deployment type.
            </para>
             </note> 
            <para>
            The <b>deployment circuit breaker</b> determines whether a service deployment will
            fail if the service can't reach a steady state. If you use the deployment circuit
            breaker, a service deployment will transition to a failed state and stop launching
            new tasks. If you use the rollback option, when a service deployment fails, the service
            is rolled back to the last deployment that completed successfully. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-ecs.html">Rolling
            update</a> in the <i>Amazon Elastic Container Service Developer Guide</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeploymentConfiguration.MaximumPercent">
            <summary>
            Gets and sets the property MaximumPercent. 
            <para>
            If a service is using the rolling update (<c>ECS</c>) deployment type, the <c>maximumPercent</c>
            parameter represents an upper limit on the number of your service's tasks that are
            allowed in the <c>RUNNING</c> or <c>PENDING</c> state during a deployment, as a percentage
            of the <c>desiredCount</c> (rounded down to the nearest integer). This parameter enables
            you to define the deployment batch size. For example, if your service is using the
            <c>REPLICA</c> service scheduler and has a <c>desiredCount</c> of four tasks and a
            <c>maximumPercent</c> value of 200%, the scheduler may start four new tasks before
            stopping the four older tasks (provided that the cluster resources required to do
            this are available). The default <c>maximumPercent</c> value for a service using the
            <c>REPLICA</c> service scheduler is 200%.
            </para>
             
            <para>
            The Amazon ECS scheduler uses this parameter to replace unhealthy tasks by starting
            replacement tasks first and then stopping the unhealthy tasks, as long as cluster
            resources for starting replacement tasks are available. For more information about
            how the scheduler replaces unhealthy tasks, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html">Amazon
            ECS services</a>.
            </para>
             
            <para>
            If a service is using either the blue/green (<c>CODE_DEPLOY</c>) or <c>EXTERNAL</c>
            deployment types, and tasks in the service use the EC2 launch type, the <b>maximum
            percent</b> value is set to the default value. The <b>maximum percent</b> value is
            used to define the upper limit on the number of the tasks in the service that remain
            in the <c>RUNNING</c> state while the container instances are in the <c>DRAINING</c>
            state.
            </para>
             <note> 
            <para>
            You can't specify a custom <c>maximumPercent</c> value for a service that uses either
            the blue/green (<c>CODE_DEPLOY</c>) or <c>EXTERNAL</c> deployment types and has tasks
            that use the EC2 launch type.
            </para>
             </note> 
            <para>
            If the service uses either the blue/green (<c>CODE_DEPLOY</c>) or <c>EXTERNAL</c>
            deployment types, and the tasks in the service use the Fargate launch type, the maximum
            percent value is not used. The value is still returned when describing your service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeploymentConfiguration.MinimumHealthyPercent">
            <summary>
            Gets and sets the property MinimumHealthyPercent. 
            <para>
            If a service is using the rolling update (<c>ECS</c>) deployment type, the <c>minimumHealthyPercent</c>
            represents a lower limit on the number of your service's tasks that must remain in
            the <c>RUNNING</c> state during a deployment, as a percentage of the <c>desiredCount</c>
            (rounded up to the nearest integer). This parameter enables you to deploy without
            using additional cluster capacity. For example, if your service has a <c>desiredCount</c>
            of four tasks and a <c>minimumHealthyPercent</c> of 50%, the service scheduler may
            stop two existing tasks to free up cluster capacity before starting two new tasks.
            
            </para>
             
            <para>
             If any tasks are unhealthy and if <c>maximumPercent</c> doesn't allow the Amazon
            ECS scheduler to start replacement tasks, the scheduler stops the unhealthy tasks
            one-by-one — using the <c>minimumHealthyPercent</c> as a constraint — to clear up
            capacity to launch replacement tasks. For more information about how the scheduler
            replaces unhealthy tasks, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html">Amazon
            ECS services</a> . 
            </para>
             
            <para>
            For services that <i>do not</i> use a load balancer, the following should be noted:
            </para>
             <ul> <li> 
            <para>
            A service is considered healthy if all essential containers within the tasks in the
            service pass their health checks.
            </para>
             </li> <li> 
            <para>
            If a task has no essential containers with a health check defined, the service scheduler
            will wait for 40 seconds after a task reaches a <c>RUNNING</c> state before the task
            is counted towards the minimum healthy percent total.
            </para>
             </li> <li> 
            <para>
            If a task has one or more essential containers with a health check defined, the service
            scheduler will wait for the task to reach a healthy status before counting it towards
            the minimum healthy percent total. A task is considered healthy when all essential
            containers within the task have passed their health checks. The amount of time the
            service scheduler can wait for is determined by the container health check settings.
            
            </para>
             </li> </ul> 
            <para>
            For services that <i>do</i> use a load balancer, the following should be noted:
            </para>
             <ul> <li> 
            <para>
            If a task has no essential containers with a health check defined, the service scheduler
            will wait for the load balancer target group health check to return a healthy status
            before counting the task towards the minimum healthy percent total.
            </para>
             </li> <li> 
            <para>
            If a task has an essential container with a health check defined, the service scheduler
            will wait for both the task to reach a healthy status and the load balancer target
            group health check to return a healthy status before counting the task towards the
            minimum healthy percent total.
            </para>
             </li> </ul> 
            <para>
            The default value for a replica service for <c>minimumHealthyPercent</c> is 100%.
            The default <c>minimumHealthyPercent</c> value for a service using the <c>DAEMON</c>
            service schedule is 0% for the CLI, the Amazon Web Services SDKs, and the APIs and
            50% for the Amazon Web Services Management Console.
            </para>
             
            <para>
            The minimum number of healthy tasks during a deployment is the <c>desiredCount</c>
            multiplied by the <c>minimumHealthyPercent</c>/100, rounded up to the nearest integer
            value.
            </para>
             
            <para>
            If a service is using either the blue/green (<c>CODE_DEPLOY</c>) or <c>EXTERNAL</c>
            deployment types and is running tasks that use the EC2 launch type, the <b>minimum
            healthy percent</b> value is set to the default value. The <b>minimum healthy percent</b>
            value is used to define the lower limit on the number of the tasks in the service
            that remain in the <c>RUNNING</c> state while the container instances are in the <c>DRAINING</c>
            state.
            </para>
             <note> 
            <para>
            You can't specify a custom <c>minimumHealthyPercent</c> value for a service that uses
            either the blue/green (<c>CODE_DEPLOY</c>) or <c>EXTERNAL</c> deployment types and
            has tasks that use the EC2 launch type.
            </para>
             </note> 
            <para>
            If a service is using either the blue/green (<c>CODE_DEPLOY</c>) or <c>EXTERNAL</c>
            deployment types and is running tasks that use the Fargate launch type, the minimum
            healthy percent value is not used, although it is returned when describing your service.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeploymentController">
            <summary>
            The deployment controller to use for the service.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeploymentController.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The deployment controller type to use.
            </para>
             
            <para>
            There are three deployment controller types available:
            </para>
             <dl> <dt>ECS</dt> <dd> 
            <para>
            The rolling update (<c>ECS</c>) deployment type involves replacing the current running
            version of the container with the latest version. The number of containers Amazon
            ECS adds or removes from the service during a rolling update is controlled by adjusting
            the minimum and maximum number of healthy tasks allowed during a service deployment,
            as specified in the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeploymentConfiguration.html">DeploymentConfiguration</a>.
            </para>
             
            <para>
            For more information about rolling deployments, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-ecs.html">Deploy
            Amazon ECS services by replacing tasks</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
             </dd> <dt>CODE_DEPLOY</dt> <dd> 
            <para>
            The blue/green (<c>CODE_DEPLOY</c>) deployment type uses the blue/green deployment
            model powered by CodeDeploy, which allows you to verify a new deployment of a service
            before sending production traffic to it.
            </para>
             
            <para>
            For more information about blue/green deployments, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-bluegreen.html">Validate
            the state of an Amazon ECS service before deployment </a> in the <i>Amazon Elastic
            Container Service Developer Guide</i>.
            </para>
             </dd> <dt>EXTERNAL</dt> <dd> 
            <para>
            The external (<c>EXTERNAL</c>) deployment type enables you to use any third-party
            deployment controller for full control over the deployment process for an Amazon ECS
            service.
            </para>
             
            <para>
            For more information about external deployments, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-external.html">Deploy
            Amazon ECS services using a third-party controller </a> in the <i>Amazon Elastic Container
            Service Developer Guide</i>.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeploymentEphemeralStorage">
            <summary>
            The amount of ephemeral storage to allocate for the deployment.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeploymentEphemeralStorage.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            Specify an Key Management Service key ID to encrypt the ephemeral storage for deployment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeregisterContainerInstanceRequest">
            <summary>
            Container for the parameters to the DeregisterContainerInstance operation.
            Deregisters an Amazon ECS container instance from the specified cluster. This instance
            is no longer available to run tasks.
            
             
            <para>
            If you intend to use the container instance for some other purpose after deregistration,
            we recommend that you stop all of the tasks running on the container instance before
            deregistration. That prevents any orphaned tasks from consuming resources.
            </para>
             
            <para>
            Deregistering a container instance removes the instance from a cluster, but it doesn't
            terminate the EC2 instance. If you are finished using the instance, be sure to terminate
            it in the Amazon EC2 console to stop billing.
            </para>
             <note> 
            <para>
            If you terminate a running container instance, Amazon ECS automatically deregisters
            the instance from your cluster (stopped container instances or instances with disconnected
            agents aren't automatically deregistered when terminated).
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeregisterContainerInstanceRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container
            instance to deregister. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeregisterContainerInstanceRequest.ContainerInstance">
            <summary>
            Gets and sets the property ContainerInstance. 
            <para>
            The container instance ID or full ARN of the container instance to deregister. For
            more information about the ARN format, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html#ecs-resource-ids">Amazon
            Resource Name (ARN)</a> in the <i>Amazon ECS Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeregisterContainerInstanceRequest.Force">
            <summary>
            Gets and sets the property Force. 
            <para>
            Forces the container instance to be deregistered. If you have tasks running on the
            container instance when you deregister it with the <c>force</c> option, these tasks
            remain running until you terminate the instance or the tasks stop through some other
            means, but they're orphaned (no longer monitored or accounted for by Amazon ECS).
            If an orphaned task on your container instance is part of an Amazon ECS service, then
            the service scheduler starts another copy of that task, on a different container instance
            if possible. 
            </para>
             
            <para>
            Any containers in orphaned service tasks that are registered with a Classic Load Balancer
            or an Application Load Balancer target group are deregistered. They begin connection
            draining according to the settings on the load balancer or target group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeregisterContainerInstanceResponse">
            <summary>
            This is the response object from the DeregisterContainerInstance operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeregisterContainerInstanceResponse.ContainerInstance">
            <summary>
            Gets and sets the property ContainerInstance. 
            <para>
            The container instance that was deregistered.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeregisterTaskDefinitionRequest">
            <summary>
            Container for the parameters to the DeregisterTaskDefinition operation.
            Deregisters the specified task definition by family and revision. Upon deregistration,
            the task definition is marked as <c>INACTIVE</c>. Existing tasks and services that
            reference an <c>INACTIVE</c> task definition continue to run without disruption. Existing
            services that reference an <c>INACTIVE</c> task definition can still scale up or down
            by modifying the service's desired count. If you want to delete a task definition
            revision, you must first deregister the task definition revision.
            
             
            <para>
            You can't use an <c>INACTIVE</c> task definition to run new tasks or create new services,
            and you can't update an existing service to reference an <c>INACTIVE</c> task definition.
            However, there may be up to a 10-minute window following deregistration where these
            restrictions have not yet taken effect.
            </para>
             <note> 
            <para>
            At this time, <c>INACTIVE</c> task definitions remain discoverable in your account
            indefinitely. However, this behavior is subject to change in the future. We don't
            recommend that you rely on <c>INACTIVE</c> task definitions persisting beyond the
            lifecycle of any associated tasks and services.
            </para>
             </note> 
            <para>
            You must deregister a task definition revision before you delete it. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeleteTaskDefinitions.html">DeleteTaskDefinitions</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeregisterTaskDefinitionRequest.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The <c>family</c> and <c>revision</c> (<c>family:revision</c>) or full Amazon Resource
            Name (ARN) of the task definition to deregister. You must specify a <c>revision</c>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeregisterTaskDefinitionResponse">
            <summary>
            This is the response object from the DeregisterTaskDefinition operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeregisterTaskDefinitionResponse.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The full description of the deregistered task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeCapacityProvidersRequest">
            <summary>
            Container for the parameters to the DescribeCapacityProviders operation.
            Describes one or more of your capacity providers.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeCapacityProvidersRequest.CapacityProviders">
            <summary>
            Gets and sets the property CapacityProviders. 
            <para>
            The short name or full Amazon Resource Name (ARN) of one or more capacity providers.
            Up to <c>100</c> capacity providers can be described in an action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeCapacityProvidersRequest.Include">
            <summary>
            Gets and sets the property Include. 
            <para>
            Specifies whether or not you want to see the resource tags for the capacity provider.
            If <c>TAGS</c> is specified, the tags are included in the response. If this field
            is omitted, tags aren't included in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeCapacityProvidersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of account setting results returned by <c>DescribeCapacityProviders</c>
            in paginated output. When this parameter is used, <c>DescribeCapacityProviders</c>
            only returns <c>maxResults</c> results in a single page along with a <c>nextToken</c>
            response element. The remaining results of the initial request can be seen by sending
            another <c>DescribeCapacityProviders</c> request with the returned <c>nextToken</c>
            value. This value can be between 1 and 10. If this parameter is not used, then <c>DescribeCapacityProviders</c>
            returns up to 10 results and a <c>nextToken</c> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeCapacityProvidersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value returned from a previous paginated <c>DescribeCapacityProviders</c>
            request where <c>maxResults</c> was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that returned
            the <c>nextToken</c> value.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeCapacityProvidersResponse">
            <summary>
            This is the response object from the DescribeCapacityProviders operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeCapacityProvidersResponse.CapacityProviders">
            <summary>
            Gets and sets the property CapacityProviders. 
            <para>
            The list of capacity providers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeCapacityProvidersResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeCapacityProvidersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value to include in a future <c>DescribeCapacityProviders</c>
            request. When the results of a <c>DescribeCapacityProviders</c> request exceed <c>maxResults</c>,
            this value can be used to retrieve the next page of results. This value is <c>null</c>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeClustersRequest">
            <summary>
            Container for the parameters to the DescribeClusters operation.
            Describes one or more of your clusters.
            
             
            <para>
             For CLI examples, see <a href="https://github.com/aws/aws-cli/blob/develop/awscli/examples/ecs/describe-clusters.rst">describe-clusters.rst</a>
            on GitHub.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeClustersRequest.Clusters">
            <summary>
            Gets and sets the property Clusters. 
            <para>
            A list of up to 100 cluster names or full cluster Amazon Resource Name (ARN) entries.
            If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeClustersRequest.Include">
            <summary>
            Gets and sets the property Include. 
            <para>
            Determines whether to include additional information about the clusters in the response.
            If this field is omitted, this information isn't included.
            </para>
             
            <para>
            If <c>ATTACHMENTS</c> is specified, the attachments for the container instances or
            tasks within the cluster are included, for example the capacity providers.
            </para>
             
            <para>
            If <c>SETTINGS</c> is specified, the settings for the cluster are included.
            </para>
             
            <para>
            If <c>CONFIGURATIONS</c> is specified, the configuration for the cluster is included.
            </para>
             
            <para>
            If <c>STATISTICS</c> is specified, the task and service count is included, separated
            by launch type.
            </para>
             
            <para>
            If <c>TAGS</c> is specified, the metadata tags associated with the cluster are included.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeClustersResponse">
            <summary>
            This is the response object from the DescribeClusters operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeClustersResponse.Clusters">
            <summary>
            Gets and sets the property Clusters. 
            <para>
            The list of clusters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeClustersResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeContainerInstancesRequest">
            <summary>
            Container for the parameters to the DescribeContainerInstances operation.
            Describes one or more container instances. Returns metadata about each container instance
            requested.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeContainerInstancesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container
            instances to describe. If you do not specify a cluster, the default cluster is assumed.
            This parameter is required if the container instance or container instances you are
            describing were launched in any cluster other than the default cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeContainerInstancesRequest.ContainerInstances">
            <summary>
            Gets and sets the property ContainerInstances. 
            <para>
            A list of up to 100 container instance IDs or full Amazon Resource Name (ARN) entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeContainerInstancesRequest.Include">
            <summary>
            Gets and sets the property Include. 
            <para>
            Specifies whether you want to see the resource tags for the container instance. If
            <c>TAGS</c> is specified, the tags are included in the response. If <c>CONTAINER_INSTANCE_HEALTH</c>
            is specified, the container instance health is included in the response. If this field
            is omitted, tags and container instance health status aren't included in the response.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeContainerInstancesResponse">
            <summary>
            This is the response object from the DescribeContainerInstances operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeContainerInstancesResponse.ContainerInstances">
            <summary>
            Gets and sets the property ContainerInstances. 
            <para>
            The list of container instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeContainerInstancesResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeServiceDeploymentsRequest">
            <summary>
            Container for the parameters to the DescribeServiceDeployments operation.
            Describes one or more of your service deployments.
            
             
            <para>
            A service deployment happens when you release a software update for the service. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-deployments.html">Amazon
            ECS service deployments</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeServiceDeploymentsRequest.ServiceDeploymentArns">
            <summary>
            Gets and sets the property ServiceDeploymentArns. 
            <para>
            The ARN of the service deployment.
            </para>
             
            <para>
            You can specify a maximum of 20 ARNs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeServiceDeploymentsResponse">
            <summary>
            This is the response object from the DescribeServiceDeployments operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeServiceDeploymentsResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
             
            <para>
            If you decsribe a deployment with a service revision created before October 25, 2024,
            the call fails. The failure includes the service revision ARN and the reason set to
            <c>MISSING</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeServiceDeploymentsResponse.ServiceDeployments">
            <summary>
            Gets and sets the property ServiceDeployments. 
            <para>
            The list of service deployments described.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeServiceRevisionsRequest">
            <summary>
            Container for the parameters to the DescribeServiceRevisions operation.
            Describes one or more service revisions.
            
             
            <para>
            A service revision is a version of the service that includes the values for the Amazon
            ECS resources (for example, task definition) and the environment resources (for example,
            load balancers, subnets, and security groups). For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-revision.html">Amazon
            ECS service revisions</a>.
            </para>
             
            <para>
            You can't describe a service revision that was created before October 25, 2024.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeServiceRevisionsRequest.ServiceRevisionArns">
            <summary>
            Gets and sets the property ServiceRevisionArns. 
            <para>
            The ARN of the service revision. 
            </para>
             
            <para>
            You can specify a maximum of 20 ARNs.
            </para>
             
            <para>
            You can call <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServiceDeployments.html">ListServiceDeployments</a>
            to get the ARNs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeServiceRevisionsResponse">
            <summary>
            This is the response object from the DescribeServiceRevisions operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeServiceRevisionsResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeServiceRevisionsResponse.ServiceRevisions">
            <summary>
            Gets and sets the property ServiceRevisions. 
            <para>
            The list of service revisions described.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeServicesRequest">
            <summary>
            Container for the parameters to the DescribeServices operation.
            Describes the specified services running in your cluster.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeServicesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN)the cluster that hosts the service
            to describe. If you do not specify a cluster, the default cluster is assumed. This
            parameter is required if the service or services you are describing were launched
            in any cluster other than the default cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeServicesRequest.Include">
            <summary>
            Gets and sets the property Include. 
            <para>
            Determines whether you want to see the resource tags for the service. If <c>TAGS</c>
            is specified, the tags are included in the response. If this field is omitted, tags
            aren't included in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeServicesRequest.Services">
            <summary>
            Gets and sets the property Services. 
            <para>
            A list of services to describe. You may specify up to 10 services to describe in a
            single operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeServicesResponse">
            <summary>
            This is the response object from the DescribeServices operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeServicesResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeServicesResponse.Services">
            <summary>
            Gets and sets the property Services. 
            <para>
            The list of services described.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeTaskDefinitionRequest">
            <summary>
            Container for the parameters to the DescribeTaskDefinition operation.
            Describes a task definition. You can specify a <c>family</c> and <c>revision</c> to
            find information about a specific task definition, or you can simply specify the family
            to find the latest <c>ACTIVE</c> revision in that family.
            
             <note> 
            <para>
            You can only describe <c>INACTIVE</c> task definitions while an active task or service
            references them.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTaskDefinitionRequest.Include">
            <summary>
            Gets and sets the property Include. 
            <para>
            Determines whether to see the resource tags for the task definition. If <c>TAGS</c>
            is specified, the tags are included in the response. If this field is omitted, tags
            aren't included in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTaskDefinitionRequest.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The <c>family</c> for the latest <c>ACTIVE</c> revision, <c>family</c> and <c>revision</c>
            (<c>family:revision</c>) for a specific revision in the family, or full Amazon Resource
            Name (ARN) of the task definition to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeTaskDefinitionResponse">
            <summary>
            This is the response object from the DescribeTaskDefinition operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTaskDefinitionResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that's applied to the task definition to help you categorize and organize
            them. Each tag consists of a key and an optional value. You define both.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <c>aws:</c>, <c>AWS:</c>, or any upper or lowercase combination of such
            as a prefix for either keys or values as it is reserved for Amazon Web Services use.
            You cannot edit or delete tag keys or values with this prefix. Tags with this prefix
            do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTaskDefinitionResponse.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The full task definition description.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeTaskSetsRequest">
            <summary>
            Container for the parameters to the DescribeTaskSets operation.
            Describes the task sets in the specified cluster and service. This is used when a
            service uses the <c>EXTERNAL</c> deployment controller type. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTaskSetsRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service
            that the task sets exist in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTaskSetsRequest.Include">
            <summary>
            Gets and sets the property Include. 
            <para>
            Specifies whether to see the resource tags for the task set. If <c>TAGS</c> is specified,
            the tags are included in the response. If this field is omitted, tags aren't included
            in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTaskSetsRequest.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the service that the task sets
            exist in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTaskSetsRequest.TaskSets">
            <summary>
            Gets and sets the property TaskSets. 
            <para>
            The ID or full Amazon Resource Name (ARN) of task sets to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeTaskSetsResponse">
            <summary>
            This is the response object from the DescribeTaskSets operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTaskSetsResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTaskSetsResponse.TaskSets">
            <summary>
            Gets and sets the property TaskSets. 
            <para>
            The list of task sets described.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeTasksRequest">
            <summary>
            Container for the parameters to the DescribeTasks operation.
            Describes a specified task or tasks.
            
             
            <para>
            Currently, stopped tasks appear in the returned results for at least one hour.
            </para>
             
            <para>
            If you have tasks with tags, and then delete the cluster, the tagged tasks are returned
            in the response. If you create a new cluster with the same name as the deleted cluster,
            the tagged tasks are not included in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTasksRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the task
            or tasks to describe. If you do not specify a cluster, the default cluster is assumed.
            This parameter is required. If you do not specify a value, the <c>default</c> cluster
            is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTasksRequest.Include">
            <summary>
            Gets and sets the property Include. 
            <para>
            Specifies whether you want to see the resource tags for the task. If <c>TAGS</c> is
            specified, the tags are included in the response. If this field is omitted, tags aren't
            included in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTasksRequest.Tasks">
            <summary>
            Gets and sets the property Tasks. 
            <para>
            A list of up to 100 task IDs or full ARN entries.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeTasksResponse">
            <summary>
            This is the response object from the DescribeTasks operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTasksResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTasksResponse.Tasks">
            <summary>
            Gets and sets the property Tasks. 
            <para>
            The list of tasks.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Device">
            <summary>
            An object representing a container instance host device.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Device.ContainerPath">
            <summary>
            Gets and sets the property ContainerPath. 
            <para>
            The path inside the container at which to expose the host device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Device.HostPath">
            <summary>
            Gets and sets the property HostPath. 
            <para>
            The path for the device on the host container instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Device.Permissions">
            <summary>
            Gets and sets the property Permissions. 
            <para>
            The explicit permissions to provide to the container for the device. By default, the
            container has permissions for <c>read</c>, <c>write</c>, and <c>mknod</c> for the
            device.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DockerVolumeConfiguration">
            <summary>
            This parameter is specified when you're using Docker volumes. Docker volumes are only
            supported when you're using the EC2 launch type. Windows containers only support the
            use of the <c>local</c> driver. To use bind mounts, specify a <c>host</c> instead.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DockerVolumeConfiguration.Autoprovision">
            <summary>
            Gets and sets the property Autoprovision. 
            <para>
            If this value is <c>true</c>, the Docker volume is created if it doesn't already exist.
            </para>
             <note> 
            <para>
            This field is only used if the <c>scope</c> is <c>shared</c>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DockerVolumeConfiguration.Driver">
            <summary>
            Gets and sets the property Driver. 
            <para>
            The Docker volume driver to use. The driver value must match the driver name provided
            by Docker because it is used for task placement. If the driver was installed using
            the Docker plugin CLI, use <c>docker plugin ls</c> to retrieve the driver name from
            your container instance. If the driver was installed using another method, use Docker
            plugin discovery to retrieve the driver name. This parameter maps to <c>Driver</c>
            in the docker container create command and the <c>xxdriver</c> option to docker volume
            create.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DockerVolumeConfiguration.DriverOpts">
            <summary>
            Gets and sets the property DriverOpts. 
            <para>
            A map of Docker driver-specific options passed through. This parameter maps to <c>DriverOpts</c>
            in the docker create-volume command and the <c>xxopt</c> option to docker volume create.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DockerVolumeConfiguration.Labels">
            <summary>
            Gets and sets the property Labels. 
            <para>
            Custom metadata to add to your Docker volume. This parameter maps to <c>Labels</c>
            in the docker container create command and the <c>xxlabel</c> option to docker volume
            create.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DockerVolumeConfiguration.Scope">
            <summary>
            Gets and sets the property Scope. 
            <para>
            The scope for the Docker volume that determines its lifecycle. Docker volumes that
            are scoped to a <c>task</c> are automatically provisioned when the task starts and
            destroyed when the task stops. Docker volumes that are scoped as <c>shared</c> persist
            after the task stops.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.EBSTagSpecification">
            <summary>
            The tag specifications of an Amazon EBS volume.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EBSTagSpecification.PropagateTags">
            <summary>
            Gets and sets the property PropagateTags. 
            <para>
            Determines whether to propagate the tags from the task definition to &#x2028;the Amazon
            EBS volume. Tags can only propagate to a <c>SERVICE</c> specified in &#x2028;<c>ServiceVolumeConfiguration</c>.
            If no value is specified, the tags aren't &#x2028;propagated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EBSTagSpecification.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The type of volume resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EBSTagSpecification.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags applied to this Amazon EBS volume. <c>AmazonECSCreated</c> and <c>AmazonECSManaged</c>
            are reserved tags that can't be used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.EFSAuthorizationConfig">
            <summary>
            The authorization configuration details for the Amazon EFS file system.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EFSAuthorizationConfig.AccessPointId">
            <summary>
            Gets and sets the property AccessPointId. 
            <para>
            The Amazon EFS access point ID to use. If an access point is specified, the root directory
            value specified in the <c>EFSVolumeConfiguration</c> must either be omitted or set
            to <c>/</c> which will enforce the path set on the EFS access point. If an access
            point is used, transit encryption must be on in the <c>EFSVolumeConfiguration</c>.
            For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/efs-access-points.html">Working
            with Amazon EFS access points</a> in the <i>Amazon Elastic File System User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EFSAuthorizationConfig.Iam">
            <summary>
            Gets and sets the property Iam. 
            <para>
            Determines whether to use the Amazon ECS task role defined in a task definition when
            mounting the Amazon EFS file system. If it is turned on, transit encryption must be
            turned on in the <c>EFSVolumeConfiguration</c>. If this parameter is omitted, the
            default value of <c>DISABLED</c> is used. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/efs-volumes.html#efs-volume-accesspoints">Using
            Amazon EFS access points</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.EFSVolumeConfiguration">
            <summary>
            This parameter is specified when you're using an Amazon Elastic File System file system
            for task storage. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/efs-volumes.html">Amazon
            EFS volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EFSVolumeConfiguration.AuthorizationConfig">
            <summary>
            Gets and sets the property AuthorizationConfig. 
            <para>
            The authorization configuration details for the Amazon EFS file system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EFSVolumeConfiguration.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The Amazon EFS file system ID to use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EFSVolumeConfiguration.RootDirectory">
            <summary>
            Gets and sets the property RootDirectory. 
            <para>
            The directory within the Amazon EFS file system to mount as the root directory inside
            the host. If this parameter is omitted, the root of the Amazon EFS volume will be
            used. Specifying <c>/</c> will have the same effect as omitting this parameter.
            </para>
             <important> 
            <para>
            If an EFS access point is specified in the <c>authorizationConfig</c>, the root directory
            parameter must either be omitted or set to <c>/</c> which will enforce the path set
            on the EFS access point.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EFSVolumeConfiguration.TransitEncryption">
            <summary>
            Gets and sets the property TransitEncryption. 
            <para>
            Determines whether to use encryption for Amazon EFS data in transit between the Amazon
            ECS host and the Amazon EFS server. Transit encryption must be turned on if Amazon
            EFS IAM authorization is used. If this parameter is omitted, the default value of
            <c>DISABLED</c> is used. For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/encryption-in-transit.html">Encrypting
            data in transit</a> in the <i>Amazon Elastic File System User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EFSVolumeConfiguration.TransitEncryptionPort">
            <summary>
            Gets and sets the property TransitEncryptionPort. 
            <para>
            The port to use when sending encrypted data between the Amazon ECS host and the Amazon
            EFS server. If you do not specify a transit encryption port, it will use the port
            selection strategy that the Amazon EFS mount helper uses. For more information, see
            <a href="https://docs.aws.amazon.com/efs/latest/ug/efs-mount-helper.html">EFS mount
            helper</a> in the <i>Amazon Elastic File System User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.EnvironmentFile">
            <summary>
            A list of files containing the environment variables to pass to a container. You can
            specify up to ten environment files. The file must have a <c>.env</c> file extension.
            Each line in an environment file should contain an environment variable in <c>VARIABLE=VALUE</c>
            format. Lines beginning with <c>#</c> are treated as comments and are ignored.
            
             
            <para>
            If there are environment variables specified using the <c>environment</c> parameter
            in a container definition, they take precedence over the variables contained within
            an environment file. If multiple environment files are specified that contain the
            same variable, they're processed from the top down. We recommend that you use unique
            variable names. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/use-environment-file.html">Use
            a file to pass environment variables to a container</a> in the <i>Amazon Elastic Container
            Service Developer Guide</i>.
            </para>
             
            <para>
            Environment variable files are objects in Amazon S3 and all Amazon S3 security considerations
            apply. 
            </para>
             
            <para>
            You must use the following platforms for the Fargate launch type:
            </para>
             <ul> <li> 
            <para>
            Linux platform version <c>1.4.0</c> or later.
            </para>
             </li> <li> 
            <para>
            Windows platform version <c>1.0.0</c> or later.
            </para>
             </li> </ul> 
            <para>
            Consider the following when using the Fargate launch type:
            </para>
             <ul> <li> 
            <para>
            The file is handled like a native Docker env-file.
            </para>
             </li> <li> 
            <para>
            There is no support for shell escape handling.
            </para>
             </li> <li> 
            <para>
            The container entry point interperts the <c>VARIABLE</c> values.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EnvironmentFile.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The file type to use. Environment files are objects in Amazon S3. The only supported
            value is <c>s3</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EnvironmentFile.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon S3 object containing the environment
            variable file.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.EphemeralStorage">
            <summary>
            The amount of ephemeral storage to allocate for the task. This parameter is used to
            expand the total amount of ephemeral storage available, beyond the default amount,
            for tasks hosted on Fargate. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_data_volumes.html">Using
            data volumes in tasks</a> in the <i>Amazon ECS Developer Guide;</i>.
            
             <note> 
            <para>
            For tasks using the Fargate launch type, the task requires the following platforms:
            </para>
             <ul> <li> 
            <para>
            Linux platform version <c>1.4.0</c> or later.
            </para>
             </li> <li> 
            <para>
            Windows platform version <c>1.0.0</c> or later.
            </para>
             </li> </ul> </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EphemeralStorage.SizeInGiB">
            <summary>
            Gets and sets the property SizeInGiB. 
            <para>
            The total amount, in GiB, of ephemeral storage to set for the task. The minimum supported
            value is <c>21</c> GiB and the maximum supported value is <c>200</c> GiB.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ExecuteCommandConfiguration">
            <summary>
            The details of the execute command configuration.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandConfiguration.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            Specify an Key Management Service key ID to encrypt the data between the local client
            and the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandConfiguration.LogConfiguration">
            <summary>
            Gets and sets the property LogConfiguration. 
            <para>
            The log configuration for the results of the execute command actions. The logs can
            be sent to CloudWatch Logs or an Amazon S3 bucket. When <c>logging=OVERRIDE</c> is
            specified, a <c>logConfiguration</c> must be provided.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandConfiguration.Logging">
            <summary>
            Gets and sets the property Logging. 
            <para>
            The log setting to use for redirecting logs for your execute command results. The
            following log settings are available.
            </para>
             <ul> <li> 
            <para>
             <c>NONE</c>: The execute command session is not logged.
            </para>
             </li> <li> 
            <para>
             <c>DEFAULT</c>: The <c>awslogs</c> configuration in the task definition is used.
            If no logging parameter is specified, it defaults to this value. If no <c>awslogs</c>
            log driver is configured in the task definition, the output won't be logged.
            </para>
             </li> <li> 
            <para>
             <c>OVERRIDE</c>: Specify the logging details as a part of <c>logConfiguration</c>.
            If the <c>OVERRIDE</c> logging option is specified, the <c>logConfiguration</c> is
            required.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ExecuteCommandLogConfiguration">
            <summary>
            The log configuration for the results of the execute command actions. The logs can
            be sent to CloudWatch Logs or an Amazon S3 bucket.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandLogConfiguration.CloudWatchEncryptionEnabled">
            <summary>
            Gets and sets the property CloudWatchEncryptionEnabled. 
            <para>
            Determines whether to use encryption on the CloudWatch logs. If not specified, encryption
            will be off.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandLogConfiguration.CloudWatchLogGroupName">
            <summary>
            Gets and sets the property CloudWatchLogGroupName. 
            <para>
            The name of the CloudWatch log group to send logs to.
            </para>
             <note> 
            <para>
            The CloudWatch log group must already be created.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandLogConfiguration.S3BucketName">
            <summary>
            Gets and sets the property S3BucketName. 
            <para>
            The name of the S3 bucket to send logs to.
            </para>
             <note> 
            <para>
            The S3 bucket must already be created.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandLogConfiguration.S3EncryptionEnabled">
            <summary>
            Gets and sets the property S3EncryptionEnabled. 
            <para>
            Determines whether to use encryption on the S3 logs. If not specified, encryption
            is not used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandLogConfiguration.S3KeyPrefix">
            <summary>
            Gets and sets the property S3KeyPrefix. 
            <para>
            An optional folder in the S3 bucket to place logs in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ExecuteCommandRequest">
            <summary>
            Container for the parameters to the ExecuteCommand operation.
            Runs a command remotely on a container within a task.
            
             
            <para>
            If you use a condition key in your IAM policy to refine the conditions for the policy
            statement, for example limit the actions to a specific cluster, you receive an <c>AccessDeniedException</c>
            when there is a mismatch between the condition key value and the corresponding parameter
            value.
            </para>
             
            <para>
            For information about required permissions and considerations, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-exec.html">Using
            Amazon ECS Exec for debugging</a> in the <i>Amazon ECS Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The Amazon Resource Name (ARN) or short name of the cluster the task is running in.
            If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandRequest.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            The command to run on the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandRequest.Container">
            <summary>
            Gets and sets the property Container. 
            <para>
            The name of the container to execute the command on. A container name only needs to
            be specified for tasks containing multiple containers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandRequest.Interactive">
            <summary>
            Gets and sets the property Interactive. 
            <para>
            Use this flag to run your command in interactive mode.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandRequest.Task">
            <summary>
            Gets and sets the property Task. 
            <para>
            The Amazon Resource Name (ARN) or ID of the task the container is part of.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ExecuteCommandResponse">
            <summary>
            This is the response object from the ExecuteCommand operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandResponse.ClusterArn">
            <summary>
            Gets and sets the property ClusterArn. 
            <para>
            The Amazon Resource Name (ARN) of the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandResponse.ContainerArn">
            <summary>
            Gets and sets the property ContainerArn. 
            <para>
            The Amazon Resource Name (ARN) of the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandResponse.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandResponse.Interactive">
            <summary>
            Gets and sets the property Interactive. 
            <para>
            Determines whether the execute command session is running in interactive mode. Amazon
            ECS only supports initiating interactive sessions, so you must specify <c>true</c>
            for this value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandResponse.Session">
            <summary>
            Gets and sets the property Session. 
            <para>
            The details of the SSM session that was created for this instance of execute-command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandResponse.TaskArn">
            <summary>
            Gets and sets the property TaskArn. 
            <para>
            The Amazon Resource Name (ARN) of the task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Failure">
            <summary>
            A failed resource. For a list of common causes, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/api_failures_messages.html">API
            failure reasons</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Failure.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the failed resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Failure.Detail">
            <summary>
            Gets and sets the property Detail. 
            <para>
            The details of the failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Failure.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            The reason for the failure.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.FirelensConfiguration">
            <summary>
            The FireLens configuration for the container. This is used to specify and configure
            a log router for container logs. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html">Custom
            log routing</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.FirelensConfiguration.Options">
            <summary>
            Gets and sets the property Options. 
            <para>
            The options to use when configuring the log router. This field is optional and can
            be used to specify a custom configuration file or to add additional metadata, such
            as the task, task definition, cluster, and container instance details to the log event.
            If specified, the syntax to use is <c>"options":{"enable-ecs-log-metadata":"true|false","config-file-type:"s3|file","config-file-value":"arn:aws:s3:::mybucket/fluent.conf|filepath"}</c>.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html#firelens-taskdef">Creating
            a task definition that uses a FireLens configuration</a> in the <i>Amazon Elastic
            Container Service Developer Guide</i>.
            </para>
             <note> 
            <para>
            Tasks hosted on Fargate only support the <c>file</c> configuration file type.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.FirelensConfiguration.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The log router to use. The valid values are <c>fluentd</c> or <c>fluentbit</c>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.FSxWindowsFileServerAuthorizationConfig">
            <summary>
            The authorization configuration details for Amazon FSx for Windows File Server file
            system. See <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_FSxWindowsFileServerVolumeConfiguration.html">FSxWindowsFileServerVolumeConfiguration</a>
            in the <i>Amazon ECS API Reference</i>.
            
             
            <para>
            For more information and the input format, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/wfsx-volumes.html">Amazon
            FSx for Windows File Server Volumes</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.FSxWindowsFileServerAuthorizationConfig.CredentialsParameter">
            <summary>
            Gets and sets the property CredentialsParameter. 
            <para>
            The authorization credential option to use. The authorization credential options can
            be provided using either the Amazon Resource Name (ARN) of an Secrets Manager secret
            or SSM Parameter Store parameter. The ARN refers to the stored credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.FSxWindowsFileServerAuthorizationConfig.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            A fully qualified domain name hosted by an <a href="https://docs.aws.amazon.com/directoryservice/latest/admin-guide/directory_microsoft_ad.html">Directory
            Service</a> Managed Microsoft AD (Active Directory) or self-hosted AD on Amazon EC2.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.FSxWindowsFileServerVolumeConfiguration">
            <summary>
            This parameter is specified when you're using <a href="https://docs.aws.amazon.com/fsx/latest/WindowsGuide/what-is.html">Amazon
            FSx for Windows File Server</a> file system for task storage.
            
             
            <para>
            For more information and the input format, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/wfsx-volumes.html">Amazon
            FSx for Windows File Server volumes</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.FSxWindowsFileServerVolumeConfiguration.AuthorizationConfig">
            <summary>
            Gets and sets the property AuthorizationConfig. 
            <para>
            The authorization configuration details for the Amazon FSx for Windows File Server
            file system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.FSxWindowsFileServerVolumeConfiguration.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The Amazon FSx for Windows File Server file system ID to use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.FSxWindowsFileServerVolumeConfiguration.RootDirectory">
            <summary>
            Gets and sets the property RootDirectory. 
            <para>
            The directory within the Amazon FSx for Windows File Server file system to mount as
            the root directory inside the host.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.GetTaskProtectionRequest">
            <summary>
            Container for the parameters to the GetTaskProtection operation.
            Retrieves the protection status of tasks in an Amazon ECS service.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.GetTaskProtectionRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service
            that the task sets exist in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.GetTaskProtectionRequest.Tasks">
            <summary>
            Gets and sets the property Tasks. 
            <para>
            A list of up to 100 task IDs or full ARN entries.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.GetTaskProtectionResponse">
            <summary>
            This is the response object from the GetTaskProtection operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.GetTaskProtectionResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.GetTaskProtectionResponse.ProtectedTasks">
            <summary>
            Gets and sets the property ProtectedTasks. 
            <para>
            A list of tasks with the following information.
            </para>
             <ul> <li> 
            <para>
             <c>taskArn</c>: The task ARN.
            </para>
             </li> <li> 
            <para>
             <c>protectionEnabled</c>: The protection status of the task. If scale-in protection
            is turned on for a task, the value is <c>true</c>. Otherwise, it is <c>false</c>.
            </para>
             </li> <li> 
            <para>
             <c>expirationDate</c>: The epoch time when protection for the task will expire.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.HealthCheck">
            <summary>
            An object representing a container health check. Health check parameters that are
            specified in a container definition override any Docker health checks that exist in
            the container image (such as those specified in a parent image or from the image's
            Dockerfile). This configuration maps to the <c>HEALTHCHECK</c> parameter of docker
            run.
            
             <note> 
            <para>
            The Amazon ECS container agent only monitors and reports on the health checks specified
            in the task definition. Amazon ECS does not monitor Docker health checks that are
            embedded in a container image and not specified in the container definition. Health
            check parameters that are specified in a container definition override any Docker
            health checks that exist in the container image.
            </para>
             </note> 
            <para>
            You can view the health status of both individual containers and a task with the DescribeTasks
            API operation or when viewing the task details in the console.
            </para>
             
            <para>
            The health check is designed to make sure that your containers survive agent restarts,
            upgrades, or temporary unavailability.
            </para>
             
            <para>
            Amazon ECS performs health checks on containers with the default that launched the
            container instance or the task.
            </para>
             
            <para>
            The following describes the possible <c>healthStatus</c> values for a container:
            </para>
             <ul> <li> 
            <para>
             <c>HEALTHY</c>-The container health check has passed successfully.
            </para>
             </li> <li> 
            <para>
             <c>UNHEALTHY</c>-The container health check has failed.
            </para>
             </li> <li> 
            <para>
             <c>UNKNOWN</c>-The container health check is being evaluated, there's no container
            health check defined, or Amazon ECS doesn't have the health status of the container.
            </para>
             </li> </ul> 
            <para>
            The following describes the possible <c>healthStatus</c> values based on the container
            health checker status of essential containers in the task with the following priority
            order (high to low):
            </para>
             <ul> <li> 
            <para>
             <c>UNHEALTHY</c>-One or more essential containers have failed their health check.
            </para>
             </li> <li> 
            <para>
             <c>UNKNOWN</c>-Any essential container running within the task is in an <c>UNKNOWN</c>
            state and no other essential containers have an <c>UNHEALTHY</c> state.
            </para>
             </li> <li> 
            <para>
             <c>HEALTHY</c>-All essential containers within the task have passed their health
            checks.
            </para>
             </li> </ul> 
            <para>
            Consider the following task health example with 2 containers.
            </para>
             <ul> <li> 
            <para>
            If Container1 is <c>UNHEALTHY</c> and Container2 is <c>UNKNOWN</c>, the task health
            is <c>UNHEALTHY</c>.
            </para>
             </li> <li> 
            <para>
            If Container1 is <c>UNHEALTHY</c> and Container2 is <c>HEALTHY</c>, the task health
            is <c>UNHEALTHY</c>.
            </para>
             </li> <li> 
            <para>
            If Container1 is <c>HEALTHY</c> and Container2 is <c>UNKNOWN</c>, the task health
            is <c>UNKNOWN</c>.
            </para>
             </li> <li> 
            <para>
            If Container1 is <c>HEALTHY</c> and Container2 is <c>HEALTHY</c>, the task health
            is <c>HEALTHY</c>.
            </para>
             </li> </ul> 
            <para>
            Consider the following task health example with 3 containers.
            </para>
             <ul> <li> 
            <para>
            If Container1 is <c>UNHEALTHY</c> and Container2 is <c>UNKNOWN</c>, and Container3
            is <c>UNKNOWN</c>, the task health is <c>UNHEALTHY</c>.
            </para>
             </li> <li> 
            <para>
            If Container1 is <c>UNHEALTHY</c> and Container2 is <c>UNKNOWN</c>, and Container3
            is <c>HEALTHY</c>, the task health is <c>UNHEALTHY</c>.
            </para>
             </li> <li> 
            <para>
            If Container1 is <c>UNHEALTHY</c> and Container2 is <c>HEALTHY</c>, and Container3
            is <c>HEALTHY</c>, the task health is <c>UNHEALTHY</c>.
            </para>
             </li> <li> 
            <para>
            If Container1 is <c>HEALTHY</c> and Container2 is <c>UNKNOWN</c>, and Container3 is
            <c>HEALTHY</c>, the task health is <c>UNKNOWN</c>.
            </para>
             </li> <li> 
            <para>
            If Container1 is <c>HEALTHY</c> and Container2 is <c>UNKNOWN</c>, and Container3 is
            <c>UNKNOWN</c>, the task health is <c>UNKNOWN</c>.
            </para>
             </li> <li> 
            <para>
            If Container1 is <c>HEALTHY</c> and Container2 is <c>HEALTHY</c>, and Container3 is
            <c>HEALTHY</c>, the task health is <c>HEALTHY</c>.
            </para>
             </li> </ul> 
            <para>
            If a task is run manually, and not as part of a service, the task will continue its
            lifecycle regardless of its health status. For tasks that are part of a service, if
            the task reports as unhealthy then the task will be stopped and the service scheduler
            will replace it.
            </para>
             
            <para>
            The following are notes about container health check support:
            </para>
             <ul> <li> 
            <para>
            If the Amazon ECS container agent becomes disconnected from the Amazon ECS service,
            this won't cause a container to transition to an <c>UNHEALTHY</c> status. This is
            by design, to ensure that containers remain running during agent restarts or temporary
            unavailability. The health check status is the "last heard from" response from the
            Amazon ECS agent, so if the container was considered <c>HEALTHY</c> prior to the disconnect,
            that status will remain until the agent reconnects and another health check occurs.
            There are no assumptions made about the status of the container health checks.
            </para>
             </li> <li> 
            <para>
            Container health checks require version <c>1.17.0</c> or greater of the Amazon ECS
            container agent. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html">Updating
            the Amazon ECS container agent</a>.
            </para>
             </li> <li> 
            <para>
            Container health checks are supported for Fargate tasks if you're using platform version
            <c>1.1.0</c> or greater. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html">Fargate
            platform versions</a>.
            </para>
             </li> <li> 
            <para>
            Container health checks aren't supported for tasks that are part of a service that's
            configured to use a Classic Load Balancer.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.HealthCheck.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            A string array representing the command that the container runs to determine if it
            is healthy. The string array must start with <c>CMD</c> to run the command arguments
            directly, or <c>CMD-SHELL</c> to run the command with the container's default shell.
            
            </para>
             
            <para>
             When you use the Amazon Web Services Management Console JSON panel, the Command Line
            Interface, or the APIs, enclose the list of commands in double quotes and brackets.
            </para>
             
            <para>
             <c>[ "CMD-SHELL", "curl -f http://localhost/ || exit 1" ]</c> 
            </para>
             
            <para>
            You don't include the double quotes and brackets when you use the Amazon Web Services
            Management Console.
            </para>
             
            <para>
             <c> CMD-SHELL, curl -f http://localhost/ || exit 1</c> 
            </para>
             
            <para>
            An exit code of 0 indicates success, and non-zero exit code indicates failure. For
            more information, see <c>HealthCheck</c> in the docker container create command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.HealthCheck.Interval">
            <summary>
            Gets and sets the property Interval. 
            <para>
            The time period in seconds between each health check execution. You may specify between
            5 and 300 seconds. The default value is 30 seconds.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.HealthCheck.Retries">
            <summary>
            Gets and sets the property Retries. 
            <para>
            The number of times to retry a failed health check before the container is considered
            unhealthy. You may specify between 1 and 10 retries. The default value is 3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.HealthCheck.StartPeriod">
            <summary>
            Gets and sets the property StartPeriod. 
            <para>
            The optional grace period to provide containers time to bootstrap before failed health
            checks count towards the maximum number of retries. You can specify between 0 and
            300 seconds. By default, the <c>startPeriod</c> is off.
            </para>
             <note> 
            <para>
            If a health check succeeds within the <c>startPeriod</c>, then the container is considered
            healthy and any subsequent failures count toward the maximum number of retries.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.HealthCheck.Timeout">
            <summary>
            Gets and sets the property Timeout. 
            <para>
            The time period in seconds to wait for a health check to succeed before it is considered
            a failure. You may specify between 2 and 60 seconds. The default value is 5.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.HostEntry">
            <summary>
            Hostnames and IP address entries that are added to the <c>/etc/hosts</c> file of a
            container via the <c>extraHosts</c> parameter of its <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ContainerDefinition.html">ContainerDefinition</a>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.HostEntry.Hostname">
            <summary>
            Gets and sets the property Hostname. 
            <para>
            The hostname to use in the <c>/etc/hosts</c> entry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.HostEntry.IpAddress">
            <summary>
            Gets and sets the property IpAddress. 
            <para>
            The IP address to use in the <c>/etc/hosts</c> entry.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.HostVolumeProperties">
            <summary>
            Details on a container instance bind mount host volume.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.HostVolumeProperties.SourcePath">
            <summary>
            Gets and sets the property SourcePath. 
            <para>
            When the <c>host</c> parameter is used, specify a <c>sourcePath</c> to declare the
            path on the host container instance that's presented to the container. If this parameter
            is empty, then the Docker daemon has assigned a host path for you. If the <c>host</c>
            parameter contains a <c>sourcePath</c> file location, then the data volume persists
            at the specified location on the host container instance until you delete it manually.
            If the <c>sourcePath</c> value doesn't exist on the host container instance, the Docker
            daemon creates it. If the location does exist, the contents of the source path folder
            are exported.
            </para>
             
            <para>
            If you're using the Fargate launch type, the <c>sourcePath</c> parameter is not supported.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.InferenceAccelerator">
            <summary>
            Details on an Elastic Inference accelerator. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-inference.html">Working
            with Amazon Elastic Inference on Amazon ECS</a> in the <i>Amazon Elastic Container
            Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.InferenceAccelerator.DeviceName">
            <summary>
            Gets and sets the property DeviceName. 
            <para>
            The Elastic Inference accelerator device name. The <c>deviceName</c> must also be
            referenced in a container definition as a <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ResourceRequirement.html">ResourceRequirement</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.InferenceAccelerator.DeviceType">
            <summary>
            Gets and sets the property DeviceType. 
            <para>
            The Elastic Inference accelerator type to use.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.InferenceAcceleratorOverride">
            <summary>
            Details on an Elastic Inference accelerator task override. This parameter is used
            to override the Elastic Inference accelerator specified in the task definition. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-inference.html">Working
            with Amazon Elastic Inference on Amazon ECS</a> in the <i>Amazon Elastic Container
            Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.InferenceAcceleratorOverride.DeviceName">
            <summary>
            Gets and sets the property DeviceName. 
            <para>
            The Elastic Inference accelerator device name to override for the task. This parameter
            must match a <c>deviceName</c> specified in the task definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.InferenceAcceleratorOverride.DeviceType">
            <summary>
            Gets and sets the property DeviceType. 
            <para>
            The Elastic Inference accelerator type to use.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.InstanceHealthCheckResult">
            <summary>
            An object representing the result of a container instance health status check.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.InstanceHealthCheckResult.LastStatusChange">
            <summary>
            Gets and sets the property LastStatusChange. 
            <para>
            The Unix timestamp for when the container instance health status last changed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.InstanceHealthCheckResult.LastUpdated">
            <summary>
            Gets and sets the property LastUpdated. 
            <para>
            The Unix timestamp for when the container instance health status was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.InstanceHealthCheckResult.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The container instance health status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.InstanceHealthCheckResult.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of container instance health status that was verified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AttachmentStateChangeMarshaller">
            <summary>
            AttachmentStateChange Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AttachmentStateChangeMarshaller.Marshall(Amazon.ECS.Model.AttachmentStateChange,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.AttachmentStateChangeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AttachmentUnmarshaller">
            <summary>
            Response Unmarshaller for Attachment Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AttachmentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Attachment,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AttachmentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.AttachmentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeLimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AttributeLimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeLimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeMarshaller">
            <summary>
            Attribute Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeMarshaller.Marshall(Amazon.ECS.Model.Attribute,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeUnmarshaller">
            <summary>
            Response Unmarshaller for Attribute Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Attribute,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AutoScalingGroupProviderMarshaller">
            <summary>
            AutoScalingGroupProvider Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AutoScalingGroupProviderMarshaller.Marshall(Amazon.ECS.Model.AutoScalingGroupProvider,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.AutoScalingGroupProviderMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AutoScalingGroupProviderUnmarshaller">
            <summary>
            Response Unmarshaller for AutoScalingGroupProvider Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AutoScalingGroupProviderUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#AutoScalingGroupProvider,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AutoScalingGroupProviderUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.AutoScalingGroupProviderUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AutoScalingGroupProviderUpdateMarshaller">
            <summary>
            AutoScalingGroupProviderUpdate Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AutoScalingGroupProviderUpdateMarshaller.Marshall(Amazon.ECS.Model.AutoScalingGroupProviderUpdate,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.AutoScalingGroupProviderUpdateMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AwsVpcConfigurationMarshaller">
            <summary>
            AwsVpcConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AwsVpcConfigurationMarshaller.Marshall(Amazon.ECS.Model.AwsVpcConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.AwsVpcConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AwsVpcConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for AwsVpcConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AwsVpcConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#AwsVpcConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AwsVpcConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.AwsVpcConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.BlockedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for BlockedException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.BlockedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.BlockedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.BlockedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CapacityProviderStrategyItemMarshaller">
            <summary>
            CapacityProviderStrategyItem Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CapacityProviderStrategyItemMarshaller.Marshall(Amazon.ECS.Model.CapacityProviderStrategyItem,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.CapacityProviderStrategyItemMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CapacityProviderStrategyItemUnmarshaller">
            <summary>
            Response Unmarshaller for CapacityProviderStrategyItem Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CapacityProviderStrategyItemUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#CapacityProviderStrategyItem,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CapacityProviderStrategyItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.CapacityProviderStrategyItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CapacityProviderUnmarshaller">
            <summary>
            Response Unmarshaller for CapacityProvider Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CapacityProviderUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#CapacityProvider,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CapacityProviderUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.CapacityProviderUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClientExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ClientException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClientExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClientExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ClientExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterConfigurationMarshaller">
            <summary>
            ClusterConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterConfigurationMarshaller.Marshall(Amazon.ECS.Model.ClusterConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ClusterConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ClusterConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsContainerInstancesExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ClusterContainsContainerInstancesException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsContainerInstancesExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsContainerInstancesExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsContainerInstancesExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsServicesExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ClusterContainsServicesException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsServicesExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsServicesExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsServicesExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsTasksExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ClusterContainsTasksException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsTasksExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsTasksExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsTasksExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ClusterNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterServiceConnectDefaultsRequestMarshaller">
            <summary>
            ClusterServiceConnectDefaultsRequest Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterServiceConnectDefaultsRequestMarshaller.Marshall(Amazon.ECS.Model.ClusterServiceConnectDefaultsRequest,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterServiceConnectDefaultsRequestMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterServiceConnectDefaultsUnmarshaller">
            <summary>
            Response Unmarshaller for ClusterServiceConnectDefaults Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterServiceConnectDefaultsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ClusterServiceConnectDefaults,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterServiceConnectDefaultsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterServiceConnectDefaultsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterSettingMarshaller">
            <summary>
            ClusterSetting Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterSettingMarshaller.Marshall(Amazon.ECS.Model.ClusterSetting,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterSettingMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterSettingUnmarshaller">
            <summary>
            Response Unmarshaller for ClusterSetting Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterSettingUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ClusterSetting,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterSettingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterSettingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterUnmarshaller">
            <summary>
            Response Unmarshaller for Cluster Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Cluster,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDefinitionMarshaller">
            <summary>
            ContainerDefinition Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDefinitionMarshaller.Marshall(Amazon.ECS.Model.ContainerDefinition,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDefinitionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDefinitionUnmarshaller">
            <summary>
            Response Unmarshaller for ContainerDefinition Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDefinitionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ContainerDefinition,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDefinitionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDefinitionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDependencyMarshaller">
            <summary>
            ContainerDependency Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDependencyMarshaller.Marshall(Amazon.ECS.Model.ContainerDependency,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDependencyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDependencyUnmarshaller">
            <summary>
            Response Unmarshaller for ContainerDependency Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDependencyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ContainerDependency,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDependencyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDependencyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerImageUnmarshaller">
            <summary>
            Response Unmarshaller for ContainerImage Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerImageUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ContainerImage,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerImageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerImageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerInstanceHealthStatusUnmarshaller">
            <summary>
            Response Unmarshaller for ContainerInstanceHealthStatus Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerInstanceHealthStatusUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ContainerInstanceHealthStatus,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerInstanceHealthStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerInstanceHealthStatusUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerInstanceUnmarshaller">
            <summary>
            Response Unmarshaller for ContainerInstance Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerInstanceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ContainerInstance,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerInstanceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerInstanceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerOverrideMarshaller">
            <summary>
            ContainerOverride Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerOverrideMarshaller.Marshall(Amazon.ECS.Model.ContainerOverride,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerOverrideMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerOverrideUnmarshaller">
            <summary>
            Response Unmarshaller for ContainerOverride Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerOverrideUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ContainerOverride,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerOverrideUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerOverrideUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerRestartPolicyMarshaller">
            <summary>
            ContainerRestartPolicy Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerRestartPolicyMarshaller.Marshall(Amazon.ECS.Model.ContainerRestartPolicy,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerRestartPolicyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerRestartPolicyUnmarshaller">
            <summary>
            Response Unmarshaller for ContainerRestartPolicy Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerRestartPolicyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ContainerRestartPolicy,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerRestartPolicyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerRestartPolicyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerUnmarshaller">
            <summary>
            Response Unmarshaller for Container Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Container,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CreateCapacityProviderRequestMarshaller">
            <summary>
            CreateCapacityProvider Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateCapacityProviderRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateCapacityProviderRequestMarshaller.Marshall(Amazon.ECS.Model.CreateCapacityProviderRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.CreateCapacityProviderRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CreateCapacityProviderResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateCapacityProvider operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateCapacityProviderResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateCapacityProviderResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.CreateCapacityProviderResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller">
            <summary>
            CreateCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller.Marshall(Amazon.ECS.Model.CreateClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CreatedAtMarshaller">
            <summary>
            CreatedAt Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreatedAtMarshaller.Marshall(Amazon.ECS.Model.CreatedAt,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.CreatedAtMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceRequestMarshaller">
            <summary>
            CreateService Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceRequestMarshaller.Marshall(Amazon.ECS.Model.CreateServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateService operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CreateTaskSetRequestMarshaller">
            <summary>
            CreateTaskSet Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateTaskSetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateTaskSetRequestMarshaller.Marshall(Amazon.ECS.Model.CreateTaskSetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.CreateTaskSetRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CreateTaskSetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateTaskSet operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateTaskSetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateTaskSetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.CreateTaskSetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAccountSettingRequestMarshaller">
            <summary>
            DeleteAccountSetting Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAccountSettingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAccountSettingRequestMarshaller.Marshall(Amazon.ECS.Model.DeleteAccountSettingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAccountSettingRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAccountSettingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteAccountSetting operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAccountSettingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAccountSettingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAccountSettingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesRequestMarshaller">
            <summary>
            DeleteAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesRequestMarshaller.Marshall(Amazon.ECS.Model.DeleteAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteCapacityProviderRequestMarshaller">
            <summary>
            DeleteCapacityProvider Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteCapacityProviderRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteCapacityProviderRequestMarshaller.Marshall(Amazon.ECS.Model.DeleteCapacityProviderRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteCapacityProviderRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteCapacityProviderResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteCapacityProvider operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteCapacityProviderResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteCapacityProviderResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteCapacityProviderResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller">
            <summary>
            DeleteCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller.Marshall(Amazon.ECS.Model.DeleteClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceRequestMarshaller">
            <summary>
            DeleteService Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceRequestMarshaller.Marshall(Amazon.ECS.Model.DeleteServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteService operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskDefinitionsRequestMarshaller">
            <summary>
            DeleteTaskDefinitions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskDefinitionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskDefinitionsRequestMarshaller.Marshall(Amazon.ECS.Model.DeleteTaskDefinitionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskDefinitionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskDefinitionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteTaskDefinitions operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskDefinitionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskDefinitionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskDefinitionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskSetRequestMarshaller">
            <summary>
            DeleteTaskSet Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskSetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskSetRequestMarshaller.Marshall(Amazon.ECS.Model.DeleteTaskSetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskSetRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskSetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteTaskSet operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskSetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskSetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskSetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentAlarmsMarshaller">
            <summary>
            DeploymentAlarms Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentAlarmsMarshaller.Marshall(Amazon.ECS.Model.DeploymentAlarms,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentAlarmsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentAlarmsUnmarshaller">
            <summary>
            Response Unmarshaller for DeploymentAlarms Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentAlarmsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#DeploymentAlarms,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentAlarmsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentAlarmsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentCircuitBreakerMarshaller">
            <summary>
            DeploymentCircuitBreaker Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentCircuitBreakerMarshaller.Marshall(Amazon.ECS.Model.DeploymentCircuitBreaker,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentCircuitBreakerMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentCircuitBreakerUnmarshaller">
            <summary>
            Response Unmarshaller for DeploymentCircuitBreaker Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentCircuitBreakerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#DeploymentCircuitBreaker,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentCircuitBreakerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentCircuitBreakerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentConfigurationMarshaller">
            <summary>
            DeploymentConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentConfigurationMarshaller.Marshall(Amazon.ECS.Model.DeploymentConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for DeploymentConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#DeploymentConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentControllerMarshaller">
            <summary>
            DeploymentController Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentControllerMarshaller.Marshall(Amazon.ECS.Model.DeploymentController,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentControllerMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentControllerUnmarshaller">
            <summary>
            Response Unmarshaller for DeploymentController Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentControllerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#DeploymentController,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentControllerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentControllerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentEphemeralStorageUnmarshaller">
            <summary>
            Response Unmarshaller for DeploymentEphemeralStorage Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentEphemeralStorageUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#DeploymentEphemeralStorage,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentEphemeralStorageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentEphemeralStorageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentUnmarshaller">
            <summary>
            Response Unmarshaller for Deployment Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Deployment,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceRequestMarshaller">
            <summary>
            DeregisterContainerInstance Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceRequestMarshaller.Marshall(Amazon.ECS.Model.DeregisterContainerInstanceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeregisterContainerInstance operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionRequestMarshaller">
            <summary>
            DeregisterTaskDefinition Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionRequestMarshaller.Marshall(Amazon.ECS.Model.DeregisterTaskDefinitionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeregisterTaskDefinition operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeCapacityProvidersRequestMarshaller">
            <summary>
            DescribeCapacityProviders Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeCapacityProvidersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeCapacityProvidersRequestMarshaller.Marshall(Amazon.ECS.Model.DescribeCapacityProvidersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeCapacityProvidersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeCapacityProvidersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeCapacityProviders operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeCapacityProvidersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeCapacityProvidersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeCapacityProvidersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersRequestMarshaller">
            <summary>
            DescribeClusters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersRequestMarshaller.Marshall(Amazon.ECS.Model.DescribeClustersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeClusters operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesRequestMarshaller">
            <summary>
            DescribeContainerInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesRequestMarshaller.Marshall(Amazon.ECS.Model.DescribeContainerInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeContainerInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServiceDeploymentsRequestMarshaller">
            <summary>
            DescribeServiceDeployments Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServiceDeploymentsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServiceDeploymentsRequestMarshaller.Marshall(Amazon.ECS.Model.DescribeServiceDeploymentsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServiceDeploymentsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServiceDeploymentsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeServiceDeployments operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServiceDeploymentsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServiceDeploymentsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServiceDeploymentsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServiceRevisionsRequestMarshaller">
            <summary>
            DescribeServiceRevisions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServiceRevisionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServiceRevisionsRequestMarshaller.Marshall(Amazon.ECS.Model.DescribeServiceRevisionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServiceRevisionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServiceRevisionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeServiceRevisions operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServiceRevisionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServiceRevisionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServiceRevisionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesRequestMarshaller">
            <summary>
            DescribeServices Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesRequestMarshaller.Marshall(Amazon.ECS.Model.DescribeServicesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeServices operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionRequestMarshaller">
            <summary>
            DescribeTaskDefinition Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionRequestMarshaller.Marshall(Amazon.ECS.Model.DescribeTaskDefinitionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeTaskDefinition operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskSetsRequestMarshaller">
            <summary>
            DescribeTaskSets Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskSetsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskSetsRequestMarshaller.Marshall(Amazon.ECS.Model.DescribeTaskSetsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskSetsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskSetsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeTaskSets operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskSetsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskSetsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskSetsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksRequestMarshaller">
            <summary>
            DescribeTasks Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksRequestMarshaller.Marshall(Amazon.ECS.Model.DescribeTasksRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeTasks operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeviceMarshaller">
            <summary>
            Device Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeviceMarshaller.Marshall(Amazon.ECS.Model.Device,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.DeviceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeviceUnmarshaller">
            <summary>
            Response Unmarshaller for Device Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeviceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Device,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeviceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeviceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DockerVolumeConfigurationMarshaller">
            <summary>
            DockerVolumeConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DockerVolumeConfigurationMarshaller.Marshall(Amazon.ECS.Model.DockerVolumeConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.DockerVolumeConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DockerVolumeConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for DockerVolumeConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DockerVolumeConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#DockerVolumeConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DockerVolumeConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DockerVolumeConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.EBSTagSpecificationMarshaller">
            <summary>
            EBSTagSpecification Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EBSTagSpecificationMarshaller.Marshall(Amazon.ECS.Model.EBSTagSpecification,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.EBSTagSpecificationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.EBSTagSpecificationUnmarshaller">
            <summary>
            Response Unmarshaller for EBSTagSpecification Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EBSTagSpecificationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#EBSTagSpecification,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EBSTagSpecificationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.EBSTagSpecificationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.EFSAuthorizationConfigMarshaller">
            <summary>
            EFSAuthorizationConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EFSAuthorizationConfigMarshaller.Marshall(Amazon.ECS.Model.EFSAuthorizationConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.EFSAuthorizationConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.EFSAuthorizationConfigUnmarshaller">
            <summary>
            Response Unmarshaller for EFSAuthorizationConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EFSAuthorizationConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#EFSAuthorizationConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EFSAuthorizationConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.EFSAuthorizationConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.EFSVolumeConfigurationMarshaller">
            <summary>
            EFSVolumeConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EFSVolumeConfigurationMarshaller.Marshall(Amazon.ECS.Model.EFSVolumeConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.EFSVolumeConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.EFSVolumeConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for EFSVolumeConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EFSVolumeConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#EFSVolumeConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EFSVolumeConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.EFSVolumeConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.EnvironmentFileMarshaller">
            <summary>
            EnvironmentFile Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EnvironmentFileMarshaller.Marshall(Amazon.ECS.Model.EnvironmentFile,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.EnvironmentFileMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.EnvironmentFileUnmarshaller">
            <summary>
            Response Unmarshaller for EnvironmentFile Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EnvironmentFileUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#EnvironmentFile,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EnvironmentFileUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.EnvironmentFileUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.EphemeralStorageMarshaller">
            <summary>
            EphemeralStorage Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EphemeralStorageMarshaller.Marshall(Amazon.ECS.Model.EphemeralStorage,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.EphemeralStorageMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.EphemeralStorageUnmarshaller">
            <summary>
            Response Unmarshaller for EphemeralStorage Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EphemeralStorageUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#EphemeralStorage,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EphemeralStorageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.EphemeralStorageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandConfigurationMarshaller">
            <summary>
            ExecuteCommandConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandConfigurationMarshaller.Marshall(Amazon.ECS.Model.ExecuteCommandConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ExecuteCommandConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ExecuteCommandConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandLogConfigurationMarshaller">
            <summary>
            ExecuteCommandLogConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandLogConfigurationMarshaller.Marshall(Amazon.ECS.Model.ExecuteCommandLogConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandLogConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandLogConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ExecuteCommandLogConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandLogConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ExecuteCommandLogConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandLogConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandLogConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandRequestMarshaller">
            <summary>
            ExecuteCommand Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandRequestMarshaller.Marshall(Amazon.ECS.Model.ExecuteCommandRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ExecuteCommand operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.FailureUnmarshaller">
            <summary>
            Response Unmarshaller for Failure Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FailureUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Failure,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FailureUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.FailureUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.FirelensConfigurationMarshaller">
            <summary>
            FirelensConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FirelensConfigurationMarshaller.Marshall(Amazon.ECS.Model.FirelensConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.FirelensConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.FirelensConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for FirelensConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FirelensConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#FirelensConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FirelensConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.FirelensConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerAuthorizationConfigMarshaller">
            <summary>
            FSxWindowsFileServerAuthorizationConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerAuthorizationConfigMarshaller.Marshall(Amazon.ECS.Model.FSxWindowsFileServerAuthorizationConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerAuthorizationConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerAuthorizationConfigUnmarshaller">
            <summary>
            Response Unmarshaller for FSxWindowsFileServerAuthorizationConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerAuthorizationConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#FSxWindowsFileServerAuthorizationConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerAuthorizationConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerAuthorizationConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerVolumeConfigurationMarshaller">
            <summary>
            FSxWindowsFileServerVolumeConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerVolumeConfigurationMarshaller.Marshall(Amazon.ECS.Model.FSxWindowsFileServerVolumeConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerVolumeConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerVolumeConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for FSxWindowsFileServerVolumeConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerVolumeConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#FSxWindowsFileServerVolumeConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerVolumeConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerVolumeConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.GetTaskProtectionRequestMarshaller">
            <summary>
            GetTaskProtection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.GetTaskProtectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.GetTaskProtectionRequestMarshaller.Marshall(Amazon.ECS.Model.GetTaskProtectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.GetTaskProtectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.GetTaskProtectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetTaskProtection operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.GetTaskProtectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.GetTaskProtectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.GetTaskProtectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.HealthCheckMarshaller">
            <summary>
            HealthCheck Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HealthCheckMarshaller.Marshall(Amazon.ECS.Model.HealthCheck,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.HealthCheckMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.HealthCheckUnmarshaller">
            <summary>
            Response Unmarshaller for HealthCheck Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HealthCheckUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#HealthCheck,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HealthCheckUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.HealthCheckUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.HostEntryMarshaller">
            <summary>
            HostEntry Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HostEntryMarshaller.Marshall(Amazon.ECS.Model.HostEntry,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.HostEntryMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.HostEntryUnmarshaller">
            <summary>
            Response Unmarshaller for HostEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HostEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#HostEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HostEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.HostEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.HostVolumePropertiesMarshaller">
            <summary>
            HostVolumeProperties Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HostVolumePropertiesMarshaller.Marshall(Amazon.ECS.Model.HostVolumeProperties,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.HostVolumePropertiesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.HostVolumePropertiesUnmarshaller">
            <summary>
            Response Unmarshaller for HostVolumeProperties Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HostVolumePropertiesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#HostVolumeProperties,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HostVolumePropertiesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.HostVolumePropertiesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorMarshaller">
            <summary>
            InferenceAccelerator Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorMarshaller.Marshall(Amazon.ECS.Model.InferenceAccelerator,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorOverrideMarshaller">
            <summary>
            InferenceAcceleratorOverride Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorOverrideMarshaller.Marshall(Amazon.ECS.Model.InferenceAcceleratorOverride,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorOverrideMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorOverrideUnmarshaller">
            <summary>
            Response Unmarshaller for InferenceAcceleratorOverride Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorOverrideUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#InferenceAcceleratorOverride,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorOverrideUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorOverrideUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorUnmarshaller">
            <summary>
            Response Unmarshaller for InferenceAccelerator Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#InferenceAccelerator,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.InstanceHealthCheckResultUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceHealthCheckResult Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.InstanceHealthCheckResultUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#InstanceHealthCheckResult,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.InstanceHealthCheckResultUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.InstanceHealthCheckResultUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidParameterException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.KernelCapabilitiesMarshaller">
            <summary>
            KernelCapabilities Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.KernelCapabilitiesMarshaller.Marshall(Amazon.ECS.Model.KernelCapabilities,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.KernelCapabilitiesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.KernelCapabilitiesUnmarshaller">
            <summary>
            Response Unmarshaller for KernelCapabilities Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.KernelCapabilitiesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#KernelCapabilities,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.KernelCapabilitiesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.KernelCapabilitiesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.KeyValuePairMarshaller">
            <summary>
            KeyValuePair Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.KeyValuePairMarshaller.Marshall(Amazon.ECS.Model.KeyValuePair,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.KeyValuePairMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.KeyValuePairUnmarshaller">
            <summary>
            Response Unmarshaller for KeyValuePair Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.KeyValuePairUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#KeyValuePair,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.KeyValuePairUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.KeyValuePairUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.LinuxParametersMarshaller">
            <summary>
            LinuxParameters Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LinuxParametersMarshaller.Marshall(Amazon.ECS.Model.LinuxParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.LinuxParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.LinuxParametersUnmarshaller">
            <summary>
            Response Unmarshaller for LinuxParameters Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LinuxParametersUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#LinuxParameters,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LinuxParametersUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.LinuxParametersUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListAccountSettingsRequestMarshaller">
            <summary>
            ListAccountSettings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListAccountSettingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListAccountSettingsRequestMarshaller.Marshall(Amazon.ECS.Model.ListAccountSettingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListAccountSettingsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListAccountSettingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListAccountSettings operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListAccountSettingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListAccountSettingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListAccountSettingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesRequestMarshaller">
            <summary>
            ListAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesRequestMarshaller.Marshall(Amazon.ECS.Model.ListAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersRequestMarshaller">
            <summary>
            ListClusters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersRequestMarshaller.Marshall(Amazon.ECS.Model.ListClustersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListClusters operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesRequestMarshaller">
            <summary>
            ListContainerInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesRequestMarshaller.Marshall(Amazon.ECS.Model.ListContainerInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListContainerInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListServiceDeploymentsRequestMarshaller">
            <summary>
            ListServiceDeployments Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListServiceDeploymentsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListServiceDeploymentsRequestMarshaller.Marshall(Amazon.ECS.Model.ListServiceDeploymentsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListServiceDeploymentsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListServiceDeploymentsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListServiceDeployments operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListServiceDeploymentsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListServiceDeploymentsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListServiceDeploymentsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesByNamespaceRequestMarshaller">
            <summary>
            ListServicesByNamespace Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesByNamespaceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesByNamespaceRequestMarshaller.Marshall(Amazon.ECS.Model.ListServicesByNamespaceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesByNamespaceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesByNamespaceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListServicesByNamespace operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesByNamespaceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesByNamespaceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesByNamespaceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesRequestMarshaller">
            <summary>
            ListServices Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesRequestMarshaller.Marshall(Amazon.ECS.Model.ListServicesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListServices operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.ECS.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesRequestMarshaller">
            <summary>
            ListTaskDefinitionFamilies Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesRequestMarshaller.Marshall(Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTaskDefinitionFamilies operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsRequestMarshaller">
            <summary>
            ListTaskDefinitions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsRequestMarshaller.Marshall(Amazon.ECS.Model.ListTaskDefinitionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTaskDefinitions operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksRequestMarshaller">
            <summary>
            ListTasks Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksRequestMarshaller.Marshall(Amazon.ECS.Model.ListTasksRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTasks operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.LoadBalancerMarshaller">
            <summary>
            LoadBalancer Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LoadBalancerMarshaller.Marshall(Amazon.ECS.Model.LoadBalancer,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.LoadBalancerMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.LoadBalancerUnmarshaller">
            <summary>
            Response Unmarshaller for LoadBalancer Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LoadBalancerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#LoadBalancer,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LoadBalancerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.LoadBalancerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.LogConfigurationMarshaller">
            <summary>
            LogConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LogConfigurationMarshaller.Marshall(Amazon.ECS.Model.LogConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.LogConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.LogConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for LogConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LogConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#LogConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LogConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.LogConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedAgentUnmarshaller">
            <summary>
            Response Unmarshaller for ManagedAgent Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedAgentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ManagedAgent,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedAgentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedAgentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedScalingMarshaller">
            <summary>
            ManagedScaling Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedScalingMarshaller.Marshall(Amazon.ECS.Model.ManagedScaling,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedScalingMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedScalingUnmarshaller">
            <summary>
            Response Unmarshaller for ManagedScaling Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedScalingUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ManagedScaling,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedScalingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedScalingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedStorageConfigurationMarshaller">
            <summary>
            ManagedStorageConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedStorageConfigurationMarshaller.Marshall(Amazon.ECS.Model.ManagedStorageConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedStorageConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedStorageConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ManagedStorageConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedStorageConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ManagedStorageConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedStorageConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedStorageConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.MissingVersionExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for MissingVersionException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.MissingVersionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.MissingVersionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.MissingVersionExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.MountPointMarshaller">
            <summary>
            MountPoint Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.MountPointMarshaller.Marshall(Amazon.ECS.Model.MountPoint,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.MountPointMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.MountPointUnmarshaller">
            <summary>
            Response Unmarshaller for MountPoint Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.MountPointUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#MountPoint,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.MountPointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.MountPointUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.NamespaceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for NamespaceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.NamespaceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.NamespaceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.NamespaceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkBindingUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkBinding Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkBindingUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#NetworkBinding,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkBindingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkBindingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkConfigurationMarshaller">
            <summary>
            NetworkConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkConfigurationMarshaller.Marshall(Amazon.ECS.Model.NetworkConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#NetworkConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkInterface Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#NetworkInterface,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.NoUpdateAvailableExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for NoUpdateAvailableException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.NoUpdateAvailableExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.NoUpdateAvailableExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.NoUpdateAvailableExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementConstraintMarshaller">
            <summary>
            PlacementConstraint Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementConstraintMarshaller.Marshall(Amazon.ECS.Model.PlacementConstraint,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementConstraintMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementConstraintUnmarshaller">
            <summary>
            Response Unmarshaller for PlacementConstraint Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementConstraintUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#PlacementConstraint,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementConstraintUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementConstraintUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementStrategyMarshaller">
            <summary>
            PlacementStrategy Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementStrategyMarshaller.Marshall(Amazon.ECS.Model.PlacementStrategy,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementStrategyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementStrategyUnmarshaller">
            <summary>
            Response Unmarshaller for PlacementStrategy Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementStrategyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#PlacementStrategy,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementStrategyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementStrategyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PlatformTaskDefinitionIncompatibilityExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PlatformTaskDefinitionIncompatibilityException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlatformTaskDefinitionIncompatibilityExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlatformTaskDefinitionIncompatibilityExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PlatformTaskDefinitionIncompatibilityExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PlatformUnknownExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PlatformUnknownException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlatformUnknownExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlatformUnknownExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PlatformUnknownExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PortMappingMarshaller">
            <summary>
            PortMapping Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PortMappingMarshaller.Marshall(Amazon.ECS.Model.PortMapping,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.PortMappingMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PortMappingUnmarshaller">
            <summary>
            Response Unmarshaller for PortMapping Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PortMappingUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#PortMapping,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PortMappingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PortMappingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ProtectedTaskUnmarshaller">
            <summary>
            Response Unmarshaller for ProtectedTask Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ProtectedTaskUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ProtectedTask,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ProtectedTaskUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ProtectedTaskUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ProxyConfigurationMarshaller">
            <summary>
            ProxyConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ProxyConfigurationMarshaller.Marshall(Amazon.ECS.Model.ProxyConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ProxyConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ProxyConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ProxyConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ProxyConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ProxyConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ProxyConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ProxyConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingDefaultRequestMarshaller">
            <summary>
            PutAccountSettingDefault Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingDefaultRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingDefaultRequestMarshaller.Marshall(Amazon.ECS.Model.PutAccountSettingDefaultRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingDefaultRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingDefaultResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutAccountSettingDefault operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingDefaultResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingDefaultResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingDefaultResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingRequestMarshaller">
            <summary>
            PutAccountSetting Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingRequestMarshaller.Marshall(Amazon.ECS.Model.PutAccountSettingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutAccountSetting operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesRequestMarshaller">
            <summary>
            PutAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesRequestMarshaller.Marshall(Amazon.ECS.Model.PutAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PutClusterCapacityProvidersRequestMarshaller">
            <summary>
            PutClusterCapacityProviders Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutClusterCapacityProvidersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutClusterCapacityProvidersRequestMarshaller.Marshall(Amazon.ECS.Model.PutClusterCapacityProvidersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PutClusterCapacityProvidersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PutClusterCapacityProvidersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutClusterCapacityProviders operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutClusterCapacityProvidersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutClusterCapacityProvidersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PutClusterCapacityProvidersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionRequestMarshaller">
            <summary>
            RegisterTaskDefinition Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionRequestMarshaller.Marshall(Amazon.ECS.Model.RegisterTaskDefinitionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RegisterTaskDefinition operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.RepositoryCredentialsMarshaller">
            <summary>
            RepositoryCredentials Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RepositoryCredentialsMarshaller.Marshall(Amazon.ECS.Model.RepositoryCredentials,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.RepositoryCredentialsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.RepositoryCredentialsUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryCredentials Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RepositoryCredentialsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#RepositoryCredentials,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RepositoryCredentialsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.RepositoryCredentialsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceInUseException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceRequirementMarshaller">
            <summary>
            ResourceRequirement Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceRequirementMarshaller.Marshall(Amazon.ECS.Model.ResourceRequirement,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceRequirementMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceRequirementUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceRequirement Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceRequirementUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ResourceRequirement,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceRequirementUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceRequirementUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceUnmarshaller">
            <summary>
            Response Unmarshaller for Resource Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Resource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.RollbackUnmarshaller">
            <summary>
            Response Unmarshaller for Rollback Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RollbackUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Rollback,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RollbackUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.RollbackUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskRequestMarshaller">
            <summary>
            RunTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskRequestMarshaller.Marshall(Amazon.ECS.Model.RunTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RunTask operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.RuntimePlatformMarshaller">
            <summary>
            RuntimePlatform Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RuntimePlatformMarshaller.Marshall(Amazon.ECS.Model.RuntimePlatform,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.RuntimePlatformMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.RuntimePlatformUnmarshaller">
            <summary>
            Response Unmarshaller for RuntimePlatform Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RuntimePlatformUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#RuntimePlatform,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RuntimePlatformUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.RuntimePlatformUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ScaleMarshaller">
            <summary>
            Scale Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ScaleMarshaller.Marshall(Amazon.ECS.Model.Scale,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ScaleMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ScaleUnmarshaller">
            <summary>
            Response Unmarshaller for Scale Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ScaleUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Scale,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ScaleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ScaleUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.SecretMarshaller">
            <summary>
            Secret Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SecretMarshaller.Marshall(Amazon.ECS.Model.Secret,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.SecretMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.SecretUnmarshaller">
            <summary>
            Response Unmarshaller for Secret Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SecretUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Secret,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SecretUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.SecretUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectClientAliasMarshaller">
            <summary>
            ServiceConnectClientAlias Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectClientAliasMarshaller.Marshall(Amazon.ECS.Model.ServiceConnectClientAlias,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectClientAliasMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectClientAliasUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceConnectClientAlias Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectClientAliasUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ServiceConnectClientAlias,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectClientAliasUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectClientAliasUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectConfigurationMarshaller">
            <summary>
            ServiceConnectConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectConfigurationMarshaller.Marshall(Amazon.ECS.Model.ServiceConnectConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceConnectConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ServiceConnectConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectServiceMarshaller">
            <summary>
            ServiceConnectService Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectServiceMarshaller.Marshall(Amazon.ECS.Model.ServiceConnectService,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectServiceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectServiceResourceUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceConnectServiceResource Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectServiceResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ServiceConnectServiceResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectServiceResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectServiceResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectServiceUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceConnectService Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectServiceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ServiceConnectService,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectServiceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectServiceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectTlsCertificateAuthorityMarshaller">
            <summary>
            ServiceConnectTlsCertificateAuthority Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectTlsCertificateAuthorityMarshaller.Marshall(Amazon.ECS.Model.ServiceConnectTlsCertificateAuthority,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectTlsCertificateAuthorityMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectTlsCertificateAuthorityUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceConnectTlsCertificateAuthority Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectTlsCertificateAuthorityUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ServiceConnectTlsCertificateAuthority,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectTlsCertificateAuthorityUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectTlsCertificateAuthorityUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectTlsConfigurationMarshaller">
            <summary>
            ServiceConnectTlsConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectTlsConfigurationMarshaller.Marshall(Amazon.ECS.Model.ServiceConnectTlsConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectTlsConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectTlsConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceConnectTlsConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectTlsConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ServiceConnectTlsConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectTlsConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceConnectTlsConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceDeploymentAlarmsUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceDeploymentAlarms Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceDeploymentAlarmsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ServiceDeploymentAlarms,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceDeploymentAlarmsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceDeploymentAlarmsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceDeploymentBriefUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceDeploymentBrief Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceDeploymentBriefUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ServiceDeploymentBrief,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceDeploymentBriefUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceDeploymentBriefUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceDeploymentCircuitBreakerUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceDeploymentCircuitBreaker Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceDeploymentCircuitBreakerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ServiceDeploymentCircuitBreaker,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceDeploymentCircuitBreakerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceDeploymentCircuitBreakerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceDeploymentUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceDeployment Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceDeploymentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ServiceDeployment,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceDeploymentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceDeploymentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceEventUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceEvent Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceEventUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ServiceEvent,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceEventUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceEventUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceManagedEBSVolumeConfigurationMarshaller">
            <summary>
            ServiceManagedEBSVolumeConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceManagedEBSVolumeConfigurationMarshaller.Marshall(Amazon.ECS.Model.ServiceManagedEBSVolumeConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceManagedEBSVolumeConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceManagedEBSVolumeConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceManagedEBSVolumeConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceManagedEBSVolumeConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ServiceManagedEBSVolumeConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceManagedEBSVolumeConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceManagedEBSVolumeConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceNotActiveExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceNotActiveException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceNotActiveExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceNotActiveExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceNotActiveExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceRegistryMarshaller">
            <summary>
            ServiceRegistry Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceRegistryMarshaller.Marshall(Amazon.ECS.Model.ServiceRegistry,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceRegistryMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceRegistryUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceRegistry Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceRegistryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ServiceRegistry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceRegistryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceRegistryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceRevisionSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceRevisionSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceRevisionSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ServiceRevisionSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceRevisionSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceRevisionSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceRevisionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceRevision Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceRevisionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ServiceRevision,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceRevisionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceRevisionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceUnmarshaller">
            <summary>
            Response Unmarshaller for Service Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Service,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceVolumeConfigurationMarshaller">
            <summary>
            ServiceVolumeConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceVolumeConfigurationMarshaller.Marshall(Amazon.ECS.Model.ServiceVolumeConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceVolumeConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceVolumeConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceVolumeConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceVolumeConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ServiceVolumeConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceVolumeConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceVolumeConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.SessionUnmarshaller">
            <summary>
            Response Unmarshaller for Session Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SessionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Session,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SessionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.SessionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.SettingUnmarshaller">
            <summary>
            Response Unmarshaller for Setting Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SettingUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Setting,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SettingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.SettingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskRequestMarshaller">
            <summary>
            StartTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskRequestMarshaller.Marshall(Amazon.ECS.Model.StartTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartTask operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskRequestMarshaller">
            <summary>
            StopTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskRequestMarshaller.Marshall(Amazon.ECS.Model.StopTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopTask operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.SubmitAttachmentStateChangesRequestMarshaller">
            <summary>
            SubmitAttachmentStateChanges Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SubmitAttachmentStateChangesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SubmitAttachmentStateChangesRequestMarshaller.Marshall(Amazon.ECS.Model.SubmitAttachmentStateChangesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.SubmitAttachmentStateChangesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.SubmitAttachmentStateChangesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SubmitAttachmentStateChanges operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SubmitAttachmentStateChangesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SubmitAttachmentStateChangesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.SubmitAttachmentStateChangesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.SystemControlMarshaller">
            <summary>
            SystemControl Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SystemControlMarshaller.Marshall(Amazon.ECS.Model.SystemControl,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.SystemControlMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.SystemControlUnmarshaller">
            <summary>
            Response Unmarshaller for SystemControl Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SystemControlUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#SystemControl,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SystemControlUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.SystemControlUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.ECS.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.ECS.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TargetNotConnectedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TargetNotConnectedException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TargetNotConnectedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TargetNotConnectedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TargetNotConnectedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TargetNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TargetNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TargetNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TargetNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TargetNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionPlacementConstraintMarshaller">
            <summary>
            TaskDefinitionPlacementConstraint Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionPlacementConstraintMarshaller.Marshall(Amazon.ECS.Model.TaskDefinitionPlacementConstraint,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionPlacementConstraintMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionPlacementConstraintUnmarshaller">
            <summary>
            Response Unmarshaller for TaskDefinitionPlacementConstraint Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionPlacementConstraintUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#TaskDefinitionPlacementConstraint,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionPlacementConstraintUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionPlacementConstraintUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionUnmarshaller">
            <summary>
            Response Unmarshaller for TaskDefinition Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#TaskDefinition,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskEphemeralStorageUnmarshaller">
            <summary>
            Response Unmarshaller for TaskEphemeralStorage Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskEphemeralStorageUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#TaskEphemeralStorage,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskEphemeralStorageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TaskEphemeralStorageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskManagedEBSVolumeConfigurationMarshaller">
            <summary>
            TaskManagedEBSVolumeConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskManagedEBSVolumeConfigurationMarshaller.Marshall(Amazon.ECS.Model.TaskManagedEBSVolumeConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.TaskManagedEBSVolumeConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskManagedEBSVolumeTerminationPolicyMarshaller">
            <summary>
            TaskManagedEBSVolumeTerminationPolicy Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskManagedEBSVolumeTerminationPolicyMarshaller.Marshall(Amazon.ECS.Model.TaskManagedEBSVolumeTerminationPolicy,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.TaskManagedEBSVolumeTerminationPolicyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskOverrideMarshaller">
            <summary>
            TaskOverride Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskOverrideMarshaller.Marshall(Amazon.ECS.Model.TaskOverride,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.TaskOverrideMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskOverrideUnmarshaller">
            <summary>
            Response Unmarshaller for TaskOverride Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskOverrideUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#TaskOverride,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskOverrideUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TaskOverrideUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskSetNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TaskSetNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskSetNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskSetNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TaskSetNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskSetUnmarshaller">
            <summary>
            Response Unmarshaller for TaskSet Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskSetUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#TaskSet,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskSetUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TaskSetUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskUnmarshaller">
            <summary>
            Response Unmarshaller for Task Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Task,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TaskUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskVolumeConfigurationMarshaller">
            <summary>
            TaskVolumeConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskVolumeConfigurationMarshaller.Marshall(Amazon.ECS.Model.TaskVolumeConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.TaskVolumeConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TimeoutConfigurationMarshaller">
            <summary>
            TimeoutConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TimeoutConfigurationMarshaller.Marshall(Amazon.ECS.Model.TimeoutConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.TimeoutConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TimeoutConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for TimeoutConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TimeoutConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#TimeoutConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TimeoutConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TimeoutConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TmpfsMarshaller">
            <summary>
            Tmpfs Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TmpfsMarshaller.Marshall(Amazon.ECS.Model.Tmpfs,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.TmpfsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TmpfsUnmarshaller">
            <summary>
            Response Unmarshaller for Tmpfs Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TmpfsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Tmpfs,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TmpfsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TmpfsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UlimitMarshaller">
            <summary>
            Ulimit Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UlimitMarshaller.Marshall(Amazon.ECS.Model.Ulimit,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.UlimitMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UlimitUnmarshaller">
            <summary>
            Response Unmarshaller for Ulimit Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UlimitUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Ulimit,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UlimitUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UlimitUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UnsupportedFeatureExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UnsupportedFeatureException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UnsupportedFeatureExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UnsupportedFeatureExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UnsupportedFeatureExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.ECS.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateCapacityProviderRequestMarshaller">
            <summary>
            UpdateCapacityProvider Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateCapacityProviderRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateCapacityProviderRequestMarshaller.Marshall(Amazon.ECS.Model.UpdateCapacityProviderRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateCapacityProviderRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateCapacityProviderResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateCapacityProvider operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateCapacityProviderResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateCapacityProviderResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateCapacityProviderResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterRequestMarshaller">
            <summary>
            UpdateCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterRequestMarshaller.Marshall(Amazon.ECS.Model.UpdateClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterSettingsRequestMarshaller">
            <summary>
            UpdateClusterSettings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterSettingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterSettingsRequestMarshaller.Marshall(Amazon.ECS.Model.UpdateClusterSettingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterSettingsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterSettingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateClusterSettings operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterSettingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterSettingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterSettingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentRequestMarshaller">
            <summary>
            UpdateContainerAgent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentRequestMarshaller.Marshall(Amazon.ECS.Model.UpdateContainerAgentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateContainerAgent operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateRequestMarshaller">
            <summary>
            UpdateContainerInstancesState Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateRequestMarshaller.Marshall(Amazon.ECS.Model.UpdateContainerInstancesStateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateContainerInstancesState operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateInProgressExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateInProgressException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateInProgressExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateInProgressExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateInProgressExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServicePrimaryTaskSetRequestMarshaller">
            <summary>
            UpdateServicePrimaryTaskSet Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServicePrimaryTaskSetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServicePrimaryTaskSetRequestMarshaller.Marshall(Amazon.ECS.Model.UpdateServicePrimaryTaskSetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServicePrimaryTaskSetRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServicePrimaryTaskSetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateServicePrimaryTaskSet operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServicePrimaryTaskSetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServicePrimaryTaskSetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServicePrimaryTaskSetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceRequestMarshaller">
            <summary>
            UpdateService Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceRequestMarshaller.Marshall(Amazon.ECS.Model.UpdateServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateService operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskProtectionRequestMarshaller">
            <summary>
            UpdateTaskProtection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskProtectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskProtectionRequestMarshaller.Marshall(Amazon.ECS.Model.UpdateTaskProtectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskProtectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskProtectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateTaskProtection operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskProtectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskProtectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskProtectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskSetRequestMarshaller">
            <summary>
            UpdateTaskSet Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskSetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskSetRequestMarshaller.Marshall(Amazon.ECS.Model.UpdateTaskSetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskSetRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskSetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateTaskSet operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskSetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskSetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskSetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.VersionInfoUnmarshaller">
            <summary>
            Response Unmarshaller for VersionInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VersionInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#VersionInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VersionInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.VersionInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeFromMarshaller">
            <summary>
            VolumeFrom Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeFromMarshaller.Marshall(Amazon.ECS.Model.VolumeFrom,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeFromMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeFromUnmarshaller">
            <summary>
            Response Unmarshaller for VolumeFrom Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeFromUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#VolumeFrom,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeFromUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeFromUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeMarshaller">
            <summary>
            Volume Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeMarshaller.Marshall(Amazon.ECS.Model.Volume,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeUnmarshaller">
            <summary>
            Response Unmarshaller for Volume Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Volume,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.VpcLatticeConfigurationMarshaller">
            <summary>
            VpcLatticeConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VpcLatticeConfigurationMarshaller.Marshall(Amazon.ECS.Model.VpcLatticeConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.VpcLatticeConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.VpcLatticeConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for VpcLatticeConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VpcLatticeConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#VpcLatticeConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VpcLatticeConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.VpcLatticeConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.InvalidParameterException">
            <summary>
            The specified parameter isn't valid. Review the available parameters for the API request.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.InvalidParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.InvalidParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.InvalidParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.InvalidParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.InvalidParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.KernelCapabilities">
            <summary>
            The Linux capabilities to add or remove from the default Docker configuration for
            a container defined in the task definition. For more detailed information about these
            Linux capabilities, see the <a href="http://man7.org/linux/man-pages/man7/capabilities.7.html">capabilities(7)</a>
            Linux manual page.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.KernelCapabilities.Add">
            <summary>
            Gets and sets the property Add. 
            <para>
            The Linux capabilities for the container that have been added to the default configuration
            provided by Docker. This parameter maps to <c>CapAdd</c> in the docker container create
            command and the <c>--cap-add</c> option to docker run.
            </para>
             <note> 
            <para>
            Tasks launched on Fargate only support adding the <c>SYS_PTRACE</c> kernel capability.
            </para>
             </note> 
            <para>
            Valid values: <c>"ALL" | "AUDIT_CONTROL" | "AUDIT_WRITE" | "BLOCK_SUSPEND" | "CHOWN"
            | "DAC_OVERRIDE" | "DAC_READ_SEARCH" | "FOWNER" | "FSETID" | "IPC_LOCK" | "IPC_OWNER"
            | "KILL" | "LEASE" | "LINUX_IMMUTABLE" | "MAC_ADMIN" | "MAC_OVERRIDE" | "MKNOD" |
            "NET_ADMIN" | "NET_BIND_SERVICE" | "NET_BROADCAST" | "NET_RAW" | "SETFCAP" | "SETGID"
            | "SETPCAP" | "SETUID" | "SYS_ADMIN" | "SYS_BOOT" | "SYS_CHROOT" | "SYS_MODULE" |
            "SYS_NICE" | "SYS_PACCT" | "SYS_PTRACE" | "SYS_RAWIO" | "SYS_RESOURCE" | "SYS_TIME"
            | "SYS_TTY_CONFIG" | "SYSLOG" | "WAKE_ALARM"</c> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.KernelCapabilities.Drop">
            <summary>
            Gets and sets the property Drop. 
            <para>
            The Linux capabilities for the container that have been removed from the default configuration
            provided by Docker. This parameter maps to <c>CapDrop</c> in the docker container
            create command and the <c>--cap-drop</c> option to docker run.
            </para>
             
            <para>
            Valid values: <c>"ALL" | "AUDIT_CONTROL" | "AUDIT_WRITE" | "BLOCK_SUSPEND" | "CHOWN"
            | "DAC_OVERRIDE" | "DAC_READ_SEARCH" | "FOWNER" | "FSETID" | "IPC_LOCK" | "IPC_OWNER"
            | "KILL" | "LEASE" | "LINUX_IMMUTABLE" | "MAC_ADMIN" | "MAC_OVERRIDE" | "MKNOD" |
            "NET_ADMIN" | "NET_BIND_SERVICE" | "NET_BROADCAST" | "NET_RAW" | "SETFCAP" | "SETGID"
            | "SETPCAP" | "SETUID" | "SYS_ADMIN" | "SYS_BOOT" | "SYS_CHROOT" | "SYS_MODULE" |
            "SYS_NICE" | "SYS_PACCT" | "SYS_PTRACE" | "SYS_RAWIO" | "SYS_RESOURCE" | "SYS_TIME"
            | "SYS_TTY_CONFIG" | "SYSLOG" | "WAKE_ALARM"</c> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.KeyValuePair">
            <summary>
            A key-value pair object.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.KeyValuePair.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the key-value pair. For environment variables, this is the name of the
            environment variable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.KeyValuePair.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the key-value pair. For environment variables, this is the value of the
            environment variable.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.LimitExceededException">
            <summary>
            The limit for the resource was exceeded.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.LinuxParameters">
            <summary>
            The Linux-specific options that are applied to the container, such as Linux <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_KernelCapabilities.html">KernelCapabilities</a>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LinuxParameters.Capabilities">
            <summary>
            Gets and sets the property Capabilities. 
            <para>
            The Linux capabilities for the container that are added to or dropped from the default
            configuration provided by Docker.
            </para>
             <note> 
            <para>
            For tasks that use the Fargate launch type, <c>capabilities</c> is supported for all
            platform versions but the <c>add</c> parameter is only supported if using platform
            version 1.4.0 or later.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LinuxParameters.Devices">
            <summary>
            Gets and sets the property Devices. 
            <para>
            Any host devices to expose to the container. This parameter maps to <c>Devices</c>
            in the docker container create command and the <c>--device</c> option to docker run.
            </para>
             <note> 
            <para>
            If you're using tasks that use the Fargate launch type, the <c>devices</c> parameter
            isn't supported.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LinuxParameters.InitProcessEnabled">
            <summary>
            Gets and sets the property InitProcessEnabled. 
            <para>
            Run an <c>init</c> process inside the container that forwards signals and reaps processes.
            This parameter maps to the <c>--init</c> option to docker run. This parameter requires
            version 1.25 of the Docker Remote API or greater on your container instance. To check
            the Docker Remote API version on your container instance, log in to your container
            instance and run the following command: <c>sudo docker version --format '{{.Server.APIVersion}}'</c>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LinuxParameters.MaxSwap">
            <summary>
            Gets and sets the property MaxSwap. 
            <para>
            The total amount of swap memory (in MiB) a container can use. This parameter will
            be translated to the <c>--memory-swap</c> option to docker run where the value would
            be the sum of the container memory plus the <c>maxSwap</c> value.
            </para>
             
            <para>
            If a <c>maxSwap</c> value of <c>0</c> is specified, the container will not use swap.
            Accepted values are <c>0</c> or any positive integer. If the <c>maxSwap</c> parameter
            is omitted, the container will use the swap configuration for the container instance
            it is running on. A <c>maxSwap</c> value must be set for the <c>swappiness</c> parameter
            to be used.
            </para>
             <note> 
            <para>
            If you're using tasks that use the Fargate launch type, the <c>maxSwap</c> parameter
            isn't supported.
            </para>
             
            <para>
            If you're using tasks on Amazon Linux 2023 the <c>swappiness</c> parameter isn't supported.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LinuxParameters.SharedMemorySize">
            <summary>
            Gets and sets the property SharedMemorySize. 
            <para>
            The value for the size (in MiB) of the <c>/dev/shm</c> volume. This parameter maps
            to the <c>--shm-size</c> option to docker run.
            </para>
             <note> 
            <para>
            If you are using tasks that use the Fargate launch type, the <c>sharedMemorySize</c>
            parameter is not supported.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LinuxParameters.Swappiness">
            <summary>
            Gets and sets the property Swappiness. 
            <para>
            This allows you to tune a container's memory swappiness behavior. A <c>swappiness</c>
            value of <c>0</c> will cause swapping to not happen unless absolutely necessary. A
            <c>swappiness</c> value of <c>100</c> will cause pages to be swapped very aggressively.
            Accepted values are whole numbers between <c>0</c> and <c>100</c>. If the <c>swappiness</c>
            parameter is not specified, a default value of <c>60</c> is used. If a value is not
            specified for <c>maxSwap</c> then this parameter is ignored. This parameter maps to
            the <c>--memory-swappiness</c> option to docker run.
            </para>
             <note> 
            <para>
            If you're using tasks that use the Fargate launch type, the <c>swappiness</c> parameter
            isn't supported.
            </para>
             
            <para>
            If you're using tasks on Amazon Linux 2023 the <c>swappiness</c> parameter isn't supported.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LinuxParameters.Tmpfs">
            <summary>
            Gets and sets the property Tmpfs. 
            <para>
            The container path, mount options, and size (in MiB) of the tmpfs mount. This parameter
            maps to the <c>--tmpfs</c> option to docker run.
            </para>
             <note> 
            <para>
            If you're using tasks that use the Fargate launch type, the <c>tmpfs</c> parameter
            isn't supported.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListAccountSettingsRequest">
            <summary>
            Container for the parameters to the ListAccountSettings operation.
            Lists the account settings for a specified principal.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAccountSettingsRequest.EffectiveSettings">
            <summary>
            Gets and sets the property EffectiveSettings. 
            <para>
            Determines whether to return the effective settings. If <c>true</c>, the account settings
            for the root user or the default setting for the <c>principalArn</c> are returned.
            If <c>false</c>, the account settings for the <c>principalArn</c> are returned if
            they're set. Otherwise, no account settings are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAccountSettingsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of account setting results returned by <c>ListAccountSettings</c>
            in paginated output. When this parameter is used, <c>ListAccountSettings</c> only
            returns <c>maxResults</c> results in a single page along with a <c>nextToken</c> response
            element. The remaining results of the initial request can be seen by sending another
            <c>ListAccountSettings</c> request with the returned <c>nextToken</c> value. This
            value can be between 1 and 10. If this parameter isn't used, then <c>ListAccountSettings</c>
            returns up to 10 results and a <c>nextToken</c> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAccountSettingsRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the account setting you want to list the settings for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAccountSettingsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value returned from a <c>ListAccountSettings</c> request indicating
            that more results are available to fulfill the request and further calls will be needed.
            If <c>maxResults</c> was provided, it's possible the number of results to be fewer
            than <c>maxResults</c>.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAccountSettingsRequest.PrincipalArn">
            <summary>
            Gets and sets the property PrincipalArn. 
            <para>
            The ARN of the principal, which can be a user, role, or the root user. If this field
            is omitted, the account settings are listed only for the authenticated user.
            </para>
             <note> 
            <para>
            Federated users assume the account setting of the root user and can't have explicit
            account settings set for them.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAccountSettingsRequest.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the account settings to filter results with. You must also specify an
            account setting name to use this parameter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListAccountSettingsResponse">
            <summary>
            This is the response object from the ListAccountSettings operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAccountSettingsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value to include in a future <c>ListAccountSettings</c> request.
            When the results of a <c>ListAccountSettings</c> request exceed <c>maxResults</c>,
            this value can be used to retrieve the next page of results. This value is <c>null</c>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAccountSettingsResponse.Settings">
            <summary>
            Gets and sets the property Settings. 
            <para>
            The account settings for the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListAttributesRequest">
            <summary>
            Container for the parameters to the ListAttributes operation.
            Lists the attributes for Amazon ECS resources within a specified target type and cluster.
            When you specify a target type and cluster, <c>ListAttributes</c> returns a list of
            attribute objects, one for each attribute on each resource. You can filter the list
            of results to a single attribute name to only return results that have that name.
            You can also filter the results by attribute name and value. You can do this, for
            example, to see which container instances in a cluster are running a Linux AMI (<c>ecs.os-type=linux</c>).
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesRequest.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The name of the attribute to filter the results with. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesRequest.AttributeValue">
            <summary>
            Gets and sets the property AttributeValue. 
            <para>
            The value of the attribute to filter results with. You must also specify an attribute
            name to use this parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster to list attributes.
            If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of cluster results that <c>ListAttributes</c> returned in paginated
            output. When this parameter is used, <c>ListAttributes</c> only returns <c>maxResults</c>
            results in a single page along with a <c>nextToken</c> response element. The remaining
            results of the initial request can be seen by sending another <c>ListAttributes</c>
            request with the returned <c>nextToken</c> value. This value can be between 1 and
            100. If this parameter isn't used, then <c>ListAttributes</c> returns up to 100 results
            and a <c>nextToken</c> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value returned from a <c>ListAttributes</c> request indicating
            that more results are available to fulfill the request and further calls are needed.
            If <c>maxResults</c> was provided, it's possible the number of results to be fewer
            than <c>maxResults</c>.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesRequest.TargetType">
            <summary>
            Gets and sets the property TargetType. 
            <para>
            The type of the target to list attributes with.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListAttributesResponse">
            <summary>
            This is the response object from the ListAttributes operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesResponse.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A list of attribute objects that meet the criteria of the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value to include in a future <c>ListAttributes</c> request. When
            the results of a <c>ListAttributes</c> request exceed <c>maxResults</c>, this value
            can be used to retrieve the next page of results. This value is <c>null</c> when there
            are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListClustersRequest">
            <summary>
            Container for the parameters to the ListClusters operation.
            Returns a list of existing clusters.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListClustersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of cluster results that <c>ListClusters</c> returned in paginated
            output. When this parameter is used, <c>ListClusters</c> only returns <c>maxResults</c>
            results in a single page along with a <c>nextToken</c> response element. The remaining
            results of the initial request can be seen by sending another <c>ListClusters</c>
            request with the returned <c>nextToken</c> value. This value can be between 1 and
            100. If this parameter isn't used, then <c>ListClusters</c> returns up to 100 results
            and a <c>nextToken</c> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListClustersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value returned from a <c>ListClusters</c> request indicating
            that more results are available to fulfill the request and further calls are needed.
            If <c>maxResults</c> was provided, it's possible the number of results to be fewer
            than <c>maxResults</c>.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListClustersResponse">
            <summary>
            This is the response object from the ListClusters operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListClustersResponse.ClusterArns">
            <summary>
            Gets and sets the property ClusterArns. 
            <para>
            The list of full Amazon Resource Name (ARN) entries for each cluster that's associated
            with your account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListClustersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value to include in a future <c>ListClusters</c> request. When
            the results of a <c>ListClusters</c> request exceed <c>maxResults</c>, this value
            can be used to retrieve the next page of results. This value is <c>null</c> when there
            are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListContainerInstancesRequest">
            <summary>
            Container for the parameters to the ListContainerInstances operation.
            Returns a list of container instances in a specified cluster. You can filter the results
            of a <c>ListContainerInstances</c> operation with cluster query language statements
            inside the <c>filter</c> parameter. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
            Query Language</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container
            instances to list. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesRequest.Filter">
            <summary>
            Gets and sets the property Filter. 
            <para>
            You can filter the results of a <c>ListContainerInstances</c> operation with cluster
            query language statements. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
            Query Language</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of container instance results that <c>ListContainerInstances</c>
            returned in paginated output. When this parameter is used, <c>ListContainerInstances</c>
            only returns <c>maxResults</c> results in a single page along with a <c>nextToken</c>
            response element. The remaining results of the initial request can be seen by sending
            another <c>ListContainerInstances</c> request with the returned <c>nextToken</c> value.
            This value can be between 1 and 100. If this parameter isn't used, then <c>ListContainerInstances</c>
            returns up to 100 results and a <c>nextToken</c> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value returned from a <c>ListContainerInstances</c> request indicating
            that more results are available to fulfill the request and further calls are needed.
            If <c>maxResults</c> was provided, it's possible the number of results to be fewer
            than <c>maxResults</c>.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Filters the container instances by status. For example, if you specify the <c>DRAINING</c>
            status, the results include only container instances that have been set to <c>DRAINING</c>
            using <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateContainerInstancesState.html">UpdateContainerInstancesState</a>.
            If you don't specify this parameter, the default is to include container instances
            set to all states other than <c>INACTIVE</c>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListContainerInstancesResponse">
            <summary>
            This is the response object from the ListContainerInstances operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesResponse.ContainerInstanceArns">
            <summary>
            Gets and sets the property ContainerInstanceArns. 
            <para>
            The list of container instances with full ARN entries for each container instance
            associated with the specified cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value to include in a future <c>ListContainerInstances</c> request.
            When the results of a <c>ListContainerInstances</c> request exceed <c>maxResults</c>,
            this value can be used to retrieve the next page of results. This value is <c>null</c>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListServiceDeploymentsRequest">
            <summary>
            Container for the parameters to the ListServiceDeployments operation.
            This operation lists all the service deployments that meet the specified filter criteria.
            
             
            <para>
            A service deployment happens when you release a softwre update for the service. You
            route traffic from the running service revisions to the new service revison and control
            the number of running tasks. 
            </para>
             
            <para>
            This API returns the values that you use for the request parameters in <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeServiceRevisions.html">DescribeServiceRevisions</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServiceDeploymentsRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The cluster that hosts the service. This can either be the cluster name or ARN. Starting
            April 15, 2023, Amazon Web Services will not onboard new customers to Amazon Elastic
            Inference (EI), and will help current customers migrate their workloads to options
            that offer better price and performance. If you don't specify a cluster, <c>default</c>
            is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServiceDeploymentsRequest.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            An optional filter you can use to narrow the results by the service creation date.
            If you do not specify a value, the result includes all services created before the
            current time. The format is yyyy-MM-dd HH:mm:ss.SSSSSS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServiceDeploymentsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of service deployment results that <c>ListServiceDeployments</c>
            returned in paginated output. When this parameter is used, <c>ListServiceDeployments</c>
            only returns <c>maxResults</c> results in a single page along with a <c>nextToken</c>
            response element. The remaining results of the initial request can be seen by sending
            another <c>ListServiceDeployments</c> request with the returned <c>nextToken</c> value.
            This value can be between 1 and 100. If this parameter isn't used, then <c>ListServiceDeployments</c>
            returns up to 20 results and a <c>nextToken</c> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServiceDeploymentsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value returned from a <c>ListServiceDeployments</c> request indicating
            that more results are available to fulfill the request and further calls are needed.
            If you provided <c>maxResults</c>, it's possible the number of results is fewer than
            <c>maxResults</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServiceDeploymentsRequest.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The ARN or name of the service
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServiceDeploymentsRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            An optional filter you can use to narrow the results. If you do not specify a status,
            then all status values are included in the result.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListServiceDeploymentsResponse">
            <summary>
            This is the response object from the ListServiceDeployments operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServiceDeploymentsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value to include in a future <c>ListServiceDeployments</c> request.
            When the results of a <c>ListServiceDeployments</c> request exceed <c>maxResults</c>,
            this value can be used to retrieve the next page of results. This value is null when
            there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServiceDeploymentsResponse.ServiceDeployments">
            <summary>
            Gets and sets the property ServiceDeployments. 
            <para>
            An overview of the service deployment, including the following properties:
            </para>
             <ul> <li> 
            <para>
            The ARN of the service deployment.
            </para>
             </li> <li> 
            <para>
            The ARN of the service being deployed.
            </para>
             </li> <li> 
            <para>
            The ARN of the cluster that hosts the service in the service deployment.
            </para>
             </li> <li> 
            <para>
            The time that the service deployment started.
            </para>
             </li> <li> 
            <para>
            The time that the service deployment completed.
            </para>
             </li> <li> 
            <para>
            The service deployment status.
            </para>
             </li> <li> 
            <para>
            Information about why the service deployment is in the current state.
            </para>
             </li> <li> 
            <para>
            The ARN of the service revision that is being deployed.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListServicesByNamespaceRequest">
            <summary>
            Container for the parameters to the ListServicesByNamespace operation.
            This operation lists all of the services that are associated with a Cloud Map namespace.
            This list might include services in different clusters. In contrast, <c>ListServices</c>
            can only list services in one cluster at a time. If you need to filter the list of
            services in a single cluster by various parameters, use <c>ListServices</c>. For more
            information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html">Service
            Connect</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesByNamespaceRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of service results that <c>ListServicesByNamespace</c> returns
            in paginated output. When this parameter is used, <c>ListServicesByNamespace</c> only
            returns <c>maxResults</c> results in a single page along with a <c>nextToken</c> response
            element. The remaining results of the initial request can be seen by sending another
            <c>ListServicesByNamespace</c> request with the returned <c>nextToken</c> value. This
            value can be between 1 and 100. If this parameter isn't used, then <c>ListServicesByNamespace</c>
            returns up to 10 results and a <c>nextToken</c> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesByNamespaceRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace name or full Amazon Resource Name (ARN) of the Cloud Map namespace to
            list the services in.
            </para>
             
            <para>
            Tasks that run in a namespace can use short names to connect to services in the namespace.
            Tasks can connect to services across all of the clusters in the namespace. Tasks connect
            through a managed proxy container that collects logs and metrics for increased visibility.
            Only the tasks that Amazon ECS services create are supported with Service Connect.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html">Service
            Connect</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesByNamespaceRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value that's returned from a <c>ListServicesByNamespace</c> request.
            It indicates that more results are available to fulfill the request and further calls
            are needed. If <c>maxResults</c> is returned, it is possible the number of results
            is less than <c>maxResults</c>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListServicesByNamespaceResponse">
            <summary>
            This is the response object from the ListServicesByNamespace operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesByNamespaceResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value to include in a future <c>ListServicesByNamespace</c> request.
            When the results of a <c>ListServicesByNamespace</c> request exceed <c>maxResults</c>,
            this value can be used to retrieve the next page of results. When there are no more
            results to return, this value is <c>null</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesByNamespaceResponse.ServiceArns">
            <summary>
            Gets and sets the property ServiceArns. 
            <para>
            The list of full ARN entries for each service that's associated with the specified
            namespace.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListServicesRequest">
            <summary>
            Container for the parameters to the ListServices operation.
            Returns a list of services. You can filter the results by cluster, launch type, and
            scheduling strategy.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster to use when filtering
            the <c>ListServices</c> results. If you do not specify a cluster, the default cluster
            is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesRequest.LaunchType">
            <summary>
            Gets and sets the property LaunchType. 
            <para>
            The launch type to use when filtering the <c>ListServices</c> results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of service results that <c>ListServices</c> returned in paginated
            output. When this parameter is used, <c>ListServices</c> only returns <c>maxResults</c>
            results in a single page along with a <c>nextToken</c> response element. The remaining
            results of the initial request can be seen by sending another <c>ListServices</c>
            request with the returned <c>nextToken</c> value. This value can be between 1 and
            100. If this parameter isn't used, then <c>ListServices</c> returns up to 10 results
            and a <c>nextToken</c> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value returned from a <c>ListServices</c> request indicating
            that more results are available to fulfill the request and further calls will be needed.
            If <c>maxResults</c> was provided, it is possible the number of results to be fewer
            than <c>maxResults</c>.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesRequest.SchedulingStrategy">
            <summary>
            Gets and sets the property SchedulingStrategy. 
            <para>
            The scheduling strategy to use when filtering the <c>ListServices</c> results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListServicesResponse">
            <summary>
            This is the response object from the ListServices operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value to include in a future <c>ListServices</c> request. When
            the results of a <c>ListServices</c> request exceed <c>maxResults</c>, this value
            can be used to retrieve the next page of results. This value is <c>null</c> when there
            are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesResponse.ServiceArns">
            <summary>
            Gets and sets the property ServiceArns. 
            <para>
            The list of full ARN entries for each service that's associated with the specified
            cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            List the tags for an Amazon ECS resource.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) that identifies the resource to list the tags for.
            Currently, the supported resources are Amazon ECS tasks, services, task definitions,
            clusters, and container instances.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags for the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest">
            <summary>
            Container for the parameters to the ListTaskDefinitionFamilies operation.
            Returns a list of task definition families that are registered to your account. This
            list includes task definition families that no longer have any <c>ACTIVE</c> task
            definition revisions.
            
             
            <para>
            You can filter out task definition families that don't contain any <c>ACTIVE</c> task
            definition revisions by setting the <c>status</c> parameter to <c>ACTIVE</c>. You
            can also filter the results with the <c>familyPrefix</c> parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest.FamilyPrefix">
            <summary>
            Gets and sets the property FamilyPrefix. 
            <para>
            The <c>familyPrefix</c> is a string that's used to filter the results of <c>ListTaskDefinitionFamilies</c>.
            If you specify a <c>familyPrefix</c>, only task definition family names that begin
            with the <c>familyPrefix</c> string are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of task definition family results that <c>ListTaskDefinitionFamilies</c>
            returned in paginated output. When this parameter is used, <c>ListTaskDefinitions</c>
            only returns <c>maxResults</c> results in a single page along with a <c>nextToken</c>
            response element. The remaining results of the initial request can be seen by sending
            another <c>ListTaskDefinitionFamilies</c> request with the returned <c>nextToken</c>
            value. This value can be between 1 and 100. If this parameter isn't used, then <c>ListTaskDefinitionFamilies</c>
            returns up to 100 results and a <c>nextToken</c> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value returned from a <c>ListTaskDefinitionFamilies</c> request
            indicating that more results are available to fulfill the request and further calls
            will be needed. If <c>maxResults</c> was provided, it is possible the number of results
            to be fewer than <c>maxResults</c>.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The task definition family status to filter the <c>ListTaskDefinitionFamilies</c>
            results with. By default, both <c>ACTIVE</c> and <c>INACTIVE</c> task definition families
            are listed. If this parameter is set to <c>ACTIVE</c>, only task definition families
            that have an <c>ACTIVE</c> task definition revision are returned. If this parameter
            is set to <c>INACTIVE</c>, only task definition families that do not have any <c>ACTIVE</c>
            task definition revisions are returned. If you paginate the resulting output, be sure
            to keep the <c>status</c> value constant in each subsequent request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTaskDefinitionFamiliesResponse">
            <summary>
            This is the response object from the ListTaskDefinitionFamilies operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionFamiliesResponse.Families">
            <summary>
            Gets and sets the property Families. 
            <para>
            The list of task definition family names that match the <c>ListTaskDefinitionFamilies</c>
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionFamiliesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value to include in a future <c>ListTaskDefinitionFamilies</c>
            request. When the results of a <c>ListTaskDefinitionFamilies</c> request exceed <c>maxResults</c>,
            this value can be used to retrieve the next page of results. This value is <c>null</c>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTaskDefinitionsRequest">
            <summary>
            Container for the parameters to the ListTaskDefinitions operation.
            Returns a list of task definitions that are registered to your account. You can filter
            the results by family name with the <c>familyPrefix</c> parameter or by status with
            the <c>status</c> parameter.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsRequest.FamilyPrefix">
            <summary>
            Gets and sets the property FamilyPrefix. 
            <para>
            The full family name to filter the <c>ListTaskDefinitions</c> results with. Specifying
            a <c>familyPrefix</c> limits the listed task definitions to task definition revisions
            that belong to that family.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of task definition results that <c>ListTaskDefinitions</c> returned
            in paginated output. When this parameter is used, <c>ListTaskDefinitions</c> only
            returns <c>maxResults</c> results in a single page along with a <c>nextToken</c> response
            element. The remaining results of the initial request can be seen by sending another
            <c>ListTaskDefinitions</c> request with the returned <c>nextToken</c> value. This
            value can be between 1 and 100. If this parameter isn't used, then <c>ListTaskDefinitions</c>
            returns up to 100 results and a <c>nextToken</c> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value returned from a <c>ListTaskDefinitions</c> request indicating
            that more results are available to fulfill the request and further calls will be needed.
            If <c>maxResults</c> was provided, it is possible the number of results to be fewer
            than <c>maxResults</c>.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsRequest.Sort">
            <summary>
            Gets and sets the property Sort. 
            <para>
            The order to sort the results in. Valid values are <c>ASC</c> and <c>DESC</c>. By
            default, (<c>ASC</c>) task definitions are listed lexicographically by family name
            and in ascending numerical order by revision so that the newest task definitions in
            a family are listed last. Setting this parameter to <c>DESC</c> reverses the sort
            order on family name and revision. This is so that the newest task definitions in
            a family are listed first.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The task definition status to filter the <c>ListTaskDefinitions</c> results with.
            By default, only <c>ACTIVE</c> task definitions are listed. By setting this parameter
            to <c>INACTIVE</c>, you can view task definitions that are <c>INACTIVE</c> as long
            as an active task or service still references them. If you paginate the resulting
            output, be sure to keep the <c>status</c> value constant in each subsequent request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTaskDefinitionsResponse">
            <summary>
            This is the response object from the ListTaskDefinitions operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value to include in a future <c>ListTaskDefinitions</c> request.
            When the results of a <c>ListTaskDefinitions</c> request exceed <c>maxResults</c>,
            this value can be used to retrieve the next page of results. This value is <c>null</c>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsResponse.TaskDefinitionArns">
            <summary>
            Gets and sets the property TaskDefinitionArns. 
            <para>
            The list of task definition Amazon Resource Name (ARN) entries for the <c>ListTaskDefinitions</c>
            request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTasksRequest">
            <summary>
            Container for the parameters to the ListTasks operation.
            Returns a list of tasks. You can filter the results by cluster, task definition family,
            container instance, launch type, what IAM principal started the task, or by the desired
            status of the task.
            
             
            <para>
            Recently stopped tasks might appear in the returned results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster to use when filtering
            the <c>ListTasks</c> results. If you do not specify a cluster, the default cluster
            is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.ContainerInstance">
            <summary>
            Gets and sets the property ContainerInstance. 
            <para>
            The container instance ID or full ARN of the container instance to use when filtering
            the <c>ListTasks</c> results. Specifying a <c>containerInstance</c> limits the results
            to tasks that belong to that container instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.DesiredStatus">
            <summary>
            Gets and sets the property DesiredStatus. 
            <para>
            The task desired status to use when filtering the <c>ListTasks</c> results. Specifying
            a <c>desiredStatus</c> of <c>STOPPED</c> limits the results to tasks that Amazon ECS
            has set the desired status to <c>STOPPED</c>. This can be useful for debugging tasks
            that aren't starting properly or have died or finished. The default status filter
            is <c>RUNNING</c>, which shows tasks that Amazon ECS has set the desired status to
            <c>RUNNING</c>.
            </para>
             <note> 
            <para>
            Although you can filter results based on a desired status of <c>PENDING</c>, this
            doesn't return any results. Amazon ECS never sets the desired status of a task to
            that value (only a task's <c>lastStatus</c> may have a value of <c>PENDING</c>).
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.Family">
            <summary>
            Gets and sets the property Family. 
            <para>
            The name of the task definition family to use when filtering the <c>ListTasks</c>
            results. Specifying a <c>family</c> limits the results to tasks that belong to that
            family.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.LaunchType">
            <summary>
            Gets and sets the property LaunchType. 
            <para>
            The launch type to use when filtering the <c>ListTasks</c> results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of task results that <c>ListTasks</c> returned in paginated output.
            When this parameter is used, <c>ListTasks</c> only returns <c>maxResults</c> results
            in a single page along with a <c>nextToken</c> response element. The remaining results
            of the initial request can be seen by sending another <c>ListTasks</c> request with
            the returned <c>nextToken</c> value. This value can be between 1 and 100. If this
            parameter isn't used, then <c>ListTasks</c> returns up to 100 results and a <c>nextToken</c>
            value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value returned from a <c>ListTasks</c> request indicating that
            more results are available to fulfill the request and further calls will be needed.
            If <c>maxResults</c> was provided, it's possible the number of results to be fewer
            than <c>maxResults</c>.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.ServiceName">
            <summary>
            Gets and sets the property ServiceName. 
            <para>
            The name of the service to use when filtering the <c>ListTasks</c> results. Specifying
            a <c>serviceName</c> limits the results to tasks that belong to that service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.StartedBy">
            <summary>
            Gets and sets the property StartedBy. 
            <para>
            The <c>startedBy</c> value to filter the task results with. Specifying a <c>startedBy</c>
            value limits the results to tasks that were started with that value.
            </para>
             
            <para>
            When you specify <c>startedBy</c> as the filter, it must be the only filter that you
            use.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTasksResponse">
            <summary>
            This is the response object from the ListTasks operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value to include in a future <c>ListTasks</c> request. When the
            results of a <c>ListTasks</c> request exceed <c>maxResults</c>, this value can be
            used to retrieve the next page of results. This value is <c>null</c> when there are
            no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksResponse.TaskArns">
            <summary>
            Gets and sets the property TaskArns. 
            <para>
            The list of task ARN entries for the <c>ListTasks</c> request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.LoadBalancer">
            <summary>
            The load balancer configuration to use with a service or task set.
            
             
            <para>
            When you add, update, or remove a load balancer configuration, Amazon ECS starts a
            new deployment with the updated Elastic Load Balancing configuration. This causes
            tasks to register to and deregister from load balancers.
            </para>
             
            <para>
            We recommend that you verify this on a test environment before you update the Elastic
            Load Balancing configuration. 
            </para>
             
            <para>
            A service-linked role is required for services that use multiple target groups. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using-service-linked-roles.html">Using
            service-linked roles</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LoadBalancer.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container (as it appears in a container definition) to associate with
            the load balancer.
            </para>
             
            <para>
            You need to specify the container name when configuring the target group for an Amazon
            ECS load balancer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LoadBalancer.ContainerPort">
            <summary>
            Gets and sets the property ContainerPort. 
            <para>
            The port on the container to associate with the load balancer. This port must correspond
            to a <c>containerPort</c> in the task definition the tasks in the service are using.
            For tasks that use the EC2 launch type, the container instance they're launched on
            must allow ingress traffic on the <c>hostPort</c> of the port mapping.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LoadBalancer.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
            The name of the load balancer to associate with the Amazon ECS service or task set.
            </para>
             
            <para>
            If you are using an Application Load Balancer or a Network Load Balancer the load
            balancer name parameter should be omitted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LoadBalancer.TargetGroupArn">
            <summary>
            Gets and sets the property TargetGroupArn. 
            <para>
            The full Amazon Resource Name (ARN) of the Elastic Load Balancing target group or
            groups associated with a service or task set.
            </para>
             
            <para>
            A target group ARN is only specified when using an Application Load Balancer or Network
            Load Balancer. 
            </para>
             
            <para>
            For services using the <c>ECS</c> deployment controller, you can specify one or multiple
            target groups. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/register-multiple-targetgroups.html">Registering
            multiple target groups with a service</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
             
            <para>
            For services using the <c>CODE_DEPLOY</c> deployment controller, you're required to
            define two target groups for the load balancer. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-bluegreen.html">Blue/green
            deployment with CodeDeploy</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             <important> 
            <para>
            If your service's task definition uses the <c>awsvpc</c> network mode, you must choose
            <c>ip</c> as the target type, not <c>instance</c>. Do this when creating your target
            groups because tasks that use the <c>awsvpc</c> network mode are associated with an
            elastic network interface, not an Amazon EC2 instance. This network mode is required
            for the Fargate launch type.
            </para>
             </important>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.LogConfiguration">
            <summary>
            The log configuration for the container. This parameter maps to <c>LogConfig</c> in
            the docker container create command and the <c>--log-driver</c> option to docker run.
            
             
            <para>
            By default, containers use the same logging driver that the Docker daemon uses. However,
            the container might use a different logging driver than the Docker daemon by specifying
            a log driver configuration in the container definition.
            </para>
             
            <para>
            Understand the following when specifying a log configuration for your containers.
            </para>
             <ul> <li> 
            <para>
            Amazon ECS currently supports a subset of the logging drivers available to the Docker
            daemon. Additional log drivers may be available in future releases of the Amazon ECS
            container agent.
            </para>
             
            <para>
            For tasks on Fargate, the supported log drivers are <c>awslogs</c>, <c>splunk</c>,
            and <c>awsfirelens</c>.
            </para>
             
            <para>
            For tasks hosted on Amazon EC2 instances, the supported log drivers are <c>awslogs</c>,
            <c>fluentd</c>, <c>gelf</c>, <c>json-file</c>, <c>journald</c>,<c>syslog</c>, <c>splunk</c>,
            and <c>awsfirelens</c>.
            </para>
             </li> <li> 
            <para>
            This parameter requires version 1.18 of the Docker Remote API or greater on your container
            instance.
            </para>
             </li> <li> 
            <para>
            For tasks that are hosted on Amazon EC2 instances, the Amazon ECS container agent
            must register the available logging drivers with the <c>ECS_AVAILABLE_LOGGING_DRIVERS</c>
            environment variable before containers placed on that instance can use these log configuration
            options. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS container agent configuration</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </li> <li> 
            <para>
            For tasks that are on Fargate, because you don't have access to the underlying infrastructure
            your tasks are hosted on, any additional software needed must be installed outside
            of the task. For example, the Fluentd output aggregators or a remote host running
            Logstash to send Gelf logs to.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LogConfiguration.LogDriver">
            <summary>
            Gets and sets the property LogDriver. 
            <para>
            The log driver to use for the container.
            </para>
             
            <para>
            For tasks on Fargate, the supported log drivers are <c>awslogs</c>, <c>splunk</c>,
            and <c>awsfirelens</c>.
            </para>
             
            <para>
            For tasks hosted on Amazon EC2 instances, the supported log drivers are <c>awslogs</c>,
            <c>fluentd</c>, <c>gelf</c>, <c>json-file</c>, <c>journald</c>, <c>syslog</c>, <c>splunk</c>,
            and <c>awsfirelens</c>.
            </para>
             
            <para>
            For more information about using the <c>awslogs</c> log driver, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_awslogs.html">Send
            Amazon ECS logs to CloudWatch</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             
            <para>
            For more information about using the <c>awsfirelens</c> log driver, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html">Send
            Amazon ECS logs to an Amazon Web Services service or Amazon Web Services Partner</a>.
            </para>
             <note> 
            <para>
            If you have a custom driver that isn't listed, you can fork the Amazon ECS container
            agent project that's <a href="https://github.com/aws/amazon-ecs-agent">available on
            GitHub</a> and customize it to work with that driver. We encourage you to submit pull
            requests for changes that you would like to have included. However, we don't currently
            provide support for running modified copies of this software.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LogConfiguration.Options">
            <summary>
            Gets and sets the property Options. 
            <para>
            The configuration options to send to the log driver.
            </para>
             
            <para>
            The options you can specify depend on the log driver. Some of the options you can
            specify when you use the <c>awslogs</c> log driver to route logs to Amazon CloudWatch
            include the following:
            </para>
             <dl> <dt>awslogs-create-group</dt> <dd> 
            <para>
            Required: No
            </para>
             
            <para>
            Specify whether you want the log group to be created automatically. If this option
            isn't specified, it defaults to <c>false</c>.
            </para>
             <note> 
            <para>
            Your IAM policy must include the <c>logs:CreateLogGroup</c> permission before you
            attempt to use <c>awslogs-create-group</c>.
            </para>
             </note> </dd> <dt>awslogs-region</dt> <dd> 
            <para>
            Required: Yes
            </para>
             
            <para>
            Specify the Amazon Web Services Region that the <c>awslogs</c> log driver is to send
            your Docker logs to. You can choose to send all of your logs from clusters in different
            Regions to a single region in CloudWatch Logs. This is so that they're all visible
            in one location. Otherwise, you can separate them by Region for more granularity.
            Make sure that the specified log group exists in the Region that you specify with
            this option.
            </para>
             </dd> <dt>awslogs-group</dt> <dd> 
            <para>
            Required: Yes
            </para>
             
            <para>
            Make sure to specify a log group that the <c>awslogs</c> log driver sends its log
            streams to.
            </para>
             </dd> <dt>awslogs-stream-prefix</dt> <dd> 
            <para>
            Required: Yes, when using the Fargate launch type.Optional for the EC2 launch type,
            required for the Fargate launch type.
            </para>
             
            <para>
            Use the <c>awslogs-stream-prefix</c> option to associate a log stream with the specified
            prefix, the container name, and the ID of the Amazon ECS task that the container belongs
            to. If you specify a prefix with this option, then the log stream takes the format
            <c>prefix-name/container-name/ecs-task-id</c>.
            </para>
             
            <para>
            If you don't specify a prefix with this option, then the log stream is named after
            the container ID that's assigned by the Docker daemon on the container instance. Because
            it's difficult to trace logs back to the container that sent them with just the Docker
            container ID (which is only available on the container instance), we recommend that
            you specify a prefix with this option.
            </para>
             
            <para>
            For Amazon ECS services, you can use the service name as the prefix. Doing so, you
            can trace log streams to the service that the container belongs to, the name of the
            container that sent them, and the ID of the task that the container belongs to.
            </para>
             
            <para>
            You must specify a stream-prefix for your logs to have your logs appear in the Log
            pane when using the Amazon ECS console.
            </para>
             </dd> <dt>awslogs-datetime-format</dt> <dd> 
            <para>
            Required: No
            </para>
             
            <para>
            This option defines a multiline start pattern in Python <c>strftime</c> format. A
            log message consists of a line that matches the pattern and any following lines that
            don’t match the pattern. The matched line is the delimiter between log messages.
            </para>
             
            <para>
            One example of a use case for using this format is for parsing output such as a stack
            dump, which might otherwise be logged in multiple entries. The correct pattern allows
            it to be captured in a single entry.
            </para>
             
            <para>
            For more information, see <a href="https://docs.docker.com/config/containers/logging/awslogs/#awslogs-datetime-format">awslogs-datetime-format</a>.
            </para>
             
            <para>
            You cannot configure both the <c>awslogs-datetime-format</c> and <c>awslogs-multiline-pattern</c>
            options.
            </para>
             <note> 
            <para>
            Multiline logging performs regular expression parsing and matching of all log messages.
            This might have a negative impact on logging performance.
            </para>
             </note> </dd> <dt>awslogs-multiline-pattern</dt> <dd> 
            <para>
            Required: No
            </para>
             
            <para>
            This option defines a multiline start pattern that uses a regular expression. A log
            message consists of a line that matches the pattern and any following lines that don’t
            match the pattern. The matched line is the delimiter between log messages.
            </para>
             
            <para>
            For more information, see <a href="https://docs.docker.com/config/containers/logging/awslogs/#awslogs-multiline-pattern">awslogs-multiline-pattern</a>.
            </para>
             
            <para>
            This option is ignored if <c>awslogs-datetime-format</c> is also configured.
            </para>
             
            <para>
            You cannot configure both the <c>awslogs-datetime-format</c> and <c>awslogs-multiline-pattern</c>
            options.
            </para>
             <note> 
            <para>
            Multiline logging performs regular expression parsing and matching of all log messages.
            This might have a negative impact on logging performance.
            </para>
             </note> </dd> <dt>mode</dt> <dd> 
            <para>
            Required: No
            </para>
             
            <para>
            Valid values: <c>non-blocking</c> | <c>blocking</c> 
            </para>
             
            <para>
            This option defines the delivery mode of log messages from the container to CloudWatch
            Logs. The delivery mode you choose affects application availability when the flow
            of logs from container to CloudWatch is interrupted.
            </para>
             
            <para>
            If you use the <c>blocking</c> mode and the flow of logs to CloudWatch is interrupted,
            calls from container code to write to the <c>stdout</c> and <c>stderr</c> streams
            will block. The logging thread of the application will block as a result. This may
            cause the application to become unresponsive and lead to container healthcheck failure.
            
            </para>
             
            <para>
            If you use the <c>non-blocking</c> mode, the container's logs are instead stored in
            an in-memory intermediate buffer configured with the <c>max-buffer-size</c> option.
            This prevents the application from becoming unresponsive when logs cannot be sent
            to CloudWatch. We recommend using this mode if you want to ensure service availability
            and are okay with some log loss. For more information, see <a href="http://aws.amazon.com/blogs/containers/preventing-log-loss-with-non-blocking-mode-in-the-awslogs-container-log-driver/">Preventing
            log loss with non-blocking mode in the <c>awslogs</c> container log driver</a>.
            </para>
             </dd> <dt>max-buffer-size</dt> <dd> 
            <para>
            Required: No
            </para>
             
            <para>
            Default value: <c>1m</c> 
            </para>
             
            <para>
            When <c>non-blocking</c> mode is used, the <c>max-buffer-size</c> log option controls
            the size of the buffer that's used for intermediate message storage. Make sure to
            specify an adequate buffer size based on your application. When the buffer fills up,
            further logs cannot be stored. Logs that cannot be stored are lost. 
            </para>
             </dd> </dl> 
            <para>
            To route logs using the <c>splunk</c> log router, you need to specify a <c>splunk-token</c>
            and a <c>splunk-url</c>.
            </para>
             
            <para>
            When you use the <c>awsfirelens</c> log router to route logs to an Amazon Web Services
            Service or Amazon Web Services Partner Network destination for log storage and analytics,
            you can set the <c>log-driver-buffer-limit</c> option to limit the number of events
            that are buffered in memory, before being sent to the log router container. It can
            help to resolve potential log loss issue because high throughput might result in memory
            running out for the buffer inside of Docker.
            </para>
             
            <para>
            Other options you can specify when using <c>awsfirelens</c> to route logs depend on
            the destination. When you export logs to Amazon Data Firehose, you can specify the
            Amazon Web Services Region with <c>region</c> and a name for the log stream with <c>delivery_stream</c>.
            </para>
             
            <para>
            When you export logs to Amazon Kinesis Data Streams, you can specify an Amazon Web
            Services Region with <c>region</c> and a data stream name with <c>stream</c>.
            </para>
             
            <para>
             When you export logs to Amazon OpenSearch Service, you can specify options like <c>Name</c>,
            <c>Host</c> (OpenSearch Service endpoint without protocol), <c>Port</c>, <c>Index</c>,
            <c>Type</c>, <c>Aws_auth</c>, <c>Aws_region</c>, <c>Suppress_Type_Name</c>, and <c>tls</c>.
            For more information, see <a href="http://aws.amazon.com/blogs/containers/under-the-hood-firelens-for-amazon-ecs-tasks/">Under
            the hood: FireLens for Amazon ECS Tasks</a>.
            </para>
             
            <para>
            When you export logs to Amazon S3, you can specify the bucket using the <c>bucket</c>
            option. You can also specify <c>region</c>, <c>total_file_size</c>, <c>upload_timeout</c>,
            and <c>use_put_object</c> as options.
            </para>
             
            <para>
            This parameter requires version 1.19 of the Docker Remote API or greater on your container
            instance. To check the Docker Remote API version on your container instance, log in
            to your container instance and run the following command: <c>sudo docker version --format
            '{{.Server.APIVersion}}'</c> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LogConfiguration.SecretOptions">
            <summary>
            Gets and sets the property SecretOptions. 
            <para>
            The secrets to pass to the log configuration. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html">Specifying
            sensitive data</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ManagedAgent">
            <summary>
            Details about the managed agent status for the container.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ManagedAgent.LastStartedAt">
            <summary>
            Gets and sets the property LastStartedAt. 
            <para>
            The Unix timestamp for the time when the managed agent was last started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ManagedAgent.LastStatus">
            <summary>
            Gets and sets the property LastStatus. 
            <para>
            The last known status of the managed agent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ManagedAgent.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the managed agent. When the execute command feature is turned on, the
            managed agent name is <c>ExecuteCommandAgent</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ManagedAgent.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            The reason for why the managed agent is in the state it is in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ManagedScaling">
            <summary>
            The managed scaling settings for the Auto Scaling group capacity provider.
            
             
            <para>
            When managed scaling is turned on, Amazon ECS manages the scale-in and scale-out actions
            of the Auto Scaling group. Amazon ECS manages a target tracking scaling policy using
            an Amazon ECS managed CloudWatch metric with the specified <c>targetCapacity</c> value
            as the target value for the metric. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/asg-capacity-providers.html#asg-capacity-providers-managed-scaling">Using
            managed scaling</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            If managed scaling is off, the user must manage the scaling of the Auto Scaling group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ManagedScaling.InstanceWarmupPeriod">
            <summary>
            Gets and sets the property InstanceWarmupPeriod. 
            <para>
            The period of time, in seconds, after a newly launched Amazon EC2 instance can contribute
            to CloudWatch metrics for Auto Scaling group. If this parameter is omitted, the default
            value of <c>300</c> seconds is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ManagedScaling.MaximumScalingStepSize">
            <summary>
            Gets and sets the property MaximumScalingStepSize. 
            <para>
            The maximum number of Amazon EC2 instances that Amazon ECS will scale out at one time.
            If this parameter is omitted, the default value of <c>10000</c> is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ManagedScaling.MinimumScalingStepSize">
            <summary>
            Gets and sets the property MinimumScalingStepSize. 
            <para>
            The minimum number of Amazon EC2 instances that Amazon ECS will scale out at one time.
            The scale in process is not affected by this parameter If this parameter is omitted,
            the default value of <c>1</c> is used.
            </para>
             
            <para>
            When additional capacity is required, Amazon ECS will scale up the minimum scaling
            step size even if the actual demand is less than the minimum scaling step size.
            </para>
             
            <para>
            If you use a capacity provider with an Auto Scaling group configured with more than
            one Amazon EC2 instance type or Availability Zone, Amazon ECS will scale up by the
            exact minimum scaling step size value and will ignore both the maximum scaling step
            size as well as the capacity demand.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ManagedScaling.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Determines whether to use managed scaling for the capacity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ManagedScaling.TargetCapacity">
            <summary>
            Gets and sets the property TargetCapacity. 
            <para>
            The target capacity utilization as a percentage for the capacity provider. The specified
            value must be greater than <c>0</c> and less than or equal to <c>100</c>. For example,
            if you want the capacity provider to maintain 10% spare capacity, then that means
            the utilization is 90%, so use a <c>targetCapacity</c> of <c>90</c>. The default value
            of <c>100</c> percent results in the Amazon EC2 instances in your Auto Scaling group
            being completely used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ManagedStorageConfiguration">
            <summary>
            The managed storage configuration for the cluster.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ManagedStorageConfiguration.FargateEphemeralStorageKmsKeyId">
            <summary>
            Gets and sets the property FargateEphemeralStorageKmsKeyId. 
            <para>
            Specify the Key Management Service key ID for the Fargate ephemeral storage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ManagedStorageConfiguration.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            Specify a Key Management Service key ID to encrypt the managed storage.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.MissingVersionException">
            <summary>
            Amazon ECS can't determine the current version of the Amazon ECS container agent on
            the container instance and doesn't have enough information to proceed with an update.
            This could be because the agent running on the container instance is a previous or
            custom version that doesn't use our version information.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.MissingVersionException.#ctor(System.String)">
            <summary>
            Constructs a new MissingVersionException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.MissingVersionException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MissingVersionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.MissingVersionException.#ctor(System.Exception)">
            <summary>
            Construct instance of MissingVersionException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.MissingVersionException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MissingVersionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.MissingVersionException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MissingVersionException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.MountPoint">
            <summary>
            The details for a volume mount point that's used in a container definition.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.MountPoint.ContainerPath">
            <summary>
            Gets and sets the property ContainerPath. 
            <para>
            The path on the container to mount the host volume at.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.MountPoint.ReadOnly">
            <summary>
            Gets and sets the property ReadOnly. 
            <para>
            If this value is <c>true</c>, the container has read-only access to the volume. If
            this value is <c>false</c>, then the container can write to the volume. The default
            value is <c>false</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.MountPoint.SourceVolume">
            <summary>
            Gets and sets the property SourceVolume. 
            <para>
            The name of the volume to mount. Must be a volume name referenced in the <c>name</c>
            parameter of task definition <c>volume</c>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.NamespaceNotFoundException">
            <summary>
            The specified namespace wasn't found.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.NamespaceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new NamespaceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.NamespaceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NamespaceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.NamespaceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of NamespaceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.NamespaceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NamespaceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.NamespaceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NamespaceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.NetworkBinding">
            <summary>
            Details on the network bindings between a container and its host container instance.
            After a task reaches the <c>RUNNING</c> status, manual and automatic host and container
            port assignments are visible in the <c>networkBindings</c> section of <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTasks.html">DescribeTasks</a>
            API responses.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.NetworkBinding.BindIP">
            <summary>
            Gets and sets the property BindIP. 
            <para>
            The IP address that the container is bound to on the container instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.NetworkBinding.ContainerPort">
            <summary>
            Gets and sets the property ContainerPort. 
            <para>
            The port number on the container that's used with the network binding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.NetworkBinding.ContainerPortRange">
            <summary>
            Gets and sets the property ContainerPortRange. 
            <para>
            The port number range on the container that's bound to the dynamically mapped host
            port range.
            </para>
             
            <para>
            The following rules apply when you specify a <c>containerPortRange</c>:
            </para>
             <ul> <li> 
            <para>
            You must use either the <c>bridge</c> network mode or the <c>awsvpc</c> network mode.
            </para>
             </li> <li> 
            <para>
            This parameter is available for both the EC2 and Fargate launch types.
            </para>
             </li> <li> 
            <para>
            This parameter is available for both the Linux and Windows operating systems.
            </para>
             </li> <li> 
            <para>
            The container instance must have at least version 1.67.0 of the container agent and
            at least version 1.67.0-1 of the <c>ecs-init</c> package 
            </para>
             </li> <li> 
            <para>
            You can specify a maximum of 100 port ranges per container.
            </para>
             </li> <li> 
            <para>
            You do not specify a <c>hostPortRange</c>. The value of the <c>hostPortRange</c> is
            set as follows:
            </para>
             <ul> <li> 
            <para>
            For containers in a task with the <c>awsvpc</c> network mode, the <c>hostPortRange</c>
            is set to the same value as the <c>containerPortRange</c>. This is a static mapping
            strategy.
            </para>
             </li> <li> 
            <para>
            For containers in a task with the <c>bridge</c> network mode, the Amazon ECS agent
            finds open host ports from the default ephemeral range and passes it to docker to
            bind them to the container ports.
            </para>
             </li> </ul> </li> <li> 
            <para>
            The <c>containerPortRange</c> valid values are between 1 and 65535.
            </para>
             </li> <li> 
            <para>
            A port can only be included in one port mapping per container.
            </para>
             </li> <li> 
            <para>
            You cannot specify overlapping port ranges.
            </para>
             </li> <li> 
            <para>
            The first port in the range must be less than last port in the range.
            </para>
             </li> <li> 
            <para>
            Docker recommends that you turn off the docker-proxy in the Docker daemon config file
            when you have a large number of ports.
            </para>
             
            <para>
            For more information, see <a href="https://github.com/moby/moby/issues/11185"> Issue
            #11185</a> on the Github website.
            </para>
             
            <para>
            For information about how to turn off the docker-proxy in the Docker daemon config
            file, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/bootstrap_container_instance.html#bootstrap_docker_daemon">Docker
            daemon</a> in the <i>Amazon ECS Developer Guide</i>.
            </para>
             </li> </ul> 
            <para>
            You can call <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTasks.html">
            <c>DescribeTasks</c> </a> to view the <c>hostPortRange</c> which are the host ports
            that are bound to the container ports.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.NetworkBinding.HostPort">
            <summary>
            Gets and sets the property HostPort. 
            <para>
            The port number on the host that's used with the network binding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.NetworkBinding.HostPortRange">
            <summary>
            Gets and sets the property HostPortRange. 
            <para>
            The port number range on the host that's used with the network binding. This is assigned
            is assigned by Docker and delivered by the Amazon ECS agent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.NetworkBinding.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
            The protocol used for the network binding.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.NetworkConfiguration">
            <summary>
            The network configuration for a task or service.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.NetworkConfiguration.AwsvpcConfiguration">
            <summary>
            Gets and sets the property AwsvpcConfiguration. 
            <para>
            The VPC subnets and security groups that are associated with a task.
            </para>
             <note> 
            <para>
            All specified subnets and security groups must be from the same VPC.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.NetworkInterface">
            <summary>
            An object representing the elastic network interface for tasks that use the <c>awsvpc</c>
            network mode.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.NetworkInterface.AttachmentId">
            <summary>
            Gets and sets the property AttachmentId. 
            <para>
            The attachment ID for the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.NetworkInterface.Ipv6Address">
            <summary>
            Gets and sets the property Ipv6Address. 
            <para>
            The private IPv6 address for the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.NetworkInterface.PrivateIpv4Address">
            <summary>
            Gets and sets the property PrivateIpv4Address. 
            <para>
            The private IPv4 address for the network interface.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.NoUpdateAvailableException">
            <summary>
            There's no update available for this Amazon ECS container agent. This might be because
            the agent is already running the latest version or because it's so old that there's
            no update path to the current version.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.NoUpdateAvailableException.#ctor(System.String)">
            <summary>
            Constructs a new NoUpdateAvailableException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.NoUpdateAvailableException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NoUpdateAvailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.NoUpdateAvailableException.#ctor(System.Exception)">
            <summary>
            Construct instance of NoUpdateAvailableException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.NoUpdateAvailableException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NoUpdateAvailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.NoUpdateAvailableException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NoUpdateAvailableException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.PlacementConstraint">
            <summary>
            An object representing a constraint on task placement. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html">Task
            placement constraints</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            
             <note> 
            <para>
            If you're using the Fargate launch type, task placement constraints aren't supported.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PlacementConstraint.Expression">
            <summary>
            Gets and sets the property Expression. 
            <para>
            A cluster query language expression to apply to the constraint. The expression can
            have a maximum length of 2000 characters. You can't specify an expression if the constraint
            type is <c>distinctInstance</c>. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
            query language</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PlacementConstraint.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of constraint. Use <c>distinctInstance</c> to ensure that each task in a
            particular group is running on a different container instance. Use <c>memberOf</c>
            to restrict the selection to a group of valid candidates.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PlacementStrategy">
            <summary>
            The task placement strategy for a task or service. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html">Task
            placement strategies</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PlacementStrategy.Field">
            <summary>
            Gets and sets the property Field. 
            <para>
            The field to apply the placement strategy against. For the <c>spread</c> placement
            strategy, valid values are <c>instanceId</c> (or <c>host</c>, which has the same effect),
            or any platform or custom attribute that's applied to a container instance, such as
            <c>attribute:ecs.availability-zone</c>. For the <c>binpack</c> placement strategy,
            valid values are <c>cpu</c> and <c>memory</c>. For the <c>random</c> placement strategy,
            this field is not used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PlacementStrategy.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of placement strategy. The <c>random</c> placement strategy randomly places
            tasks on available candidates. The <c>spread</c> placement strategy spreads placement
            across available candidates evenly based on the <c>field</c> parameter. The <c>binpack</c>
            strategy places tasks on available candidates that have the least available amount
            of the resource that's specified with the <c>field</c> parameter. For example, if
            you binpack on memory, a task is placed on the instance with the least amount of remaining
            memory but still enough to run the task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            <summary>
            The specified platform version doesn't satisfy the required capabilities of the task
            definition.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException.#ctor(System.String)">
            <summary>
            Constructs a new PlatformTaskDefinitionIncompatibilityException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PlatformTaskDefinitionIncompatibilityException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException.#ctor(System.Exception)">
            <summary>
            Construct instance of PlatformTaskDefinitionIncompatibilityException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PlatformTaskDefinitionIncompatibilityException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PlatformTaskDefinitionIncompatibilityException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.PlatformUnknownException">
            <summary>
            The specified platform version doesn't exist.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformUnknownException.#ctor(System.String)">
            <summary>
            Constructs a new PlatformUnknownException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformUnknownException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PlatformUnknownException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformUnknownException.#ctor(System.Exception)">
            <summary>
            Construct instance of PlatformUnknownException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformUnknownException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PlatformUnknownException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformUnknownException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PlatformUnknownException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.PortMapping">
            <summary>
            Port mappings allow containers to access ports on the host container instance to send
            or receive traffic. Port mappings are specified as part of the container definition.
            
             
            <para>
            If you use containers in a task with the <c>awsvpc</c> or <c>host</c> network mode,
            specify the exposed ports using <c>containerPort</c>. The <c>hostPort</c> can be left
            blank or it must be the same value as the <c>containerPort</c>.
            </para>
             
            <para>
            Most fields of this parameter (<c>containerPort</c>, <c>hostPort</c>, <c>protocol</c>)
            maps to <c>PortBindings</c> in the docker container create command and the <c>--publish</c>
            option to <c>docker run</c>. If the network mode of a task definition is set to <c>host</c>,
            host ports must either be undefined or match the container port in the port mapping.
            </para>
             <note> 
            <para>
            You can't expose the same container port for multiple protocols. If you attempt this,
            an error is returned.
            </para>
             </note> 
            <para>
            After a task reaches the <c>RUNNING</c> status, manual and automatic host and container
            port assignments are visible in the <c>networkBindings</c> section of <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTasks.html">DescribeTasks</a>
            API responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PortMapping.AppProtocol">
            <summary>
            Gets and sets the property AppProtocol. 
            <para>
            The application protocol that's used for the port mapping. This parameter only applies
            to Service Connect. We recommend that you set this parameter to be consistent with
            the protocol that your application uses. If you set this parameter, Amazon ECS adds
            protocol-specific connection handling to the Service Connect proxy. If you set this
            parameter, Amazon ECS adds protocol-specific telemetry in the Amazon ECS console and
            CloudWatch.
            </para>
             
            <para>
            If you don't set a value for this parameter, then TCP is used. However, Amazon ECS
            doesn't add protocol-specific telemetry for TCP.
            </para>
             
            <para>
             <c>appProtocol</c> is immutable in a Service Connect service. Updating this field
            requires a service deletion and redeployment.
            </para>
             
            <para>
            Tasks that run in a namespace can use short names to connect to services in the namespace.
            Tasks can connect to services across all of the clusters in the namespace. Tasks connect
            through a managed proxy container that collects logs and metrics for increased visibility.
            Only the tasks that Amazon ECS services create are supported with Service Connect.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html">Service
            Connect</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PortMapping.ContainerPort">
            <summary>
            Gets and sets the property ContainerPort. 
            <para>
            The port number on the container that's bound to the user-specified or automatically
            assigned host port.
            </para>
             
            <para>
            If you use containers in a task with the <c>awsvpc</c> or <c>host</c> network mode,
            specify the exposed ports using <c>containerPort</c>.
            </para>
             
            <para>
            If you use containers in a task with the <c>bridge</c> network mode and you specify
            a container port and not a host port, your container automatically receives a host
            port in the ephemeral port range. For more information, see <c>hostPort</c>. Port
            mappings that are automatically assigned in this way do not count toward the 100 reserved
            ports limit of a container instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PortMapping.ContainerPortRange">
            <summary>
            Gets and sets the property ContainerPortRange. 
            <para>
            The port number range on the container that's bound to the dynamically mapped host
            port range. 
            </para>
             
            <para>
            The following rules apply when you specify a <c>containerPortRange</c>:
            </para>
             <ul> <li> 
            <para>
            You must use either the <c>bridge</c> network mode or the <c>awsvpc</c> network mode.
            </para>
             </li> <li> 
            <para>
            This parameter is available for both the EC2 and Fargate launch types.
            </para>
             </li> <li> 
            <para>
            This parameter is available for both the Linux and Windows operating systems.
            </para>
             </li> <li> 
            <para>
            The container instance must have at least version 1.67.0 of the container agent and
            at least version 1.67.0-1 of the <c>ecs-init</c> package 
            </para>
             </li> <li> 
            <para>
            You can specify a maximum of 100 port ranges per container.
            </para>
             </li> <li> 
            <para>
            You do not specify a <c>hostPortRange</c>. The value of the <c>hostPortRange</c> is
            set as follows:
            </para>
             <ul> <li> 
            <para>
            For containers in a task with the <c>awsvpc</c> network mode, the <c>hostPortRange</c>
            is set to the same value as the <c>containerPortRange</c>. This is a static mapping
            strategy.
            </para>
             </li> <li> 
            <para>
            For containers in a task with the <c>bridge</c> network mode, the Amazon ECS agent
            finds open host ports from the default ephemeral range and passes it to docker to
            bind them to the container ports.
            </para>
             </li> </ul> </li> <li> 
            <para>
            The <c>containerPortRange</c> valid values are between 1 and 65535.
            </para>
             </li> <li> 
            <para>
            A port can only be included in one port mapping per container.
            </para>
             </li> <li> 
            <para>
            You cannot specify overlapping port ranges.
            </para>
             </li> <li> 
            <para>
            The first port in the range must be less than last port in the range.
            </para>
             </li> <li> 
            <para>
            Docker recommends that you turn off the docker-proxy in the Docker daemon config file
            when you have a large number of ports.
            </para>
             
            <para>
            For more information, see <a href="https://github.com/moby/moby/issues/11185"> Issue
            #11185</a> on the Github website.
            </para>
             
            <para>
            For information about how to turn off the docker-proxy in the Docker daemon config
            file, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/bootstrap_container_instance.html#bootstrap_docker_daemon">Docker
            daemon</a> in the <i>Amazon ECS Developer Guide</i>.
            </para>
             </li> </ul> 
            <para>
            You can call <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTasks.html">
            <c>DescribeTasks</c> </a> to view the <c>hostPortRange</c> which are the host ports
            that are bound to the container ports.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PortMapping.HostPort">
            <summary>
            Gets and sets the property HostPort. 
            <para>
            The port number on the container instance to reserve for your container.
            </para>
             
            <para>
            If you specify a <c>containerPortRange</c>, leave this field empty and the value of
            the <c>hostPort</c> is set as follows:
            </para>
             <ul> <li> 
            <para>
            For containers in a task with the <c>awsvpc</c> network mode, the <c>hostPort</c>
            is set to the same value as the <c>containerPort</c>. This is a static mapping strategy.
            </para>
             </li> <li> 
            <para>
            For containers in a task with the <c>bridge</c> network mode, the Amazon ECS agent
            finds open ports on the host and automatically binds them to the container ports.
            This is a dynamic mapping strategy.
            </para>
             </li> </ul> 
            <para>
            If you use containers in a task with the <c>awsvpc</c> or <c>host</c> network mode,
            the <c>hostPort</c> can either be left blank or set to the same value as the <c>containerPort</c>.
            </para>
             
            <para>
            If you use containers in a task with the <c>bridge</c> network mode, you can specify
            a non-reserved host port for your container port mapping, or you can omit the <c>hostPort</c>
            (or set it to <c>0</c>) while specifying a <c>containerPort</c> and your container
            automatically receives a port in the ephemeral port range for your container instance
            operating system and Docker version.
            </para>
             
            <para>
            The default ephemeral port range for Docker version 1.6.0 and later is listed on the
            instance under <c>/proc/sys/net/ipv4/ip_local_port_range</c>. If this kernel parameter
            is unavailable, the default ephemeral port range from 49153 through 65535 (Linux)
            or 49152 through 65535 (Windows) is used. Do not attempt to specify a host port in
            the ephemeral port range as these are reserved for automatic assignment. In general,
            ports below 32768 are outside of the ephemeral port range.
            </para>
             
            <para>
            The default reserved ports are 22 for SSH, the Docker ports 2375 and 2376, and the
            Amazon ECS container agent ports 51678-51680. Any host port that was previously specified
            in a running task is also reserved while the task is running. That is, after a task
            stops, the host port is released. The current reserved ports are displayed in the
            <c>remainingResources</c> of <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeContainerInstances.html">DescribeContainerInstances</a>
            output. A container instance can have up to 100 reserved ports at a time. This number
            includes the default reserved ports. Automatically assigned ports aren't included
            in the 100 reserved ports quota.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PortMapping.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name that's used for the port mapping. This parameter is the name that you use
            in the <c>serviceConnectConfiguration</c> and the <c>vpcLatticeConfigurations</c>
            of a service. The name can include up to 64 characters. The characters can include
            lowercase letters, numbers, underscores (_), and hyphens (-). The name can't start
            with a hyphen.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PortMapping.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
            The protocol used for the port mapping. Valid values are <c>tcp</c> and <c>udp</c>.
            The default is <c>tcp</c>. <c>protocol</c> is immutable in a Service Connect service.
            Updating this field requires a service deletion and redeployment. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ProtectedTask">
            <summary>
            An object representing the protection status details for a task. You can set the protection
            status with the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateTaskProtection.html">UpdateTaskProtection</a>
            API and get the status of tasks with the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_GetTaskProtection.html">GetTaskProtection</a>
            API.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ProtectedTask.ExpirationDate">
            <summary>
            Gets and sets the property ExpirationDate. 
            <para>
            The epoch time when protection for the task will expire.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ProtectedTask.ProtectionEnabled">
            <summary>
            Gets and sets the property ProtectionEnabled. 
            <para>
            The protection status of the task. If scale-in protection is on for a task, the value
            is <c>true</c>. Otherwise, it is <c>false</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ProtectedTask.TaskArn">
            <summary>
            Gets and sets the property TaskArn. 
            <para>
            The task ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ProxyConfiguration">
            <summary>
            The configuration details for the App Mesh proxy.
            
             
            <para>
            For tasks that use the EC2 launch type, the container instances require at least version
            1.26.0 of the container agent and at least version 1.26.0-1 of the <c>ecs-init</c>
            package to use a proxy configuration. If your container instances are launched from
            the Amazon ECS optimized AMI version <c>20190301</c> or later, then they contain the
            required versions of the container agent and <c>ecs-init</c>. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html">Amazon
            ECS-optimized Linux AMI</a> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ProxyConfiguration.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container that will serve as the App Mesh proxy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ProxyConfiguration.Properties">
            <summary>
            Gets and sets the property Properties. 
            <para>
            The set of network configuration parameters to provide the Container Network Interface
            (CNI) plugin, specified as key-value pairs.
            </para>
             <ul> <li> 
            <para>
             <c>IgnoredUID</c> - (Required) The user ID (UID) of the proxy container as defined
            by the <c>user</c> parameter in a container definition. This is used to ensure the
            proxy ignores its own traffic. If <c>IgnoredGID</c> is specified, this field can be
            empty.
            </para>
             </li> <li> 
            <para>
             <c>IgnoredGID</c> - (Required) The group ID (GID) of the proxy container as defined
            by the <c>user</c> parameter in a container definition. This is used to ensure the
            proxy ignores its own traffic. If <c>IgnoredUID</c> is specified, this field can be
            empty.
            </para>
             </li> <li> 
            <para>
             <c>AppPorts</c> - (Required) The list of ports that the application uses. Network
            traffic to these ports is forwarded to the <c>ProxyIngressPort</c> and <c>ProxyEgressPort</c>.
            </para>
             </li> <li> 
            <para>
             <c>ProxyIngressPort</c> - (Required) Specifies the port that incoming traffic to
            the <c>AppPorts</c> is directed to.
            </para>
             </li> <li> 
            <para>
             <c>ProxyEgressPort</c> - (Required) Specifies the port that outgoing traffic from
            the <c>AppPorts</c> is directed to.
            </para>
             </li> <li> 
            <para>
             <c>EgressIgnoredPorts</c> - (Required) The egress traffic going to the specified
            ports is ignored and not redirected to the <c>ProxyEgressPort</c>. It can be an empty
            list.
            </para>
             </li> <li> 
            <para>
             <c>EgressIgnoredIPs</c> - (Required) The egress traffic going to the specified IP
            addresses is ignored and not redirected to the <c>ProxyEgressPort</c>. It can be an
            empty list.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ProxyConfiguration.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The proxy type. The only supported value is <c>APPMESH</c>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PutAccountSettingDefaultRequest">
            <summary>
            Container for the parameters to the PutAccountSettingDefault operation.
            Modifies an account setting for all users on an account for whom no individual account
            setting has been specified. Account settings are set on a per-Region basis.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAccountSettingDefaultRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The resource name for which to modify the account setting.
            </para>
             
            <para>
            The following are the valid values for the account setting name.
            </para>
             <ul> <li> 
            <para>
             <c>serviceLongArnFormat</c> - When modified, the Amazon Resource Name (ARN) and resource
            ID format of the resource type for a specified user, role, or the root user for an
            account is affected. The opt-in and opt-out account setting must be set for each Amazon
            ECS resource separately. The ARN and resource ID format of a resource is defined by
            the opt-in status of the user or role that created the resource. You must turn on
            this setting to use Amazon ECS features such as resource tagging.
            </para>
             </li> <li> 
            <para>
             <c>taskLongArnFormat</c> - When modified, the Amazon Resource Name (ARN) and resource
            ID format of the resource type for a specified user, role, or the root user for an
            account is affected. The opt-in and opt-out account setting must be set for each Amazon
            ECS resource separately. The ARN and resource ID format of a resource is defined by
            the opt-in status of the user or role that created the resource. You must turn on
            this setting to use Amazon ECS features such as resource tagging.
            </para>
             </li> <li> 
            <para>
             <c>containerInstanceLongArnFormat</c> - When modified, the Amazon Resource Name (ARN)
            and resource ID format of the resource type for a specified user, role, or the root
            user for an account is affected. The opt-in and opt-out account setting must be set
            for each Amazon ECS resource separately. The ARN and resource ID format of a resource
            is defined by the opt-in status of the user or role that created the resource. You
            must turn on this setting to use Amazon ECS features such as resource tagging.
            </para>
             </li> <li> 
            <para>
             <c>awsvpcTrunking</c> - When modified, the elastic network interface (ENI) limit
            for any new container instances that support the feature is changed. If <c>awsvpcTrunking</c>
            is turned on, any new container instances that support the feature are launched have
            the increased ENI limits available to them. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container-instance-eni.html">Elastic
            Network Interface Trunking</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </li> <li> 
            <para>
             <c>containerInsights</c> - Container Insights with enhanced observability provides
            all the Container Insights metrics, plus additional task and container metrics. This
            version supports enhanced observability for Amazon ECS clusters using the Amazon EC2
            and Fargate launch types. After you configure Container Insights with enhanced observability
            on Amazon ECS, Container Insights auto-collects detailed infrastructure telemetry
            from the cluster level down to the container level in your environment and displays
            these critical performance data in curated dashboards removing the heavy lifting in
            observability set-up. 
            </para>
             
            <para>
            To use Container Insights with enhanced observability, set the <c>containerInsights</c>
            account setting to <c>enhanced</c>.
            </para>
             
            <para>
            To use Container Insights, set the <c>containerInsights</c> account setting to <c>enabled</c>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cloudwatch-container-insights.html">Monitor
            Amazon ECS containers using Container Insights with enhanced observability</a> in
            the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             </li> <li> 
            <para>
             <c>dualStackIPv6</c> - When turned on, when using a VPC in dual stack mode, your
            tasks using the <c>awsvpc</c> network mode can have an IPv6 address assigned. For
            more information on using IPv6 with tasks launched on Amazon EC2 instances, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking-awsvpc.html#task-networking-vpc-dual-stack">Using
            a VPC in dual-stack mode</a>. For more information on using IPv6 with tasks launched
            on Fargate, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/fargate-task-networking.html#fargate-task-networking-vpc-dual-stack">Using
            a VPC in dual-stack mode</a>.
            </para>
             </li> <li> 
            <para>
             <c>fargateFIPSMode</c> - If you specify <c>fargateFIPSMode</c>, Fargate FIPS 140
            compliance is affected.
            </para>
             </li> <li> 
            <para>
             <c>fargateTaskRetirementWaitPeriod</c> - When Amazon Web Services determines that
            a security or infrastructure update is needed for an Amazon ECS task hosted on Fargate,
            the tasks need to be stopped and new tasks launched to replace them. Use <c>fargateTaskRetirementWaitPeriod</c>
            to configure the wait time to retire a Fargate task. For information about the Fargate
            tasks maintenance, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-maintenance.html">Amazon
            Web Services Fargate task maintenance</a> in the <i>Amazon ECS Developer Guide</i>.
            </para>
             </li> <li> 
            <para>
             <c>tagResourceAuthorization</c> - Amazon ECS is introducing tagging authorization
            for resource creation. Users must have permissions for actions that create the resource,
            such as <c>ecsCreateCluster</c>. If tags are specified when you create a resource,
            Amazon Web Services performs additional authorization to verify if users or roles
            have permissions to create tags. Therefore, you must grant explicit permissions to
            use the <c>ecs:TagResource</c> action. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/supported-iam-actions-tagging.html">Grant
            permission to tag resources on creation</a> in the <i>Amazon ECS Developer Guide</i>.
            </para>
             </li> <li> 
            <para>
             <c>guardDutyActivate</c> - The <c>guardDutyActivate</c> parameter is read-only in
            Amazon ECS and indicates whether Amazon ECS Runtime Monitoring is enabled or disabled
            by your security administrator in your Amazon ECS account. Amazon GuardDuty controls
            this account setting on your behalf. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-guard-duty-integration.html">Protecting
            Amazon ECS workloads with Amazon ECS Runtime Monitoring</a>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAccountSettingDefaultRequest.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The account setting value for the specified principal ARN. Accepted values are <c>enabled</c>,
            <c>disabled</c>, <c>on</c>, <c>enhanced</c>, and <c>off</c>.
            </para>
             
            <para>
            When you specify <c>fargateTaskRetirementWaitPeriod</c> for the <c>name</c>, the following
            are the valid values:
            </para>
             <ul> <li> 
            <para>
             <c>0</c> - Amazon Web Services sends the notification, and immediately retires the
            affected tasks.
            </para>
             </li> <li> 
            <para>
             <c>7</c> - Amazon Web Services sends the notification, and waits 7 calendar days
            to retire the tasks.
            </para>
             </li> <li> 
            <para>
             <c>14</c> - Amazon Web Services sends the notification, and waits 14 calendar days
            to retire the tasks.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PutAccountSettingDefaultResponse">
            <summary>
            This is the response object from the PutAccountSettingDefault operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAccountSettingDefaultResponse.Setting">
            <summary>
            Gets and sets the property Setting. 
            <para>
            The current setting for a resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PutAccountSettingRequest">
            <summary>
            Container for the parameters to the PutAccountSetting operation.
            Modifies an account setting. Account settings are set on a per-Region basis.
            
             
            <para>
            If you change the root user account setting, the default settings are reset for users
            and roles that do not have specified individual account settings. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html">Account
            Settings</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAccountSettingRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The Amazon ECS account setting name to modify.
            </para>
             
            <para>
            The following are the valid values for the account setting name.
            </para>
             <ul> <li> 
            <para>
             <c>serviceLongArnFormat</c> - When modified, the Amazon Resource Name (ARN) and resource
            ID format of the resource type for a specified user, role, or the root user for an
            account is affected. The opt-in and opt-out account setting must be set for each Amazon
            ECS resource separately. The ARN and resource ID format of a resource is defined by
            the opt-in status of the user or role that created the resource. You must turn on
            this setting to use Amazon ECS features such as resource tagging.
            </para>
             </li> <li> 
            <para>
             <c>taskLongArnFormat</c> - When modified, the Amazon Resource Name (ARN) and resource
            ID format of the resource type for a specified user, role, or the root user for an
            account is affected. The opt-in and opt-out account setting must be set for each Amazon
            ECS resource separately. The ARN and resource ID format of a resource is defined by
            the opt-in status of the user or role that created the resource. You must turn on
            this setting to use Amazon ECS features such as resource tagging.
            </para>
             </li> <li> 
            <para>
             <c>fargateFIPSMode</c> - When turned on, you can run Fargate workloads in a manner
            that is compliant with Federal Information Processing Standard (FIPS-140). For more
            information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-fips-compliance.html">Fargate
            Federal Information Processing Standard (FIPS-140)</a>.
            </para>
             </li> <li> 
            <para>
             <c>containerInstanceLongArnFormat</c> - When modified, the Amazon Resource Name (ARN)
            and resource ID format of the resource type for a specified user, role, or the root
            user for an account is affected. The opt-in and opt-out account setting must be set
            for each Amazon ECS resource separately. The ARN and resource ID format of a resource
            is defined by the opt-in status of the user or role that created the resource. You
            must turn on this setting to use Amazon ECS features such as resource tagging.
            </para>
             </li> <li> 
            <para>
             <c>awsvpcTrunking</c> - When modified, the elastic network interface (ENI) limit
            for any new container instances that support the feature is changed. If <c>awsvpcTrunking</c>
            is turned on, any new container instances that support the feature are launched have
            the increased ENI limits available to them. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container-instance-eni.html">Elastic
            Network Interface Trunking</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </li> <li> 
            <para>
             <c>containerInsights</c> - Container Insights with enhanced observability provides
            all the Container Insights metrics, plus additional task and container metrics. This
            version supports enhanced observability for Amazon ECS clusters using the Amazon EC2
            and Fargate launch types. After you configure Container Insights with enhanced observability
            on Amazon ECS, Container Insights auto-collects detailed infrastructure telemetry
            from the cluster level down to the container level in your environment and displays
            these critical performance data in curated dashboards removing the heavy lifting in
            observability set-up. 
            </para>
             
            <para>
            To use Container Insights with enhanced observability, set the <c>containerInsights</c>
            account setting to <c>enhanced</c>.
            </para>
             
            <para>
            To use Container Insights, set the <c>containerInsights</c> account setting to <c>enabled</c>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cloudwatch-container-insights.html">Monitor
            Amazon ECS containers using Container Insights with enhanced observability</a> in
            the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             </li> <li> 
            <para>
             <c>dualStackIPv6</c> - When turned on, when using a VPC in dual stack mode, your
            tasks using the <c>awsvpc</c> network mode can have an IPv6 address assigned. For
            more information on using IPv6 with tasks launched on Amazon EC2 instances, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking-awsvpc.html#task-networking-vpc-dual-stack">Using
            a VPC in dual-stack mode</a>. For more information on using IPv6 with tasks launched
            on Fargate, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/fargate-task-networking.html#fargate-task-networking-vpc-dual-stack">Using
            a VPC in dual-stack mode</a>.
            </para>
             </li> <li> 
            <para>
             <c>fargateTaskRetirementWaitPeriod</c> - When Amazon Web Services determines that
            a security or infrastructure update is needed for an Amazon ECS task hosted on Fargate,
            the tasks need to be stopped and new tasks launched to replace them. Use <c>fargateTaskRetirementWaitPeriod</c>
            to configure the wait time to retire a Fargate task. For information about the Fargate
            tasks maintenance, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-maintenance.html">Amazon
            Web Services Fargate task maintenance</a> in the <i>Amazon ECS Developer Guide</i>.
            </para>
             </li> <li> 
            <para>
             <c>tagResourceAuthorization</c> - Amazon ECS is introducing tagging authorization
            for resource creation. Users must have permissions for actions that create the resource,
            such as <c>ecsCreateCluster</c>. If tags are specified when you create a resource,
            Amazon Web Services performs additional authorization to verify if users or roles
            have permissions to create tags. Therefore, you must grant explicit permissions to
            use the <c>ecs:TagResource</c> action. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/supported-iam-actions-tagging.html">Grant
            permission to tag resources on creation</a> in the <i>Amazon ECS Developer Guide</i>.
            </para>
             </li> <li> 
            <para>
             <c>guardDutyActivate</c> - The <c>guardDutyActivate</c> parameter is read-only in
            Amazon ECS and indicates whether Amazon ECS Runtime Monitoring is enabled or disabled
            by your security administrator in your Amazon ECS account. Amazon GuardDuty controls
            this account setting on your behalf. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-guard-duty-integration.html">Protecting
            Amazon ECS workloads with Amazon ECS Runtime Monitoring</a>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAccountSettingRequest.PrincipalArn">
            <summary>
            Gets and sets the property PrincipalArn. 
            <para>
            The ARN of the principal, which can be a user, role, or the root user. If you specify
            the root user, it modifies the account setting for all users, roles, and the root
            user of the account unless a user or role explicitly overrides these settings. If
            this field is omitted, the setting is changed only for the authenticated user.
            </para>
             <note> 
            <para>
            You must use the root user when you set the Fargate wait time (<c>fargateTaskRetirementWaitPeriod</c>).
            
            </para>
             
            <para>
            Federated users assume the account setting of the root user and can't have explicit
            account settings set for them.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAccountSettingRequest.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The account setting value for the specified principal ARN. Accepted values are <c>enabled</c>,
            <c>disabled</c>, <c>enhanced</c>, <c>on</c>, and <c>off</c>.
            </para>
             
            <para>
            When you specify <c>fargateTaskRetirementWaitPeriod</c> for the <c>name</c>, the following
            are the valid values:
            </para>
             <ul> <li> 
            <para>
             <c>0</c> - Amazon Web Services sends the notification, and immediately retires the
            affected tasks.
            </para>
             </li> <li> 
            <para>
             <c>7</c> - Amazon Web Services sends the notification, and waits 7 calendar days
            to retire the tasks.
            </para>
             </li> <li> 
            <para>
             <c>14</c> - Amazon Web Services sends the notification, and waits 14 calendar days
            to retire the tasks.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PutAccountSettingResponse">
            <summary>
            This is the response object from the PutAccountSetting operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAccountSettingResponse.Setting">
            <summary>
            Gets and sets the property Setting. 
            <para>
            The current account setting for a resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PutAttributesRequest">
            <summary>
            Container for the parameters to the PutAttributes operation.
            Create or update an attribute on an Amazon ECS resource. If the attribute doesn't
            exist, it's created. If the attribute exists, its value is replaced with the specified
            value. To delete an attribute, use <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeleteAttributes.html">DeleteAttributes</a>.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes">Attributes</a>
            in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAttributesRequest.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            The attributes to apply to your resource. You can specify up to 10 custom attributes
            for each resource. You can specify up to 10 attributes in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAttributesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that contains the
            resource to apply attributes. If you do not specify a cluster, the default cluster
            is assumed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PutAttributesResponse">
            <summary>
            This is the response object from the PutAttributes operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAttributesResponse.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            The attributes applied to your resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PutClusterCapacityProvidersRequest">
            <summary>
            Container for the parameters to the PutClusterCapacityProviders operation.
            Modifies the available capacity providers and the default capacity provider strategy
            for a cluster.
            
             
            <para>
            You must specify both the available capacity providers and a default capacity provider
            strategy for the cluster. If the specified cluster has existing capacity providers
            associated with it, you must specify all existing capacity providers in addition to
            any new ones you want to add. Any existing capacity providers that are associated
            with a cluster that are omitted from a <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutClusterCapacityProviders.html">PutClusterCapacityProviders</a>
            API call will be disassociated with the cluster. You can only disassociate an existing
            capacity provider from a cluster if it's not being used by any existing tasks.
            </para>
             
            <para>
            When creating a service or running a task on a cluster, if no capacity provider or
            launch type is specified, then the cluster's default capacity provider strategy is
            used. We recommend that you define a default capacity provider strategy for your cluster.
            However, you must specify an empty array (<c>[]</c>) to bypass defining a default
            strategy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutClusterCapacityProvidersRequest.CapacityProviders">
            <summary>
            Gets and sets the property CapacityProviders. 
            <para>
            The name of one or more capacity providers to associate with the cluster.
            </para>
             
            <para>
            If specifying a capacity provider that uses an Auto Scaling group, the capacity provider
            must already be created. New capacity providers can be created with the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateCapacityProvider.html">CreateCapacityProvider</a>
            API operation.
            </para>
             
            <para>
            To use a Fargate capacity provider, specify either the <c>FARGATE</c> or <c>FARGATE_SPOT</c>
            capacity providers. The Fargate capacity providers are available to all accounts and
            only need to be associated with a cluster to be used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutClusterCapacityProvidersRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster to modify the capacity
            provider settings for. If you don't specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutClusterCapacityProvidersRequest.DefaultCapacityProviderStrategy">
            <summary>
            Gets and sets the property DefaultCapacityProviderStrategy. 
            <para>
            The capacity provider strategy to use by default for the cluster.
            </para>
             
            <para>
            When creating a service or running a task on a cluster, if no capacity provider or
            launch type is specified then the default capacity provider strategy for the cluster
            is used.
            </para>
             
            <para>
            A capacity provider strategy consists of one or more capacity providers along with
            the <c>base</c> and <c>weight</c> to assign to them. A capacity provider must be associated
            with the cluster to be used in a capacity provider strategy. The <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutClusterCapacityProviders.html">PutClusterCapacityProviders</a>
            API is used to associate a capacity provider with a cluster. Only capacity providers
            with an <c>ACTIVE</c> or <c>UPDATING</c> status can be used.
            </para>
             
            <para>
            If specifying a capacity provider that uses an Auto Scaling group, the capacity provider
            must already be created. New capacity providers can be created with the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateCapacityProvider.html">CreateCapacityProvider</a>
            API operation.
            </para>
             
            <para>
            To use a Fargate capacity provider, specify either the <c>FARGATE</c> or <c>FARGATE_SPOT</c>
            capacity providers. The Fargate capacity providers are available to all accounts and
            only need to be associated with a cluster to be used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PutClusterCapacityProvidersResponse">
            <summary>
            This is the response object from the PutClusterCapacityProviders operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutClusterCapacityProvidersResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            Details about the cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.RegisterTaskDefinitionRequest">
            <summary>
            Container for the parameters to the RegisterTaskDefinition operation.
            Registers a new task definition from the supplied <c>family</c> and <c>containerDefinitions</c>.
            Optionally, you can add data volumes to your containers with the <c>volumes</c> parameter.
            For more information about task definition parameters and defaults, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html">Amazon
            ECS Task Definitions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            
             
            <para>
            You can specify a role for your task with the <c>taskRoleArn</c> parameter. When you
            specify a role for a task, its containers can then use the latest versions of the
            CLI or SDKs to make API requests to the Amazon Web Services services that are specified
            in the policy that's associated with the role. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html">IAM
            Roles for Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            You can specify a Docker networking mode for the containers in your task definition
            with the <c>networkMode</c> parameter. If you specify the <c>awsvpc</c> network mode,
            the task is allocated an elastic network interface, and you must specify a <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_NetworkConfiguration.html">NetworkConfiguration</a>
            when you create a service or run a task with the task definition. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html">Task
            Networking</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.ContainerDefinitions">
            <summary>
            Gets and sets the property ContainerDefinitions. 
            <para>
            A list of container definitions in JSON format that describe the different containers
            that make up your task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.Cpu">
            <summary>
            Gets and sets the property Cpu. 
            <para>
            The number of CPU units used by the task. It can be expressed as an integer using
            CPU units (for example, <c>1024</c>) or as a string using vCPUs (for example, <c>1
            vCPU</c> or <c>1 vcpu</c>) in a task definition. String values are converted to an
            integer indicating the CPU units when the task definition is registered.
            </para>
             <note> 
            <para>
            Task-level CPU and memory parameters are ignored for Windows containers. We recommend
            specifying container-level resources for Windows containers.
            </para>
             </note> 
            <para>
            If you're using the EC2 launch type, this field is optional. Supported values are
            between <c>128</c> CPU units (<c>0.125</c> vCPUs) and <c>10240</c> CPU units (<c>10</c>
            vCPUs). If you do not specify a value, the parameter is ignored.
            </para>
             
            <para>
            If you're using the Fargate launch type, this field is required and you must use one
            of the following values, which determines your range of supported values for the <c>memory</c>
            parameter:
            </para>
             
            <para>
            The CPU units cannot be less than 1 vCPU when you use Windows containers on Fargate.
            </para>
             <ul> <li> 
            <para>
            256 (.25 vCPU) - Available <c>memory</c> values: 512 (0.5 GB), 1024 (1 GB), 2048 (2
            GB)
            </para>
             </li> <li> 
            <para>
            512 (.5 vCPU) - Available <c>memory</c> values: 1024 (1 GB), 2048 (2 GB), 3072 (3
            GB), 4096 (4 GB)
            </para>
             </li> <li> 
            <para>
            1024 (1 vCPU) - Available <c>memory</c> values: 2048 (2 GB), 3072 (3 GB), 4096 (4
            GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB)
            </para>
             </li> <li> 
            <para>
            2048 (2 vCPU) - Available <c>memory</c> values: 4096 (4 GB) and 16384 (16 GB) in increments
            of 1024 (1 GB)
            </para>
             </li> <li> 
            <para>
            4096 (4 vCPU) - Available <c>memory</c> values: 8192 (8 GB) and 30720 (30 GB) in increments
            of 1024 (1 GB)
            </para>
             </li> <li> 
            <para>
            8192 (8 vCPU) - Available <c>memory</c> values: 16 GB and 60 GB in 4 GB increments
            </para>
             
            <para>
            This option requires Linux platform <c>1.4.0</c> or later.
            </para>
             </li> <li> 
            <para>
            16384 (16vCPU) - Available <c>memory</c> values: 32GB and 120 GB in 8 GB increments
            </para>
             
            <para>
            This option requires Linux platform <c>1.4.0</c> or later.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.EnableFaultInjection">
            <summary>
            Gets and sets the property EnableFaultInjection. 
            <para>
            Enables fault injection when you register your task definition and allows for fault
            injection requests to be accepted from the task's containers. The default value is
            <c>false</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.EphemeralStorage">
            <summary>
            Gets and sets the property EphemeralStorage. 
            <para>
            The amount of ephemeral storage to allocate for the task. This parameter is used to
            expand the total amount of ephemeral storage available, beyond the default amount,
            for tasks hosted on Fargate. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_data_volumes.html">Using
            data volumes in tasks</a> in the <i>Amazon ECS Developer Guide</i>.
            </para>
             <note> 
            <para>
            For tasks using the Fargate launch type, the task requires the following platforms:
            </para>
             <ul> <li> 
            <para>
            Linux platform version <c>1.4.0</c> or later.
            </para>
             </li> <li> 
            <para>
            Windows platform version <c>1.0.0</c> or later.
            </para>
             </li> </ul> </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.ExecutionRoleArn">
            <summary>
            Gets and sets the property ExecutionRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the task execution role that grants the Amazon ECS
            container agent permission to make Amazon Web Services API calls on your behalf. For
            informationabout the required IAM roles for Amazon ECS, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/security-ecs-iam-role-overview.html">IAM
            roles for Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.Family">
            <summary>
            Gets and sets the property Family. 
            <para>
            You must specify a <c>family</c> for a task definition. You can use it track multiple
            versions of the same task definition. The <c>family</c> is used as a name for your
            task definition. Up to 255 letters (uppercase and lowercase), numbers, underscores,
            and hyphens are allowed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.InferenceAccelerators">
            <summary>
            Gets and sets the property InferenceAccelerators. 
            <para>
            The Elastic Inference accelerators to use for the containers in the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.IpcMode">
            <summary>
            Gets and sets the property IpcMode. 
            <para>
            The IPC resource namespace to use for the containers in the task. The valid values
            are <c>host</c>, <c>task</c>, or <c>none</c>. If <c>host</c> is specified, then all
            containers within the tasks that specified the <c>host</c> IPC mode on the same container
            instance share the same IPC resources with the host Amazon EC2 instance. If <c>task</c>
            is specified, all containers within the specified task share the same IPC resources.
            If <c>none</c> is specified, then IPC resources within the containers of a task are
            private and not shared with other containers in a task or on the container instance.
            If no value is specified, then the IPC resource namespace sharing depends on the Docker
            daemon setting on the container instance.
            </para>
             
            <para>
            If the <c>host</c> IPC mode is used, be aware that there is a heightened risk of undesired
            IPC namespace expose.
            </para>
             
            <para>
            If you are setting namespaced kernel parameters using <c>systemControls</c> for the
            containers in the task, the following will apply to your IPC resource namespace. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html">System
            Controls</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             <ul> <li> 
            <para>
            For tasks that use the <c>host</c> IPC mode, IPC namespace related <c>systemControls</c>
            are not supported.
            </para>
             </li> <li> 
            <para>
            For tasks that use the <c>task</c> IPC mode, IPC namespace related <c>systemControls</c>
            will apply to all containers within a task.
            </para>
             </li> </ul> <note> 
            <para>
            This parameter is not supported for Windows containers or tasks run on Fargate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            The amount of memory (in MiB) used by the task. It can be expressed as an integer
            using MiB (for example ,<c>1024</c>) or as a string using GB (for example, <c>1GB</c>
            or <c>1 GB</c>) in a task definition. String values are converted to an integer indicating
            the MiB when the task definition is registered.
            </para>
             <note> 
            <para>
            Task-level CPU and memory parameters are ignored for Windows containers. We recommend
            specifying container-level resources for Windows containers.
            </para>
             </note> 
            <para>
            If using the EC2 launch type, this field is optional.
            </para>
             
            <para>
            If using the Fargate launch type, this field is required and you must use one of the
            following values. This determines your range of supported values for the <c>cpu</c>
            parameter.
            </para>
             
            <para>
            The CPU units cannot be less than 1 vCPU when you use Windows containers on Fargate.
            </para>
             <ul> <li> 
            <para>
            512 (0.5 GB), 1024 (1 GB), 2048 (2 GB) - Available <c>cpu</c> values: 256 (.25 vCPU)
            </para>
             </li> <li> 
            <para>
            1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB) - Available <c>cpu</c> values:
            512 (.5 vCPU)
            </para>
             </li> <li> 
            <para>
            2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192
            (8 GB) - Available <c>cpu</c> values: 1024 (1 vCPU)
            </para>
             </li> <li> 
            <para>
            Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB) - Available <c>cpu</c>
            values: 2048 (2 vCPU)
            </para>
             </li> <li> 
            <para>
            Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB) - Available <c>cpu</c>
            values: 4096 (4 vCPU)
            </para>
             </li> <li> 
            <para>
            Between 16 GB and 60 GB in 4 GB increments - Available <c>cpu</c> values: 8192 (8
            vCPU)
            </para>
             
            <para>
            This option requires Linux platform <c>1.4.0</c> or later.
            </para>
             </li> <li> 
            <para>
            Between 32GB and 120 GB in 8 GB increments - Available <c>cpu</c> values: 16384 (16
            vCPU)
            </para>
             
            <para>
            This option requires Linux platform <c>1.4.0</c> or later.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.NetworkMode">
            <summary>
            Gets and sets the property NetworkMode. 
            <para>
            The Docker networking mode to use for the containers in the task. The valid values
            are <c>none</c>, <c>bridge</c>, <c>awsvpc</c>, and <c>host</c>. If no network mode
            is specified, the default is <c>bridge</c>.
            </para>
             
            <para>
            For Amazon ECS tasks on Fargate, the <c>awsvpc</c> network mode is required. For Amazon
            ECS tasks on Amazon EC2 Linux instances, any network mode can be used. For Amazon
            ECS tasks on Amazon EC2 Windows instances, <c>&lt;default&gt;</c> or <c>awsvpc</c>
            can be used. If the network mode is set to <c>none</c>, you cannot specify port mappings
            in your container definitions, and the tasks containers do not have external connectivity.
            The <c>host</c> and <c>awsvpc</c> network modes offer the highest networking performance
            for containers because they use the EC2 network stack instead of the virtualized network
            stack provided by the <c>bridge</c> mode.
            </para>
             
            <para>
            With the <c>host</c> and <c>awsvpc</c> network modes, exposed container ports are
            mapped directly to the corresponding host port (for the <c>host</c> network mode)
            or the attached elastic network interface port (for the <c>awsvpc</c> network mode),
            so you cannot take advantage of dynamic host port mappings. 
            </para>
             <important> 
            <para>
            When using the <c>host</c> network mode, you should not run containers using the root
            user (UID 0). It is considered best practice to use a non-root user.
            </para>
             </important> 
            <para>
            If the network mode is <c>awsvpc</c>, the task is allocated an elastic network interface,
            and you must specify a <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_NetworkConfiguration.html">NetworkConfiguration</a>
            value when you create a service or run a task with the task definition. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html">Task
            Networking</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            If the network mode is <c>host</c>, you cannot run multiple instantiations of the
            same task on a single container instance when port mappings are used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.PidMode">
            <summary>
            Gets and sets the property PidMode. 
            <para>
            The process namespace to use for the containers in the task. The valid values are
            <c>host</c> or <c>task</c>. On Fargate for Linux containers, the only valid value
            is <c>task</c>. For example, monitoring sidecars might need <c>pidMode</c> to access
            information about other containers running in the same task.
            </para>
             
            <para>
            If <c>host</c> is specified, all containers within the tasks that specified the <c>host</c>
            PID mode on the same container instance share the same process namespace with the
            host Amazon EC2 instance.
            </para>
             
            <para>
            If <c>task</c> is specified, all containers within the specified task share the same
            process namespace.
            </para>
             
            <para>
            If no value is specified, the default is a private namespace for each container.
            </para>
             
            <para>
            If the <c>host</c> PID mode is used, there's a heightened risk of undesired process
            namespace exposure.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note> <note> 
            <para>
            This parameter is only supported for tasks that are hosted on Fargate if the tasks
            are using platform version <c>1.4.0</c> or later (Linux). This isn't supported for
            Windows containers on Fargate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.PlacementConstraints">
            <summary>
            Gets and sets the property PlacementConstraints. 
            <para>
            An array of placement constraint objects to use for the task. You can specify a maximum
            of 10 constraints for each task. This limit includes constraints in the task definition
            and those specified at runtime.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.ProxyConfiguration">
            <summary>
            Gets and sets the property ProxyConfiguration. 
            <para>
            The configuration details for the App Mesh proxy.
            </para>
             
            <para>
            For tasks hosted on Amazon EC2 instances, the container instances require at least
            version <c>1.26.0</c> of the container agent and at least version <c>1.26.0-1</c>
            of the <c>ecs-init</c> package to use a proxy configuration. If your container instances
            are launched from the Amazon ECS-optimized AMI version <c>20190301</c> or later, then
            they contain the required versions of the container agent and <c>ecs-init</c>. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-ami-versions.html">Amazon
            ECS-optimized AMI versions</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.RequiresCompatibilities">
            <summary>
            Gets and sets the property RequiresCompatibilities. 
            <para>
            The task launch type that Amazon ECS validates the task definition against. A client
            exception is returned if the task definition doesn't validate against the compatibilities
            specified. If no value is specified, the parameter is omitted from the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.RuntimePlatform">
            <summary>
            Gets and sets the property RuntimePlatform. 
            <para>
            The operating system that your tasks definitions run on. A platform family is specified
            only for tasks using the Fargate launch type. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the task definition to help you categorize and organize
            them. Each tag consists of a key and an optional value. You define both of them.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <c>aws:</c>, <c>AWS:</c>, or any upper or lowercase combination of such
            as a prefix for either keys or values as it is reserved for Amazon Web Services use.
            You cannot edit or delete tag keys or values with this prefix. Tags with this prefix
            do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.TaskRoleArn">
            <summary>
            Gets and sets the property TaskRoleArn. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the IAM role that containers
            in this task can assume. All containers in this task are granted the permissions that
            are specified in this role. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html">IAM
            Roles for Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.Volumes">
            <summary>
            Gets and sets the property Volumes. 
            <para>
            A list of volume definitions in JSON format that containers in your task might use.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.RegisterTaskDefinitionResponse">
            <summary>
            This is the response object from the RegisterTaskDefinition operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of tags associated with the task definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionResponse.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The full description of the registered task definition.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.RepositoryCredentials">
            <summary>
            The repository credentials for private registry authentication.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RepositoryCredentials.CredentialsParameter">
            <summary>
            Gets and sets the property CredentialsParameter. 
            <para>
            The Amazon Resource Name (ARN) of the secret containing the private repository credentials.
            </para>
             <note> 
            <para>
            When you use the Amazon ECS API, CLI, or Amazon Web Services SDK, if the secret exists
            in the same Region as the task that you're launching then you can use either the full
            ARN or the name of the secret. When you use the Amazon Web Services Management Console,
            you must specify the full ARN of the secret.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Resource">
            <summary>
            Describes the resources available for a container instance.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Resource.DoubleValue">
            <summary>
            Gets and sets the property DoubleValue. 
            <para>
            When the <c>doubleValue</c> type is set, the value of the resource must be a double
            precision floating-point type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Resource.IntegerValue">
            <summary>
            Gets and sets the property IntegerValue. 
            <para>
            When the <c>integerValue</c> type is set, the value of the resource must be an integer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Resource.LongValue">
            <summary>
            Gets and sets the property LongValue. 
            <para>
            When the <c>longValue</c> type is set, the value of the resource must be an extended
            precision floating-point type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Resource.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the resource, such as <c>CPU</c>, <c>MEMORY</c>, <c>PORTS</c>, <c>PORTS_UDP</c>,
            or a user-defined resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Resource.StringSetValue">
            <summary>
            Gets and sets the property StringSetValue. 
            <para>
            When the <c>stringSetValue</c> type is set, the value of the resource must be a string
            type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Resource.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the resource. Valid values: <c>INTEGER</c>, <c>DOUBLE</c>, <c>LONG</c>,
            or <c>STRINGSET</c>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ResourceInUseException">
            <summary>
            The specified resource is in-use and can't be removed.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceInUseException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.ResourceNotFoundException">
            <summary>
            The specified resource wasn't found.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.ResourceRequirement">
            <summary>
            The type and amount of a resource to assign to a container. The supported resource
            types are GPUs and Elastic Inference accelerators. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-gpu.html">Working
            with GPUs on Amazon ECS</a> or <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-inference.html">Working
            with Amazon Elastic Inference on Amazon ECS</a> in the <i>Amazon Elastic Container
            Service Developer Guide</i>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ResourceRequirement.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of resource to assign to a container. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ResourceRequirement.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value for the specified resource type.
            </para>
             
            <para>
            When the type is <c>GPU</c>, the value is the number of physical <c>GPUs</c> the Amazon
            ECS container agent reserves for the container. The number of GPUs that's reserved
            for all containers in a task can't exceed the number of available GPUs on the container
            instance that the task is launched on.
            </para>
             
            <para>
            When the type is <c>InferenceAccelerator</c>, the <c>value</c> matches the <c>deviceName</c>
            for an <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_InferenceAccelerator.html">InferenceAccelerator</a>
            specified in a task definition.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Rollback">
            <summary>
            Information about the service deployment rollback.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Rollback.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            The reason the rollback happened. For example, the circuit breaker initiated the rollback
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Rollback.ServiceRevisionArn">
            <summary>
            Gets and sets the property ServiceRevisionArn. 
            <para>
            The ARN of the service revision deployed as part of the rollback.
            </para>
             
            <para>
            When the type is <c>GPU</c>, the value is the number of physical <c>GPUs</c> the Amazon
            ECS container agent reserves for the container. The number of GPUs that's reserved
            for all containers in a task can't exceed the number of available GPUs on the container
            instance that the task is launched on.
            </para>
             
            <para>
            When the type is <c>InferenceAccelerator</c>, the <c>value</c> matches the <c>deviceName</c>
            for an <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_InferenceAccelerator.html">InferenceAccelerator</a>
            specified in a task definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Rollback.StartedAt">
            <summary>
            Gets and sets the property StartedAt. 
            <para>
            Time time that the rollback started. The format is yyyy-MM-dd HH:mm:ss.SSSSSS.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.RunTaskRequest">
            <summary>
            Container for the parameters to the RunTask operation.
            Starts a new task using the specified task definition.
            
             <note> 
            <para>
            On March 21, 2024, a change was made to resolve the task definition revision before
            authorization. When a task definition revision is not specified, authorization will
            occur using the latest revision of a task definition.
            </para>
             </note> <note> 
            <para>
            Amazon Elastic Inference (EI) is no longer available to customers.
            </para>
             </note> 
            <para>
            You can allow Amazon ECS to place tasks for you, or you can customize how Amazon ECS
            places tasks using placement constraints and placement strategies. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
            Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            Alternatively, you can use <c>StartTask</c> to use your own scheduler or place tasks
            manually on specific container instances.
            </para>
             
            <para>
            You can attach Amazon EBS volumes to Amazon ECS tasks by configuring the volume when
            creating or updating a service. For more infomation, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volume-types">Amazon
            EBS volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            The Amazon ECS API follows an eventual consistency model. This is because of the distributed
            nature of the system supporting the API. This means that the result of an API command
            you run that affects your Amazon ECS resources might not be immediately visible to
            all subsequent commands you run. Keep this in mind when you carry out an API command
            that immediately follows a previous API command.
            </para>
             
            <para>
            To manage eventual consistency, you can do the following:
            </para>
             <ul> <li> 
            <para>
            Confirm the state of the resource before you run a command to modify it. Run the DescribeTasks
            command using an exponential backoff algorithm to ensure that you allow enough time
            for the previous command to propagate through the system. To do this, run the DescribeTasks
            command repeatedly, starting with a couple of seconds of wait time and increasing
            gradually up to five minutes of wait time.
            </para>
             </li> <li> 
            <para>
            Add wait time between subsequent commands, even if the DescribeTasks command returns
            an accurate response. Apply an exponential backoff algorithm starting with a couple
            of seconds of wait time, and increase gradually up to about five minutes of wait time.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.CapacityProviderStrategy">
            <summary>
            Gets and sets the property CapacityProviderStrategy. 
            <para>
            The capacity provider strategy to use for the task.
            </para>
             
            <para>
            If a <c>capacityProviderStrategy</c> is specified, the <c>launchType</c> parameter
            must be omitted. If no <c>capacityProviderStrategy</c> or <c>launchType</c> is specified,
            the <c>defaultCapacityProviderStrategy</c> for the cluster is used.
            </para>
             
            <para>
            When you use cluster auto scaling, you must specify <c>capacityProviderStrategy</c>
            and not <c>launchType</c>. 
            </para>
             
            <para>
            A capacity provider strategy can contain a maximum of 20 capacity providers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            An identifier that you provide to ensure the idempotency of the request. It must be
            unique and is case sensitive. Up to 64 characters are allowed. The valid characters
            are characters in the range of 33-126, inclusive. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/ECS_Idempotency.html">Ensuring
            idempotency</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster to run your task
            on. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.Count">
            <summary>
            Gets and sets the property Count. 
            <para>
            The number of instantiations of the specified task to place on your cluster. You can
            specify up to 10 tasks for each call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.EnableECSManagedTags">
            <summary>
            Gets and sets the property EnableECSManagedTags. 
            <para>
            Specifies whether to use Amazon ECS managed tags for the task. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html">Tagging
            Your Amazon ECS Resources</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.EnableExecuteCommand">
            <summary>
            Gets and sets the property EnableExecuteCommand. 
            <para>
            Determines whether to use the execute command functionality for the containers in
            this task. If <c>true</c>, this enables execute command functionality on all containers
            in the task.
            </para>
             
            <para>
            If <c>true</c>, then the task definition must have a task role, or you must provide
            one as an override.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.Group">
            <summary>
            Gets and sets the property Group. 
            <para>
            The name of the task group to associate with the task. The default value is the family
            name of the task definition (for example, <c>family:my-family-name</c>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.LaunchType">
            <summary>
            Gets and sets the property LaunchType. 
            <para>
            The infrastructure to run your standalone task on. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html">Amazon
            ECS launch types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            The <c>FARGATE</c> launch type runs your tasks on Fargate On-Demand infrastructure.
            </para>
             <note> 
            <para>
            Fargate Spot infrastructure is available for use but a capacity provider strategy
            must be used. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/fargate-capacity-providers.html">Fargate
            capacity providers</a> in the <i>Amazon ECS Developer Guide</i>.
            </para>
             </note> 
            <para>
            The <c>EC2</c> launch type runs your tasks on Amazon EC2 instances registered to your
            cluster.
            </para>
             
            <para>
            The <c>EXTERNAL</c> launch type runs your tasks on your on-premises server or virtual
            machine (VM) capacity registered to your cluster.
            </para>
             
            <para>
            A task can use either a launch type or a capacity provider strategy. If a <c>launchType</c>
            is specified, the <c>capacityProviderStrategy</c> parameter must be omitted.
            </para>
             
            <para>
            When you use cluster auto scaling, you must specify <c>capacityProviderStrategy</c>
            and not <c>launchType</c>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.NetworkConfiguration">
            <summary>
            Gets and sets the property NetworkConfiguration. 
            <para>
            The network configuration for the task. This parameter is required for task definitions
            that use the <c>awsvpc</c> network mode to receive their own elastic network interface,
            and it isn't supported for other network modes. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html">Task
            networking</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.Overrides">
            <summary>
            Gets and sets the property Overrides. 
            <para>
            A list of container overrides in JSON format that specify the name of a container
            in the specified task definition and the overrides it should receive. You can override
            the default command for a container (that's specified in the task definition or Docker
            image) with a <c>command</c> override. You can also override existing environment
            variables (that are specified in the task definition or Docker image) on a container
            or add new environment variables to it with an <c>environment</c> override.
            </para>
             
            <para>
            A total of 8192 characters are allowed for overrides. This limit includes the JSON
            formatting characters of the override structure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.PlacementConstraints">
            <summary>
            Gets and sets the property PlacementConstraints. 
            <para>
            An array of placement constraint objects to use for the task. You can specify up to
            10 constraints for each task (including constraints in the task definition and those
            specified at runtime).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.PlacementStrategy">
            <summary>
            Gets and sets the property PlacementStrategy. 
            <para>
            The placement strategy objects to use for the task. You can specify a maximum of 5
            strategy rules for each task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            The platform version the task uses. A platform version is only specified for tasks
            hosted on Fargate. If one isn't specified, the <c>LATEST</c> platform version is used.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html">Fargate
            platform versions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.PropagateTags">
            <summary>
            Gets and sets the property PropagateTags. 
            <para>
            Specifies whether to propagate the tags from the task definition to the task. If no
            value is specified, the tags aren't propagated. Tags can only be propagated to the
            task during task creation. To add tags to a task after task creation, use the<a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_TagResource.html">TagResource</a>
            API action.
            </para>
             <note> 
            <para>
            An error will be received if you specify the <c>SERVICE</c> option when running a
            task.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.ReferenceId">
            <summary>
            Gets and sets the property ReferenceId. 
            <para>
            This parameter is only used by Amazon ECS. It is not intended for use by customers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.StartedBy">
            <summary>
            Gets and sets the property StartedBy. 
            <para>
            An optional tag specified when a task is started. For example, if you automatically
            trigger a task to run a batch process job, you could apply a unique identifier for
            that job to your task with the <c>startedBy</c> parameter. You can then identify which
            tasks belong to that job by filtering the results of a <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListTasks.html">ListTasks</a>
            call with the <c>startedBy</c> value. Up to 128 letters (uppercase and lowercase),
            numbers, hyphens (-), forward slash (/), and underscores (_) are allowed.
            </para>
             
            <para>
            If a task is started by an Amazon ECS service, then the <c>startedBy</c> parameter
            contains the deployment ID of the service that starts it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the task to help you categorize and organize them.
            Each tag consists of a key and an optional value, both of which you define.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <c>aws:</c>, <c>AWS:</c>, or any upper or lowercase combination of such
            as a prefix for either keys or values as it is reserved for Amazon Web Services use.
            You cannot edit or delete tag keys or values with this prefix. Tags with this prefix
            do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The <c>family</c> and <c>revision</c> (<c>family:revision</c>) or full ARN of the
            task definition to run. If a <c>revision</c> isn't specified, the latest <c>ACTIVE</c>
            revision is used.
            </para>
             
            <para>
            The full ARN value must match the value that you specified as the <c>Resource</c>
            of the principal's permissions policy.
            </para>
             
            <para>
            When you specify a task definition, you must either specify a specific revision, or
            all revisions in the ARN.
            </para>
             
            <para>
            To specify a specific revision, include the revision number in the ARN. For example,
            to specify revision 2, use <c>arn:aws:ecs:us-east-1:111122223333:task-definition/TaskFamilyName:2</c>.
            </para>
             
            <para>
            To specify all revisions, use the wildcard (*) in the ARN. For example, to specify
            all revisions, use <c>arn:aws:ecs:us-east-1:111122223333:task-definition/TaskFamilyName:*</c>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-resources">Policy
            Resources for Amazon ECS</a> in the Amazon Elastic Container Service Developer Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.VolumeConfigurations">
            <summary>
            Gets and sets the property VolumeConfigurations. 
            <para>
            The details of the volume that was <c>configuredAtLaunch</c>. You can configure the
            size, volumeType, IOPS, throughput, snapshot and encryption in in <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_TaskManagedEBSVolumeConfiguration.html">TaskManagedEBSVolumeConfiguration</a>.
            The <c>name</c> of the volume must match the <c>name</c> from the task definition.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.RunTaskResponse">
            <summary>
            This is the response object from the RunTask operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
             
            <para>
            For information about how to address failures, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-event-messages.html#service-event-messages-list">Service
            event messages</a> and <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/api_failures_messages.html">API
            failure reasons</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskResponse.Tasks">
            <summary>
            Gets and sets the property Tasks. 
            <para>
            A full description of the tasks that were run. The tasks that were successfully placed
            on your cluster are described here.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.RuntimePlatform">
            <summary>
            Information about the platform for the Amazon ECS service or task.
            
             
            <para>
            For more information about <c>RuntimePlatform</c>, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#runtime-platform">RuntimePlatform</a>
            in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RuntimePlatform.CpuArchitecture">
            <summary>
            Gets and sets the property CpuArchitecture. 
            <para>
            The CPU architecture.
            </para>
             
            <para>
            You can run your Linux tasks on an ARM-based platform by setting the value to <c>ARM64</c>.
            This option is available for tasks that run on Linux Amazon EC2 instance or Linux
            containers on Fargate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RuntimePlatform.OperatingSystemFamily">
            <summary>
            Gets and sets the property OperatingSystemFamily. 
            <para>
            The operating system.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Scale">
            <summary>
            A floating-point percentage of the desired number of tasks to place and keep running
            in the task set.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Scale.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            The unit of measure for the scale value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Scale.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value, specified as a percent total of a service's <c>desiredCount</c>, to scale
            the task set. Accepted values are numbers between 0 and 100.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Secret">
            <summary>
            An object representing the secret to expose to your container. Secrets can be exposed
            to a container in the following ways:
            
             <ul> <li> 
            <para>
            To inject sensitive data into your containers as environment variables, use the <c>secrets</c>
            container definition parameter.
            </para>
             </li> <li> 
            <para>
            To reference sensitive information in the log configuration of a container, use the
            <c>secretOptions</c> container definition parameter.
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html">Specifying
            sensitive data</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Secret.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Secret.ValueFrom">
            <summary>
            Gets and sets the property ValueFrom. 
            <para>
            The secret to expose to the container. The supported values are either the full ARN
            of the Secrets Manager secret or the full ARN of the parameter in the SSM Parameter
            Store.
            </para>
             
            <para>
            For information about the require Identity and Access Management permissions, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data-secrets.html#secrets-iam">Required
            IAM permissions for Amazon ECS secrets</a> (for Secrets Manager) or <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data-parameters.html">Required
            IAM permissions for Amazon ECS secrets</a> (for Systems Manager Parameter store) in
            the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             <note> 
            <para>
            If the SSM Parameter Store parameter exists in the same Region as the task you're
            launching, then you can use either the full ARN or name of the parameter. If the parameter
            exists in a different Region, then the full ARN must be specified.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServerException">
            <summary>
            These errors are usually caused by a server issue.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ServerException.#ctor(System.String)">
            <summary>
            Constructs a new ServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.Service">
            <summary>
            Details on a service within a cluster.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.AvailabilityZoneRebalancing">
            <summary>
            Gets and sets the property AvailabilityZoneRebalancing. 
            <para>
            Indicates whether to use Availability Zone rebalancing for the service.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-rebalancing.html">Balancing
            an Amazon ECS service across Availability Zones</a> in the <i>Amazon Elastic Container
            Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.CapacityProviderStrategy">
            <summary>
            Gets and sets the property CapacityProviderStrategy. 
            <para>
            The capacity provider strategy the service uses. When using the DescribeServices API,
            this field is omitted if the service was created using a launch type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.ClusterArn">
            <summary>
            Gets and sets the property ClusterArn. 
            <para>
            The Amazon Resource Name (ARN) of the cluster that hosts the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix timestamp for the time when the service was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.CreatedBy">
            <summary>
            Gets and sets the property CreatedBy. 
            <para>
            The principal that created the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.DeploymentConfiguration">
            <summary>
            Gets and sets the property DeploymentConfiguration. 
            <para>
            Optional deployment parameters that control how many tasks run during the deployment
            and the ordering of stopping and starting tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.DeploymentController">
            <summary>
            Gets and sets the property DeploymentController. 
            <para>
            The deployment controller type the service is using. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.Deployments">
            <summary>
            Gets and sets the property Deployments. 
            <para>
            The current state of deployments for the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.DesiredCount">
            <summary>
            Gets and sets the property DesiredCount. 
            <para>
            The desired number of instantiations of the task definition to keep running on the
            service. This value is specified when the service is created with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html">CreateService</a>
            , and it can be modified with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.EnableECSManagedTags">
            <summary>
            Gets and sets the property EnableECSManagedTags. 
            <para>
            Determines whether to use Amazon ECS managed tags for the tasks in the service. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html">Tagging
            Your Amazon ECS Resources</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.EnableExecuteCommand">
            <summary>
            Gets and sets the property EnableExecuteCommand. 
            <para>
            Determines whether the execute command functionality is turned on for the service.
            If <c>true</c>, the execute command functionality is turned on for all containers
            in tasks as part of the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.Events">
            <summary>
            Gets and sets the property Events. 
            <para>
            The event stream for your service. A maximum of 100 of the latest events are displayed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.HealthCheckGracePeriodSeconds">
            <summary>
            Gets and sets the property HealthCheckGracePeriodSeconds. 
            <para>
            The period of time, in seconds, that the Amazon ECS service scheduler ignores unhealthy
            Elastic Load Balancing target health checks after a task has first started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.LaunchType">
            <summary>
            Gets and sets the property LaunchType. 
            <para>
            The launch type the service is using. When using the DescribeServices API, this field
            is omitted if the service was created using a capacity provider strategy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.LoadBalancers">
            <summary>
            Gets and sets the property LoadBalancers. 
            <para>
            A list of Elastic Load Balancing load balancer objects. It contains the load balancer
            name, the container name, and the container port to access from the load balancer.
            The container name is as it appears in a container definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.NetworkConfiguration">
            <summary>
            Gets and sets the property NetworkConfiguration. 
            <para>
            The VPC subnet and security group configuration for tasks that receive their own elastic
            network interface by using the <c>awsvpc</c> networking mode.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.PendingCount">
            <summary>
            Gets and sets the property PendingCount. 
            <para>
            The number of tasks in the cluster that are in the <c>PENDING</c> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.PlacementConstraints">
            <summary>
            Gets and sets the property PlacementConstraints. 
            <para>
            The placement constraints for the tasks in the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.PlacementStrategy">
            <summary>
            Gets and sets the property PlacementStrategy. 
            <para>
            The placement strategy that determines how tasks for the service are placed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.PlatformFamily">
            <summary>
            Gets and sets the property PlatformFamily. 
            <para>
            The operating system that your tasks in the service run on. A platform family is specified
            only for tasks using the Fargate launch type. 
            </para>
             
            <para>
             All tasks that run as part of this service must use the same <c>platformFamily</c>
            value as the service (for example, <c>LINUX</c>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            The platform version to run your service on. A platform version is only specified
            for tasks that are hosted on Fargate. If one isn't specified, the <c>LATEST</c> platform
            version is used. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html">Fargate
            Platform Versions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.PropagateTags">
            <summary>
            Gets and sets the property PropagateTags. 
            <para>
            Determines whether to propagate the tags from the task definition or the service to
            the task. If no value is specified, the tags aren't propagated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of the IAM role that's associated with the service. It allows the Amazon ECS
            container agent to register container instances with an Elastic Load Balancing load
            balancer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.RunningCount">
            <summary>
            Gets and sets the property RunningCount. 
            <para>
            The number of tasks in the cluster that are in the <c>RUNNING</c> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.SchedulingStrategy">
            <summary>
            Gets and sets the property SchedulingStrategy. 
            <para>
            The scheduling strategy to use for the service. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html">Services</a>.
            </para>
             
            <para>
            There are two service scheduler strategies available.
            </para>
             <ul> <li> 
            <para>
             <c>REPLICA</c>-The replica scheduling strategy places and maintains the desired number
            of tasks across your cluster. By default, the service scheduler spreads tasks across
            Availability Zones. You can use task placement strategies and constraints to customize
            task placement decisions.
            </para>
             </li> <li> 
            <para>
             <c>DAEMON</c>-The daemon scheduling strategy deploys exactly one task on each active
            container instance. This task meets all of the task placement constraints that you
            specify in your cluster. The service scheduler also evaluates the task placement constraints
            for running tasks. It stop tasks that don't meet the placement constraints.
            </para>
             <note> 
            <para>
            Fargate tasks don't support the <c>DAEMON</c> scheduling strategy.
            </para>
             </note> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.ServiceArn">
            <summary>
            Gets and sets the property ServiceArn. 
            <para>
            The ARN that identifies the service. For more information about the ARN format, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html#ecs-resource-ids">Amazon
            Resource Name (ARN)</a> in the <i>Amazon ECS Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.ServiceName">
            <summary>
            Gets and sets the property ServiceName. 
            <para>
            The name of your service. Up to 255 letters (uppercase and lowercase), numbers, underscores,
            and hyphens are allowed. Service names must be unique within a cluster. However, you
            can have similarly named services in multiple clusters within a Region or across multiple
            Regions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.ServiceRegistries">
            <summary>
            Gets and sets the property ServiceRegistries. 
            <para>
            The details for the service discovery registries to assign to this service. For more
            information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html">Service
            Discovery</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the service. The valid values are <c>ACTIVE</c>, <c>DRAINING</c>, or
            <c>INACTIVE</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the service to help you categorize and organize them.
            Each tag consists of a key and an optional value. You define bot the key and value.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <c>aws:</c>, <c>AWS:</c>, or any upper or lowercase combination of such
            as a prefix for either keys or values as it is reserved for Amazon Web Services use.
            You cannot edit or delete tag keys or values with this prefix. Tags with this prefix
            do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The task definition to use for tasks in the service. This value is specified when
            the service is created with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html">CreateService</a>,
            and it can be modified with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.TaskSets">
            <summary>
            Gets and sets the property TaskSets. 
            <para>
            Information about a set of Amazon ECS tasks in either an CodeDeploy or an <c>EXTERNAL</c>
            deployment. An Amazon ECS task set includes details such as the desired number of
            tasks, how many tasks are running, and whether the task set serves production traffic.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceConnectClientAlias">
            <summary>
            Each alias ("endpoint") is a fully-qualified name and port number that other tasks
            ("clients") can use to connect to this service.
            
             
            <para>
            Each name and port mapping must be unique within the namespace.
            </para>
             
            <para>
            Tasks that run in a namespace can use short names to connect to services in the namespace.
            Tasks can connect to services across all of the clusters in the namespace. Tasks connect
            through a managed proxy container that collects logs and metrics for increased visibility.
            Only the tasks that Amazon ECS services create are supported with Service Connect.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html">Service
            Connect</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceConnectClientAlias.DnsName">
            <summary>
            Gets and sets the property DnsName. 
            <para>
            The <c>dnsName</c> is the name that you use in the applications of client tasks to
            connect to this service. The name must be a valid DNS name but doesn't need to be
            fully-qualified. The name can include up to 127 characters. The name can include lowercase
            letters, numbers, underscores (_), hyphens (-), and periods (.). The name can't start
            with a hyphen.
            </para>
             
            <para>
            If this parameter isn't specified, the default value of <c>discoveryName.namespace</c>
            is used. If the <c>discoveryName</c> isn't specified, the port mapping name from the
            task definition is used in <c>portName.namespace</c>.
            </para>
             
            <para>
            To avoid changing your applications in client Amazon ECS services, set this to the
            same name that the client application uses by default. For example, a few common names
            are <c>database</c>, <c>db</c>, or the lowercase name of a database, such as <c>mysql</c>
            or <c>redis</c>. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html">Service
            Connect</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceConnectClientAlias.Port">
            <summary>
            Gets and sets the property Port. 
            <para>
            The listening port number for the Service Connect proxy. This port is available inside
            of all of the tasks within the same namespace.
            </para>
             
            <para>
            To avoid changing your applications in client Amazon ECS services, set this to the
            same port that the client application uses by default. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html">Service
            Connect</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceConnectConfiguration">
            <summary>
            The Service Connect configuration of your Amazon ECS service. The configuration for
            this service to discover and connect to services, and be discovered by, and connected
            from, other services within a namespace.
            
             
            <para>
            Tasks that run in a namespace can use short names to connect to services in the namespace.
            Tasks can connect to services across all of the clusters in the namespace. Tasks connect
            through a managed proxy container that collects logs and metrics for increased visibility.
            Only the tasks that Amazon ECS services create are supported with Service Connect.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html">Service
            Connect</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceConnectConfiguration.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Specifies whether to use Service Connect with this service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceConnectConfiguration.LogConfiguration">
            <summary>
            Gets and sets the property LogConfiguration.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceConnectConfiguration.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace name or full Amazon Resource Name (ARN) of the Cloud Map namespace for
            use with Service Connect. The namespace must be in the same Amazon Web Services Region
            as the Amazon ECS service and cluster. The type of namespace doesn't affect Service
            Connect. For more information about Cloud Map, see <a href="https://docs.aws.amazon.com/cloud-map/latest/dg/working-with-services.html">Working
            with Services</a> in the <i>Cloud Map Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceConnectConfiguration.Services">
            <summary>
            Gets and sets the property Services. 
            <para>
            The list of Service Connect service objects. These are names and aliases (also known
            as endpoints) that are used by other Amazon ECS services to connect to this service.
            
            </para>
             
            <para>
            This field is not required for a "client" Amazon ECS service that's a member of a
            namespace only to connect to other services within the namespace. An example of this
            would be a frontend application that accepts incoming requests from either a load
            balancer that's attached to the service or by other means.
            </para>
             
            <para>
            An object selects a port from the task definition, assigns a name for the Cloud Map
            service, and a list of aliases (endpoints) and ports for client applications to refer
            to this service.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceConnectService">
            <summary>
            The Service Connect service object configuration. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html">Service
            Connect</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceConnectService.ClientAliases">
            <summary>
            Gets and sets the property ClientAliases. 
            <para>
            The list of client aliases for this Service Connect service. You use these to assign
            names that can be used by client applications. The maximum number of client aliases
            that you can have in this list is 1.
            </para>
             
            <para>
            Each alias ("endpoint") is a fully-qualified name and port number that other Amazon
            ECS tasks ("clients") can use to connect to this service.
            </para>
             
            <para>
            Each name and port mapping must be unique within the namespace.
            </para>
             
            <para>
            For each <c>ServiceConnectService</c>, you must provide at least one <c>clientAlias</c>
            with one <c>port</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceConnectService.DiscoveryName">
            <summary>
            Gets and sets the property DiscoveryName. 
            <para>
            The <c>discoveryName</c> is the name of the new Cloud Map service that Amazon ECS
            creates for this Amazon ECS service. This must be unique within the Cloud Map namespace.
            The name can contain up to 64 characters. The name can include lowercase letters,
            numbers, underscores (_), and hyphens (-). The name can't start with a hyphen.
            </para>
             
            <para>
            If the <c>discoveryName</c> isn't specified, the port mapping name from the task definition
            is used in <c>portName.namespace</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceConnectService.IngressPortOverride">
            <summary>
            Gets and sets the property IngressPortOverride. 
            <para>
            The port number for the Service Connect proxy to listen on.
            </para>
             
            <para>
            Use the value of this field to bypass the proxy for traffic on the port number specified
            in the named <c>portMapping</c> in the task definition of this application, and then
            use it in your VPC security groups to allow traffic into the proxy for this Amazon
            ECS service.
            </para>
             
            <para>
            In <c>awsvpc</c> mode and Fargate, the default value is the container port number.
            The container port number is in the <c>portMapping</c> in the task definition. In
            bridge mode, the default value is the ephemeral port of the Service Connect proxy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceConnectService.PortName">
            <summary>
            Gets and sets the property PortName. 
            <para>
            The <c>portName</c> must match the name of one of the <c>portMappings</c> from all
            the containers in the task definition of this Amazon ECS service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceConnectService.Timeout">
            <summary>
            Gets and sets the property Timeout. 
            <para>
            A reference to an object that represents the configured timeouts for Service Connect.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceConnectService.Tls">
            <summary>
            Gets and sets the property Tls. 
            <para>
            A reference to an object that represents a Transport Layer Security (TLS) configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceConnectServiceResource">
            <summary>
            The Service Connect resource. Each configuration maps a discovery name to a Cloud
            Map service name. The data is stored in Cloud Map as part of the Service Connect configuration
            for each discovery name of this Amazon ECS service.
            
             
            <para>
            A task can resolve the <c>dnsName</c> for each of the <c>clientAliases</c> of a service.
            However a task can't resolve the discovery names. If you want to connect to a service,
            refer to the <c>ServiceConnectConfiguration</c> of that service for the list of <c>clientAliases</c>
            that you can use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceConnectServiceResource.DiscoveryArn">
            <summary>
            Gets and sets the property DiscoveryArn. 
            <para>
            The Amazon Resource Name (ARN) for the namespace in Cloud Map that matches the discovery
            name for this Service Connect resource. You can use this ARN in other integrations
            with Cloud Map. However, Service Connect can't ensure connectivity outside of Amazon
            ECS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceConnectServiceResource.DiscoveryName">
            <summary>
            Gets and sets the property DiscoveryName. 
            <para>
            The discovery name of this Service Connect resource.
            </para>
             
            <para>
            The <c>discoveryName</c> is the name of the new Cloud Map service that Amazon ECS
            creates for this Amazon ECS service. This must be unique within the Cloud Map namespace.
            The name can contain up to 64 characters. The name can include lowercase letters,
            numbers, underscores (_), and hyphens (-). The name can't start with a hyphen.
            </para>
             
            <para>
            If the <c>discoveryName</c> isn't specified, the port mapping name from the task definition
            is used in <c>portName.namespace</c>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceConnectTlsCertificateAuthority">
            <summary>
            The certificate root authority that secures your service.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceConnectTlsCertificateAuthority.AwsPcaAuthorityArn">
            <summary>
            Gets and sets the property AwsPcaAuthorityArn. 
            <para>
            The ARN of the Amazon Web Services Private Certificate Authority certificate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceConnectTlsConfiguration">
            <summary>
            The key that encrypts and decrypts your resources for Service Connect TLS.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceConnectTlsConfiguration.IssuerCertificateAuthority">
            <summary>
            Gets and sets the property IssuerCertificateAuthority. 
            <para>
            The signer certificate authority.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceConnectTlsConfiguration.KmsKey">
            <summary>
            Gets and sets the property KmsKey. 
            <para>
            The Amazon Web Services Key Management Service key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceConnectTlsConfiguration.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role that's associated with the Service
            Connect TLS.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceDeployment">
            <summary>
            Information about the service deployment.
            
             
            <para>
            Service deployments provide a comprehensive view of your deployments. For information
            about service deployments, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-deployment.html">View
            service history using Amazon ECS service deployments</a> in the <i> <i>Amazon Elastic
            Container Service Developer Guide</i> </i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeployment.Alarms">
            <summary>
            Gets and sets the property Alarms. 
            <para>
            The CloudWatch alarms that determine when a service deployment fails.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeployment.ClusterArn">
            <summary>
            Gets and sets the property ClusterArn. 
            <para>
            The ARN of the cluster that hosts the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeployment.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time the service deployment was created. The format is yyyy-MM-dd HH:mm:ss.SSSSSS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeployment.DeploymentCircuitBreaker">
            <summary>
            Gets and sets the property DeploymentCircuitBreaker. 
            <para>
            The circuit breaker configuration that determines a service deployment failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeployment.DeploymentConfiguration">
            <summary>
            Gets and sets the property DeploymentConfiguration.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeployment.FinishedAt">
            <summary>
            Gets and sets the property FinishedAt. 
            <para>
            The time the service deployment finished. The format is yyyy-MM-dd HH:mm:ss.SSSSSS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeployment.Rollback">
            <summary>
            Gets and sets the property Rollback. 
            <para>
            The rollback options the service deployment uses when the deployment fails.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeployment.ServiceArn">
            <summary>
            Gets and sets the property ServiceArn. 
            <para>
            The ARN of the service for this service deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeployment.ServiceDeploymentArn">
            <summary>
            Gets and sets the property ServiceDeploymentArn. 
            <para>
            The ARN of the service deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeployment.SourceServiceRevisions">
            <summary>
            Gets and sets the property SourceServiceRevisions. 
            <para>
            The currently deployed workload configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeployment.StartedAt">
            <summary>
            Gets and sets the property StartedAt. 
            <para>
            The time the service deployment statred. The format is yyyy-MM-dd HH:mm:ss.SSSSSS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeployment.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The service deployment state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeployment.StatusReason">
            <summary>
            Gets and sets the property StatusReason. 
            <para>
            Information about why the service deployment is in the current status. For example,
            the circuit breaker detected a failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeployment.StoppedAt">
            <summary>
            Gets and sets the property StoppedAt. 
            <para>
            The time the service deployment stopped. The format is yyyy-MM-dd HH:mm:ss.SSSSSS.
            </para>
             
            <para>
            The service deployment stops when any of the following actions happen:
            </para>
             <ul> <li> 
            <para>
            A user manually stops the deployment
            </para>
             </li> <li> 
            <para>
            The rollback option is not in use for the failure detection mechanism (the circuit
            breaker or alarm-based) and the service fails.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeployment.TargetServiceRevision">
            <summary>
            Gets and sets the property TargetServiceRevision. 
            <para>
            The workload configuration being deployed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeployment.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
            The time that the service deployment was last updated. The format is yyyy-MM-dd HH:mm:ss.SSSSSS.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceDeploymentAlarms">
            <summary>
            The CloudWatch alarms used to determine a service deployment failed. 
            
             
            <para>
            Amazon ECS considers the service deployment as failed when any of the alarms move
            to the <c>ALARM</c> state. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-alarm-failure.html">How
            CloudWatch alarms detect Amazon ECS deployment failures</a> in the Amazon ECS Developer
            Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeploymentAlarms.AlarmNames">
            <summary>
            Gets and sets the property AlarmNames. 
            <para>
            The name of the CloudWatch alarms that determine when a service deployment failed.
            A "," separates the alarms.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeploymentAlarms.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the alarms check. Amazon ECS is not using alarms for service deployment
            failures when the status is <c>DISABLED</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeploymentAlarms.TriggeredAlarmNames">
            <summary>
            Gets and sets the property TriggeredAlarmNames. 
            <para>
            One or more CloudWatch alarm names that have been triggered during the service deployment.
            A "," separates the alarm names.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceDeploymentBrief">
            <summary>
            The service deployment properties that are retured when you call <c>ListServiceDeployments</c>.
            
             
            <para>
            This provides a high-level overview of the service deployment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeploymentBrief.ClusterArn">
            <summary>
            Gets and sets the property ClusterArn. 
            <para>
            The ARN of the cluster that hosts the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeploymentBrief.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time that the service deployment was created. The format is yyyy-MM-dd HH:mm:ss.SSSSSS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeploymentBrief.FinishedAt">
            <summary>
            Gets and sets the property FinishedAt. 
            <para>
            The time that the service deployment completed. The format is yyyy-MM-dd HH:mm:ss.SSSSSS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeploymentBrief.ServiceArn">
            <summary>
            Gets and sets the property ServiceArn. 
            <para>
            The ARN of the service for this service deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeploymentBrief.ServiceDeploymentArn">
            <summary>
            Gets and sets the property ServiceDeploymentArn. 
            <para>
            The ARN of the service deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeploymentBrief.StartedAt">
            <summary>
            Gets and sets the property StartedAt. 
            <para>
            The time that the service deployment statred. The format is yyyy-MM-dd HH:mm:ss.SSSSSS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeploymentBrief.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the service deployment
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeploymentBrief.StatusReason">
            <summary>
            Gets and sets the property StatusReason. 
            <para>
            Information about why the service deployment is in the current status. For example,
            the circuit breaker detected a deployment failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeploymentBrief.TargetServiceRevisionArn">
            <summary>
            Gets and sets the property TargetServiceRevisionArn. 
            <para>
            The ARN of the service revision being deplyed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceDeploymentCircuitBreaker">
            <summary>
            Information about the circuit breaker used to determine when a service deployment
            has failed.
            
             
            <para>
            The deployment circuit breaker is the rolling update mechanism that determines if
            the tasks reach a steady state. The deployment circuit breaker has an option that
            will automatically roll back a failed deployment to the last cpompleted service revision.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-circuit-breaker.html">How
            the Amazon ECS deployment circuit breaker detects failures</a> in the<i> Amazon ECS
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeploymentCircuitBreaker.FailureCount">
            <summary>
            Gets and sets the property FailureCount. 
            <para>
            The number of times the circuit breaker detected a service deploymeny failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeploymentCircuitBreaker.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The circuit breaker status. Amazon ECS is not using the circuit breaker for service
            deployment failures when the status is <c>DISABLED</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceDeploymentCircuitBreaker.Threshold">
            <summary>
            Gets and sets the property Threshold. 
            <para>
            The threshhold which determines that the service deployment failed.
            </para>
             
            <para>
            The deployment circuit breaker calculates the threshold value, and then uses the value
            to determine when to move the deployment to a FAILED state. The deployment circuit
            breaker has a minimum threshold of 3 and a maximum threshold of 200. and uses the
            values in the following formula to determine the deployment failure.
            </para>
             
            <para>
             <c>0.5 * desired task count</c> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceEvent">
            <summary>
            The details for an event that's associated with a service.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceEvent.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix timestamp for the time when the event was triggered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceEvent.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID string for the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceEvent.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The event message.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceManagedEBSVolumeConfiguration">
            <summary>
            The configuration for the Amazon EBS volume that Amazon ECS creates and manages on
            your behalf. These settings are used to create each Amazon EBS volume, with one volume
            created for each task in the service. For information about the supported launch types
            and operating systems, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volumes-configuration">Supported
            operating systems and launch types</a> in the<i> Amazon Elastic Container Service
            Developer Guide</i>.
            
             
            <para>
            Many of these parameters map 1:1 with the Amazon EBS <c>CreateVolume</c> API request
            parameters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceManagedEBSVolumeConfiguration.Encrypted">
            <summary>
            Gets and sets the property Encrypted. 
            <para>
            Indicates whether the volume should be encrypted. If no value is specified, encryption
            is turned on by default. This parameter maps 1:1 with the <c>Encrypted</c> parameter
            of the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html">CreateVolume
            API</a> in the <i>Amazon EC2 API Reference</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceManagedEBSVolumeConfiguration.FilesystemType">
            <summary>
            Gets and sets the property FilesystemType. 
            <para>
            The filesystem type for the volume. For volumes created from a snapshot, you must
            specify the same filesystem type that the volume was using when the snapshot was created.
            If there is a filesystem type mismatch, the task will fail to start.
            </para>
             
            <para>
            The available Linux filesystem types are&#x2028; <c>ext3</c>, <c>ext4</c>, and <c>xfs</c>.
            If no value is specified, the <c>xfs</c> filesystem type is used by default.
            </para>
             
            <para>
            The available Windows filesystem types are <c>NTFS</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceManagedEBSVolumeConfiguration.Iops">
            <summary>
            Gets and sets the property Iops. 
            <para>
            The number of I/O operations per second (IOPS). For <c>gp3</c>, <c>io1</c>, and <c>io2</c>
            volumes, this represents the number of IOPS that are provisioned for the volume. For
            <c>gp2</c> volumes, this represents the baseline performance of the volume and the
            rate at which the volume accumulates I/O credits for bursting.
            </para>
             
            <para>
            The following are the supported values for each volume type.
            </para>
             <ul> <li> 
            <para>
             <c>gp3</c>: 3,000 - 16,000 IOPS
            </para>
             </li> <li> 
            <para>
             <c>io1</c>: 100 - 64,000 IOPS
            </para>
             </li> <li> 
            <para>
             <c>io2</c>: 100 - 256,000 IOPS
            </para>
             </li> </ul> 
            <para>
            This parameter is required for <c>io1</c> and <c>io2</c> volume types. The default
            for <c>gp3</c> volumes is <c>3,000 IOPS</c>. This parameter is not supported for <c>st1</c>,
            <c>sc1</c>, or <c>standard</c> volume types.
            </para>
             
            <para>
            This parameter maps 1:1 with the <c>Iops</c> parameter of the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html">CreateVolume
            API</a> in the <i>Amazon EC2 API Reference</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceManagedEBSVolumeConfiguration.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The Amazon Resource Name (ARN) identifier of the Amazon Web Services Key Management
            Service key to use for Amazon EBS encryption. When encryption is turned on and no
            Amazon Web Services Key Management Service key is specified, the default Amazon Web
            Services managed key for Amazon EBS volumes is used. This parameter maps 1:1 with
            the <c>KmsKeyId</c> parameter of the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html">CreateVolume
            API</a> in the <i>Amazon EC2 API Reference</i>.
            </para>
             <important> 
            <para>
            Amazon Web Services authenticates the Amazon Web Services Key Management Service key
            asynchronously. Therefore, if you specify an ID, alias, or ARN that is invalid, the
            action can appear to complete, but eventually fails.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceManagedEBSVolumeConfiguration.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of the IAM role to associate with this volume. This is the Amazon ECS infrastructure
            IAM role that is used to manage your Amazon Web Services infrastructure. We recommend
            using the Amazon ECS-managed <c>AmazonECSInfrastructureRolePolicyForVolumes</c> IAM
            policy with this role. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/infrastructure_IAM_role.html">Amazon
            ECS infrastructure IAM role</a> in the <i>Amazon ECS Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceManagedEBSVolumeConfiguration.SizeInGiB">
            <summary>
            Gets and sets the property SizeInGiB. 
            <para>
            The size of the volume in GiB. You must specify either a volume size or a snapshot
            ID. If you specify a snapshot ID, the snapshot size is used for the volume size by
            default. You can optionally specify a volume size greater than or equal to the snapshot
            size. This parameter maps 1:1 with the <c>Size</c> parameter of the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html">CreateVolume
            API</a> in the <i>Amazon EC2 API Reference</i>.
            </para>
             
            <para>
            The following are the supported volume size values for each volume type.
            </para>
             <ul> <li> 
            <para>
             <c>gp2</c> and <c>gp3</c>: 1-16,384
            </para>
             </li> <li> 
            <para>
             <c>io1</c> and <c>io2</c>: 4-16,384
            </para>
             </li> <li> 
            <para>
             <c>st1</c> and <c>sc1</c>: 125-16,384
            </para>
             </li> <li> 
            <para>
             <c>standard</c>: 1-1,024
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceManagedEBSVolumeConfiguration.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The snapshot that Amazon ECS uses to create the volume. You must specify either a
            snapshot ID or a volume size. This parameter maps 1:1 with the <c>SnapshotId</c> parameter
            of the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html">CreateVolume
            API</a> in the <i>Amazon EC2 API Reference</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceManagedEBSVolumeConfiguration.TagSpecifications">
            <summary>
            Gets and sets the property TagSpecifications. 
            <para>
            The tags to apply to the volume. Amazon ECS applies service-managed tags by default.
            This parameter maps 1:1 with the <c>TagSpecifications.N</c> parameter of the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html">CreateVolume
            API</a> in the <i>Amazon EC2 API Reference</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceManagedEBSVolumeConfiguration.Throughput">
            <summary>
            Gets and sets the property Throughput. 
            <para>
            The throughput to provision for a volume, in MiB/s, with a maximum of 1,000 MiB/s.
            This parameter maps 1:1 with the <c>Throughput</c> parameter of the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html">CreateVolume
            API</a> in the <i>Amazon EC2 API Reference</i>.
            </para>
             <important> 
            <para>
            This parameter is only supported for the <c>gp3</c> volume type.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceManagedEBSVolumeConfiguration.VolumeType">
            <summary>
            Gets and sets the property VolumeType. 
            <para>
            The volume type. This parameter maps 1:1 with the <c>VolumeType</c> parameter of the
            <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html">CreateVolume
            API</a> in the <i>Amazon EC2 API Reference</i>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html">Amazon
            EBS volume types</a> in the <i>Amazon EC2 User Guide</i>.
            </para>
             
            <para>
            The following are the supported volume types.
            </para>
             <ul> <li> 
            <para>
            General Purpose SSD: <c>gp2</c>|<c>gp3</c> 
            </para>
             </li> <li> 
            <para>
            Provisioned IOPS SSD: <c>io1</c>|<c>io2</c> 
            </para>
             </li> <li> 
            <para>
            Throughput Optimized HDD: <c>st1</c> 
            </para>
             </li> <li> 
            <para>
            Cold HDD: <c>sc1</c> 
            </para>
             </li> <li> 
            <para>
            Magnetic: <c>standard</c> 
            </para>
             <note> 
            <para>
            The magnetic volume type is not supported on Fargate.
            </para>
             </note> </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceNotActiveException">
            <summary>
            The specified service isn't active. You can't update a service that's inactive. If
            you have previously deleted a service, you can re-create it with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html">CreateService</a>.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotActiveException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceNotActiveException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotActiveException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceNotActiveException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotActiveException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceNotActiveException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotActiveException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceNotActiveException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotActiveException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceNotActiveException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceNotFoundException">
            <summary>
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceRegistry">
            <summary>
            The details for the service registry.
            
             
            <para>
            Each service may be associated with one service registry. Multiple service registries
            for each service are not supported.
            </para>
             
            <para>
            When you add, update, or remove the service registries configuration, Amazon ECS starts
            a new deployment. New tasks are registered and deregistered to the updated service
            registry configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRegistry.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The container name value to be used for your service discovery service. It's already
            specified in the task definition. If the task definition that your service task specifies
            uses the <c>bridge</c> or <c>host</c> network mode, you must specify a <c>containerName</c>
            and <c>containerPort</c> combination from the task definition. If the task definition
            that your service task specifies uses the <c>awsvpc</c> network mode and a type SRV
            DNS record is used, you must specify either a <c>containerName</c> and <c>containerPort</c>
            combination or a <c>port</c> value. However, you can't specify both.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRegistry.ContainerPort">
            <summary>
            Gets and sets the property ContainerPort. 
            <para>
            The port value to be used for your service discovery service. It's already specified
            in the task definition. If the task definition your service task specifies uses the
            <c>bridge</c> or <c>host</c> network mode, you must specify a <c>containerName</c>
            and <c>containerPort</c> combination from the task definition. If the task definition
            your service task specifies uses the <c>awsvpc</c> network mode and a type SRV DNS
            record is used, you must specify either a <c>containerName</c> and <c>containerPort</c>
            combination or a <c>port</c> value. However, you can't specify both.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRegistry.Port">
            <summary>
            Gets and sets the property Port. 
            <para>
            The port value used if your service discovery service specified an SRV record. This
            field might be used if both the <c>awsvpc</c> network mode and SRV records are used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRegistry.RegistryArn">
            <summary>
            Gets and sets the property RegistryArn. 
            <para>
            The Amazon Resource Name (ARN) of the service registry. The currently supported service
            registry is Cloud Map. For more information, see <a href="https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html">CreateService</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceRevision">
            <summary>
            Information about the service revision.
            
             
            <para>
            A service revision contains a record of the workload configuration Amazon ECS is attempting
            to deploy. Whenever you create or deploy a service, Amazon ECS automatically creates
            and captures the configuration that you're trying to deploy in the service revision.
            For information about service revisions, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-revision.html">Amazon
            ECS service revisions</a> in the <i> <i>Amazon Elastic Container Service Developer
            Guide</i> </i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRevision.CapacityProviderStrategy">
            <summary>
            Gets and sets the property CapacityProviderStrategy. 
            <para>
            The capacity provider strategy the service revision uses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRevision.ClusterArn">
            <summary>
            Gets and sets the property ClusterArn. 
            <para>
            The ARN of the cluster that hosts the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRevision.ContainerImages">
            <summary>
            Gets and sets the property ContainerImages. 
            <para>
            The container images the service revision uses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRevision.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time that the service revision was created. The format is yyyy-mm-dd HH:mm:ss.SSSSS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRevision.FargateEphemeralStorage">
            <summary>
            Gets and sets the property FargateEphemeralStorage.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRevision.GuardDutyEnabled">
            <summary>
            Gets and sets the property GuardDutyEnabled. 
            <para>
            Indicates whether Runtime Monitoring is turned on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRevision.LaunchType">
            <summary>
            Gets and sets the property LaunchType. 
            <para>
            The launch type the service revision uses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRevision.LoadBalancers">
            <summary>
            Gets and sets the property LoadBalancers. 
            <para>
            The load balancers the service revision uses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRevision.NetworkConfiguration">
            <summary>
            Gets and sets the property NetworkConfiguration.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRevision.PlatformFamily">
            <summary>
            Gets and sets the property PlatformFamily. 
            <para>
            The platform family the service revision uses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRevision.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            For the Fargate launch type, the platform version the service revision uses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRevision.ServiceArn">
            <summary>
            Gets and sets the property ServiceArn. 
            <para>
            The ARN of the service for the service revision.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRevision.ServiceConnectConfiguration">
            <summary>
            Gets and sets the property ServiceConnectConfiguration.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRevision.ServiceRegistries">
            <summary>
            Gets and sets the property ServiceRegistries. 
            <para>
            The service registries (for Service Discovery) the service revision uses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRevision.ServiceRevisionArn">
            <summary>
            Gets and sets the property ServiceRevisionArn. 
            <para>
            The ARN of the service revision.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRevision.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The task definition the service revision uses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRevision.VolumeConfigurations">
            <summary>
            Gets and sets the property VolumeConfigurations. 
            <para>
            The volumes that are configured at deployment that the service revision uses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRevision.VpcLatticeConfigurations">
            <summary>
            Gets and sets the property VpcLatticeConfigurations. 
            <para>
            The VPC Lattice configuration for the service revision.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceRevisionSummary">
            <summary>
            The information about the number of requested, pending, and running tasks for a service
            revision.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRevisionSummary.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The ARN of the service revision.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRevisionSummary.PendingTaskCount">
            <summary>
            Gets and sets the property PendingTaskCount. 
            <para>
            The number of pending tasks for the service revision.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRevisionSummary.RequestedTaskCount">
            <summary>
            Gets and sets the property RequestedTaskCount. 
            <para>
            The number of requested tasks for the service revision.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRevisionSummary.RunningTaskCount">
            <summary>
            Gets and sets the property RunningTaskCount. 
            <para>
            The number of running tasks for the service revision.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceVolumeConfiguration">
            <summary>
            The configuration for a volume specified in the task definition as a volume that is
            configured at launch time. Currently, the only supported volume type is an Amazon
            EBS volume.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceVolumeConfiguration.ManagedEBSVolume">
            <summary>
            Gets and sets the property ManagedEBSVolume. 
            <para>
            The configuration for the Amazon EBS volume that Amazon ECS creates and manages on
            your behalf. These settings are used to create each Amazon EBS volume, with one volume
            created for each task in the service. The Amazon EBS volumes are visible in your account
            in the Amazon EC2 console once they are created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceVolumeConfiguration.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the volume. This value must match the volume name from the <c>Volume</c>
            object in the task definition.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Session">
            <summary>
            The details for the execute command session.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Session.SessionId">
            <summary>
            Gets and sets the property SessionId. 
            <para>
            The ID of the execute command session.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Session.StreamUrl">
            <summary>
            Gets and sets the property StreamUrl. 
            <para>
            A URL to the managed agent on the container that the SSM Session Manager client uses
            to send commands and receive output from the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Session.TokenValue">
            <summary>
            Gets and sets the property TokenValue. 
            <para>
            An encrypted token value containing session and caller information. It's used to authenticate
            the connection to the container.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Setting">
            <summary>
            The current account setting for a resource.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Setting.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The Amazon ECS resource name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Setting.PrincipalArn">
            <summary>
            Gets and sets the property PrincipalArn. 
            <para>
            The ARN of the principal. It can be a user, role, or the root user. If this field
            is omitted, the authenticated user is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Setting.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            Indicates whether Amazon Web Services manages the account setting, or if the user
            manages it.
            </para>
             
            <para>
             <c>aws_managed</c> account settings are read-only, as Amazon Web Services manages
            such on the customer's behalf. Currently, the <c>guardDutyActivate</c> account setting
            is the only one Amazon Web Services manages.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Setting.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Determines whether the account setting is on or off for the specified resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.StartTaskRequest">
            <summary>
            Container for the parameters to the StartTask operation.
            Starts a new task from the specified task definition on the specified container instance
            or instances.
            
             <note> 
            <para>
            On March 21, 2024, a change was made to resolve the task definition revision before
            authorization. When a task definition revision is not specified, authorization will
            occur using the latest revision of a task definition.
            </para>
             </note> <note> 
            <para>
            Amazon Elastic Inference (EI) is no longer available to customers.
            </para>
             </note> 
            <para>
            Alternatively, you can use<c>RunTask</c> to place tasks for you. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
            Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            You can attach Amazon EBS volumes to Amazon ECS tasks by configuring the volume when
            creating or updating a service. For more infomation, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volume-types">Amazon
            EBS volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster where to start your
            task. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.ContainerInstances">
            <summary>
            Gets and sets the property ContainerInstances. 
            <para>
            The container instance IDs or full ARN entries for the container instances where you
            would like to place your task. You can specify up to 10 container instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.EnableECSManagedTags">
            <summary>
            Gets and sets the property EnableECSManagedTags. 
            <para>
            Specifies whether to use Amazon ECS managed tags for the task. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html">Tagging
            Your Amazon ECS Resources</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.EnableExecuteCommand">
            <summary>
            Gets and sets the property EnableExecuteCommand. 
            <para>
            Whether or not the execute command functionality is turned on for the task. If <c>true</c>,
            this turns on the execute command functionality on all containers in the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.Group">
            <summary>
            Gets and sets the property Group. 
            <para>
            The name of the task group to associate with the task. The default value is the family
            name of the task definition (for example, family:my-family-name).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.NetworkConfiguration">
            <summary>
            Gets and sets the property NetworkConfiguration. 
            <para>
            The VPC subnet and security group configuration for tasks that receive their own elastic
            network interface by using the <c>awsvpc</c> networking mode.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.Overrides">
            <summary>
            Gets and sets the property Overrides. 
            <para>
            A list of container overrides in JSON format that specify the name of a container
            in the specified task definition and the overrides it receives. You can override the
            default command for a container (that's specified in the task definition or Docker
            image) with a <c>command</c> override. You can also override existing environment
            variables (that are specified in the task definition or Docker image) on a container
            or add new environment variables to it with an <c>environment</c> override.
            </para>
             <note> 
            <para>
            A total of 8192 characters are allowed for overrides. This limit includes the JSON
            formatting characters of the override structure.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.PropagateTags">
            <summary>
            Gets and sets the property PropagateTags. 
            <para>
            Specifies whether to propagate the tags from the task definition or the service to
            the task. If no value is specified, the tags aren't propagated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.ReferenceId">
            <summary>
            Gets and sets the property ReferenceId. 
            <para>
            This parameter is only used by Amazon ECS. It is not intended for use by customers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.StartedBy">
            <summary>
            Gets and sets the property StartedBy. 
            <para>
            An optional tag specified when a task is started. For example, if you automatically
            trigger a task to run a batch process job, you could apply a unique identifier for
            that job to your task with the <c>startedBy</c> parameter. You can then identify which
            tasks belong to that job by filtering the results of a <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListTasks.html">ListTasks</a>
            call with the <c>startedBy</c> value. Up to 36 letters (uppercase and lowercase),
            numbers, hyphens (-), forward slash (/), and underscores (_) are allowed.
            </para>
             
            <para>
            If a task is started by an Amazon ECS service, the <c>startedBy</c> parameter contains
            the deployment ID of the service that starts it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the task to help you categorize and organize them.
            Each tag consists of a key and an optional value, both of which you define.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <c>aws:</c>, <c>AWS:</c>, or any upper or lowercase combination of such
            as a prefix for either keys or values as it is reserved for Amazon Web Services use.
            You cannot edit or delete tag keys or values with this prefix. Tags with this prefix
            do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The <c>family</c> and <c>revision</c> (<c>family:revision</c>) or full ARN of the
            task definition to start. If a <c>revision</c> isn't specified, the latest <c>ACTIVE</c>
            revision is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.VolumeConfigurations">
            <summary>
            Gets and sets the property VolumeConfigurations. 
            <para>
            The details of the volume that was <c>configuredAtLaunch</c>. You can configure the
            size, volumeType, IOPS, throughput, snapshot and encryption in <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_TaskManagedEBSVolumeConfiguration.html">TaskManagedEBSVolumeConfiguration</a>.
            The <c>name</c> of the volume must match the <c>name</c> from the task definition.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.StartTaskResponse">
            <summary>
            This is the response object from the StartTask operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskResponse.Tasks">
            <summary>
            Gets and sets the property Tasks. 
            <para>
            A full description of the tasks that were started. Each task that was successfully
            placed on your container instances is described.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.StopTaskRequest">
            <summary>
            Container for the parameters to the StopTask operation.
            Stops a running task. Any tags associated with the task will be deleted.
            
             
            <para>
            When you call <c>StopTask</c> on a task, the equivalent of <c>docker stop</c> is issued
            to the containers running in the task. This results in a <c>SIGTERM</c> value and
            a default 30-second timeout, after which the <c>SIGKILL</c> value is sent and the
            containers are forcibly stopped. If the container handles the <c>SIGTERM</c> value
            gracefully and exits within 30 seconds from receiving it, no <c>SIGKILL</c> value
            is sent.
            </para>
             
            <para>
            For Windows containers, POSIX signals do not work and runtime stops the container
            by sending a <c>CTRL_SHUTDOWN_EVENT</c>. For more information, see <a href="https://github.com/moby/moby/issues/25982">Unable
            to react to graceful shutdown of (Windows) container #25982</a> on GitHub.
            </para>
             <note> 
            <para>
            The default 30-second timeout can be configured on the Amazon ECS container agent
            with the <c>ECS_CONTAINER_STOP_TIMEOUT</c> variable. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS Container Agent Configuration</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StopTaskRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the task
            to stop. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StopTaskRequest.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            An optional message specified when a task is stopped. For example, if you're using
            a custom scheduler, you can use this parameter to specify the reason for stopping
            the task here, and the message appears in subsequent <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTasks.html">DescribeTasks</a>&gt;
            API operations on this task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StopTaskRequest.Task">
            <summary>
            Gets and sets the property Task. 
            <para>
            The task ID of the task to stop.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.StopTaskResponse">
            <summary>
            This is the response object from the StopTask operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StopTaskResponse.Task">
            <summary>
            Gets and sets the property Task. 
            <para>
            The task that was stopped.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.SubmitAttachmentStateChangesRequest">
            <summary>
            Container for the parameters to the SubmitAttachmentStateChanges operation.
            <note> 
            <para>
            This action is only used by the Amazon ECS agent, and it is not intended for use outside
            of the agent.
            </para>
             </note> 
            <para>
            Sent to acknowledge that an attachment changed states.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.SubmitAttachmentStateChangesRequest.Attachments">
            <summary>
            Gets and sets the property Attachments. 
            <para>
            Any attachments associated with the state change request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.SubmitAttachmentStateChangesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full ARN of the cluster that hosts the container instance the attachment
            belongs to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.SubmitAttachmentStateChangesResponse">
            <summary>
            This is the response object from the SubmitAttachmentStateChanges operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.SubmitAttachmentStateChangesResponse.Acknowledgment">
            <summary>
            Gets and sets the property Acknowledgment. 
            <para>
            Acknowledgement of the state change.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.SystemControl">
            <summary>
            A list of namespaced kernel parameters to set in the container. This parameter maps
            to <c>Sysctls</c> in the docker container create command and the <c>--sysctl</c> option
            to docker run. For example, you can configure <c>net.ipv4.tcp_keepalive_time</c> setting
            to maintain longer lived connections.
            
             
            <para>
            We don't recommend that you specify network-related <c>systemControls</c> parameters
            for multiple containers in a single task that also uses either the <c>awsvpc</c> or
            <c>host</c> network mode. Doing this has the following disadvantages:
            </para>
             <ul> <li> 
            <para>
            For tasks that use the <c>awsvpc</c> network mode including Fargate, if you set <c>systemControls</c>
            for any container, it applies to all containers in the task. If you set different
            <c>systemControls</c> for multiple containers in a single task, the container that's
            started last determines which <c>systemControls</c> take effect.
            </para>
             </li> <li> 
            <para>
            For tasks that use the <c>host</c> network mode, the network namespace <c>systemControls</c>
            aren't supported.
            </para>
             </li> </ul> 
            <para>
            If you're setting an IPC resource namespace to use for the containers in the task,
            the following conditions apply to your system controls. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#task_definition_ipcmode">IPC
            mode</a>.
            </para>
             <ul> <li> 
            <para>
            For tasks that use the <c>host</c> IPC mode, IPC namespace <c>systemControls</c> aren't
            supported.
            </para>
             </li> <li> 
            <para>
            For tasks that use the <c>task</c> IPC mode, IPC namespace <c>systemControls</c> values
            apply to all containers within a task.
            </para>
             </li> </ul> <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note> <note> 
            <para>
            This parameter is only supported for tasks that are hosted on Fargate if the tasks
            are using platform version <c>1.4.0</c> or later (Linux). This isn't supported for
            Windows containers on Fargate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.SystemControl.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespaced kernel parameter to set a <c>value</c> for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.SystemControl.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The namespaced kernel parameter to set a <c>value</c> for.
            </para>
             
            <para>
            Valid IPC namespace values: <c>"kernel.msgmax" | "kernel.msgmnb" | "kernel.msgmni"
            | "kernel.sem" | "kernel.shmall" | "kernel.shmmax" | "kernel.shmmni" | "kernel.shm_rmid_forced"</c>,
            and <c>Sysctls</c> that start with <c>"fs.mqueue.*"</c> 
            </para>
             
            <para>
            Valid network namespace values: <c>Sysctls</c> that start with <c>"net.*"</c> 
            </para>
             
            <para>
            All of these values are supported by Fargate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Tag">
            <summary>
            The metadata that you apply to a resource to help you categorize and organize them.
            Each tag consists of a key and an optional value. You define them.
            
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <c>aws:</c>, <c>AWS:</c>, or any upper or lowercase combination of such
            as a prefix for either keys or values as it is reserved for Amazon Web Services use.
            You cannot edit or delete tag keys or values with this prefix. Tags with this prefix
            do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            One part of a key-value pair that make up a tag. A <c>key</c> is a general label that
            acts like a category for more specific tag values.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The optional part of a key-value pair that make up a tag. A <c>value</c> acts as a
            descriptor within a tag category (key).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Associates the specified tags to a resource with the specified <c>resourceArn</c>.
            If existing tags on a resource aren't specified in the request parameters, they aren't
            changed. When a resource is deleted, the tags that are associated with that resource
            are deleted as well.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource to add tags to. Currently, the supported
            resources are Amazon ECS capacity providers, tasks, services, task definitions, clusters,
            and container instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to add to the resource. A tag is an array of key-value pairs.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <c>aws:</c>, <c>AWS:</c>, or any upper or lowercase combination of such
            as a prefix for either keys or values as it is reserved for Amazon Web Services use.
            You cannot edit or delete tag keys or values with this prefix. Tags with this prefix
            do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TargetNotConnectedException">
            <summary>
            The execute command cannot run. This error can be caused by any of the following configuration
            issues:
            
             <ul> <li> 
            <para>
            Incorrect IAM permissions
            </para>
             </li> <li> 
            <para>
            The SSM agent is not installed or is not running
            </para>
             </li> <li> 
            <para>
             There is an interface Amazon VPC endpoint for Amazon ECS, but there is not one for
            Systems Manager Session Manager
            </para>
             </li> </ul> 
            <para>
            For information about how to troubleshoot the issues, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-exec.html">Troubleshooting
            issues with ECS Exec</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotConnectedException.#ctor(System.String)">
            <summary>
            Constructs a new TargetNotConnectedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotConnectedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TargetNotConnectedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotConnectedException.#ctor(System.Exception)">
            <summary>
            Construct instance of TargetNotConnectedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotConnectedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TargetNotConnectedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotConnectedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TargetNotConnectedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.TargetNotFoundException">
            <summary>
            The specified target wasn't found. You can view your available container instances
            with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListContainerInstances.html">ListContainerInstances</a>.
            Amazon ECS container instances are cluster-specific and Region-specific.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new TargetNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TargetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of TargetNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TargetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TargetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.Task">
            <summary>
            Details on a task in a cluster.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Attachments">
            <summary>
            Gets and sets the property Attachments. 
            <para>
            The Elastic Network Adapter that's associated with the task if the task uses the <c>awsvpc</c>
            network mode.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            The attributes of the task
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone for the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.CapacityProviderName">
            <summary>
            Gets and sets the property CapacityProviderName. 
            <para>
            The capacity provider that's associated with the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.ClusterArn">
            <summary>
            Gets and sets the property ClusterArn. 
            <para>
            The ARN of the cluster that hosts the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Connectivity">
            <summary>
            Gets and sets the property Connectivity. 
            <para>
            The connectivity status of a task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.ConnectivityAt">
            <summary>
            Gets and sets the property ConnectivityAt. 
            <para>
            The Unix timestamp for the time when the task last went into <c>CONNECTED</c> status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.ContainerInstanceArn">
            <summary>
            Gets and sets the property ContainerInstanceArn. 
            <para>
            The ARN of the container instances that host the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Containers">
            <summary>
            Gets and sets the property Containers. 
            <para>
            The containers that's associated with the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Cpu">
            <summary>
            Gets and sets the property Cpu. 
            <para>
            The number of CPU units used by the task as expressed in a task definition. It can
            be expressed as an integer using CPU units (for example, <c>1024</c>). It can also
            be expressed as a string using vCPUs (for example, <c>1 vCPU</c> or <c>1 vcpu</c>).
            String values are converted to an integer that indicates the CPU units when the task
            definition is registered.
            </para>
             
            <para>
            If you use the EC2 launch type, this field is optional. Supported values are between
            <c>128</c> CPU units (<c>0.125</c> vCPUs) and <c>10240</c> CPU units (<c>10</c> vCPUs).
            </para>
             
            <para>
            If you use the Fargate launch type, this field is required. You must use one of the
            following values. These values determine the range of supported values for the <c>memory</c>
            parameter:
            </para>
             
            <para>
            The CPU units cannot be less than 1 vCPU when you use Windows containers on Fargate.
            </para>
             <ul> <li> 
            <para>
            256 (.25 vCPU) - Available <c>memory</c> values: 512 (0.5 GB), 1024 (1 GB), 2048 (2
            GB)
            </para>
             </li> <li> 
            <para>
            512 (.5 vCPU) - Available <c>memory</c> values: 1024 (1 GB), 2048 (2 GB), 3072 (3
            GB), 4096 (4 GB)
            </para>
             </li> <li> 
            <para>
            1024 (1 vCPU) - Available <c>memory</c> values: 2048 (2 GB), 3072 (3 GB), 4096 (4
            GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB)
            </para>
             </li> <li> 
            <para>
            2048 (2 vCPU) - Available <c>memory</c> values: 4096 (4 GB) and 16384 (16 GB) in increments
            of 1024 (1 GB)
            </para>
             </li> <li> 
            <para>
            4096 (4 vCPU) - Available <c>memory</c> values: 8192 (8 GB) and 30720 (30 GB) in increments
            of 1024 (1 GB)
            </para>
             </li> <li> 
            <para>
            8192 (8 vCPU) - Available <c>memory</c> values: 16 GB and 60 GB in 4 GB increments
            </para>
             
            <para>
            This option requires Linux platform <c>1.4.0</c> or later.
            </para>
             </li> <li> 
            <para>
            16384 (16vCPU) - Available <c>memory</c> values: 32GB and 120 GB in 8 GB increments
            </para>
             
            <para>
            This option requires Linux platform <c>1.4.0</c> or later.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix timestamp for the time when the task was created. More specifically, it's
            for the time when the task entered the <c>PENDING</c> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.DesiredStatus">
            <summary>
            Gets and sets the property DesiredStatus. 
            <para>
            The desired status of the task. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-lifecycle.html">Task
            Lifecycle</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.EnableExecuteCommand">
            <summary>
            Gets and sets the property EnableExecuteCommand. 
            <para>
            Determines whether execute command functionality is turned on for this task. If <c>true</c>,
            execute command functionality is turned on all the containers in the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.EphemeralStorage">
            <summary>
            Gets and sets the property EphemeralStorage. 
            <para>
            The ephemeral storage settings for the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.ExecutionStoppedAt">
            <summary>
            Gets and sets the property ExecutionStoppedAt. 
            <para>
            The Unix timestamp for the time when the task execution stopped.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.FargateEphemeralStorage">
            <summary>
            Gets and sets the property FargateEphemeralStorage. 
            <para>
            The Fargate ephemeral storage settings for the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Group">
            <summary>
            Gets and sets the property Group. 
            <para>
            The name of the task group that's associated with the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.HealthStatus">
            <summary>
            Gets and sets the property HealthStatus. 
            <para>
            The health status for the task. It's determined by the health of the essential containers
            in the task. If all essential containers in the task are reporting as <c>HEALTHY</c>,
            the task status also reports as <c>HEALTHY</c>. If any essential containers in the
            task are reporting as <c>UNHEALTHY</c> or <c>UNKNOWN</c>, the task status also reports
            as <c>UNHEALTHY</c> or <c>UNKNOWN</c>.
            </para>
             <note> 
            <para>
            The Amazon ECS container agent doesn't monitor or report on Docker health checks that
            are embedded in a container image and not specified in the container definition. For
            example, this includes those specified in a parent image or from the image's Dockerfile.
            Health check parameters that are specified in a container definition override any
            Docker health checks that are found in the container image.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.InferenceAccelerators">
            <summary>
            Gets and sets the property InferenceAccelerators. 
            <para>
            The Elastic Inference accelerator that's associated with the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.LastStatus">
            <summary>
            Gets and sets the property LastStatus. 
            <para>
            The last known status for the task. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-lifecycle.html">Task
            Lifecycle</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.LaunchType">
            <summary>
            Gets and sets the property LaunchType. 
            <para>
            The infrastructure where your task runs on. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html">Amazon
            ECS launch types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            The amount of memory (in MiB) that the task uses as expressed in a task definition.
            It can be expressed as an integer using MiB (for example, <c>1024</c>). If it's expressed
            as a string using GB (for example, <c>1GB</c> or <c>1 GB</c>), it's converted to an
            integer indicating the MiB when the task definition is registered.
            </para>
             
            <para>
            If you use the EC2 launch type, this field is optional.
            </para>
             
            <para>
            If you use the Fargate launch type, this field is required. You must use one of the
            following values. The value that you choose determines the range of supported values
            for the <c>cpu</c> parameter.
            </para>
             <ul> <li> 
            <para>
            512 (0.5 GB), 1024 (1 GB), 2048 (2 GB) - Available <c>cpu</c> values: 256 (.25 vCPU)
            </para>
             </li> <li> 
            <para>
            1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB) - Available <c>cpu</c> values:
            512 (.5 vCPU)
            </para>
             </li> <li> 
            <para>
            2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192
            (8 GB) - Available <c>cpu</c> values: 1024 (1 vCPU)
            </para>
             </li> <li> 
            <para>
            Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB) - Available <c>cpu</c>
            values: 2048 (2 vCPU)
            </para>
             </li> <li> 
            <para>
            Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB) - Available <c>cpu</c>
            values: 4096 (4 vCPU)
            </para>
             </li> <li> 
            <para>
            Between 16 GB and 60 GB in 4 GB increments - Available <c>cpu</c> values: 8192 (8
            vCPU)
            </para>
             
            <para>
            This option requires Linux platform <c>1.4.0</c> or later.
            </para>
             </li> <li> 
            <para>
            Between 32GB and 120 GB in 8 GB increments - Available <c>cpu</c> values: 16384 (16
            vCPU)
            </para>
             
            <para>
            This option requires Linux platform <c>1.4.0</c> or later.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Overrides">
            <summary>
            Gets and sets the property Overrides. 
            <para>
            One or more container overrides.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.PlatformFamily">
            <summary>
            Gets and sets the property PlatformFamily. 
            <para>
            The operating system that your tasks are running on. A platform family is specified
            only for tasks that use the Fargate launch type. 
            </para>
             
            <para>
             All tasks that run as part of this service must use the same <c>platformFamily</c>
            value as the service (for example, <c>LINUX.</c>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            The platform version where your task runs on. A platform version is only specified
            for tasks that use the Fargate launch type. If you didn't specify one, the <c>LATEST</c>
            platform version is used. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html">Fargate
            Platform Versions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.PullStartedAt">
            <summary>
            Gets and sets the property PullStartedAt. 
            <para>
            The Unix timestamp for the time when the container image pull began.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.PullStoppedAt">
            <summary>
            Gets and sets the property PullStoppedAt. 
            <para>
            The Unix timestamp for the time when the container image pull completed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.StartedAt">
            <summary>
            Gets and sets the property StartedAt. 
            <para>
            The Unix timestamp for the time when the task started. More specifically, it's for
            the time when the task transitioned from the <c>PENDING</c> state to the <c>RUNNING</c>
            state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.StartedBy">
            <summary>
            Gets and sets the property StartedBy. 
            <para>
            The tag specified when a task is started. If an Amazon ECS service started the task,
            the <c>startedBy</c> parameter contains the deployment ID of that service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.StopCode">
            <summary>
            Gets and sets the property StopCode. 
            <para>
            The stop code indicating why a task was stopped. The <c>stoppedReason</c> might contain
            additional details. 
            </para>
             
            <para>
            For more information about stop code, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/stopped-task-error-codes.html">Stopped
            tasks error codes</a> in the <i>Amazon ECS Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.StoppedAt">
            <summary>
            Gets and sets the property StoppedAt. 
            <para>
            The Unix timestamp for the time when the task was stopped. More specifically, it's
            for the time when the task transitioned from the <c>RUNNING</c> state to the <c>STOPPED</c>
            state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.StoppedReason">
            <summary>
            Gets and sets the property StoppedReason. 
            <para>
            The reason that the task was stopped.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.StoppingAt">
            <summary>
            Gets and sets the property StoppingAt. 
            <para>
            The Unix timestamp for the time when the task stops. More specifically, it's for the
            time when the task transitions from the <c>RUNNING</c> state to <c>STOPPING</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the task to help you categorize and organize the task.
            Each tag consists of a key and an optional value. You define both the key and value.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <c>aws:</c>, <c>AWS:</c>, or any upper or lowercase combination of such
            as a prefix for either keys or values as it is reserved for Amazon Web Services use.
            You cannot edit or delete tag keys or values with this prefix. Tags with this prefix
            do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.TaskArn">
            <summary>
            Gets and sets the property TaskArn. 
            <para>
            The Amazon Resource Name (ARN) of the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.TaskDefinitionArn">
            <summary>
            Gets and sets the property TaskDefinitionArn. 
            <para>
            The ARN of the task definition that creates the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version counter for the task. Every time a task experiences a change that starts
            a CloudWatch event, the version counter is incremented. If you replicate your Amazon
            ECS task state with CloudWatch Events, you can compare the version of a task reported
            by the Amazon ECS API actions with the version reported in CloudWatch Events for the
            task (inside the <c>detail</c> object) to verify that the version in your event stream
            is current.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TaskDefinition">
            <summary>
            The details of a task definition which describes the container and volume definitions
            of an Amazon Elastic Container Service task. You can specify which Docker images to
            use, the required resources, and other configurations related to launching the task
            definition through an Amazon ECS service or task.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.Compatibilities">
            <summary>
            Gets and sets the property Compatibilities. 
            <para>
            Amazon ECS validates the task definition parameters with those supported by the launch
            type. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html">Amazon
            ECS launch types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.ContainerDefinitions">
            <summary>
            Gets and sets the property ContainerDefinitions. 
            <para>
            A list of container definitions in JSON format that describe the different containers
            that make up your task. For more information about container definition parameters
            and defaults, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html">Amazon
            ECS Task Definitions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.Cpu">
            <summary>
            Gets and sets the property Cpu. 
            <para>
            The number of <c>cpu</c> units used by the task. If you use the EC2 launch type, this
            field is optional. Any value can be used. If you use the Fargate launch type, this
            field is required. You must use one of the following values. The value that you choose
            determines your range of valid values for the <c>memory</c> parameter.
            </para>
             
            <para>
            If you use the EC2 launch type, this field is optional. Supported values are between
            <c>128</c> CPU units (<c>0.125</c> vCPUs) and <c>10240</c> CPU units (<c>10</c> vCPUs).
            </para>
             
            <para>
            The CPU units cannot be less than 1 vCPU when you use Windows containers on Fargate.
            </para>
             <ul> <li> 
            <para>
            256 (.25 vCPU) - Available <c>memory</c> values: 512 (0.5 GB), 1024 (1 GB), 2048 (2
            GB)
            </para>
             </li> <li> 
            <para>
            512 (.5 vCPU) - Available <c>memory</c> values: 1024 (1 GB), 2048 (2 GB), 3072 (3
            GB), 4096 (4 GB)
            </para>
             </li> <li> 
            <para>
            1024 (1 vCPU) - Available <c>memory</c> values: 2048 (2 GB), 3072 (3 GB), 4096 (4
            GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB)
            </para>
             </li> <li> 
            <para>
            2048 (2 vCPU) - Available <c>memory</c> values: 4096 (4 GB) and 16384 (16 GB) in increments
            of 1024 (1 GB)
            </para>
             </li> <li> 
            <para>
            4096 (4 vCPU) - Available <c>memory</c> values: 8192 (8 GB) and 30720 (30 GB) in increments
            of 1024 (1 GB)
            </para>
             </li> <li> 
            <para>
            8192 (8 vCPU) - Available <c>memory</c> values: 16 GB and 60 GB in 4 GB increments
            </para>
             
            <para>
            This option requires Linux platform <c>1.4.0</c> or later.
            </para>
             </li> <li> 
            <para>
            16384 (16vCPU) - Available <c>memory</c> values: 32GB and 120 GB in 8 GB increments
            </para>
             
            <para>
            This option requires Linux platform <c>1.4.0</c> or later.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.DeregisteredAt">
            <summary>
            Gets and sets the property DeregisteredAt. 
            <para>
            The Unix timestamp for the time when the task definition was deregistered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.EnableFaultInjection">
            <summary>
            Gets and sets the property EnableFaultInjection. 
            <para>
            Enables fault injection and allows for fault injection requests to be accepted from
            the task's containers. The default value is <c>false</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.EphemeralStorage">
            <summary>
            Gets and sets the property EphemeralStorage. 
            <para>
            The ephemeral storage settings to use for tasks run with the task definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.ExecutionRoleArn">
            <summary>
            Gets and sets the property ExecutionRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the task execution role that grants the Amazon ECS
            container agent permission to make Amazon Web Services API calls on your behalf. For
            informationabout the required IAM roles for Amazon ECS, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/security-ecs-iam-role-overview.html">IAM
            roles for Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.Family">
            <summary>
            Gets and sets the property Family. 
            <para>
            The name of a family that this task definition is registered to. Up to 255 characters
            are allowed. Letters (both uppercase and lowercase letters), numbers, hyphens (-),
            and underscores (_) are allowed.
            </para>
             
            <para>
            A family groups multiple versions of a task definition. Amazon ECS gives the first
            task definition that you registered to a family a revision number of 1. Amazon ECS
            gives sequential revision numbers to each task definition that you add.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.InferenceAccelerators">
            <summary>
            Gets and sets the property InferenceAccelerators. 
            <para>
            The Elastic Inference accelerator that's associated with the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.IpcMode">
            <summary>
            Gets and sets the property IpcMode. 
            <para>
            The IPC resource namespace to use for the containers in the task. The valid values
            are <c>host</c>, <c>task</c>, or <c>none</c>. If <c>host</c> is specified, then all
            containers within the tasks that specified the <c>host</c> IPC mode on the same container
            instance share the same IPC resources with the host Amazon EC2 instance. If <c>task</c>
            is specified, all containers within the specified task share the same IPC resources.
            If <c>none</c> is specified, then IPC resources within the containers of a task are
            private and not shared with other containers in a task or on the container instance.
            If no value is specified, then the IPC resource namespace sharing depends on the Docker
            daemon setting on the container instance.
            </para>
             
            <para>
            If the <c>host</c> IPC mode is used, be aware that there is a heightened risk of undesired
            IPC namespace expose.
            </para>
             
            <para>
            If you are setting namespaced kernel parameters using <c>systemControls</c> for the
            containers in the task, the following will apply to your IPC resource namespace. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html">System
            Controls</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             <ul> <li> 
            <para>
            For tasks that use the <c>host</c> IPC mode, IPC namespace related <c>systemControls</c>
            are not supported.
            </para>
             </li> <li> 
            <para>
            For tasks that use the <c>task</c> IPC mode, IPC namespace related <c>systemControls</c>
            will apply to all containers within a task.
            </para>
             </li> </ul> <note> 
            <para>
            This parameter is not supported for Windows containers or tasks run on Fargate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            The amount (in MiB) of memory used by the task.
            </para>
             
            <para>
            If your tasks runs on Amazon EC2 instances, you must specify either a task-level memory
            value or a container-level memory value. This field is optional and any value can
            be used. If a task-level memory value is specified, the container-level memory value
            is optional. For more information regarding container-level memory and memory reservation,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ContainerDefinition.html">ContainerDefinition</a>.
            </para>
             
            <para>
            If your tasks runs on Fargate, this field is required. You must use one of the following
            values. The value you choose determines your range of valid values for the <c>cpu</c>
            parameter.
            </para>
             <ul> <li> 
            <para>
            512 (0.5 GB), 1024 (1 GB), 2048 (2 GB) - Available <c>cpu</c> values: 256 (.25 vCPU)
            </para>
             </li> <li> 
            <para>
            1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB) - Available <c>cpu</c> values:
            512 (.5 vCPU)
            </para>
             </li> <li> 
            <para>
            2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192
            (8 GB) - Available <c>cpu</c> values: 1024 (1 vCPU)
            </para>
             </li> <li> 
            <para>
            Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB) - Available <c>cpu</c>
            values: 2048 (2 vCPU)
            </para>
             </li> <li> 
            <para>
            Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB) - Available <c>cpu</c>
            values: 4096 (4 vCPU)
            </para>
             </li> <li> 
            <para>
            Between 16 GB and 60 GB in 4 GB increments - Available <c>cpu</c> values: 8192 (8
            vCPU)
            </para>
             
            <para>
            This option requires Linux platform <c>1.4.0</c> or later.
            </para>
             </li> <li> 
            <para>
            Between 32GB and 120 GB in 8 GB increments - Available <c>cpu</c> values: 16384 (16
            vCPU)
            </para>
             
            <para>
            This option requires Linux platform <c>1.4.0</c> or later.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.NetworkMode">
            <summary>
            Gets and sets the property NetworkMode. 
            <para>
            The Docker networking mode to use for the containers in the task. The valid values
            are <c>none</c>, <c>bridge</c>, <c>awsvpc</c>, and <c>host</c>. If no network mode
            is specified, the default is <c>bridge</c>.
            </para>
             
            <para>
            For Amazon ECS tasks on Fargate, the <c>awsvpc</c> network mode is required. For Amazon
            ECS tasks on Amazon EC2 Linux instances, any network mode can be used. For Amazon
            ECS tasks on Amazon EC2 Windows instances, <c>&lt;default&gt;</c> or <c>awsvpc</c>
            can be used. If the network mode is set to <c>none</c>, you cannot specify port mappings
            in your container definitions, and the tasks containers do not have external connectivity.
            The <c>host</c> and <c>awsvpc</c> network modes offer the highest networking performance
            for containers because they use the EC2 network stack instead of the virtualized network
            stack provided by the <c>bridge</c> mode.
            </para>
             
            <para>
            With the <c>host</c> and <c>awsvpc</c> network modes, exposed container ports are
            mapped directly to the corresponding host port (for the <c>host</c> network mode)
            or the attached elastic network interface port (for the <c>awsvpc</c> network mode),
            so you cannot take advantage of dynamic host port mappings. 
            </para>
             <important> 
            <para>
            When using the <c>host</c> network mode, you should not run containers using the root
            user (UID 0). It is considered best practice to use a non-root user.
            </para>
             </important> 
            <para>
            If the network mode is <c>awsvpc</c>, the task is allocated an elastic network interface,
            and you must specify a <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_NetworkConfiguration.html">NetworkConfiguration</a>
            value when you create a service or run a task with the task definition. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html">Task
            Networking</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            If the network mode is <c>host</c>, you cannot run multiple instantiations of the
            same task on a single container instance when port mappings are used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.PidMode">
            <summary>
            Gets and sets the property PidMode. 
            <para>
            The process namespace to use for the containers in the task. The valid values are
            <c>host</c> or <c>task</c>. On Fargate for Linux containers, the only valid value
            is <c>task</c>. For example, monitoring sidecars might need <c>pidMode</c> to access
            information about other containers running in the same task.
            </para>
             
            <para>
            If <c>host</c> is specified, all containers within the tasks that specified the <c>host</c>
            PID mode on the same container instance share the same process namespace with the
            host Amazon EC2 instance.
            </para>
             
            <para>
            If <c>task</c> is specified, all containers within the specified task share the same
            process namespace.
            </para>
             
            <para>
            If no value is specified, the default is a private namespace for each container.
            </para>
             
            <para>
            If the <c>host</c> PID mode is used, there's a heightened risk of undesired process
            namespace exposure.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note> <note> 
            <para>
            This parameter is only supported for tasks that are hosted on Fargate if the tasks
            are using platform version <c>1.4.0</c> or later (Linux). This isn't supported for
            Windows containers on Fargate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.PlacementConstraints">
            <summary>
            Gets and sets the property PlacementConstraints. 
            <para>
            An array of placement constraint objects to use for tasks.
            </para>
             <note> 
            <para>
            This parameter isn't supported for tasks run on Fargate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.ProxyConfiguration">
            <summary>
            Gets and sets the property ProxyConfiguration. 
            <para>
            The configuration details for the App Mesh proxy.
            </para>
             
            <para>
            Your Amazon ECS container instances require at least version 1.26.0 of the container
            agent and at least version 1.26.0-1 of the <c>ecs-init</c> package to use a proxy
            configuration. If your container instances are launched from the Amazon ECS optimized
            AMI version <c>20190301</c> or later, they contain the required versions of the container
            agent and <c>ecs-init</c>. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html">Amazon
            ECS-optimized Linux AMI</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.RegisteredAt">
            <summary>
            Gets and sets the property RegisteredAt. 
            <para>
            The Unix timestamp for the time when the task definition was registered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.RegisteredBy">
            <summary>
            Gets and sets the property RegisteredBy. 
            <para>
            The principal that registered the task definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.RequiresAttributes">
            <summary>
            Gets and sets the property RequiresAttributes. 
            <para>
            The container instance attributes required by your task. When an Amazon EC2 instance
            is registered to your cluster, the Amazon ECS container agent assigns some standard
            attributes to the instance. You can apply custom attributes. These are specified as
            key-value pairs using the Amazon ECS console or the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutAttributes.html">PutAttributes</a>
            API. These attributes are used when determining task placement for tasks hosted on
            Amazon EC2 instances. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes">Attributes</a>
            in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             <note> 
            <para>
            This parameter isn't supported for tasks run on Fargate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.RequiresCompatibilities">
            <summary>
            Gets and sets the property RequiresCompatibilities. 
            <para>
            The task launch types the task definition was validated against. The valid values
            are <c>EC2</c>, <c>FARGATE</c>, and <c>EXTERNAL</c>. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html">Amazon
            ECS launch types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.Revision">
            <summary>
            Gets and sets the property Revision. 
            <para>
            The revision of the task in a particular family. The revision is a version number
            of a task definition in a family. When you register a task definition for the first
            time, the revision is <c>1</c>. Each time that you register a new revision of a task
            definition in the same family, the revision value always increases by one. This is
            even if you deregistered previous revisions in this family.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.RuntimePlatform">
            <summary>
            Gets and sets the property RuntimePlatform. 
            <para>
            The operating system that your task definitions are running on. A platform family
            is specified only for tasks using the Fargate launch type. 
            </para>
             
            <para>
            When you specify a task in a service, this value must match the <c>runtimePlatform</c>
            value of the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the task definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.TaskDefinitionArn">
            <summary>
            Gets and sets the property TaskDefinitionArn. 
            <para>
            The full Amazon Resource Name (ARN) of the task definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.TaskRoleArn">
            <summary>
            Gets and sets the property TaskRoleArn. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the Identity and Access Management
            role that grants containers in the task permission to call Amazon Web Services APIs
            on your behalf. For informationabout the required IAM roles for Amazon ECS, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/security-ecs-iam-role-overview.html">IAM
            roles for Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.Volumes">
            <summary>
            Gets and sets the property Volumes. 
            <para>
            The list of data volume definitions for the task. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_data_volumes.html">Using
            data volumes in tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             <note> 
            <para>
            The <c>host</c> and <c>sourcePath</c> parameters aren't supported for tasks run on
            Fargate. 
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TaskDefinitionPlacementConstraint">
            <summary>
            The constraint on task placement in the task definition. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html">Task
            placement constraints</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            
             <note> 
            <para>
            Task placement constraints aren't supported for tasks run on Fargate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinitionPlacementConstraint.Expression">
            <summary>
            Gets and sets the property Expression. 
            <para>
            A cluster query language expression to apply to the constraint. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
            query language</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinitionPlacementConstraint.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of constraint. The <c>MemberOf</c> constraint restricts selection to be from
            a group of valid candidates.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TaskEphemeralStorage">
            <summary>
            The amount of ephemeral storage to allocate for the task.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskEphemeralStorage.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            Specify an Key Management Service key ID to encrypt the ephemeral storage for the
            task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskEphemeralStorage.SizeInGiB">
            <summary>
            Gets and sets the property SizeInGiB. 
            <para>
            The total amount, in GiB, of the ephemeral storage to set for the task. The minimum
            supported value is <c>20</c> GiB and the maximum supported value is&#x2028; <c>200</c>
            GiB.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TaskManagedEBSVolumeConfiguration">
            <summary>
            The configuration for the Amazon EBS volume that Amazon ECS creates and manages on
            your behalf. These settings are used to create each Amazon EBS volume, with one volume
            created for each task.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskManagedEBSVolumeConfiguration.Encrypted">
            <summary>
            Gets and sets the property Encrypted. 
            <para>
            Indicates whether the volume should be encrypted. If no value is specified, encryption
            is turned on by default. This parameter maps 1:1 with the <c>Encrypted</c> parameter
            of the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html">CreateVolume
            API</a> in the <i>Amazon EC2 API Reference</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskManagedEBSVolumeConfiguration.FilesystemType">
            <summary>
            Gets and sets the property FilesystemType. 
            <para>
            The Linux filesystem type for the volume. For volumes created from a snapshot, you
            must specify the same filesystem type that the volume was using when the snapshot
            was created. If there is a filesystem type mismatch, the task will fail to start.
            </para>
             
            <para>
            The available filesystem types are&#x2028; <c>ext3</c>, <c>ext4</c>, and <c>xfs</c>.
            If no value is specified, the <c>xfs</c> filesystem type is used by default.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskManagedEBSVolumeConfiguration.Iops">
            <summary>
            Gets and sets the property Iops. 
            <para>
            The number of I/O operations per second (IOPS). For <c>gp3</c>, <c>io1</c>, and <c>io2</c>
            volumes, this represents the number of IOPS that are provisioned for the volume. For
            <c>gp2</c> volumes, this represents the baseline performance of the volume and the
            rate at which the volume accumulates I/O credits for bursting.
            </para>
             
            <para>
            The following are the supported values for each volume type.
            </para>
             <ul> <li> 
            <para>
             <c>gp3</c>: 3,000 - 16,000 IOPS
            </para>
             </li> <li> 
            <para>
             <c>io1</c>: 100 - 64,000 IOPS
            </para>
             </li> <li> 
            <para>
             <c>io2</c>: 100 - 256,000 IOPS
            </para>
             </li> </ul> 
            <para>
            This parameter is required for <c>io1</c> and <c>io2</c> volume types. The default
            for <c>gp3</c> volumes is <c>3,000 IOPS</c>. This parameter is not supported for <c>st1</c>,
            <c>sc1</c>, or <c>standard</c> volume types.
            </para>
             
            <para>
            This parameter maps 1:1 with the <c>Iops</c> parameter of the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html">CreateVolume
            API</a> in the <i>Amazon EC2 API Reference</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskManagedEBSVolumeConfiguration.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The Amazon Resource Name (ARN) identifier of the Amazon Web Services Key Management
            Service key to use for Amazon EBS encryption. When encryption is turned on and no
            Amazon Web Services Key Management Service key is specified, the default Amazon Web
            Services managed key for Amazon EBS volumes is used. This parameter maps 1:1 with
            the <c>KmsKeyId</c> parameter of the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html">CreateVolume
            API</a> in the <i>Amazon EC2 API Reference</i>.
            </para>
             <important> 
            <para>
            Amazon Web Services authenticates the Amazon Web Services Key Management Service key
            asynchronously. Therefore, if you specify an ID, alias, or ARN that is invalid, the
            action can appear to complete, but eventually fails.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskManagedEBSVolumeConfiguration.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of the IAM role to associate with this volume. This is the Amazon ECS infrastructure
            IAM role that is used to manage your Amazon Web Services infrastructure. We recommend
            using the Amazon ECS-managed <c>AmazonECSInfrastructureRolePolicyForVolumes</c> IAM
            policy with this role. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/infrastructure_IAM_role.html">Amazon
            ECS infrastructure IAM role</a> in the <i>Amazon ECS Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskManagedEBSVolumeConfiguration.SizeInGiB">
            <summary>
            Gets and sets the property SizeInGiB. 
            <para>
            The size of the volume in GiB. You must specify either a volume size or a snapshot
            ID. If you specify a snapshot ID, the snapshot size is used for the volume size by
            default. You can optionally specify a volume size greater than or equal to the snapshot
            size. This parameter maps 1:1 with the <c>Size</c> parameter of the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html">CreateVolume
            API</a> in the <i>Amazon EC2 API Reference</i>.
            </para>
             
            <para>
            The following are the supported volume size values for each volume type.
            </para>
             <ul> <li> 
            <para>
             <c>gp2</c> and <c>gp3</c>: 1-16,384
            </para>
             </li> <li> 
            <para>
             <c>io1</c> and <c>io2</c>: 4-16,384
            </para>
             </li> <li> 
            <para>
             <c>st1</c> and <c>sc1</c>: 125-16,384
            </para>
             </li> <li> 
            <para>
             <c>standard</c>: 1-1,024
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskManagedEBSVolumeConfiguration.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The snapshot that Amazon ECS uses to create the volume. You must specify either a
            snapshot ID or a volume size. This parameter maps 1:1 with the <c>SnapshotId</c> parameter
            of the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html">CreateVolume
            API</a> in the <i>Amazon EC2 API Reference</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskManagedEBSVolumeConfiguration.TagSpecifications">
            <summary>
            Gets and sets the property TagSpecifications. 
            <para>
            The tags to apply to the volume. Amazon ECS applies service-managed tags by default.
            This parameter maps 1:1 with the <c>TagSpecifications.N</c> parameter of the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html">CreateVolume
            API</a> in the <i>Amazon EC2 API Reference</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskManagedEBSVolumeConfiguration.TerminationPolicy">
            <summary>
            Gets and sets the property TerminationPolicy. 
            <para>
            The termination policy for the volume when the task exits. This provides a way to
            control whether Amazon ECS terminates the Amazon EBS volume when the task stops.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskManagedEBSVolumeConfiguration.Throughput">
            <summary>
            Gets and sets the property Throughput. 
            <para>
            The throughput to provision for a volume, in MiB/s, with a maximum of 1,000 MiB/s.
            This parameter maps 1:1 with the <c>Throughput</c> parameter of the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html">CreateVolume
            API</a> in the <i>Amazon EC2 API Reference</i>.
            </para>
             <important> 
            <para>
            This parameter is only supported for the <c>gp3</c> volume type.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskManagedEBSVolumeConfiguration.VolumeType">
            <summary>
            Gets and sets the property VolumeType. 
            <para>
            The volume type. This parameter maps 1:1 with the <c>VolumeType</c> parameter of the
            <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html">CreateVolume
            API</a> in the <i>Amazon EC2 API Reference</i>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html">Amazon
            EBS volume types</a> in the <i>Amazon EC2 User Guide</i>.
            </para>
             
            <para>
            The following are the supported volume types.
            </para>
             <ul> <li> 
            <para>
            General Purpose SSD: <c>gp2</c>|<c>gp3</c> 
            </para>
             </li> <li> 
            <para>
            Provisioned IOPS SSD: <c>io1</c>|<c>io2</c> 
            </para>
             </li> <li> 
            <para>
            Throughput Optimized HDD: <c>st1</c> 
            </para>
             </li> <li> 
            <para>
            Cold HDD: <c>sc1</c> 
            </para>
             </li> <li> 
            <para>
            Magnetic: <c>standard</c> 
            </para>
             <note> 
            <para>
            The magnetic volume type is not supported on Fargate.
            </para>
             </note> </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TaskManagedEBSVolumeTerminationPolicy">
            <summary>
            The termination policy for the Amazon EBS volume when the task exits. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volume-types">Amazon
            ECS volume termination policy</a>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskManagedEBSVolumeTerminationPolicy.DeleteOnTermination">
            <summary>
            Gets and sets the property DeleteOnTermination. 
            <para>
            Indicates whether the volume should be deleted on when the task stops. If a value
            of <c>true</c> is specified, &#x2028;Amazon ECS deletes the Amazon EBS volume on your
            behalf when the task goes into the <c>STOPPED</c> state. If no value is specified,
            the &#x2028;default value is <c>true</c> is used. When set to <c>false</c>, Amazon
            ECS leaves the volume in your &#x2028;account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TaskOverride">
            <summary>
            The overrides that are associated with a task.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskOverride.ContainerOverrides">
            <summary>
            Gets and sets the property ContainerOverrides. 
            <para>
            One or more container overrides that are sent to a task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskOverride.Cpu">
            <summary>
            Gets and sets the property Cpu. 
            <para>
            The CPU override for the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskOverride.EphemeralStorage">
            <summary>
            Gets and sets the property EphemeralStorage. 
            <para>
            The ephemeral storage setting override for the task.
            </para>
             <note> 
            <para>
            This parameter is only supported for tasks hosted on Fargate that use the following
            platform versions:
            </para>
             <ul> <li> 
            <para>
            Linux platform version <c>1.4.0</c> or later.
            </para>
             </li> <li> 
            <para>
            Windows platform version <c>1.0.0</c> or later.
            </para>
             </li> </ul> </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskOverride.ExecutionRoleArn">
            <summary>
            Gets and sets the property ExecutionRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the task execution role override for the task. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_execution_IAM_role.html">Amazon
            ECS task execution IAM role</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskOverride.InferenceAcceleratorOverrides">
            <summary>
            Gets and sets the property InferenceAcceleratorOverrides. 
            <para>
            The Elastic Inference accelerator override for the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskOverride.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            The memory override for the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskOverride.TaskRoleArn">
            <summary>
            Gets and sets the property TaskRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the role that containers in this task can assume.
            All containers in this task are granted the permissions that are specified in this
            role. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html">IAM
            Role for Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TaskSet">
            <summary>
            Information about a set of Amazon ECS tasks in either an CodeDeploy or an <c>EXTERNAL</c>
            deployment. An Amazon ECS task set includes details such as the desired number of
            tasks, how many tasks are running, and whether the task set serves production traffic.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.CapacityProviderStrategy">
            <summary>
            Gets and sets the property CapacityProviderStrategy. 
            <para>
            The capacity provider strategy that are associated with the task set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.ClusterArn">
            <summary>
            Gets and sets the property ClusterArn. 
            <para>
            The Amazon Resource Name (ARN) of the cluster that the service that hosts the task
            set exists in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.ComputedDesiredCount">
            <summary>
            Gets and sets the property ComputedDesiredCount. 
            <para>
            The computed desired count for the task set. This is calculated by multiplying the
            service's <c>desiredCount</c> by the task set's <c>scale</c> percentage. The result
            is always rounded up. For example, if the computed desired count is 1.2, it rounds
            up to 2 tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix timestamp for the time when the task set was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.ExternalId">
            <summary>
            Gets and sets the property ExternalId. 
            <para>
            The external ID associated with the task set.
            </para>
             
            <para>
            If an CodeDeploy deployment created a task set, the <c>externalId</c> parameter contains
            the CodeDeploy deployment ID.
            </para>
             
            <para>
            If a task set is created for an external deployment and is associated with a service
            discovery registry, the <c>externalId</c> parameter contains the <c>ECS_TASK_SET_EXTERNAL_ID</c>
            Cloud Map attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.FargateEphemeralStorage">
            <summary>
            Gets and sets the property FargateEphemeralStorage. 
            <para>
            The Fargate ephemeral storage settings for the task set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID of the task set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.LaunchType">
            <summary>
            Gets and sets the property LaunchType. 
            <para>
            The launch type the tasks in the task set are using. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html">Amazon
            ECS launch types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.LoadBalancers">
            <summary>
            Gets and sets the property LoadBalancers. 
            <para>
            Details on a load balancer that are used with a task set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.NetworkConfiguration">
            <summary>
            Gets and sets the property NetworkConfiguration. 
            <para>
            The network configuration for the task set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.PendingCount">
            <summary>
            Gets and sets the property PendingCount. 
            <para>
            The number of tasks in the task set that are in the <c>PENDING</c> status during a
            deployment. A task in the <c>PENDING</c> state is preparing to enter the <c>RUNNING</c>
            state. A task set enters the <c>PENDING</c> status when it launches for the first
            time or when it's restarted after being in the <c>STOPPED</c> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.PlatformFamily">
            <summary>
            Gets and sets the property PlatformFamily. 
            <para>
            The operating system that your tasks in the set are running on. A platform family
            is specified only for tasks that use the Fargate launch type. 
            </para>
             
            <para>
             All tasks in the set must have the same value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            The Fargate platform version where the tasks in the task set are running. A platform
            version is only specified for tasks run on Fargate. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html">Fargate
            platform versions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.RunningCount">
            <summary>
            Gets and sets the property RunningCount. 
            <para>
            The number of tasks in the task set that are in the <c>RUNNING</c> status during a
            deployment. A task in the <c>RUNNING</c> state is running and ready for use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.Scale">
            <summary>
            Gets and sets the property Scale. 
            <para>
            A floating-point percentage of your desired number of tasks to place and keep running
            in the task set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.ServiceArn">
            <summary>
            Gets and sets the property ServiceArn. 
            <para>
            The Amazon Resource Name (ARN) of the service the task set exists in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.ServiceRegistries">
            <summary>
            Gets and sets the property ServiceRegistries. 
            <para>
            The details for the service discovery registries to assign to this task set. For more
            information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html">Service
            discovery</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.StabilityStatus">
            <summary>
            Gets and sets the property StabilityStatus. 
            <para>
            The stability status. This indicates whether the task set has reached a steady state.
            If the following conditions are met, the task set are in <c>STEADY_STATE</c>:
            </para>
             <ul> <li> 
            <para>
            The task <c>runningCount</c> is equal to the <c>computedDesiredCount</c>.
            </para>
             </li> <li> 
            <para>
            The <c>pendingCount</c> is <c>0</c>.
            </para>
             </li> <li> 
            <para>
            There are no tasks that are running on container instances in the <c>DRAINING</c>
            status.
            </para>
             </li> <li> 
            <para>
            All tasks are reporting a healthy status from the load balancers, service discovery,
            and container health checks.
            </para>
             </li> </ul> 
            <para>
            If any of those conditions aren't met, the stability status returns <c>STABILIZING</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.StabilityStatusAt">
            <summary>
            Gets and sets the property StabilityStatusAt. 
            <para>
            The Unix timestamp for the time when the task set stability status was retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.StartedBy">
            <summary>
            Gets and sets the property StartedBy. 
            <para>
            The tag specified when a task set is started. If an CodeDeploy deployment created
            the task set, the <c>startedBy</c> parameter is <c>CODE_DEPLOY</c>. If an external
            deployment created the task set, the <c>startedBy</c> field isn't used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the task set. The following describes each state.
            </para>
             <dl> <dt>PRIMARY</dt> <dd> 
            <para>
            The task set is serving production traffic.
            </para>
             </dd> <dt>ACTIVE</dt> <dd> 
            <para>
            The task set isn't serving production traffic.
            </para>
             </dd> <dt>DRAINING</dt> <dd> 
            <para>
            The tasks in the task set are being stopped, and their corresponding targets are being
            deregistered from their target group.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the task set to help you categorize and organize them.
            Each tag consists of a key and an optional value. You define both.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <c>aws:</c>, <c>AWS:</c>, or any upper or lowercase combination of such
            as a prefix for either keys or values as it is reserved for Amazon Web Services use.
            You cannot edit or delete tag keys or values with this prefix. Tags with this prefix
            do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The task definition that the task set is using.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.TaskSetArn">
            <summary>
            Gets and sets the property TaskSetArn. 
            <para>
            The Amazon Resource Name (ARN) of the task set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
            The Unix timestamp for the time when the task set was last updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TaskSetNotFoundException">
            <summary>
            The specified task set wasn't found. You can view your available task sets with <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTaskSets.html">DescribeTaskSets</a>.
            Task sets are specific to each cluster, service and Region.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.TaskSetNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new TaskSetNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.TaskSetNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TaskSetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TaskSetNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of TaskSetNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TaskSetNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TaskSetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TaskSetNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TaskSetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.TaskVolumeConfiguration">
            <summary>
            Configuration settings for the task volume that was <c>configuredAtLaunch</c> that
            weren't set during <c>RegisterTaskDef</c>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskVolumeConfiguration.ManagedEBSVolume">
            <summary>
            Gets and sets the property ManagedEBSVolume. 
            <para>
            The configuration for the Amazon EBS volume that Amazon ECS creates and manages on
            your behalf. These settings are used to create each Amazon EBS volume, with one volume
            created for each task. The Amazon EBS volumes are visible in your account in the Amazon
            EC2 console once they are created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskVolumeConfiguration.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the volume. This value must match the volume name from the <c>Volume</c>
            object in the task definition.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TimeoutConfiguration">
            <summary>
            An object that represents the timeout configurations for Service Connect.
            
             <note> 
            <para>
            If <c>idleTimeout</c> is set to a time that is less than <c>perRequestTimeout</c>,
            the connection will close when the <c>idleTimeout</c> is reached and not the <c>perRequestTimeout</c>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TimeoutConfiguration.IdleTimeoutSeconds">
            <summary>
            Gets and sets the property IdleTimeoutSeconds. 
            <para>
            The amount of time in seconds a connection will stay active while idle. A value of
            <c>0</c> can be set to disable <c>idleTimeout</c>.
            </para>
             
            <para>
            The <c>idleTimeout</c> default for <c>HTTP</c>/<c>HTTP2</c>/<c>GRPC</c> is 5 minutes.
            </para>
             
            <para>
            The <c>idleTimeout</c> default for <c>TCP</c> is 1 hour.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TimeoutConfiguration.PerRequestTimeoutSeconds">
            <summary>
            Gets and sets the property PerRequestTimeoutSeconds. 
            <para>
            The amount of time waiting for the upstream to respond with a complete response per
            request. A value of <c>0</c> can be set to disable <c>perRequestTimeout</c>. <c>perRequestTimeout</c>
            can only be set if Service Connect <c>appProtocol</c> isn't <c>TCP</c>. Only <c>idleTimeout</c>
            is allowed for <c>TCP</c> <c>appProtocol</c>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Tmpfs">
            <summary>
            The container path, mount options, and size of the tmpfs mount.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Tmpfs.ContainerPath">
            <summary>
            Gets and sets the property ContainerPath. 
            <para>
            The absolute file path where the tmpfs volume is to be mounted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Tmpfs.MountOptions">
            <summary>
            Gets and sets the property MountOptions. 
            <para>
            The list of tmpfs volume mount options.
            </para>
             
            <para>
            Valid values: <c>"defaults" | "ro" | "rw" | "suid" | "nosuid" | "dev" | "nodev" |
            "exec" | "noexec" | "sync" | "async" | "dirsync" | "remount" | "mand" | "nomand" |
            "atime" | "noatime" | "diratime" | "nodiratime" | "bind" | "rbind" | "unbindable"
            | "runbindable" | "private" | "rprivate" | "shared" | "rshared" | "slave" | "rslave"
            | "relatime" | "norelatime" | "strictatime" | "nostrictatime" | "mode" | "uid" | "gid"
            | "nr_inodes" | "nr_blocks" | "mpol"</c> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Tmpfs.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The maximum size (in MiB) of the tmpfs volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Ulimit">
            <summary>
            The <c>ulimit</c> settings to pass to the container.
            
             
            <para>
            Amazon ECS tasks hosted on Fargate use the default resource limit values set by the
            operating system with the exception of the <c>nofile</c> resource limit parameter
            which Fargate overrides. The <c>nofile</c> resource limit sets a restriction on the
            number of open files that a container can use. The default <c>nofile</c> soft limit
            is <c> 65535</c> and the default hard limit is <c>65535</c>.
            </para>
             
            <para>
            You can specify the <c>ulimit</c> settings for a container in a task definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Ulimit.HardLimit">
            <summary>
            Gets and sets the property HardLimit. 
            <para>
            The hard limit for the <c>ulimit</c> type. The value can be specified in bytes, seconds,
            or as a count, depending on the <c>type</c> of the <c>ulimit</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Ulimit.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The <c>type</c> of the <c>ulimit</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Ulimit.SoftLimit">
            <summary>
            Gets and sets the property SoftLimit. 
            <para>
            The soft limit for the <c>ulimit</c> type. The value can be specified in bytes, seconds,
            or as a count, depending on the <c>type</c> of the <c>ulimit</c>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UnsupportedFeatureException">
            <summary>
            The specified task isn't supported in this Region.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.UnsupportedFeatureException.#ctor(System.String)">
            <summary>
            Constructs a new UnsupportedFeatureException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.UnsupportedFeatureException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnsupportedFeatureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.UnsupportedFeatureException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnsupportedFeatureException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.UnsupportedFeatureException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedFeatureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.UnsupportedFeatureException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedFeatureException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Deletes specified tags from a resource.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource to delete tags from. Currently, the
            supported resources are Amazon ECS capacity providers, tasks, services, task definitions,
            clusters, and container instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            The keys of the tags to be removed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateCapacityProviderRequest">
            <summary>
            Container for the parameters to the UpdateCapacityProvider operation.
            Modifies the parameters for a capacity provider.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateCapacityProviderRequest.AutoScalingGroupProvider">
            <summary>
            Gets and sets the property AutoScalingGroupProvider. 
            <para>
            An object that represent the parameters to update for the Auto Scaling group capacity
            provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateCapacityProviderRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the capacity provider to update.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateCapacityProviderResponse">
            <summary>
            This is the response object from the UpdateCapacityProvider operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateCapacityProviderResponse.CapacityProvider">
            <summary>
            Gets and sets the property CapacityProvider. 
            <para>
            Details about the capacity provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateClusterRequest">
            <summary>
            Container for the parameters to the UpdateCluster operation.
            Updates the cluster.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateClusterRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The name of the cluster to modify the settings for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateClusterRequest.Configuration">
            <summary>
            Gets and sets the property Configuration. 
            <para>
            The execute command configuration for the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateClusterRequest.ServiceConnectDefaults">
            <summary>
            Gets and sets the property ServiceConnectDefaults. 
            <para>
            Use this parameter to set a default Service Connect namespace. After you set a default
            Service Connect namespace, any new services with Service Connect turned on that are
            created in the cluster are added as client services in the namespace. This setting
            only applies to new services that set the <c>enabled</c> parameter to <c>true</c>
            in the <c>ServiceConnectConfiguration</c>. You can set the namespace of each service
            individually in the <c>ServiceConnectConfiguration</c> to override this default parameter.
            </para>
             
            <para>
            Tasks that run in a namespace can use short names to connect to services in the namespace.
            Tasks can connect to services across all of the clusters in the namespace. Tasks connect
            through a managed proxy container that collects logs and metrics for increased visibility.
            Only the tasks that Amazon ECS services create are supported with Service Connect.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html">Service
            Connect</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateClusterRequest.Settings">
            <summary>
            Gets and sets the property Settings. 
            <para>
            The cluster settings for your cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateClusterResponse">
            <summary>
            This is the response object from the UpdateCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateClusterResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            Details about the cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateClusterSettingsRequest">
            <summary>
            Container for the parameters to the UpdateClusterSettings operation.
            Modifies the settings to use for a cluster.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateClusterSettingsRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The name of the cluster to modify the settings for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateClusterSettingsRequest.Settings">
            <summary>
            Gets and sets the property Settings. 
            <para>
            The setting to use by default for a cluster. This parameter is used to turn on CloudWatch
            Container Insights for a cluster. If this value is specified, it overrides the <c>containerInsights</c>
            value set with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutAccountSetting.html">PutAccountSetting</a>
            or <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutAccountSettingDefault.html">PutAccountSettingDefault</a>.
            </para>
             <important> 
            <para>
            Currently, if you delete an existing cluster that does not have Container Insights
            turned on, and then create a new cluster with the same name with Container Insights
            tuned on, Container Insights will not actually be turned on. If you want to preserve
            the same name for your existing cluster and turn on Container Insights, you must wait
            7 days before you can re-create it.
            </para>
             </important>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateClusterSettingsResponse">
            <summary>
            This is the response object from the UpdateClusterSettings operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateClusterSettingsResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            Details about the cluster
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateContainerAgentRequest">
            <summary>
            Container for the parameters to the UpdateContainerAgent operation.
            Updates the Amazon ECS container agent on a specified container instance. Updating
            the Amazon ECS container agent doesn't interrupt running tasks or services on the
            container instance. The process for updating the agent differs depending on whether
            your container instance was launched with the Amazon ECS-optimized AMI or another
            operating system.
            
             <note> 
            <para>
            The <c>UpdateContainerAgent</c> API isn't supported for container instances using
            the Amazon ECS-optimized Amazon Linux 2 (arm64) AMI. To update the container agent,
            you can update the <c>ecs-init</c> package. This updates the agent. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/agent-update-ecs-ami.html">Updating
            the Amazon ECS container agent</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note> <note> 
            <para>
            Agent updates with the <c>UpdateContainerAgent</c> API operation do not apply to Windows
            container instances. We recommend that you launch new container instances to update
            the agent version in your Windows clusters.
            </para>
             </note> 
            <para>
            The <c>UpdateContainerAgent</c> API requires an Amazon ECS-optimized AMI or Amazon
            Linux AMI with the <c>ecs-init</c> service installed and running. For help updating
            the Amazon ECS container agent on other operating systems, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html#manually_update_agent">Manually
            updating the Amazon ECS container agent</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerAgentRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that your container
            instance is running on. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerAgentRequest.ContainerInstance">
            <summary>
            Gets and sets the property ContainerInstance. 
            <para>
            The container instance ID or full ARN entries for the container instance where you
            would like to update the Amazon ECS container agent.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateContainerAgentResponse">
            <summary>
            This is the response object from the UpdateContainerAgent operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerAgentResponse.ContainerInstance">
            <summary>
            Gets and sets the property ContainerInstance. 
            <para>
            The container instance that the container agent was updated for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateContainerInstancesStateRequest">
            <summary>
            Container for the parameters to the UpdateContainerInstancesState operation.
            Modifies the status of an Amazon ECS container instance.
            
             
            <para>
            Once a container instance has reached an <c>ACTIVE</c> state, you can change the status
            of a container instance to <c>DRAINING</c> to manually remove an instance from a cluster,
            for example to perform system updates, update the Docker daemon, or scale down the
            cluster size.
            </para>
             <important> 
            <para>
            A container instance can't be changed to <c>DRAINING</c> until it has reached an <c>ACTIVE</c>
            status. If the instance is in any other status, an error will be received.
            </para>
             </important> 
            <para>
            When you set a container instance to <c>DRAINING</c>, Amazon ECS prevents new tasks
            from being scheduled for placement on the container instance and replacement service
            tasks are started on other container instances in the cluster if the resources are
            available. Service tasks on the container instance that are in the <c>PENDING</c>
            state are stopped immediately.
            </para>
             
            <para>
            Service tasks on the container instance that are in the <c>RUNNING</c> state are stopped
            and replaced according to the service's deployment configuration parameters, <c>minimumHealthyPercent</c>
            and <c>maximumPercent</c>. You can change the deployment configuration of your service
            using <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>.
            </para>
             <ul> <li> 
            <para>
            If <c>minimumHealthyPercent</c> is below 100%, the scheduler can ignore <c>desiredCount</c>
            temporarily during task replacement. For example, <c>desiredCount</c> is four tasks,
            a minimum of 50% allows the scheduler to stop two existing tasks before starting two
            new tasks. If the minimum is 100%, the service scheduler can't remove existing tasks
            until the replacement tasks are considered healthy. Tasks for services that do not
            use a load balancer are considered healthy if they're in the <c>RUNNING</c> state.
            Tasks for services that use a load balancer are considered healthy if they're in the
            <c>RUNNING</c> state and are reported as healthy by the load balancer.
            </para>
             </li> <li> 
            <para>
            The <c>maximumPercent</c> parameter represents an upper limit on the number of running
            tasks during task replacement. You can use this to define the replacement batch size.
            For example, if <c>desiredCount</c> is four tasks, a maximum of 200% starts four new
            tasks before stopping the four tasks to be drained, provided that the cluster resources
            required to do this are available. If the maximum is 100%, then replacement tasks
            can't start until the draining tasks have stopped.
            </para>
             </li> </ul> 
            <para>
            Any <c>PENDING</c> or <c>RUNNING</c> tasks that do not belong to a service aren't
            affected. You must wait for them to finish or stop them manually.
            </para>
             
            <para>
            A container instance has completed draining when it has no more <c>RUNNING</c> tasks.
            You can verify this using <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListTasks.html">ListTasks</a>.
            </para>
             
            <para>
            When a container instance has been drained, you can set a container instance to <c>ACTIVE</c>
            status and once it has reached that status the Amazon ECS scheduler can begin scheduling
            tasks on the instance again.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerInstancesStateRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container
            instance to update. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerInstancesStateRequest.ContainerInstances">
            <summary>
            Gets and sets the property ContainerInstances. 
            <para>
            A list of up to 10 container instance IDs or full ARN entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerInstancesStateRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The container instance state to update the container instance with. The only valid
            values for this action are <c>ACTIVE</c> and <c>DRAINING</c>. A container instance
            can only be updated to <c>DRAINING</c> status once it has reached an <c>ACTIVE</c>
            state. If a container instance is in <c>REGISTERING</c>, <c>DEREGISTERING</c>, or
            <c>REGISTRATION_FAILED</c> state you can describe the container instance but can't
            update the container instance state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateContainerInstancesStateResponse">
            <summary>
            This is the response object from the UpdateContainerInstancesState operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerInstancesStateResponse.ContainerInstances">
            <summary>
            Gets and sets the property ContainerInstances. 
            <para>
            The list of container instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerInstancesStateResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateInProgressException">
            <summary>
            There's already a current Amazon ECS container agent update in progress on the container
            instance that's specified. If the container agent becomes disconnected while it's
            in a transitional stage, such as <c>PENDING</c> or <c>STAGING</c>, the update process
            can get stuck in that state. However, when the agent reconnects, it resumes where
            it stopped previously.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.UpdateInProgressException.#ctor(System.String)">
            <summary>
            Constructs a new UpdateInProgressException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.UpdateInProgressException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UpdateInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.UpdateInProgressException.#ctor(System.Exception)">
            <summary>
            Construct instance of UpdateInProgressException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.UpdateInProgressException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UpdateInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.UpdateInProgressException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UpdateInProgressException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateServicePrimaryTaskSetRequest">
            <summary>
            Container for the parameters to the UpdateServicePrimaryTaskSet operation.
            Modifies which task set in a service is the primary task set. Any parameters that
            are updated on the primary task set in a service will transition to the service. This
            is used when a service uses the <c>EXTERNAL</c> deployment controller type. For more
            information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServicePrimaryTaskSetRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service
            that the task set exists in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServicePrimaryTaskSetRequest.PrimaryTaskSet">
            <summary>
            Gets and sets the property PrimaryTaskSet. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the task set to set as the primary
            task set in the deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServicePrimaryTaskSetRequest.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the service that the task set
            exists in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateServicePrimaryTaskSetResponse">
            <summary>
            This is the response object from the UpdateServicePrimaryTaskSet operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServicePrimaryTaskSetResponse.TaskSet">
            <summary>
            Gets and sets the property TaskSet. 
            <para>
            The details about the task set.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateServiceRequest">
            <summary>
            Container for the parameters to the UpdateService operation.
            Modifies the parameters of a service.
            
             <note> 
            <para>
            On March 21, 2024, a change was made to resolve the task definition revision before
            authorization. When a task definition revision is not specified, authorization will
            occur using the latest revision of a task definition.
            </para>
             </note> 
            <para>
            For services using the rolling update (<c>ECS</c>) you can update the desired count,
            deployment configuration, network configuration, load balancers, service registries,
            enable ECS managed tags option, propagate tags option, task placement constraints
            and strategies, and task definition. When you update any of these parameters, Amazon
            ECS starts new tasks with the new configuration. 
            </para>
             
            <para>
            You can attach Amazon EBS volumes to Amazon ECS tasks by configuring the volume when
            starting or running a task, or when creating or updating a service. For more infomation,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volume-types">Amazon
            EBS volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>. You
            can update your volume configurations and trigger a new deployment. <c>volumeConfigurations</c>
            is only supported for REPLICA service and not DAEMON service. If you leave <c>volumeConfigurations</c>
            <c>null</c>, it doesn't trigger a new deployment. For more infomation on volumes,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volume-types">Amazon
            EBS volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            For services using the blue/green (<c>CODE_DEPLOY</c>) deployment controller, only
            the desired count, deployment configuration, health check grace period, task placement
            constraints and strategies, enable ECS managed tags option, and propagate tags can
            be updated using this API. If the network configuration, platform version, task definition,
            or load balancer need to be updated, create a new CodeDeploy deployment. For more
            information, see <a href="https://docs.aws.amazon.com/codedeploy/latest/APIReference/API_CreateDeployment.html">CreateDeployment</a>
            in the <i>CodeDeploy API Reference</i>.
            </para>
             
            <para>
            For services using an external deployment controller, you can update only the desired
            count, task placement constraints and strategies, health check grace period, enable
            ECS managed tags option, and propagate tags option, using this API. If the launch
            type, load balancer, network configuration, platform version, or task definition need
            to be updated, create a new task set For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateTaskSet.html">CreateTaskSet</a>.
            </para>
             
            <para>
            You can add to or subtract from the number of instantiations of a task definition
            in a service by specifying the cluster that the service is running in and a new <c>desiredCount</c>
            parameter.
            </para>
             
            <para>
            You can attach Amazon EBS volumes to Amazon ECS tasks by configuring the volume when
            starting or running a task, or when creating or updating a service. For more infomation,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volume-types">Amazon
            EBS volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            If you have updated the container image of your application, you can create a new
            task definition with that image and deploy it to your service. The service scheduler
            uses the minimum healthy percent and maximum percent parameters (in the service's
            deployment configuration) to determine the deployment strategy.
            </para>
             <note> 
            <para>
            If your updated Docker image uses the same tag as what is in the existing task definition
            for your service (for example, <c>my_image:latest</c>), you don't need to create a
            new revision of your task definition. You can update the service using the <c>forceNewDeployment</c>
            option. The new tasks launched by the deployment pull the current image/tag combination
            from your repository when they start.
            </para>
             </note> 
            <para>
            You can also update the deployment configuration of a service. When a deployment is
            triggered by updating the task definition of a service, the service scheduler uses
            the deployment configuration parameters, <c>minimumHealthyPercent</c> and <c>maximumPercent</c>,
            to determine the deployment strategy.
            </para>
             <ul> <li> 
            <para>
            If <c>minimumHealthyPercent</c> is below 100%, the scheduler can ignore <c>desiredCount</c>
            temporarily during a deployment. For example, if <c>desiredCount</c> is four tasks,
            a minimum of 50% allows the scheduler to stop two existing tasks before starting two
            new tasks. Tasks for services that don't use a load balancer are considered healthy
            if they're in the <c>RUNNING</c> state. Tasks for services that use a load balancer
            are considered healthy if they're in the <c>RUNNING</c> state and are reported as
            healthy by the load balancer.
            </para>
             </li> <li> 
            <para>
            The <c>maximumPercent</c> parameter represents an upper limit on the number of running
            tasks during a deployment. You can use it to define the deployment batch size. For
            example, if <c>desiredCount</c> is four tasks, a maximum of 200% starts four new tasks
            before stopping the four older tasks (provided that the cluster resources required
            to do this are available).
            </para>
             </li> </ul> 
            <para>
            When <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>
            stops a task during a deployment, the equivalent of <c>docker stop</c> is issued to
            the containers running in the task. This results in a <c>SIGTERM</c> and a 30-second
            timeout. After this, <c>SIGKILL</c> is sent and the containers are forcibly stopped.
            If the container handles the <c>SIGTERM</c> gracefully and exits within 30 seconds
            from receiving it, no <c>SIGKILL</c> is sent.
            </para>
             
            <para>
            When the service scheduler launches new tasks, it determines task placement in your
            cluster with the following logic.
            </para>
             <ul> <li> 
            <para>
            Determine which of the container instances in your cluster can support your service's
            task definition. For example, they have the required CPU, memory, ports, and container
            instance attributes.
            </para>
             </li> <li> 
            <para>
            By default, the service scheduler attempts to balance tasks across Availability Zones
            in this manner even though you can choose a different placement strategy.
            </para>
             <ul> <li> 
            <para>
            Sort the valid container instances by the fewest number of running tasks for this
            service in the same Availability Zone as the instance. For example, if zone A has
            one running service task and zones B and C each have zero, valid container instances
            in either zone B or C are considered optimal for placement.
            </para>
             </li> <li> 
            <para>
            Place the new service task on a valid container instance in an optimal Availability
            Zone (based on the previous steps), favoring container instances with the fewest number
            of running tasks for this service.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            When the service scheduler stops running tasks, it attempts to maintain balance across
            the Availability Zones in your cluster using the following logic: 
            </para>
             <ul> <li> 
            <para>
            Sort the container instances by the largest number of running tasks for this service
            in the same Availability Zone as the instance. For example, if zone A has one running
            service task and zones B and C each have two, container instances in either zone B
            or C are considered optimal for termination.
            </para>
             </li> <li> 
            <para>
            Stop the task on a container instance in an optimal Availability Zone (based on the
            previous steps), favoring container instances with the largest number of running tasks
            for this service.
            </para>
             </li> </ul> <note> 
            <para>
            You must have a service-linked role when you update any of the following service properties:
            </para>
             <ul> <li> 
            <para>
             <c>loadBalancers</c>,
            </para>
             </li> <li> 
            <para>
             <c>serviceRegistries</c> 
            </para>
             </li> </ul> 
            <para>
            For more information about the role see the <c>CreateService</c> request parameter
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html#ECS-CreateService-request-role">
            <c>role</c> </a>. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.AvailabilityZoneRebalancing">
            <summary>
            Gets and sets the property AvailabilityZoneRebalancing. 
            <para>
            Indicates whether to use Availability Zone rebalancing for the service.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-rebalancing.html">Balancing
            an Amazon ECS service across Availability Zones</a> in the <i>Amazon Elastic Container
            Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.CapacityProviderStrategy">
            <summary>
            Gets and sets the property CapacityProviderStrategy. 
            <para>
            The capacity provider strategy to update the service to use.
            </para>
             
            <para>
            if the service uses the default capacity provider strategy for the cluster, the service
            can be updated to use one or more capacity providers as opposed to the default capacity
            provider strategy. However, when a service is using a capacity provider strategy that's
            not the default capacity provider strategy, the service can't be updated to use the
            cluster's default capacity provider strategy.
            </para>
             
            <para>
            A capacity provider strategy consists of one or more capacity providers along with
            the <c>base</c> and <c>weight</c> to assign to them. A capacity provider must be associated
            with the cluster to be used in a capacity provider strategy. The <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutClusterCapacityProviders.html">PutClusterCapacityProviders</a>
            API is used to associate a capacity provider with a cluster. Only capacity providers
            with an <c>ACTIVE</c> or <c>UPDATING</c> status can be used.
            </para>
             
            <para>
            If specifying a capacity provider that uses an Auto Scaling group, the capacity provider
            must already be created. New capacity providers can be created with the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateClusterCapacityProvider.html">CreateClusterCapacityProvider</a>
            API operation.
            </para>
             
            <para>
            To use a Fargate capacity provider, specify either the <c>FARGATE</c> or <c>FARGATE_SPOT</c>
            capacity providers. The Fargate capacity providers are available to all accounts and
            only need to be associated with a cluster to be used.
            </para>
             
            <para>
            The <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutClusterCapacityProviders.html">PutClusterCapacityProviders</a>API
            operation is used to update the list of available capacity providers for a cluster
            after the cluster is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that your service
            runs on. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.DeploymentConfiguration">
            <summary>
            Gets and sets the property DeploymentConfiguration. 
            <para>
            Optional deployment parameters that control how many tasks run during the deployment
            and the ordering of stopping and starting tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.DesiredCount">
            <summary>
            Gets and sets the property DesiredCount. 
            <para>
            The number of instantiations of the task to place and keep running in your service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.EnableECSManagedTags">
            <summary>
            Gets and sets the property EnableECSManagedTags. 
            <para>
            Determines whether to turn on Amazon ECS managed tags for the tasks in the service.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html">Tagging
            Your Amazon ECS Resources</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             
            <para>
            Only tasks launched after the update will reflect the update. To update the tags on
            all tasks, set <c>forceNewDeployment</c> to <c>true</c>, so that Amazon ECS starts
            new tasks with the updated tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.EnableExecuteCommand">
            <summary>
            Gets and sets the property EnableExecuteCommand. 
            <para>
            If <c>true</c>, this enables execute command functionality on all task containers.
            </para>
             
            <para>
            If you do not want to override the value that was set when the service was created,
            you can set this to <c>null</c> when performing this action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.ForceNewDeployment">
            <summary>
            Gets and sets the property ForceNewDeployment. 
            <para>
            Determines whether to force a new deployment of the service. By default, deployments
            aren't forced. You can use this option to start a new deployment with no service definition
            changes. For example, you can update a service's tasks to use a newer Docker image
            with the same image/tag combination (<c>my_image:latest</c>) or to roll Fargate tasks
            onto a newer platform version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.HealthCheckGracePeriodSeconds">
            <summary>
            Gets and sets the property HealthCheckGracePeriodSeconds. 
            <para>
            The period of time, in seconds, that the Amazon ECS service scheduler ignores unhealthy
            Elastic Load Balancing, VPC Lattice, and container health checks after a task has
            first started. If you don't specify a health check grace period value, the default
            value of <c>0</c> is used. If you don't use any of the health checks, then <c>healthCheckGracePeriodSeconds</c>
            is unused.
            </para>
             
            <para>
            If your service's tasks take a while to start and respond to health checks, you can
            specify a health check grace period of up to 2,147,483,647 seconds (about 69 years).
            During that time, the Amazon ECS service scheduler ignores health check status. This
            grace period can prevent the service scheduler from marking tasks as unhealthy and
            stopping them before they have time to come up.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.LoadBalancers">
            <summary>
            Gets and sets the property LoadBalancers. 
            <para>
            A list of Elastic Load Balancing load balancer objects. It contains the load balancer
            name, the container name, and the container port to access from the load balancer.
            The container name is as it appears in a container definition.
            </para>
             
            <para>
            When you add, update, or remove a load balancer configuration, Amazon ECS starts new
            tasks with the updated Elastic Load Balancing configuration, and then stops the old
            tasks when the new tasks are running.
            </para>
             
            <para>
            For services that use rolling updates, you can add, update, or remove Elastic Load
            Balancing target groups. You can update from a single target group to multiple target
            groups and from multiple target groups to a single target group.
            </para>
             
            <para>
            For services that use blue/green deployments, you can update Elastic Load Balancing
            target groups by using <c> <a href="https://docs.aws.amazon.com/codedeploy/latest/APIReference/API_CreateDeployment.html">CreateDeployment</a>
            </c> through CodeDeploy. Note that multiple target groups are not supported for blue/green
            deployments. For more information see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/register-multiple-targetgroups.html">Register
            multiple target groups with a service</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>. 
            </para>
             
            <para>
            For services that use the external deployment controller, you can add, update, or
            remove load balancers by using <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateTaskSet.html">CreateTaskSet</a>.
            Note that multiple target groups are not supported for external deployments. For more
            information see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/register-multiple-targetgroups.html">Register
            multiple target groups with a service</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>. 
            </para>
             
            <para>
            You can remove existing <c>loadBalancers</c> by passing an empty list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.NetworkConfiguration">
            <summary>
            Gets and sets the property NetworkConfiguration. 
            <para>
            An object representing the network configuration for the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.PlacementConstraints">
            <summary>
            Gets and sets the property PlacementConstraints. 
            <para>
            An array of task placement constraint objects to update the service to use. If no
            value is specified, the existing placement constraints for the service will remain
            unchanged. If this value is specified, it will override any existing placement constraints
            defined for the service. To remove all existing placement constraints, specify an
            empty array.
            </para>
             
            <para>
            You can specify a maximum of 10 constraints for each task. This limit includes constraints
            in the task definition and those specified at runtime.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.PlacementStrategy">
            <summary>
            Gets and sets the property PlacementStrategy. 
            <para>
            The task placement strategy objects to update the service to use. If no value is specified,
            the existing placement strategy for the service will remain unchanged. If this value
            is specified, it will override the existing placement strategy defined for the service.
            To remove an existing placement strategy, specify an empty object.
            </para>
             
            <para>
            You can specify a maximum of five strategy rules for each service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            The platform version that your tasks in the service run on. A platform version is
            only specified for tasks using the Fargate launch type. If a platform version is not
            specified, the <c>LATEST</c> platform version is used. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html">Fargate
            Platform Versions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.PropagateTags">
            <summary>
            Gets and sets the property PropagateTags. 
            <para>
            Determines whether to propagate the tags from the task definition or the service to
            the task. If no value is specified, the tags aren't propagated.
            </para>
             
            <para>
            Only tasks launched after the update will reflect the update. To update the tags on
            all tasks, set <c>forceNewDeployment</c> to <c>true</c>, so that Amazon ECS starts
            new tasks with the updated tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The name of the service to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.ServiceConnectConfiguration">
            <summary>
            Gets and sets the property ServiceConnectConfiguration. 
            <para>
            The configuration for this service to discover and connect to services, and be discovered
            by, and connected from, other services within a namespace.
            </para>
             
            <para>
            Tasks that run in a namespace can use short names to connect to services in the namespace.
            Tasks can connect to services across all of the clusters in the namespace. Tasks connect
            through a managed proxy container that collects logs and metrics for increased visibility.
            Only the tasks that Amazon ECS services create are supported with Service Connect.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html">Service
            Connect</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.ServiceRegistries">
            <summary>
            Gets and sets the property ServiceRegistries. 
            <para>
            The details for the service discovery registries to assign to this service. For more
            information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html">Service
            Discovery</a>.
            </para>
             
            <para>
            When you add, update, or remove the service registries configuration, Amazon ECS starts
            new tasks with the updated service registries configuration, and then stops the old
            tasks when the new tasks are running.
            </para>
             
            <para>
            You can remove existing <c>serviceRegistries</c> by passing an empty list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The <c>family</c> and <c>revision</c> (<c>family:revision</c>) or full ARN of the
            task definition to run in your service. If a <c>revision</c> is not specified, the
            latest <c>ACTIVE</c> revision is used. If you modify the task definition with <c>UpdateService</c>,
            Amazon ECS spawns a task with the new version of the task definition and then stops
            an old task after the new version is running.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.VolumeConfigurations">
            <summary>
            Gets and sets the property VolumeConfigurations. 
            <para>
            The details of the volume that was <c>configuredAtLaunch</c>. You can configure the
            size, volumeType, IOPS, throughput, snapshot and encryption in <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ServiceManagedEBSVolumeConfiguration.html">ServiceManagedEBSVolumeConfiguration</a>.
            The <c>name</c> of the volume must match the <c>name</c> from the task definition.
            If set to null, no new deployment is triggered. Otherwise, if this configuration differs
            from the existing one, it triggers a new deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.VpcLatticeConfigurations">
            <summary>
            Gets and sets the property VpcLatticeConfigurations. 
            <para>
            An object representing the VPC Lattice configuration for the service being updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateServiceResponse">
            <summary>
            This is the response object from the UpdateService operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceResponse.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The full description of your service following the update call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateTaskProtectionRequest">
            <summary>
            Container for the parameters to the UpdateTaskProtection operation.
            Updates the protection status of a task. You can set <c>protectionEnabled</c> to <c>true</c>
            to protect your task from termination during scale-in events from <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-auto-scaling.html">Service
            Autoscaling</a> or <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">deployments</a>.
            
             
            <para>
            Task-protection, by default, expires after 2 hours at which point Amazon ECS clears
            the <c>protectionEnabled</c> property making the task eligible for termination by
            a subsequent scale-in event.
            </para>
             
            <para>
            You can specify a custom expiration period for task protection from 1 minute to up
            to 2,880 minutes (48 hours). To specify the custom expiration period, set the <c>expiresInMinutes</c>
            property. The <c>expiresInMinutes</c> property is always reset when you invoke this
            operation for a task that already has <c>protectionEnabled</c> set to <c>true</c>.
            You can keep extending the protection expiration period of a task by invoking this
            operation repeatedly.
            </para>
             
            <para>
            To learn more about Amazon ECS task protection, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-scale-in-protection.html">Task
            scale-in protection</a> in the <i> <i>Amazon Elastic Container Service Developer Guide</i>
            </i>.
            </para>
             <note> 
            <para>
            This operation is only supported for tasks belonging to an Amazon ECS service. Invoking
            this operation for a standalone task will result in an <c>TASK_NOT_VALID</c> failure.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/api_failures_messages.html">API
            failure reasons</a>.
            </para>
             </note> <important> 
            <para>
            If you prefer to set task protection from within the container, we recommend using
            the <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-scale-in-protection-endpoint.html">Task
            scale-in protection endpoint</a>.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateTaskProtectionRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service
            that the task sets exist in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateTaskProtectionRequest.ExpiresInMinutes">
            <summary>
            Gets and sets the property ExpiresInMinutes. 
            <para>
            If you set <c>protectionEnabled</c> to <c>true</c>, you can specify the duration for
            task protection in minutes. You can specify a value from 1 minute to up to 2,880 minutes
            (48 hours). During this time, your task will not be terminated by scale-in events
            from Service Auto Scaling or deployments. After this time period lapses, <c>protectionEnabled</c>
            will be reset to <c>false</c>.
            </para>
             
            <para>
            If you don’t specify the time, then the task is automatically protected for 120 minutes
            (2 hours).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateTaskProtectionRequest.ProtectionEnabled">
            <summary>
            Gets and sets the property ProtectionEnabled. 
            <para>
            Specify <c>true</c> to mark a task for protection and <c>false</c> to unset protection,
            making it eligible for termination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateTaskProtectionRequest.Tasks">
            <summary>
            Gets and sets the property Tasks. 
            <para>
            A list of up to 10 task IDs or full ARN entries.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateTaskProtectionResponse">
            <summary>
            This is the response object from the UpdateTaskProtection operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateTaskProtectionResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateTaskProtectionResponse.ProtectedTasks">
            <summary>
            Gets and sets the property ProtectedTasks. 
            <para>
            A list of tasks with the following information.
            </para>
             <ul> <li> 
            <para>
             <c>taskArn</c>: The task ARN.
            </para>
             </li> <li> 
            <para>
             <c>protectionEnabled</c>: The protection status of the task. If scale-in protection
            is turned on for a task, the value is <c>true</c>. Otherwise, it is <c>false</c>.
            </para>
             </li> <li> 
            <para>
             <c>expirationDate</c>: The epoch time when protection for the task will expire.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateTaskSetRequest">
            <summary>
            Container for the parameters to the UpdateTaskSet operation.
            Modifies a task set. This is used when a service uses the <c>EXTERNAL</c> deployment
            controller type. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateTaskSetRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service
            that the task set is found in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateTaskSetRequest.Scale">
            <summary>
            Gets and sets the property Scale. 
            <para>
            A floating-point percentage of the desired number of tasks to place and keep running
            in the task set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateTaskSetRequest.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the service that the task set
            is found in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateTaskSetRequest.TaskSet">
            <summary>
            Gets and sets the property TaskSet. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the task set to update.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateTaskSetResponse">
            <summary>
            This is the response object from the UpdateTaskSet operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateTaskSetResponse.TaskSet">
            <summary>
            Gets and sets the property TaskSet. 
            <para>
            Details about the task set.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.VersionInfo">
            <summary>
            The Docker and Amazon ECS container agent version information about a container instance.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.VersionInfo.AgentHash">
            <summary>
            Gets and sets the property AgentHash. 
            <para>
            The Git commit hash for the Amazon ECS container agent build on the <a href="https://github.com/aws/amazon-ecs-agent/commits/master">amazon-ecs-agent
            </a> GitHub repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.VersionInfo.AgentVersion">
            <summary>
            Gets and sets the property AgentVersion. 
            <para>
            The version number of the Amazon ECS container agent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.VersionInfo.DockerVersion">
            <summary>
            Gets and sets the property DockerVersion. 
            <para>
            The Docker version that's running on the container instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Volume">
            <summary>
            The data volume configuration for tasks launched using this task definition. Specifying
            a volume configuration in a task definition is optional. The volume configuration
            may contain multiple volumes but only one volume configured at launch is supported.
            Each volume defined in the volume configuration may only specify a <c>name</c> and
            one of either <c>configuredAtLaunch</c>, <c>dockerVolumeConfiguration</c>, <c>efsVolumeConfiguration</c>,
            <c>fsxWindowsFileServerVolumeConfiguration</c>, or <c>host</c>. If an empty volume
            configuration is specified, by default Amazon ECS uses a host volume. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_data_volumes.html">Using
            data volumes in tasks</a>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Volume.ConfiguredAtLaunch">
            <summary>
            Gets and sets the property ConfiguredAtLaunch. 
            <para>
            Indicates whether the volume should be configured at launch time. This is used to
            create Amazon EBS volumes for standalone tasks or tasks created as part of a service.
            Each task definition revision may only have one volume configured at launch in the
            volume configuration.
            </para>
             
            <para>
            To configure a volume at launch time, use this task definition revision and specify
            a <c>volumeConfigurations</c> object when calling the <c>CreateService</c>, <c>UpdateService</c>,
            <c>RunTask</c> or <c>StartTask</c> APIs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Volume.DockerVolumeConfiguration">
            <summary>
            Gets and sets the property DockerVolumeConfiguration. 
            <para>
            This parameter is specified when you use Docker volumes.
            </para>
             
            <para>
            Windows containers only support the use of the <c>local</c> driver. To use bind mounts,
            specify the <c>host</c> parameter instead.
            </para>
             <note> 
            <para>
            Docker volumes aren't supported by tasks run on Fargate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Volume.EfsVolumeConfiguration">
            <summary>
            Gets and sets the property EfsVolumeConfiguration. 
            <para>
            This parameter is specified when you use an Amazon Elastic File System file system
            for task storage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Volume.FsxWindowsFileServerVolumeConfiguration">
            <summary>
            Gets and sets the property FsxWindowsFileServerVolumeConfiguration. 
            <para>
            This parameter is specified when you use Amazon FSx for Windows File Server file system
            for task storage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Volume.Host">
            <summary>
            Gets and sets the property Host. 
            <para>
            This parameter is specified when you use bind mount host volumes. The contents of
            the <c>host</c> parameter determine whether your bind mount host volume persists on
            the host container instance and where it's stored. If the <c>host</c> parameter is
            empty, then the Docker daemon assigns a host path for your data volume. However, the
            data isn't guaranteed to persist after the containers that are associated with it
            stop running.
            </para>
             
            <para>
            Windows containers can mount whole directories on the same drive as <c>$env:ProgramData</c>.
            Windows containers can't mount directories on a different drive, and mount point can't
            be across drives. For example, you can mount <c>C:\my\path:C:\my\path</c> and <c>D:\:D:\</c>,
            but not <c>D:\my\path:C:\my\path</c> or <c>D:\:C:\my\path</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Volume.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the volume. Up to 255 letters (uppercase and lowercase), numbers, underscores,
            and hyphens are allowed.
            </para>
             
            <para>
            When using a volume configured at launch, the <c>name</c> is required and must also
            be specified as the volume name in the <c>ServiceVolumeConfiguration</c> or <c>TaskVolumeConfiguration</c>
            parameter when creating your service or standalone task.
            </para>
             
            <para>
            For all other types of volumes, this name is referenced in the <c>sourceVolume</c>
            parameter of the <c>mountPoints</c> object in the container definition.
            </para>
             
            <para>
            When a volume is using the <c>efsVolumeConfiguration</c>, the name is required.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.VolumeFrom">
            <summary>
            Details on a data volume from another container in the same task definition.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.VolumeFrom.ReadOnly">
            <summary>
            Gets and sets the property ReadOnly. 
            <para>
            If this value is <c>true</c>, the container has read-only access to the volume. If
            this value is <c>false</c>, then the container can write to the volume. The default
            value is <c>false</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.VolumeFrom.SourceContainer">
            <summary>
            Gets and sets the property SourceContainer. 
            <para>
            The name of another container within the same task definition to mount volumes from.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.VpcLatticeConfiguration">
            <summary>
            The VPC Lattice configuration for your service that holds the information for the
            target group(s) Amazon ECS tasks will be registered to.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.VpcLatticeConfiguration.PortName">
            <summary>
            Gets and sets the property PortName. 
            <para>
            The name of the port mapping to register in the VPC Lattice target group. This is
            the name of the <c>portMapping</c> you defined in your task definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.VpcLatticeConfiguration.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of the IAM role to associate with this VPC Lattice configuration. This is
            the Amazon ECS&#x2028; infrastructure IAM role that is used to manage your VPC Lattice
            infrastructure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.VpcLatticeConfiguration.TargetGroupArn">
            <summary>
            Gets and sets the property TargetGroupArn. 
            <para>
            The full Amazon Resource Name (ARN) of the target group or groups associated with
            the VPC Lattice configuration that the Amazon ECS tasks will be registered to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ECSPaginatorFactory">
             <summary>
             Paginators for the ECS service
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ECSPaginatorFactory.ListAccountSettings(Amazon.ECS.Model.ListAccountSettingsRequest)">
             <summary>
             Paginator for ListAccountSettings operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ECSPaginatorFactory.ListAttributes(Amazon.ECS.Model.ListAttributesRequest)">
             <summary>
             Paginator for ListAttributes operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ECSPaginatorFactory.ListClusters(Amazon.ECS.Model.ListClustersRequest)">
             <summary>
             Paginator for ListClusters operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ECSPaginatorFactory.ListContainerInstances(Amazon.ECS.Model.ListContainerInstancesRequest)">
             <summary>
             Paginator for ListContainerInstances operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ECSPaginatorFactory.ListServices(Amazon.ECS.Model.ListServicesRequest)">
             <summary>
             Paginator for ListServices operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ECSPaginatorFactory.ListServicesByNamespace(Amazon.ECS.Model.ListServicesByNamespaceRequest)">
             <summary>
             Paginator for ListServicesByNamespace operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ECSPaginatorFactory.ListTaskDefinitionFamilies(Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest)">
             <summary>
             Paginator for ListTaskDefinitionFamilies operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ECSPaginatorFactory.ListTaskDefinitions(Amazon.ECS.Model.ListTaskDefinitionsRequest)">
             <summary>
             Paginator for ListTaskDefinitions operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ECSPaginatorFactory.ListTasks(Amazon.ECS.Model.ListTasksRequest)">
             <summary>
             Paginator for ListTasks operation
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.IECSPaginatorFactory">
             <summary>
             Paginators for the ECS service
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.IECSPaginatorFactory.ListAccountSettings(Amazon.ECS.Model.ListAccountSettingsRequest)">
             <summary>
             Paginator for ListAccountSettings operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.IECSPaginatorFactory.ListAttributes(Amazon.ECS.Model.ListAttributesRequest)">
             <summary>
             Paginator for ListAttributes operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.IECSPaginatorFactory.ListClusters(Amazon.ECS.Model.ListClustersRequest)">
             <summary>
             Paginator for ListClusters operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.IECSPaginatorFactory.ListContainerInstances(Amazon.ECS.Model.ListContainerInstancesRequest)">
             <summary>
             Paginator for ListContainerInstances operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.IECSPaginatorFactory.ListServices(Amazon.ECS.Model.ListServicesRequest)">
             <summary>
             Paginator for ListServices operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.IECSPaginatorFactory.ListServicesByNamespace(Amazon.ECS.Model.ListServicesByNamespaceRequest)">
             <summary>
             Paginator for ListServicesByNamespace operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.IECSPaginatorFactory.ListTaskDefinitionFamilies(Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest)">
             <summary>
             Paginator for ListTaskDefinitionFamilies operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.IECSPaginatorFactory.ListTaskDefinitions(Amazon.ECS.Model.ListTaskDefinitionsRequest)">
             <summary>
             Paginator for ListTaskDefinitions operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.IECSPaginatorFactory.ListTasks(Amazon.ECS.Model.ListTasksRequest)">
             <summary>
             Paginator for ListTasks operation
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.IListAccountSettingsPaginator">
             <summary>
             Paginator for the ListAccountSettings operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListAccountSettingsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListAccountSettingsPaginator.Settings">
            <summary>
            Enumerable containing all of the Settings
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.IListAttributesPaginator">
             <summary>
             Paginator for the ListAttributes operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListAttributesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListAttributesPaginator.Attributes">
            <summary>
            Enumerable containing all of the Attributes
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.IListClustersPaginator">
             <summary>
             Paginator for the ListClusters operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListClustersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListClustersPaginator.ClusterArns">
            <summary>
            Enumerable containing all of the ClusterArns
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.IListContainerInstancesPaginator">
             <summary>
             Paginator for the ListContainerInstances operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListContainerInstancesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListContainerInstancesPaginator.ContainerInstanceArns">
            <summary>
            Enumerable containing all of the ContainerInstanceArns
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.IListServicesByNamespacePaginator">
             <summary>
             Paginator for the ListServicesByNamespace operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListServicesByNamespacePaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListServicesByNamespacePaginator.ServiceArns">
            <summary>
            Enumerable containing all of the ServiceArns
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.IListServicesPaginator">
             <summary>
             Paginator for the ListServices operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListServicesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListServicesPaginator.ServiceArns">
            <summary>
            Enumerable containing all of the ServiceArns
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.IListTaskDefinitionFamiliesPaginator">
             <summary>
             Paginator for the ListTaskDefinitionFamilies operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListTaskDefinitionFamiliesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListTaskDefinitionFamiliesPaginator.Families">
            <summary>
            Enumerable containing all of the Families
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.IListTaskDefinitionsPaginator">
             <summary>
             Paginator for the ListTaskDefinitions operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListTaskDefinitionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListTaskDefinitionsPaginator.TaskDefinitionArns">
            <summary>
            Enumerable containing all of the TaskDefinitionArns
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.IListTasksPaginator">
             <summary>
             Paginator for the ListTasks operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListTasksPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListTasksPaginator.TaskArns">
            <summary>
            Enumerable containing all of the TaskArns
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListAccountSettingsPaginator">
            <summary>
            Base class for ListAccountSettings paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAccountSettingsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAccountSettingsPaginator.Settings">
            <summary>
            Enumerable containing all of the Settings
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListAttributesPaginator">
            <summary>
            Base class for ListAttributes paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesPaginator.Attributes">
            <summary>
            Enumerable containing all of the Attributes
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListClustersPaginator">
            <summary>
            Base class for ListClusters paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListClustersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListClustersPaginator.ClusterArns">
            <summary>
            Enumerable containing all of the ClusterArns
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListContainerInstancesPaginator">
            <summary>
            Base class for ListContainerInstances paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesPaginator.ContainerInstanceArns">
            <summary>
            Enumerable containing all of the ContainerInstanceArns
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListServicesByNamespacePaginator">
            <summary>
            Base class for ListServicesByNamespace paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesByNamespacePaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesByNamespacePaginator.ServiceArns">
            <summary>
            Enumerable containing all of the ServiceArns
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListServicesPaginator">
            <summary>
            Base class for ListServices paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesPaginator.ServiceArns">
            <summary>
            Enumerable containing all of the ServiceArns
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTaskDefinitionFamiliesPaginator">
            <summary>
            Base class for ListTaskDefinitionFamilies paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionFamiliesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionFamiliesPaginator.Families">
            <summary>
            Enumerable containing all of the Families
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTaskDefinitionsPaginator">
            <summary>
            Base class for ListTaskDefinitions paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsPaginator.TaskDefinitionArns">
            <summary>
            Enumerable containing all of the TaskDefinitionArns
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTasksPaginator">
            <summary>
            Base class for ListTasks paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksPaginator.TaskArns">
            <summary>
            Enumerable containing all of the TaskArns
            </summary>
        </member>
        <member name="T:Amazon.ECS.AmazonECSRequest">
            <summary>
            Base class for ECS operation requests.
            </summary>
        </member>
        <member name="T:Amazon.ECS.AgentUpdateStatus">
            <summary>
            Constants used for properties of type AgentUpdateStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.AgentUpdateStatus.FAILED">
            <summary>
            Constant FAILED for AgentUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.AgentUpdateStatus.PENDING">
            <summary>
            Constant PENDING for AgentUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.AgentUpdateStatus.STAGED">
            <summary>
            Constant STAGED for AgentUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.AgentUpdateStatus.STAGING">
            <summary>
            Constant STAGING for AgentUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.AgentUpdateStatus.UPDATED">
            <summary>
            Constant UPDATED for AgentUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.AgentUpdateStatus.UPDATING">
            <summary>
            Constant UPDATING for AgentUpdateStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.AgentUpdateStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.AgentUpdateStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.AgentUpdateStatus.op_Implicit(System.String)~Amazon.ECS.AgentUpdateStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ApplicationProtocol">
            <summary>
            Constants used for properties of type ApplicationProtocol.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ApplicationProtocol.Grpc">
            <summary>
            Constant Grpc for ApplicationProtocol
            </summary>
        </member>
        <member name="F:Amazon.ECS.ApplicationProtocol.Http">
            <summary>
            Constant Http for ApplicationProtocol
            </summary>
        </member>
        <member name="F:Amazon.ECS.ApplicationProtocol.Http2">
            <summary>
            Constant Http2 for ApplicationProtocol
            </summary>
        </member>
        <member name="M:Amazon.ECS.ApplicationProtocol.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ApplicationProtocol.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ApplicationProtocol.op_Implicit(System.String)~Amazon.ECS.ApplicationProtocol">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.AssignPublicIp">
            <summary>
            Constants used for properties of type AssignPublicIp.
            </summary>
        </member>
        <member name="F:Amazon.ECS.AssignPublicIp.DISABLED">
            <summary>
            Constant DISABLED for AssignPublicIp
            </summary>
        </member>
        <member name="F:Amazon.ECS.AssignPublicIp.ENABLED">
            <summary>
            Constant ENABLED for AssignPublicIp
            </summary>
        </member>
        <member name="M:Amazon.ECS.AssignPublicIp.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.AssignPublicIp.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.AssignPublicIp.op_Implicit(System.String)~Amazon.ECS.AssignPublicIp">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.AvailabilityZoneRebalancing">
            <summary>
            Constants used for properties of type AvailabilityZoneRebalancing.
            </summary>
        </member>
        <member name="F:Amazon.ECS.AvailabilityZoneRebalancing.DISABLED">
            <summary>
            Constant DISABLED for AvailabilityZoneRebalancing
            </summary>
        </member>
        <member name="F:Amazon.ECS.AvailabilityZoneRebalancing.ENABLED">
            <summary>
            Constant ENABLED for AvailabilityZoneRebalancing
            </summary>
        </member>
        <member name="M:Amazon.ECS.AvailabilityZoneRebalancing.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.AvailabilityZoneRebalancing.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.AvailabilityZoneRebalancing.op_Implicit(System.String)~Amazon.ECS.AvailabilityZoneRebalancing">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.CapacityProviderField">
            <summary>
            Constants used for properties of type CapacityProviderField.
            </summary>
        </member>
        <member name="F:Amazon.ECS.CapacityProviderField.TAGS">
            <summary>
            Constant TAGS for CapacityProviderField
            </summary>
        </member>
        <member name="M:Amazon.ECS.CapacityProviderField.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.CapacityProviderField.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.CapacityProviderField.op_Implicit(System.String)~Amazon.ECS.CapacityProviderField">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.CapacityProviderStatus">
            <summary>
            Constants used for properties of type CapacityProviderStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.CapacityProviderStatus.ACTIVE">
            <summary>
            Constant ACTIVE for CapacityProviderStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.CapacityProviderStatus.INACTIVE">
            <summary>
            Constant INACTIVE for CapacityProviderStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.CapacityProviderStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.CapacityProviderStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.CapacityProviderStatus.op_Implicit(System.String)~Amazon.ECS.CapacityProviderStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.CapacityProviderUpdateStatus">
            <summary>
            Constants used for properties of type CapacityProviderUpdateStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.CapacityProviderUpdateStatus.DELETE_COMPLETE">
            <summary>
            Constant DELETE_COMPLETE for CapacityProviderUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.CapacityProviderUpdateStatus.DELETE_FAILED">
            <summary>
            Constant DELETE_FAILED for CapacityProviderUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.CapacityProviderUpdateStatus.DELETE_IN_PROGRESS">
            <summary>
            Constant DELETE_IN_PROGRESS for CapacityProviderUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.CapacityProviderUpdateStatus.UPDATE_COMPLETE">
            <summary>
            Constant UPDATE_COMPLETE for CapacityProviderUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.CapacityProviderUpdateStatus.UPDATE_FAILED">
            <summary>
            Constant UPDATE_FAILED for CapacityProviderUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.CapacityProviderUpdateStatus.UPDATE_IN_PROGRESS">
            <summary>
            Constant UPDATE_IN_PROGRESS for CapacityProviderUpdateStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.CapacityProviderUpdateStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.CapacityProviderUpdateStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.CapacityProviderUpdateStatus.op_Implicit(System.String)~Amazon.ECS.CapacityProviderUpdateStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ClusterField">
            <summary>
            Constants used for properties of type ClusterField.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ClusterField.ATTACHMENTS">
            <summary>
            Constant ATTACHMENTS for ClusterField
            </summary>
        </member>
        <member name="F:Amazon.ECS.ClusterField.CONFIGURATIONS">
            <summary>
            Constant CONFIGURATIONS for ClusterField
            </summary>
        </member>
        <member name="F:Amazon.ECS.ClusterField.SETTINGS">
            <summary>
            Constant SETTINGS for ClusterField
            </summary>
        </member>
        <member name="F:Amazon.ECS.ClusterField.STATISTICS">
            <summary>
            Constant STATISTICS for ClusterField
            </summary>
        </member>
        <member name="F:Amazon.ECS.ClusterField.TAGS">
            <summary>
            Constant TAGS for ClusterField
            </summary>
        </member>
        <member name="M:Amazon.ECS.ClusterField.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ClusterField.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ClusterField.op_Implicit(System.String)~Amazon.ECS.ClusterField">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ClusterSettingName">
            <summary>
            Constants used for properties of type ClusterSettingName.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ClusterSettingName.ContainerInsights">
            <summary>
            Constant ContainerInsights for ClusterSettingName
            </summary>
        </member>
        <member name="M:Amazon.ECS.ClusterSettingName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ClusterSettingName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ClusterSettingName.op_Implicit(System.String)~Amazon.ECS.ClusterSettingName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Compatibility">
            <summary>
            Constants used for properties of type Compatibility.
            </summary>
        </member>
        <member name="F:Amazon.ECS.Compatibility.EC2">
            <summary>
            Constant EC2 for Compatibility
            </summary>
        </member>
        <member name="F:Amazon.ECS.Compatibility.EXTERNAL">
            <summary>
            Constant EXTERNAL for Compatibility
            </summary>
        </member>
        <member name="F:Amazon.ECS.Compatibility.FARGATE">
            <summary>
            Constant FARGATE for Compatibility
            </summary>
        </member>
        <member name="M:Amazon.ECS.Compatibility.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Compatibility.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.Compatibility.op_Implicit(System.String)~Amazon.ECS.Compatibility">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Connectivity">
            <summary>
            Constants used for properties of type Connectivity.
            </summary>
        </member>
        <member name="F:Amazon.ECS.Connectivity.CONNECTED">
            <summary>
            Constant CONNECTED for Connectivity
            </summary>
        </member>
        <member name="F:Amazon.ECS.Connectivity.DISCONNECTED">
            <summary>
            Constant DISCONNECTED for Connectivity
            </summary>
        </member>
        <member name="M:Amazon.ECS.Connectivity.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Connectivity.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.Connectivity.op_Implicit(System.String)~Amazon.ECS.Connectivity">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ContainerCondition">
            <summary>
            Constants used for properties of type ContainerCondition.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerCondition.COMPLETE">
            <summary>
            Constant COMPLETE for ContainerCondition
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerCondition.HEALTHY">
            <summary>
            Constant HEALTHY for ContainerCondition
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerCondition.START">
            <summary>
            Constant START for ContainerCondition
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerCondition.SUCCESS">
            <summary>
            Constant SUCCESS for ContainerCondition
            </summary>
        </member>
        <member name="M:Amazon.ECS.ContainerCondition.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ContainerCondition.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ContainerCondition.op_Implicit(System.String)~Amazon.ECS.ContainerCondition">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ContainerInstanceField">
            <summary>
            Constants used for properties of type ContainerInstanceField.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerInstanceField.CONTAINER_INSTANCE_HEALTH">
            <summary>
            Constant CONTAINER_INSTANCE_HEALTH for ContainerInstanceField
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerInstanceField.TAGS">
            <summary>
            Constant TAGS for ContainerInstanceField
            </summary>
        </member>
        <member name="M:Amazon.ECS.ContainerInstanceField.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ContainerInstanceField.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ContainerInstanceField.op_Implicit(System.String)~Amazon.ECS.ContainerInstanceField">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ContainerInstanceStatus">
            <summary>
            Constants used for properties of type ContainerInstanceStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerInstanceStatus.ACTIVE">
            <summary>
            Constant ACTIVE for ContainerInstanceStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerInstanceStatus.DEREGISTERING">
            <summary>
            Constant DEREGISTERING for ContainerInstanceStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerInstanceStatus.DRAINING">
            <summary>
            Constant DRAINING for ContainerInstanceStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerInstanceStatus.REGISTERING">
            <summary>
            Constant REGISTERING for ContainerInstanceStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerInstanceStatus.REGISTRATION_FAILED">
            <summary>
            Constant REGISTRATION_FAILED for ContainerInstanceStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.ContainerInstanceStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ContainerInstanceStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ContainerInstanceStatus.op_Implicit(System.String)~Amazon.ECS.ContainerInstanceStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.CPUArchitecture">
            <summary>
            Constants used for properties of type CPUArchitecture.
            </summary>
        </member>
        <member name="F:Amazon.ECS.CPUArchitecture.ARM64">
            <summary>
            Constant ARM64 for CPUArchitecture
            </summary>
        </member>
        <member name="F:Amazon.ECS.CPUArchitecture.X86_64">
            <summary>
            Constant X86_64 for CPUArchitecture
            </summary>
        </member>
        <member name="M:Amazon.ECS.CPUArchitecture.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.CPUArchitecture.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.CPUArchitecture.op_Implicit(System.String)~Amazon.ECS.CPUArchitecture">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.DeploymentControllerType">
            <summary>
            Constants used for properties of type DeploymentControllerType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.DeploymentControllerType.CODE_DEPLOY">
            <summary>
            Constant CODE_DEPLOY for DeploymentControllerType
            </summary>
        </member>
        <member name="F:Amazon.ECS.DeploymentControllerType.ECS">
            <summary>
            Constant ECS for DeploymentControllerType
            </summary>
        </member>
        <member name="F:Amazon.ECS.DeploymentControllerType.EXTERNAL">
            <summary>
            Constant EXTERNAL for DeploymentControllerType
            </summary>
        </member>
        <member name="M:Amazon.ECS.DeploymentControllerType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.DeploymentControllerType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.DeploymentControllerType.op_Implicit(System.String)~Amazon.ECS.DeploymentControllerType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.DeploymentRolloutState">
            <summary>
            Constants used for properties of type DeploymentRolloutState.
            </summary>
        </member>
        <member name="F:Amazon.ECS.DeploymentRolloutState.COMPLETED">
            <summary>
            Constant COMPLETED for DeploymentRolloutState
            </summary>
        </member>
        <member name="F:Amazon.ECS.DeploymentRolloutState.FAILED">
            <summary>
            Constant FAILED for DeploymentRolloutState
            </summary>
        </member>
        <member name="F:Amazon.ECS.DeploymentRolloutState.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for DeploymentRolloutState
            </summary>
        </member>
        <member name="M:Amazon.ECS.DeploymentRolloutState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.DeploymentRolloutState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.DeploymentRolloutState.op_Implicit(System.String)~Amazon.ECS.DeploymentRolloutState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.DesiredStatus">
            <summary>
            Constants used for properties of type DesiredStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.DesiredStatus.PENDING">
            <summary>
            Constant PENDING for DesiredStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.DesiredStatus.RUNNING">
            <summary>
            Constant RUNNING for DesiredStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.DesiredStatus.STOPPED">
            <summary>
            Constant STOPPED for DesiredStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.DesiredStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.DesiredStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.DesiredStatus.op_Implicit(System.String)~Amazon.ECS.DesiredStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.DeviceCgroupPermission">
            <summary>
            Constants used for properties of type DeviceCgroupPermission.
            </summary>
        </member>
        <member name="F:Amazon.ECS.DeviceCgroupPermission.Mknod">
            <summary>
            Constant Mknod for DeviceCgroupPermission
            </summary>
        </member>
        <member name="F:Amazon.ECS.DeviceCgroupPermission.Read">
            <summary>
            Constant Read for DeviceCgroupPermission
            </summary>
        </member>
        <member name="F:Amazon.ECS.DeviceCgroupPermission.Write">
            <summary>
            Constant Write for DeviceCgroupPermission
            </summary>
        </member>
        <member name="M:Amazon.ECS.DeviceCgroupPermission.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.DeviceCgroupPermission.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.DeviceCgroupPermission.op_Implicit(System.String)~Amazon.ECS.DeviceCgroupPermission">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.EBSResourceType">
            <summary>
            Constants used for properties of type EBSResourceType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.EBSResourceType.Volume">
            <summary>
            Constant Volume for EBSResourceType
            </summary>
        </member>
        <member name="M:Amazon.ECS.EBSResourceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.EBSResourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.EBSResourceType.op_Implicit(System.String)~Amazon.ECS.EBSResourceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.EFSAuthorizationConfigIAM">
            <summary>
            Constants used for properties of type EFSAuthorizationConfigIAM.
            </summary>
        </member>
        <member name="F:Amazon.ECS.EFSAuthorizationConfigIAM.DISABLED">
            <summary>
            Constant DISABLED for EFSAuthorizationConfigIAM
            </summary>
        </member>
        <member name="F:Amazon.ECS.EFSAuthorizationConfigIAM.ENABLED">
            <summary>
            Constant ENABLED for EFSAuthorizationConfigIAM
            </summary>
        </member>
        <member name="M:Amazon.ECS.EFSAuthorizationConfigIAM.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.EFSAuthorizationConfigIAM.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.EFSAuthorizationConfigIAM.op_Implicit(System.String)~Amazon.ECS.EFSAuthorizationConfigIAM">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.EFSTransitEncryption">
            <summary>
            Constants used for properties of type EFSTransitEncryption.
            </summary>
        </member>
        <member name="F:Amazon.ECS.EFSTransitEncryption.DISABLED">
            <summary>
            Constant DISABLED for EFSTransitEncryption
            </summary>
        </member>
        <member name="F:Amazon.ECS.EFSTransitEncryption.ENABLED">
            <summary>
            Constant ENABLED for EFSTransitEncryption
            </summary>
        </member>
        <member name="M:Amazon.ECS.EFSTransitEncryption.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.EFSTransitEncryption.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.EFSTransitEncryption.op_Implicit(System.String)~Amazon.ECS.EFSTransitEncryption">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.EnvironmentFileType">
            <summary>
            Constants used for properties of type EnvironmentFileType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.EnvironmentFileType.S3">
            <summary>
            Constant S3 for EnvironmentFileType
            </summary>
        </member>
        <member name="M:Amazon.ECS.EnvironmentFileType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.EnvironmentFileType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.EnvironmentFileType.op_Implicit(System.String)~Amazon.ECS.EnvironmentFileType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ExecuteCommandLogging">
            <summary>
            Constants used for properties of type ExecuteCommandLogging.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ExecuteCommandLogging.DEFAULT">
            <summary>
            Constant DEFAULT for ExecuteCommandLogging
            </summary>
        </member>
        <member name="F:Amazon.ECS.ExecuteCommandLogging.NONE">
            <summary>
            Constant NONE for ExecuteCommandLogging
            </summary>
        </member>
        <member name="F:Amazon.ECS.ExecuteCommandLogging.OVERRIDE">
            <summary>
            Constant OVERRIDE for ExecuteCommandLogging
            </summary>
        </member>
        <member name="M:Amazon.ECS.ExecuteCommandLogging.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ExecuteCommandLogging.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ExecuteCommandLogging.op_Implicit(System.String)~Amazon.ECS.ExecuteCommandLogging">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.FirelensConfigurationType">
            <summary>
            Constants used for properties of type FirelensConfigurationType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.FirelensConfigurationType.Fluentbit">
            <summary>
            Constant Fluentbit for FirelensConfigurationType
            </summary>
        </member>
        <member name="F:Amazon.ECS.FirelensConfigurationType.Fluentd">
            <summary>
            Constant Fluentd for FirelensConfigurationType
            </summary>
        </member>
        <member name="M:Amazon.ECS.FirelensConfigurationType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.FirelensConfigurationType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.FirelensConfigurationType.op_Implicit(System.String)~Amazon.ECS.FirelensConfigurationType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.HealthStatus">
            <summary>
            Constants used for properties of type HealthStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.HealthStatus.HEALTHY">
            <summary>
            Constant HEALTHY for HealthStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.HealthStatus.UNHEALTHY">
            <summary>
            Constant UNHEALTHY for HealthStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.HealthStatus.UNKNOWN">
            <summary>
            Constant UNKNOWN for HealthStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.HealthStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.HealthStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.HealthStatus.op_Implicit(System.String)~Amazon.ECS.HealthStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.InstanceHealthCheckState">
            <summary>
            Constants used for properties of type InstanceHealthCheckState.
            </summary>
        </member>
        <member name="F:Amazon.ECS.InstanceHealthCheckState.IMPAIRED">
            <summary>
            Constant IMPAIRED for InstanceHealthCheckState
            </summary>
        </member>
        <member name="F:Amazon.ECS.InstanceHealthCheckState.INITIALIZING">
            <summary>
            Constant INITIALIZING for InstanceHealthCheckState
            </summary>
        </member>
        <member name="F:Amazon.ECS.InstanceHealthCheckState.INSUFFICIENT_DATA">
            <summary>
            Constant INSUFFICIENT_DATA for InstanceHealthCheckState
            </summary>
        </member>
        <member name="F:Amazon.ECS.InstanceHealthCheckState.OK">
            <summary>
            Constant OK for InstanceHealthCheckState
            </summary>
        </member>
        <member name="M:Amazon.ECS.InstanceHealthCheckState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.InstanceHealthCheckState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.InstanceHealthCheckState.op_Implicit(System.String)~Amazon.ECS.InstanceHealthCheckState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.InstanceHealthCheckType">
            <summary>
            Constants used for properties of type InstanceHealthCheckType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.InstanceHealthCheckType.CONTAINER_RUNTIME">
            <summary>
            Constant CONTAINER_RUNTIME for InstanceHealthCheckType
            </summary>
        </member>
        <member name="M:Amazon.ECS.InstanceHealthCheckType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.InstanceHealthCheckType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.InstanceHealthCheckType.op_Implicit(System.String)~Amazon.ECS.InstanceHealthCheckType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.IpcMode">
            <summary>
            Constants used for properties of type IpcMode.
            </summary>
        </member>
        <member name="F:Amazon.ECS.IpcMode.Host">
            <summary>
            Constant Host for IpcMode
            </summary>
        </member>
        <member name="F:Amazon.ECS.IpcMode.None">
            <summary>
            Constant None for IpcMode
            </summary>
        </member>
        <member name="F:Amazon.ECS.IpcMode.Task">
            <summary>
            Constant Task for IpcMode
            </summary>
        </member>
        <member name="M:Amazon.ECS.IpcMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.IpcMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.IpcMode.op_Implicit(System.String)~Amazon.ECS.IpcMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.LaunchType">
            <summary>
            Constants used for properties of type LaunchType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.LaunchType.EC2">
            <summary>
            Constant EC2 for LaunchType
            </summary>
        </member>
        <member name="F:Amazon.ECS.LaunchType.EXTERNAL">
            <summary>
            Constant EXTERNAL for LaunchType
            </summary>
        </member>
        <member name="F:Amazon.ECS.LaunchType.FARGATE">
            <summary>
            Constant FARGATE for LaunchType
            </summary>
        </member>
        <member name="M:Amazon.ECS.LaunchType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.LaunchType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.LaunchType.op_Implicit(System.String)~Amazon.ECS.LaunchType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.LogDriver">
            <summary>
            Constants used for properties of type LogDriver.
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.Awsfirelens">
            <summary>
            Constant Awsfirelens for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.Awslogs">
            <summary>
            Constant Awslogs for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.Fluentd">
            <summary>
            Constant Fluentd for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.Gelf">
            <summary>
            Constant Gelf for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.Journald">
            <summary>
            Constant Journald for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.JsonFile">
            <summary>
            Constant JsonFile for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.Splunk">
            <summary>
            Constant Splunk for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.Syslog">
            <summary>
            Constant Syslog for LogDriver
            </summary>
        </member>
        <member name="M:Amazon.ECS.LogDriver.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.LogDriver.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.LogDriver.op_Implicit(System.String)~Amazon.ECS.LogDriver">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ManagedAgentName">
            <summary>
            Constants used for properties of type ManagedAgentName.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ManagedAgentName.ExecuteCommandAgent">
            <summary>
            Constant ExecuteCommandAgent for ManagedAgentName
            </summary>
        </member>
        <member name="M:Amazon.ECS.ManagedAgentName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ManagedAgentName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ManagedAgentName.op_Implicit(System.String)~Amazon.ECS.ManagedAgentName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ManagedDraining">
            <summary>
            Constants used for properties of type ManagedDraining.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ManagedDraining.DISABLED">
            <summary>
            Constant DISABLED for ManagedDraining
            </summary>
        </member>
        <member name="F:Amazon.ECS.ManagedDraining.ENABLED">
            <summary>
            Constant ENABLED for ManagedDraining
            </summary>
        </member>
        <member name="M:Amazon.ECS.ManagedDraining.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ManagedDraining.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ManagedDraining.op_Implicit(System.String)~Amazon.ECS.ManagedDraining">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ManagedScalingStatus">
            <summary>
            Constants used for properties of type ManagedScalingStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ManagedScalingStatus.DISABLED">
            <summary>
            Constant DISABLED for ManagedScalingStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.ManagedScalingStatus.ENABLED">
            <summary>
            Constant ENABLED for ManagedScalingStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.ManagedScalingStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ManagedScalingStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ManagedScalingStatus.op_Implicit(System.String)~Amazon.ECS.ManagedScalingStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ManagedTerminationProtection">
            <summary>
            Constants used for properties of type ManagedTerminationProtection.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ManagedTerminationProtection.DISABLED">
            <summary>
            Constant DISABLED for ManagedTerminationProtection
            </summary>
        </member>
        <member name="F:Amazon.ECS.ManagedTerminationProtection.ENABLED">
            <summary>
            Constant ENABLED for ManagedTerminationProtection
            </summary>
        </member>
        <member name="M:Amazon.ECS.ManagedTerminationProtection.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ManagedTerminationProtection.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ManagedTerminationProtection.op_Implicit(System.String)~Amazon.ECS.ManagedTerminationProtection">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.NetworkMode">
            <summary>
            Constants used for properties of type NetworkMode.
            </summary>
        </member>
        <member name="F:Amazon.ECS.NetworkMode.Awsvpc">
            <summary>
            Constant Awsvpc for NetworkMode
            </summary>
        </member>
        <member name="F:Amazon.ECS.NetworkMode.Bridge">
            <summary>
            Constant Bridge for NetworkMode
            </summary>
        </member>
        <member name="F:Amazon.ECS.NetworkMode.Host">
            <summary>
            Constant Host for NetworkMode
            </summary>
        </member>
        <member name="F:Amazon.ECS.NetworkMode.None">
            <summary>
            Constant None for NetworkMode
            </summary>
        </member>
        <member name="M:Amazon.ECS.NetworkMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.NetworkMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.NetworkMode.op_Implicit(System.String)~Amazon.ECS.NetworkMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.OSFamily">
            <summary>
            Constants used for properties of type OSFamily.
            </summary>
        </member>
        <member name="F:Amazon.ECS.OSFamily.LINUX">
            <summary>
            Constant LINUX for OSFamily
            </summary>
        </member>
        <member name="F:Amazon.ECS.OSFamily.WINDOWS_SERVER_2004_CORE">
            <summary>
            Constant WINDOWS_SERVER_2004_CORE for OSFamily
            </summary>
        </member>
        <member name="F:Amazon.ECS.OSFamily.WINDOWS_SERVER_2016_FULL">
            <summary>
            Constant WINDOWS_SERVER_2016_FULL for OSFamily
            </summary>
        </member>
        <member name="F:Amazon.ECS.OSFamily.WINDOWS_SERVER_2019_CORE">
            <summary>
            Constant WINDOWS_SERVER_2019_CORE for OSFamily
            </summary>
        </member>
        <member name="F:Amazon.ECS.OSFamily.WINDOWS_SERVER_2019_FULL">
            <summary>
            Constant WINDOWS_SERVER_2019_FULL for OSFamily
            </summary>
        </member>
        <member name="F:Amazon.ECS.OSFamily.WINDOWS_SERVER_2022_CORE">
            <summary>
            Constant WINDOWS_SERVER_2022_CORE for OSFamily
            </summary>
        </member>
        <member name="F:Amazon.ECS.OSFamily.WINDOWS_SERVER_2022_FULL">
            <summary>
            Constant WINDOWS_SERVER_2022_FULL for OSFamily
            </summary>
        </member>
        <member name="F:Amazon.ECS.OSFamily.WINDOWS_SERVER_20H2_CORE">
            <summary>
            Constant WINDOWS_SERVER_20H2_CORE for OSFamily
            </summary>
        </member>
        <member name="M:Amazon.ECS.OSFamily.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.OSFamily.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.OSFamily.op_Implicit(System.String)~Amazon.ECS.OSFamily">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.PidMode">
            <summary>
            Constants used for properties of type PidMode.
            </summary>
        </member>
        <member name="F:Amazon.ECS.PidMode.Host">
            <summary>
            Constant Host for PidMode
            </summary>
        </member>
        <member name="F:Amazon.ECS.PidMode.Task">
            <summary>
            Constant Task for PidMode
            </summary>
        </member>
        <member name="M:Amazon.ECS.PidMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.PidMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.PidMode.op_Implicit(System.String)~Amazon.ECS.PidMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.PlacementConstraintType">
            <summary>
            Constants used for properties of type PlacementConstraintType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.PlacementConstraintType.DistinctInstance">
            <summary>
            Constant DistinctInstance for PlacementConstraintType
            </summary>
        </member>
        <member name="F:Amazon.ECS.PlacementConstraintType.MemberOf">
            <summary>
            Constant MemberOf for PlacementConstraintType
            </summary>
        </member>
        <member name="M:Amazon.ECS.PlacementConstraintType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.PlacementConstraintType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.PlacementConstraintType.op_Implicit(System.String)~Amazon.ECS.PlacementConstraintType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.PlacementStrategyType">
            <summary>
            Constants used for properties of type PlacementStrategyType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.PlacementStrategyType.Binpack">
            <summary>
            Constant Binpack for PlacementStrategyType
            </summary>
        </member>
        <member name="F:Amazon.ECS.PlacementStrategyType.Random">
            <summary>
            Constant Random for PlacementStrategyType
            </summary>
        </member>
        <member name="F:Amazon.ECS.PlacementStrategyType.Spread">
            <summary>
            Constant Spread for PlacementStrategyType
            </summary>
        </member>
        <member name="M:Amazon.ECS.PlacementStrategyType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.PlacementStrategyType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.PlacementStrategyType.op_Implicit(System.String)~Amazon.ECS.PlacementStrategyType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.PlatformDeviceType">
            <summary>
            Constants used for properties of type PlatformDeviceType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.PlatformDeviceType.GPU">
            <summary>
            Constant GPU for PlatformDeviceType
            </summary>
        </member>
        <member name="M:Amazon.ECS.PlatformDeviceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.PlatformDeviceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.PlatformDeviceType.op_Implicit(System.String)~Amazon.ECS.PlatformDeviceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.PropagateTags">
            <summary>
            Constants used for properties of type PropagateTags.
            </summary>
        </member>
        <member name="F:Amazon.ECS.PropagateTags.NONE">
            <summary>
            Constant NONE for PropagateTags
            </summary>
        </member>
        <member name="F:Amazon.ECS.PropagateTags.SERVICE">
            <summary>
            Constant SERVICE for PropagateTags
            </summary>
        </member>
        <member name="F:Amazon.ECS.PropagateTags.TASK_DEFINITION">
            <summary>
            Constant TASK_DEFINITION for PropagateTags
            </summary>
        </member>
        <member name="M:Amazon.ECS.PropagateTags.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.PropagateTags.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.PropagateTags.op_Implicit(System.String)~Amazon.ECS.PropagateTags">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ProxyConfigurationType">
            <summary>
            Constants used for properties of type ProxyConfigurationType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ProxyConfigurationType.APPMESH">
            <summary>
            Constant APPMESH for ProxyConfigurationType
            </summary>
        </member>
        <member name="M:Amazon.ECS.ProxyConfigurationType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ProxyConfigurationType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ProxyConfigurationType.op_Implicit(System.String)~Amazon.ECS.ProxyConfigurationType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ResourceType">
            <summary>
            Constants used for properties of type ResourceType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ResourceType.GPU">
            <summary>
            Constant GPU for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.ECS.ResourceType.InferenceAccelerator">
            <summary>
            Constant InferenceAccelerator for ResourceType
            </summary>
        </member>
        <member name="M:Amazon.ECS.ResourceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ResourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ResourceType.op_Implicit(System.String)~Amazon.ECS.ResourceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ScaleUnit">
            <summary>
            Constants used for properties of type ScaleUnit.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ScaleUnit.PERCENT">
            <summary>
            Constant PERCENT for ScaleUnit
            </summary>
        </member>
        <member name="M:Amazon.ECS.ScaleUnit.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ScaleUnit.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ScaleUnit.op_Implicit(System.String)~Amazon.ECS.ScaleUnit">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.SchedulingStrategy">
            <summary>
            Constants used for properties of type SchedulingStrategy.
            </summary>
        </member>
        <member name="F:Amazon.ECS.SchedulingStrategy.DAEMON">
            <summary>
            Constant DAEMON for SchedulingStrategy
            </summary>
        </member>
        <member name="F:Amazon.ECS.SchedulingStrategy.REPLICA">
            <summary>
            Constant REPLICA for SchedulingStrategy
            </summary>
        </member>
        <member name="M:Amazon.ECS.SchedulingStrategy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.SchedulingStrategy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.SchedulingStrategy.op_Implicit(System.String)~Amazon.ECS.SchedulingStrategy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Scope">
            <summary>
            Constants used for properties of type Scope.
            </summary>
        </member>
        <member name="F:Amazon.ECS.Scope.Shared">
            <summary>
            Constant Shared for Scope
            </summary>
        </member>
        <member name="F:Amazon.ECS.Scope.Task">
            <summary>
            Constant Task for Scope
            </summary>
        </member>
        <member name="M:Amazon.ECS.Scope.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Scope.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.Scope.op_Implicit(System.String)~Amazon.ECS.Scope">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ServiceDeploymentRollbackMonitorsStatus">
            <summary>
            Constants used for properties of type ServiceDeploymentRollbackMonitorsStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ServiceDeploymentRollbackMonitorsStatus.DISABLED">
            <summary>
            Constant DISABLED for ServiceDeploymentRollbackMonitorsStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.ServiceDeploymentRollbackMonitorsStatus.MONITORING">
            <summary>
            Constant MONITORING for ServiceDeploymentRollbackMonitorsStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.ServiceDeploymentRollbackMonitorsStatus.MONITORING_COMPLETE">
            <summary>
            Constant MONITORING_COMPLETE for ServiceDeploymentRollbackMonitorsStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.ServiceDeploymentRollbackMonitorsStatus.TRIGGERED">
            <summary>
            Constant TRIGGERED for ServiceDeploymentRollbackMonitorsStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.ServiceDeploymentRollbackMonitorsStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ServiceDeploymentRollbackMonitorsStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ServiceDeploymentRollbackMonitorsStatus.op_Implicit(System.String)~Amazon.ECS.ServiceDeploymentRollbackMonitorsStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ServiceDeploymentStatus">
            <summary>
            Constants used for properties of type ServiceDeploymentStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ServiceDeploymentStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for ServiceDeploymentStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.ServiceDeploymentStatus.PENDING">
            <summary>
            Constant PENDING for ServiceDeploymentStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.ServiceDeploymentStatus.ROLLBACK_FAILED">
            <summary>
            Constant ROLLBACK_FAILED for ServiceDeploymentStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.ServiceDeploymentStatus.ROLLBACK_IN_PROGRESS">
            <summary>
            Constant ROLLBACK_IN_PROGRESS for ServiceDeploymentStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.ServiceDeploymentStatus.ROLLBACK_SUCCESSFUL">
            <summary>
            Constant ROLLBACK_SUCCESSFUL for ServiceDeploymentStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.ServiceDeploymentStatus.STOP_REQUESTED">
            <summary>
            Constant STOP_REQUESTED for ServiceDeploymentStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.ServiceDeploymentStatus.STOPPED">
            <summary>
            Constant STOPPED for ServiceDeploymentStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.ServiceDeploymentStatus.SUCCESSFUL">
            <summary>
            Constant SUCCESSFUL for ServiceDeploymentStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.ServiceDeploymentStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ServiceDeploymentStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ServiceDeploymentStatus.op_Implicit(System.String)~Amazon.ECS.ServiceDeploymentStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ServiceField">
            <summary>
            Constants used for properties of type ServiceField.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ServiceField.TAGS">
            <summary>
            Constant TAGS for ServiceField
            </summary>
        </member>
        <member name="M:Amazon.ECS.ServiceField.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ServiceField.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ServiceField.op_Implicit(System.String)~Amazon.ECS.ServiceField">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.SettingName">
            <summary>
            Constants used for properties of type SettingName.
            </summary>
        </member>
        <member name="F:Amazon.ECS.SettingName.AwsvpcTrunking">
            <summary>
            Constant AwsvpcTrunking for SettingName
            </summary>
        </member>
        <member name="F:Amazon.ECS.SettingName.ContainerInsights">
            <summary>
            Constant ContainerInsights for SettingName
            </summary>
        </member>
        <member name="F:Amazon.ECS.SettingName.ContainerInstanceLongArnFormat">
            <summary>
            Constant ContainerInstanceLongArnFormat for SettingName
            </summary>
        </member>
        <member name="F:Amazon.ECS.SettingName.FargateFIPSMode">
            <summary>
            Constant FargateFIPSMode for SettingName
            </summary>
        </member>
        <member name="F:Amazon.ECS.SettingName.FargateTaskRetirementWaitPeriod">
            <summary>
            Constant FargateTaskRetirementWaitPeriod for SettingName
            </summary>
        </member>
        <member name="F:Amazon.ECS.SettingName.GuardDutyActivate">
            <summary>
            Constant GuardDutyActivate for SettingName
            </summary>
        </member>
        <member name="F:Amazon.ECS.SettingName.ServiceLongArnFormat">
            <summary>
            Constant ServiceLongArnFormat for SettingName
            </summary>
        </member>
        <member name="F:Amazon.ECS.SettingName.TagResourceAuthorization">
            <summary>
            Constant TagResourceAuthorization for SettingName
            </summary>
        </member>
        <member name="F:Amazon.ECS.SettingName.TaskLongArnFormat">
            <summary>
            Constant TaskLongArnFormat for SettingName
            </summary>
        </member>
        <member name="M:Amazon.ECS.SettingName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.SettingName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.SettingName.op_Implicit(System.String)~Amazon.ECS.SettingName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.SettingType">
            <summary>
            Constants used for properties of type SettingType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.SettingType.Aws_managed">
            <summary>
            Constant Aws_managed for SettingType
            </summary>
        </member>
        <member name="F:Amazon.ECS.SettingType.User">
            <summary>
            Constant User for SettingType
            </summary>
        </member>
        <member name="M:Amazon.ECS.SettingType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.SettingType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.SettingType.op_Implicit(System.String)~Amazon.ECS.SettingType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.SortOrder">
            <summary>
            Constants used for properties of type SortOrder.
            </summary>
        </member>
        <member name="F:Amazon.ECS.SortOrder.ASC">
            <summary>
            Constant ASC for SortOrder
            </summary>
        </member>
        <member name="F:Amazon.ECS.SortOrder.DESC">
            <summary>
            Constant DESC for SortOrder
            </summary>
        </member>
        <member name="M:Amazon.ECS.SortOrder.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.SortOrder.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.SortOrder.op_Implicit(System.String)~Amazon.ECS.SortOrder">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.StabilityStatus">
            <summary>
            Constants used for properties of type StabilityStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.StabilityStatus.STABILIZING">
            <summary>
            Constant STABILIZING for StabilityStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.StabilityStatus.STEADY_STATE">
            <summary>
            Constant STEADY_STATE for StabilityStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.StabilityStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.StabilityStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.StabilityStatus.op_Implicit(System.String)~Amazon.ECS.StabilityStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TargetType">
            <summary>
            Constants used for properties of type TargetType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TargetType.ContainerInstance">
            <summary>
            Constant ContainerInstance for TargetType
            </summary>
        </member>
        <member name="M:Amazon.ECS.TargetType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TargetType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TargetType.op_Implicit(System.String)~Amazon.ECS.TargetType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TaskDefinitionFamilyStatus">
            <summary>
            Constants used for properties of type TaskDefinitionFamilyStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskDefinitionFamilyStatus.ACTIVE">
            <summary>
            Constant ACTIVE for TaskDefinitionFamilyStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskDefinitionFamilyStatus.ALL">
            <summary>
            Constant ALL for TaskDefinitionFamilyStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskDefinitionFamilyStatus.INACTIVE">
            <summary>
            Constant INACTIVE for TaskDefinitionFamilyStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionFamilyStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionFamilyStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionFamilyStatus.op_Implicit(System.String)~Amazon.ECS.TaskDefinitionFamilyStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TaskDefinitionField">
            <summary>
            Constants used for properties of type TaskDefinitionField.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskDefinitionField.TAGS">
            <summary>
            Constant TAGS for TaskDefinitionField
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionField.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionField.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionField.op_Implicit(System.String)~Amazon.ECS.TaskDefinitionField">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TaskDefinitionPlacementConstraintType">
            <summary>
            Constants used for properties of type TaskDefinitionPlacementConstraintType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskDefinitionPlacementConstraintType.MemberOf">
            <summary>
            Constant MemberOf for TaskDefinitionPlacementConstraintType
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionPlacementConstraintType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionPlacementConstraintType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionPlacementConstraintType.op_Implicit(System.String)~Amazon.ECS.TaskDefinitionPlacementConstraintType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TaskDefinitionStatus">
            <summary>
            Constants used for properties of type TaskDefinitionStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskDefinitionStatus.ACTIVE">
            <summary>
            Constant ACTIVE for TaskDefinitionStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskDefinitionStatus.DELETE_IN_PROGRESS">
            <summary>
            Constant DELETE_IN_PROGRESS for TaskDefinitionStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskDefinitionStatus.INACTIVE">
            <summary>
            Constant INACTIVE for TaskDefinitionStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionStatus.op_Implicit(System.String)~Amazon.ECS.TaskDefinitionStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TaskField">
            <summary>
            Constants used for properties of type TaskField.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskField.TAGS">
            <summary>
            Constant TAGS for TaskField
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskField.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskField.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TaskField.op_Implicit(System.String)~Amazon.ECS.TaskField">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TaskFilesystemType">
            <summary>
            Constants used for properties of type TaskFilesystemType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskFilesystemType.Ext3">
            <summary>
            Constant Ext3 for TaskFilesystemType
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskFilesystemType.Ext4">
            <summary>
            Constant Ext4 for TaskFilesystemType
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskFilesystemType.Ntfs">
            <summary>
            Constant Ntfs for TaskFilesystemType
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskFilesystemType.Xfs">
            <summary>
            Constant Xfs for TaskFilesystemType
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskFilesystemType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskFilesystemType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TaskFilesystemType.op_Implicit(System.String)~Amazon.ECS.TaskFilesystemType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TaskSetField">
            <summary>
            Constants used for properties of type TaskSetField.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskSetField.TAGS">
            <summary>
            Constant TAGS for TaskSetField
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskSetField.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskSetField.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TaskSetField.op_Implicit(System.String)~Amazon.ECS.TaskSetField">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TaskStopCode">
            <summary>
            Constants used for properties of type TaskStopCode.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskStopCode.EssentialContainerExited">
            <summary>
            Constant EssentialContainerExited for TaskStopCode
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskStopCode.ServiceSchedulerInitiated">
            <summary>
            Constant ServiceSchedulerInitiated for TaskStopCode
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskStopCode.SpotInterruption">
            <summary>
            Constant SpotInterruption for TaskStopCode
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskStopCode.TaskFailedToStart">
            <summary>
            Constant TaskFailedToStart for TaskStopCode
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskStopCode.TerminationNotice">
            <summary>
            Constant TerminationNotice for TaskStopCode
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskStopCode.UserInitiated">
            <summary>
            Constant UserInitiated for TaskStopCode
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskStopCode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskStopCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TaskStopCode.op_Implicit(System.String)~Amazon.ECS.TaskStopCode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TransportProtocol">
            <summary>
            Constants used for properties of type TransportProtocol.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TransportProtocol.Tcp">
            <summary>
            Constant Tcp for TransportProtocol
            </summary>
        </member>
        <member name="F:Amazon.ECS.TransportProtocol.Udp">
            <summary>
            Constant Udp for TransportProtocol
            </summary>
        </member>
        <member name="M:Amazon.ECS.TransportProtocol.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TransportProtocol.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TransportProtocol.op_Implicit(System.String)~Amazon.ECS.TransportProtocol">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.UlimitName">
            <summary>
            Constants used for properties of type UlimitName.
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Core">
            <summary>
            Constant Core for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Cpu">
            <summary>
            Constant Cpu for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Data">
            <summary>
            Constant Data for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Fsize">
            <summary>
            Constant Fsize for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Locks">
            <summary>
            Constant Locks for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Memlock">
            <summary>
            Constant Memlock for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Msgqueue">
            <summary>
            Constant Msgqueue for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Nice">
            <summary>
            Constant Nice for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Nofile">
            <summary>
            Constant Nofile for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Nproc">
            <summary>
            Constant Nproc for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Rss">
            <summary>
            Constant Rss for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Rtprio">
            <summary>
            Constant Rtprio for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Rttime">
            <summary>
            Constant Rttime for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Sigpending">
            <summary>
            Constant Sigpending for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Stack">
            <summary>
            Constant Stack for UlimitName
            </summary>
        </member>
        <member name="M:Amazon.ECS.UlimitName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.UlimitName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.UlimitName.op_Implicit(System.String)~Amazon.ECS.UlimitName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.VersionConsistency">
            <summary>
            Constants used for properties of type VersionConsistency.
            </summary>
        </member>
        <member name="F:Amazon.ECS.VersionConsistency.Disabled">
            <summary>
            Constant Disabled for VersionConsistency
            </summary>
        </member>
        <member name="F:Amazon.ECS.VersionConsistency.Enabled">
            <summary>
            Constant Enabled for VersionConsistency
            </summary>
        </member>
        <member name="M:Amazon.ECS.VersionConsistency.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.VersionConsistency.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.VersionConsistency.op_Implicit(System.String)~Amazon.ECS.VersionConsistency">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.AmazonECSClient">
             <summary>
             <para>Implementation for accessing ECS</para>
            
             Amazon Elastic Container Service 
             <para>
             Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container
             management service. It makes it easy to run, stop, and manage Docker containers. You
             can host your cluster on a serverless infrastructure that's managed by Amazon ECS
             by launching your services or tasks on Fargate. For more control, you can host your
             tasks on a cluster of Amazon Elastic Compute Cloud (Amazon EC2) or External (on-premises)
             instances that you manage.
             </para>
              
             <para>
             Amazon ECS makes it easy to launch and stop container-based applications with simple
             API calls. This makes it easy to get the state of your cluster from a centralized
             service, and gives you access to many familiar Amazon EC2 features.
             </para>
              
             <para>
             You can use Amazon ECS to schedule the placement of containers across your cluster
             based on your resource needs, isolation policies, and availability requirements. With
             Amazon ECS, you don't need to operate your own cluster management and configuration
             management systems. You also don't need to worry about scaling your management infrastructure.
             
             </para>
             </summary>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor">
             <summary>
             Constructs AmazonECSClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonECSClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(Amazon.ECS.AmazonECSConfig)">
             <summary>
             Constructs AmazonECSClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonECSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonECSClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonECSClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.ECS.AmazonECSConfig)">
            <summary>
            Constructs AmazonECSClient with AWS Credentials and an
            AmazonECSClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonECSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonECSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonECSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(System.String,System.String,Amazon.ECS.AmazonECSConfig)">
            <summary>
            Constructs AmazonECSClient with AWS Access Key ID, AWS Secret Key and an
            AmazonECSClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonECSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonECSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonECSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(System.String,System.String,System.String,Amazon.ECS.AmazonECSConfig)">
            <summary>
            Constructs AmazonECSClient with AWS Access Key ID, AWS Secret Key and an
            AmazonECSClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonECSClient Configuration Object</param>
        </member>
        <member name="P:Amazon.ECS.AmazonECSClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.ECS.AmazonECSClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.CreateCapacityProviderAsync(Amazon.ECS.Model.CreateCapacityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new capacity provider. Capacity providers are associated with an Amazon
            ECS cluster and are used in capacity provider strategies to facilitate cluster auto
            scaling.
            
             
            <para>
            Only capacity providers that use an Auto Scaling group can be created. Amazon ECS
            tasks on Fargate use the <c>FARGATE</c> and <c>FARGATE_SPOT</c> capacity providers.
            These providers are available to all accounts in the Amazon Web Services Regions that
            Fargate supports.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCapacityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCapacityProvider service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.LimitExceededException">
            The limit for the resource was exceeded.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There's already a current Amazon ECS container agent update in progress on the container
            instance that's specified. If the container agent becomes disconnected while it's
            in a transitional stage, such as <c>PENDING</c> or <c>STAGING</c>, the update process
            can get stuck in that state. However, when the agent reconnects, it resumes where
            it stopped previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateCapacityProvider">REST API Reference for CreateCapacityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.CreateClusterAsync(Amazon.ECS.Model.CreateClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new Amazon ECS cluster. By default, your account receives a <c>default</c>
            cluster when you launch your first container instance. However, you can create your
            own cluster with a unique name.
            
             <note> 
            <para>
            When you call the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateCluster.html">CreateCluster</a>
            API operation, Amazon ECS attempts to create the Amazon ECS service-linked role for
            your account. This is so that it can manage required resources in other Amazon Web
            Services services on your behalf. However, if the user that makes the call doesn't
            have permissions to create the service-linked role, it isn't created. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using-service-linked-roles.html">Using
            service-linked roles for Amazon ECS</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCluster service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.NamespaceNotFoundException">
            The specified namespace wasn't found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateCluster">REST API Reference for CreateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.CreateServiceAsync(Amazon.ECS.Model.CreateServiceRequest,System.Threading.CancellationToken)">
            <summary>
            Runs and maintains your desired number of tasks from a specified task definition.
            If the number of tasks running in a service drops below the <c>desiredCount</c>, Amazon
            ECS runs another copy of the task in the specified cluster. To update an existing
            service, use <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>.
            
             <note> 
            <para>
            On March 21, 2024, a change was made to resolve the task definition revision before
            authorization. When a task definition revision is not specified, authorization will
            occur using the latest revision of a task definition.
            </para>
             </note> <note> 
            <para>
            Amazon Elastic Inference (EI) is no longer available to customers.
            </para>
             </note> 
            <para>
            In addition to maintaining the desired count of tasks in your service, you can optionally
            run your service behind one or more load balancers. The load balancers distribute
            traffic across the tasks that are associated with the service. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-load-balancing.html">Service
            load balancing</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            You can attach Amazon EBS volumes to Amazon ECS tasks by configuring the volume when
            creating or updating a service. <c>volumeConfigurations</c> is only supported for
            REPLICA service and not DAEMON service. For more infomation, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volume-types">Amazon
            EBS volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            Tasks for services that don't use a load balancer are considered healthy if they're
            in the <c>RUNNING</c> state. Tasks for services that use a load balancer are considered
            healthy if they're in the <c>RUNNING</c> state and are reported as healthy by the
            load balancer.
            </para>
             
            <para>
            There are two service scheduler strategies available:
            </para>
             <ul> <li> 
            <para>
             <c>REPLICA</c> - The replica scheduling strategy places and maintains your desired
            number of tasks across your cluster. By default, the service scheduler spreads tasks
            across Availability Zones. You can use task placement strategies and constraints to
            customize task placement decisions. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html">Service
            scheduler concepts</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             </li> <li> 
            <para>
             <c>DAEMON</c> - The daemon scheduling strategy deploys exactly one task on each active
            container instance that meets all of the task placement constraints that you specify
            in your cluster. The service scheduler also evaluates the task placement constraints
            for running tasks. It also stops tasks that don't meet the placement constraints.
            When using this strategy, you don't need to specify a desired number of tasks, a task
            placement strategy, or use Service Auto Scaling policies. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html">Service
            scheduler concepts</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             </li> </ul> 
            <para>
            You can optionally specify a deployment configuration for your service. The deployment
            is initiated by changing properties. For example, the deployment might be initiated
            by the task definition or by your desired count of a service. You can use <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>.
            The default value for a replica service for <c>minimumHealthyPercent</c> is 100%.
            The default value for a daemon service for <c>minimumHealthyPercent</c> is 0%.
            </para>
             
            <para>
            If a service uses the <c>ECS</c> deployment controller, the minimum healthy percent
            represents a lower limit on the number of tasks in a service that must remain in the
            <c>RUNNING</c> state during a deployment. Specifically, it represents it as a percentage
            of your desired number of tasks (rounded up to the nearest integer). This happens
            when any of your container instances are in the <c>DRAINING</c> state if the service
            contains tasks using the EC2 launch type. Using this parameter, you can deploy without
            using additional cluster capacity. For example, if you set your service to have desired
            number of four tasks and a minimum healthy percent of 50%, the scheduler might stop
            two existing tasks to free up cluster capacity before starting two new tasks. If they're
            in the <c>RUNNING</c> state, tasks for services that don't use a load balancer are
            considered healthy . If they're in the <c>RUNNING</c> state and reported as healthy
            by the load balancer, tasks for services that <i>do</i> use a load balancer are considered
            healthy . The default value for minimum healthy percent is 100%.
            </para>
             
            <para>
            If a service uses the <c>ECS</c> deployment controller, the <b>maximum percent</b>
            parameter represents an upper limit on the number of tasks in a service that are allowed
            in the <c>RUNNING</c> or <c>PENDING</c> state during a deployment. Specifically, it
            represents it as a percentage of the desired number of tasks (rounded down to the
            nearest integer). This happens when any of your container instances are in the <c>DRAINING</c>
            state if the service contains tasks using the EC2 launch type. Using this parameter,
            you can define the deployment batch size. For example, if your service has a desired
            number of four tasks and a maximum percent value of 200%, the scheduler may start
            four new tasks before stopping the four older tasks (provided that the cluster resources
            required to do this are available). The default value for maximum percent is 200%.
            </para>
             
            <para>
            If a service uses either the <c>CODE_DEPLOY</c> or <c>EXTERNAL</c> deployment controller
            types and tasks that use the EC2 launch type, the <b>minimum healthy percent</b> and
            <b>maximum percent</b> values are used only to define the lower and upper limit on
            the number of the tasks in the service that remain in the <c>RUNNING</c> state. This
            is while the container instances are in the <c>DRAINING</c> state. If the tasks in
            the service use the Fargate launch type, the minimum healthy percent and maximum percent
            values aren't used. This is the case even if they're currently visible when describing
            your service.
            </para>
             
            <para>
            When creating a service that uses the <c>EXTERNAL</c> deployment controller, you can
            specify only parameters that aren't controlled at the task set level. The only required
            parameter is the service name. You control your services using the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateTaskSet.html">CreateTaskSet</a>.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS deployment types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            When the service scheduler launches new tasks, it determines task placement. For information
            about task placement and task placement strategies, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement.html">Amazon
            ECS task placement</a> in the <i>Amazon Elastic Container Service Developer Guide</i>
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateService service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.NamespaceNotFoundException">
            The specified namespace wasn't found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version doesn't satisfy the required capabilities of the task
            definition.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version doesn't exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateService">REST API Reference for CreateService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.CreateTaskSetAsync(Amazon.ECS.Model.CreateTaskSetRequest,System.Threading.CancellationToken)">
            <summary>
            Create a task set in the specified cluster and service. This is used when a service
            uses the <c>EXTERNAL</c> deployment controller type. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS deployment types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            
             <note> 
            <para>
            On March 21, 2024, a change was made to resolve the task definition revision before
            authorization. When a task definition revision is not specified, authorization will
            occur using the latest revision of a task definition.
            </para>
             </note> 
            <para>
            For information about the maximum number of task sets and other quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateTaskSet service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.NamespaceNotFoundException">
            The specified namespace wasn't found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version doesn't satisfy the required capabilities of the task
            definition.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version doesn't exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service isn't active. You can't update a service that's inactive. If
            you have previously deleted a service, you can re-create it with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html">CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateTaskSet">REST API Reference for CreateTaskSet Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteAccountSettingAsync(Amazon.ECS.Model.DeleteAccountSettingRequest,System.Threading.CancellationToken)">
            <summary>
            Disables an account setting for a specified user, role, or the root user for an account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAccountSetting service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAccountSetting service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteAccountSetting">REST API Reference for DeleteAccountSetting Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteAttributesAsync(Amazon.ECS.Model.DeleteAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes one or more custom attributes from an Amazon ECS resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TargetNotFoundException">
            The specified target wasn't found. You can view your available container instances
            with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListContainerInstances.html">ListContainerInstances</a>.
            Amazon ECS container instances are cluster-specific and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteAttributes">REST API Reference for DeleteAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteCapacityProviderAsync(Amazon.ECS.Model.DeleteCapacityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified capacity provider.
            
             <note> 
            <para>
            The <c>FARGATE</c> and <c>FARGATE_SPOT</c> capacity providers are reserved and can't
            be deleted. You can disassociate them from a cluster using either <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutClusterCapacityProviders.html">PutClusterCapacityProviders</a>
            or by deleting the cluster.
            </para>
             </note> 
            <para>
            Prior to a capacity provider being deleted, the capacity provider must be removed
            from the capacity provider strategy from all services. The <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>
            API can be used to remove a capacity provider from a service's capacity provider strategy.
            When updating a service, the <c>forceNewDeployment</c> option can be used to ensure
            that any tasks using the Amazon EC2 instance capacity provided by the capacity provider
            are transitioned to use the capacity from the remaining capacity providers. Only capacity
            providers that aren't associated with a cluster can be deleted. To remove a capacity
            provider from a cluster, you can either use <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutClusterCapacityProviders.html">PutClusterCapacityProviders</a>
            or delete the cluster.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCapacityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCapacityProvider service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteCapacityProvider">REST API Reference for DeleteCapacityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteClusterAsync(Amazon.ECS.Model.DeleteClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified cluster. The cluster transitions to the <c>INACTIVE</c> state.
            Clusters with an <c>INACTIVE</c> status might remain discoverable in your account
            for a period of time. However, this behavior is subject to change in the future. We
            don't recommend that you rely on <c>INACTIVE</c> clusters persisting.
            
             
            <para>
            You must deregister all container instances from this cluster before you may delete
            it. You can list the container instances in a cluster with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListContainerInstances.html">ListContainerInstances</a>
            and deregister them with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeregisterContainerInstance.html">DeregisterContainerInstance</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCluster service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterContainsContainerInstancesException">
            You can't delete a cluster that has registered container instances. First, deregister
            the container instances before you can delete the cluster. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeregisterContainerInstance.html">DeregisterContainerInstance</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterContainsServicesException">
            You can't delete a cluster that contains services. First, update the service to reduce
            its desired task count to 0, and then delete the service. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>
            and <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeleteService.html">DeleteService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterContainsTasksException">
            You can't delete a cluster that has active tasks.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There's already a current Amazon ECS container agent update in progress on the container
            instance that's specified. If the container agent becomes disconnected while it's
            in a transitional stage, such as <c>PENDING</c> or <c>STAGING</c>, the update process
            can get stuck in that state. However, when the agent reconnects, it resumes where
            it stopped previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteCluster">REST API Reference for DeleteCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteServiceAsync(Amazon.ECS.Model.DeleteServiceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified service within a cluster. You can delete a service if you have
            no running tasks in it and the desired task count is zero. If the service is actively
            maintaining tasks, you can't delete it, and you must update the service to a desired
            task count of zero. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>.
            
             <note> 
            <para>
            When you delete a service, if there are still running tasks that require cleanup,
            the service status moves from <c>ACTIVE</c> to <c>DRAINING</c>, and the service is
            no longer visible in the console or in the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>
            API operation. After all tasks have transitioned to either <c>STOPPING</c> or <c>STOPPED</c>
            status, the service status moves from <c>DRAINING</c> to <c>INACTIVE</c>. Services
            in the <c>DRAINING</c> or <c>INACTIVE</c> status can still be viewed with the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeServices.html">DescribeServices</a>
            API operation. However, in the future, <c>INACTIVE</c> services may be cleaned up
            and purged from Amazon ECS record keeping, and <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeServices.html">DescribeServices</a>
            calls on those services return a <c>ServiceNotFoundException</c> error.
            </para>
             </note> <important> 
            <para>
            If you attempt to create a new service with the same name as an existing service in
            either <c>ACTIVE</c> or <c>DRAINING</c> status, you receive an error.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteService service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteService">REST API Reference for DeleteService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteTaskDefinitionsAsync(Amazon.ECS.Model.DeleteTaskDefinitionsRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes one or more task definitions.
            
             
            <para>
            You must deregister a task definition revision before you delete it. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeregisterTaskDefinition.html">DeregisterTaskDefinition</a>.
            </para>
             
            <para>
            When you delete a task definition revision, it is immediately transitions from the
            <c>INACTIVE</c> to <c>DELETE_IN_PROGRESS</c>. Existing tasks and services that reference
            a <c>DELETE_IN_PROGRESS</c> task definition revision continue to run without disruption.
            Existing services that reference a <c>DELETE_IN_PROGRESS</c> task definition revision
            can still scale up or down by modifying the service's desired count.
            </para>
             
            <para>
            You can't use a <c>DELETE_IN_PROGRESS</c> task definition revision to run new tasks
            or create new services. You also can't update an existing service to reference a <c>DELETE_IN_PROGRESS</c>
            task definition revision.
            </para>
             
            <para>
             A task definition revision will stay in <c>DELETE_IN_PROGRESS</c> status until all
            the associated tasks and services have been terminated.
            </para>
             
            <para>
            When you delete all <c>INACTIVE</c> task definition revisions, the task definition
            name is not displayed in the console and not returned in the API. If a task definition
            revisions are in the <c>DELETE_IN_PROGRESS</c> state, the task definition name is
            displayed in the console and returned in the API. The task definition name is retained
            by Amazon ECS and the revision is incremented the next time you create a task definition
            with that name.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteTaskDefinitions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteTaskDefinitions service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteTaskDefinitions">REST API Reference for DeleteTaskDefinitions Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteTaskSetAsync(Amazon.ECS.Model.DeleteTaskSetRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified task set within a service. This is used when a service uses the
            <c>EXTERNAL</c> deployment controller type. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS deployment types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteTaskSet service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service isn't active. You can't update a service that's inactive. If
            you have previously deleted a service, you can re-create it with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html">CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TaskSetNotFoundException">
            The specified task set wasn't found. You can view your available task sets with <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTaskSets.html">DescribeTaskSets</a>.
            Task sets are specific to each cluster, service and Region.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteTaskSet">REST API Reference for DeleteTaskSet Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeregisterContainerInstanceAsync(Amazon.ECS.Model.DeregisterContainerInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters an Amazon ECS container instance from the specified cluster. This instance
            is no longer available to run tasks.
            
             
            <para>
            If you intend to use the container instance for some other purpose after deregistration,
            we recommend that you stop all of the tasks running on the container instance before
            deregistration. That prevents any orphaned tasks from consuming resources.
            </para>
             
            <para>
            Deregistering a container instance removes the instance from a cluster, but it doesn't
            terminate the EC2 instance. If you are finished using the instance, be sure to terminate
            it in the Amazon EC2 console to stop billing.
            </para>
             <note> 
            <para>
            If you terminate a running container instance, Amazon ECS automatically deregisters
            the instance from your cluster (stopped container instances or instances with disconnected
            agents aren't automatically deregistered when terminated).
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterContainerInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterContainerInstance service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeregisterContainerInstance">REST API Reference for DeregisterContainerInstance Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeregisterTaskDefinitionAsync(Amazon.ECS.Model.DeregisterTaskDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters the specified task definition by family and revision. Upon deregistration,
            the task definition is marked as <c>INACTIVE</c>. Existing tasks and services that
            reference an <c>INACTIVE</c> task definition continue to run without disruption. Existing
            services that reference an <c>INACTIVE</c> task definition can still scale up or down
            by modifying the service's desired count. If you want to delete a task definition
            revision, you must first deregister the task definition revision.
            
             
            <para>
            You can't use an <c>INACTIVE</c> task definition to run new tasks or create new services,
            and you can't update an existing service to reference an <c>INACTIVE</c> task definition.
            However, there may be up to a 10-minute window following deregistration where these
            restrictions have not yet taken effect.
            </para>
             <note> 
            <para>
            At this time, <c>INACTIVE</c> task definitions remain discoverable in your account
            indefinitely. However, this behavior is subject to change in the future. We don't
            recommend that you rely on <c>INACTIVE</c> task definitions persisting beyond the
            lifecycle of any associated tasks and services.
            </para>
             </note> 
            <para>
            You must deregister a task definition revision before you delete it. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeleteTaskDefinitions.html">DeleteTaskDefinitions</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterTaskDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeregisterTaskDefinition">REST API Reference for DeregisterTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeCapacityProvidersAsync(Amazon.ECS.Model.DescribeCapacityProvidersRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your capacity providers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCapacityProviders service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCapacityProviders service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeCapacityProviders">REST API Reference for DescribeCapacityProviders Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeClustersAsync(Amazon.ECS.Model.DescribeClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your clusters.
            
             
            <para>
             For CLI examples, see <a href="https://github.com/aws/aws-cli/blob/develop/awscli/examples/ecs/describe-clusters.rst">describe-clusters.rst</a>
            on GitHub.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeClusters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeClusters service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeClusters">REST API Reference for DescribeClusters Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeContainerInstancesAsync(Amazon.ECS.Model.DescribeContainerInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more container instances. Returns metadata about each container instance
            requested.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeContainerInstances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeContainerInstances service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeContainerInstances">REST API Reference for DescribeContainerInstances Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeServiceDeploymentsAsync(Amazon.ECS.Model.DescribeServiceDeploymentsRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your service deployments.
            
             
            <para>
            A service deployment happens when you release a software update for the service. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-deployments.html">Amazon
            ECS service deployments</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeServiceDeployments service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeServiceDeployments service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeServiceDeployments">REST API Reference for DescribeServiceDeployments Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeServiceRevisionsAsync(Amazon.ECS.Model.DescribeServiceRevisionsRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more service revisions.
            
             
            <para>
            A service revision is a version of the service that includes the values for the Amazon
            ECS resources (for example, task definition) and the environment resources (for example,
            load balancers, subnets, and security groups). For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-revision.html">Amazon
            ECS service revisions</a>.
            </para>
             
            <para>
            You can't describe a service revision that was created before October 25, 2024.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeServiceRevisions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeServiceRevisions service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeServiceRevisions">REST API Reference for DescribeServiceRevisions Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeServicesAsync(Amazon.ECS.Model.DescribeServicesRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the specified services running in your cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeServices service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeServices service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeServices">REST API Reference for DescribeServices Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeTaskDefinitionAsync(Amazon.ECS.Model.DescribeTaskDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Describes a task definition. You can specify a <c>family</c> and <c>revision</c> to
            find information about a specific task definition, or you can simply specify the family
            to find the latest <c>ACTIVE</c> revision in that family.
            
             <note> 
            <para>
            You can only describe <c>INACTIVE</c> task definitions while an active task or service
            references them.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTaskDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTaskDefinition">REST API Reference for DescribeTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeTasksAsync(Amazon.ECS.Model.DescribeTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Describes a specified task or tasks.
            
             
            <para>
            Currently, stopped tasks appear in the returned results for at least one hour.
            </para>
             
            <para>
            If you have tasks with tags, and then delete the cluster, the tagged tasks are returned
            in the response. If you create a new cluster with the same name as the deleted cluster,
            the tagged tasks are not included in the response.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTasks service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTasks service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTasks">REST API Reference for DescribeTasks Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeTaskSetsAsync(Amazon.ECS.Model.DescribeTaskSetsRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the task sets in the specified cluster and service. This is used when a
            service uses the <c>EXTERNAL</c> deployment controller type. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTaskSets service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTaskSets service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service isn't active. You can't update a service that's inactive. If
            you have previously deleted a service, you can re-create it with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html">CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTaskSets">REST API Reference for DescribeTaskSets Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ExecuteCommandAsync(Amazon.ECS.Model.ExecuteCommandRequest,System.Threading.CancellationToken)">
            <summary>
            Runs a command remotely on a container within a task.
            
             
            <para>
            If you use a condition key in your IAM policy to refine the conditions for the policy
            statement, for example limit the actions to a specific cluster, you receive an <c>AccessDeniedException</c>
            when there is a mismatch between the condition key value and the corresponding parameter
            value.
            </para>
             
            <para>
            For information about required permissions and considerations, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-exec.html">Using
            Amazon ECS Exec for debugging</a> in the <i>Amazon ECS Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ExecuteCommand service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ExecuteCommand service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TargetNotConnectedException">
            The execute command cannot run. This error can be caused by any of the following configuration
            issues:
            
             <ul> <li> 
            <para>
            Incorrect IAM permissions
            </para>
             </li> <li> 
            <para>
            The SSM agent is not installed or is not running
            </para>
             </li> <li> 
            <para>
             There is an interface Amazon VPC endpoint for Amazon ECS, but there is not one for
            Systems Manager Session Manager
            </para>
             </li> </ul> 
            <para>
            For information about how to troubleshoot the issues, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-exec.html">Troubleshooting
            issues with ECS Exec</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ExecuteCommand">REST API Reference for ExecuteCommand Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.GetTaskProtectionAsync(Amazon.ECS.Model.GetTaskProtectionRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the protection status of tasks in an Amazon ECS service.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetTaskProtection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetTaskProtection service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ResourceNotFoundException">
            The specified resource wasn't found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/GetTaskProtection">REST API Reference for GetTaskProtection Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListAccountSettingsAsync(Amazon.ECS.Model.ListAccountSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the account settings for a specified principal.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAccountSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAccountSettings service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListAccountSettings">REST API Reference for ListAccountSettings Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListAttributesAsync(Amazon.ECS.Model.ListAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the attributes for Amazon ECS resources within a specified target type and cluster.
            When you specify a target type and cluster, <c>ListAttributes</c> returns a list of
            attribute objects, one for each attribute on each resource. You can filter the list
            of results to a single attribute name to only return results that have that name.
            You can also filter the results by attribute name and value. You can do this, for
            example, to see which container instances in a cluster are running a Linux AMI (<c>ecs.os-type=linux</c>).
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListAttributes">REST API Reference for ListAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListClustersAsync(Amazon.ECS.Model.ListClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of existing clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListClusters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListClusters service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListClusters">REST API Reference for ListClusters Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListContainerInstancesAsync(Amazon.ECS.Model.ListContainerInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of container instances in a specified cluster. You can filter the results
            of a <c>ListContainerInstances</c> operation with cluster query language statements
            inside the <c>filter</c> parameter. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
            Query Language</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListContainerInstances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListContainerInstances service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListContainerInstances">REST API Reference for ListContainerInstances Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListServiceDeploymentsAsync(Amazon.ECS.Model.ListServiceDeploymentsRequest,System.Threading.CancellationToken)">
            <summary>
            This operation lists all the service deployments that meet the specified filter criteria.
            
             
            <para>
            A service deployment happens when you release a softwre update for the service. You
            route traffic from the running service revisions to the new service revison and control
            the number of running tasks. 
            </para>
             
            <para>
            This API returns the values that you use for the request parameters in <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeServiceRevisions.html">DescribeServiceRevisions</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListServiceDeployments service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListServiceDeployments service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListServiceDeployments">REST API Reference for ListServiceDeployments Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListServicesAsync(Amazon.ECS.Model.ListServicesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of services. You can filter the results by cluster, launch type, and
            scheduling strategy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListServices service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListServices service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListServices">REST API Reference for ListServices Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListServicesByNamespaceAsync(Amazon.ECS.Model.ListServicesByNamespaceRequest,System.Threading.CancellationToken)">
            <summary>
            This operation lists all of the services that are associated with a Cloud Map namespace.
            This list might include services in different clusters. In contrast, <c>ListServices</c>
            can only list services in one cluster at a time. If you need to filter the list of
            services in a single cluster by various parameters, use <c>ListServices</c>. For more
            information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html">Service
            Connect</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListServicesByNamespace service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListServicesByNamespace service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.NamespaceNotFoundException">
            The specified namespace wasn't found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListServicesByNamespace">REST API Reference for ListServicesByNamespace Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListTagsForResourceAsync(Amazon.ECS.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            List the tags for an Amazon ECS resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListTaskDefinitionFamiliesAsync(Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of task definition families that are registered to your account. This
            list includes task definition families that no longer have any <c>ACTIVE</c> task
            definition revisions.
            
             
            <para>
            You can filter out task definition families that don't contain any <c>ACTIVE</c> task
            definition revisions by setting the <c>status</c> parameter to <c>ACTIVE</c>. You
            can also filter the results with the <c>familyPrefix</c> parameter.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTaskDefinitionFamilies service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTaskDefinitionFamilies service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTaskDefinitionFamilies">REST API Reference for ListTaskDefinitionFamilies Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListTaskDefinitionsAsync(Amazon.ECS.Model.ListTaskDefinitionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of task definitions that are registered to your account. You can filter
            the results by family name with the <c>familyPrefix</c> parameter or by status with
            the <c>status</c> parameter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTaskDefinitions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTaskDefinitions service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTaskDefinitions">REST API Reference for ListTaskDefinitions Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListTasksAsync(Amazon.ECS.Model.ListTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of tasks. You can filter the results by cluster, task definition family,
            container instance, launch type, what IAM principal started the task, or by the desired
            status of the task.
            
             
            <para>
            Recently stopped tasks might appear in the returned results. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTasks service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTasks service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTasks">REST API Reference for ListTasks Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.PutAccountSettingAsync(Amazon.ECS.Model.PutAccountSettingRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies an account setting. Account settings are set on a per-Region basis.
            
             
            <para>
            If you change the root user account setting, the default settings are reset for users
            and roles that do not have specified individual account settings. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html">Account
            Settings</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAccountSetting service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutAccountSetting service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutAccountSetting">REST API Reference for PutAccountSetting Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.PutAccountSettingDefaultAsync(Amazon.ECS.Model.PutAccountSettingDefaultRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies an account setting for all users on an account for whom no individual account
            setting has been specified. Account settings are set on a per-Region basis.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAccountSettingDefault service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutAccountSettingDefault service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutAccountSettingDefault">REST API Reference for PutAccountSettingDefault Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.PutAttributesAsync(Amazon.ECS.Model.PutAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Create or update an attribute on an Amazon ECS resource. If the attribute doesn't
            exist, it's created. If the attribute exists, its value is replaced with the specified
            value. To delete an attribute, use <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeleteAttributes.html">DeleteAttributes</a>.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes">Attributes</a>
            in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AttributeLimitExceededException">
            You can apply up to 10 custom attributes for each resource. You can view the attributes
            of a resource with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListAttributes.html">ListAttributes</a>.
            You can remove existing attributes on a resource with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeleteAttributes.html">DeleteAttributes</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TargetNotFoundException">
            The specified target wasn't found. You can view your available container instances
            with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListContainerInstances.html">ListContainerInstances</a>.
            Amazon ECS container instances are cluster-specific and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutAttributes">REST API Reference for PutAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.PutClusterCapacityProvidersAsync(Amazon.ECS.Model.PutClusterCapacityProvidersRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the available capacity providers and the default capacity provider strategy
            for a cluster.
            
             
            <para>
            You must specify both the available capacity providers and a default capacity provider
            strategy for the cluster. If the specified cluster has existing capacity providers
            associated with it, you must specify all existing capacity providers in addition to
            any new ones you want to add. Any existing capacity providers that are associated
            with a cluster that are omitted from a <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutClusterCapacityProviders.html">PutClusterCapacityProviders</a>
            API call will be disassociated with the cluster. You can only disassociate an existing
            capacity provider from a cluster if it's not being used by any existing tasks.
            </para>
             
            <para>
            When creating a service or running a task on a cluster, if no capacity provider or
            launch type is specified, then the cluster's default capacity provider strategy is
            used. We recommend that you define a default capacity provider strategy for your cluster.
            However, you must specify an empty array (<c>[]</c>) to bypass defining a default
            strategy.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutClusterCapacityProviders service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutClusterCapacityProviders service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ResourceInUseException">
            The specified resource is in-use and can't be removed.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There's already a current Amazon ECS container agent update in progress on the container
            instance that's specified. If the container agent becomes disconnected while it's
            in a transitional stage, such as <c>PENDING</c> or <c>STAGING</c>, the update process
            can get stuck in that state. However, when the agent reconnects, it resumes where
            it stopped previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutClusterCapacityProviders">REST API Reference for PutClusterCapacityProviders Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.RegisterTaskDefinitionAsync(Amazon.ECS.Model.RegisterTaskDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Registers a new task definition from the supplied <c>family</c> and <c>containerDefinitions</c>.
            Optionally, you can add data volumes to your containers with the <c>volumes</c> parameter.
            For more information about task definition parameters and defaults, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html">Amazon
            ECS Task Definitions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            
             
            <para>
            You can specify a role for your task with the <c>taskRoleArn</c> parameter. When you
            specify a role for a task, its containers can then use the latest versions of the
            CLI or SDKs to make API requests to the Amazon Web Services services that are specified
            in the policy that's associated with the role. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html">IAM
            Roles for Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            You can specify a Docker networking mode for the containers in your task definition
            with the <c>networkMode</c> parameter. If you specify the <c>awsvpc</c> network mode,
            the task is allocated an elastic network interface, and you must specify a <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_NetworkConfiguration.html">NetworkConfiguration</a>
            when you create a service or run a task with the task definition. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html">Task
            Networking</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterTaskDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/RegisterTaskDefinition">REST API Reference for RegisterTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.RunTaskAsync(Amazon.ECS.Model.RunTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a new task using the specified task definition.
            
             <note> 
            <para>
            On March 21, 2024, a change was made to resolve the task definition revision before
            authorization. When a task definition revision is not specified, authorization will
            occur using the latest revision of a task definition.
            </para>
             </note> <note> 
            <para>
            Amazon Elastic Inference (EI) is no longer available to customers.
            </para>
             </note> 
            <para>
            You can allow Amazon ECS to place tasks for you, or you can customize how Amazon ECS
            places tasks using placement constraints and placement strategies. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
            Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            Alternatively, you can use <c>StartTask</c> to use your own scheduler or place tasks
            manually on specific container instances.
            </para>
             
            <para>
            You can attach Amazon EBS volumes to Amazon ECS tasks by configuring the volume when
            creating or updating a service. For more infomation, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volume-types">Amazon
            EBS volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            The Amazon ECS API follows an eventual consistency model. This is because of the distributed
            nature of the system supporting the API. This means that the result of an API command
            you run that affects your Amazon ECS resources might not be immediately visible to
            all subsequent commands you run. Keep this in mind when you carry out an API command
            that immediately follows a previous API command.
            </para>
             
            <para>
            To manage eventual consistency, you can do the following:
            </para>
             <ul> <li> 
            <para>
            Confirm the state of the resource before you run a command to modify it. Run the DescribeTasks
            command using an exponential backoff algorithm to ensure that you allow enough time
            for the previous command to propagate through the system. To do this, run the DescribeTasks
            command repeatedly, starting with a couple of seconds of wait time and increasing
            gradually up to five minutes of wait time.
            </para>
             </li> <li> 
            <para>
            Add wait time between subsequent commands, even if the DescribeTasks command returns
            an accurate response. Apply an exponential backoff algorithm starting with a couple
            of seconds of wait time, and increase gradually up to about five minutes of wait time.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RunTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RunTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.BlockedException">
            Your Amazon Web Services account was blocked. For more information, contact <a href="http://aws.amazon.com/contact-us/">
            Amazon Web Services Support</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ConflictException">
            The <c>RunTask</c> request could not be processed due to conflicts. The provided <c>clientToken</c>
            is already in use with a different <c>RunTask</c> request. The <c>resourceIds</c>
            are the existing task ARNs which are already associated with the <c>clientToken</c>.
            
            
             
            <para>
            To fix this issue:
            </para>
             <ul> <li> 
            <para>
            Run <c>RunTask</c> with a unique <c>clientToken</c>.
            </para>
             </li> <li> 
            <para>
            Run <c>RunTask</c> with the <c>clientToken</c> and the original set of parameters
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version doesn't satisfy the required capabilities of the task
            definition.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version doesn't exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/RunTask">REST API Reference for RunTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.StartTaskAsync(Amazon.ECS.Model.StartTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a new task from the specified task definition on the specified container instance
            or instances.
            
             <note> 
            <para>
            On March 21, 2024, a change was made to resolve the task definition revision before
            authorization. When a task definition revision is not specified, authorization will
            occur using the latest revision of a task definition.
            </para>
             </note> <note> 
            <para>
            Amazon Elastic Inference (EI) is no longer available to customers.
            </para>
             </note> 
            <para>
            Alternatively, you can use<c>RunTask</c> to place tasks for you. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
            Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            You can attach Amazon EBS volumes to Amazon ECS tasks by configuring the volume when
            creating or updating a service. For more infomation, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volume-types">Amazon
            EBS volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/StartTask">REST API Reference for StartTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.StopTaskAsync(Amazon.ECS.Model.StopTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Stops a running task. Any tags associated with the task will be deleted.
            
             
            <para>
            When you call <c>StopTask</c> on a task, the equivalent of <c>docker stop</c> is issued
            to the containers running in the task. This results in a <c>SIGTERM</c> value and
            a default 30-second timeout, after which the <c>SIGKILL</c> value is sent and the
            containers are forcibly stopped. If the container handles the <c>SIGTERM</c> value
            gracefully and exits within 30 seconds from receiving it, no <c>SIGKILL</c> value
            is sent.
            </para>
             
            <para>
            For Windows containers, POSIX signals do not work and runtime stops the container
            by sending a <c>CTRL_SHUTDOWN_EVENT</c>. For more information, see <a href="https://github.com/moby/moby/issues/25982">Unable
            to react to graceful shutdown of (Windows) container #25982</a> on GitHub.
            </para>
             <note> 
            <para>
            The default 30-second timeout can be configured on the Amazon ECS container agent
            with the <c>ECS_CONTAINER_STOP_TIMEOUT</c> variable. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS Container Agent Configuration</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/StopTask">REST API Reference for StopTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.SubmitAttachmentStateChangesAsync(Amazon.ECS.Model.SubmitAttachmentStateChangesRequest,System.Threading.CancellationToken)">
            <summary>
            <note> 
            <para>
            This action is only used by the Amazon ECS agent, and it is not intended for use outside
            of the agent.
            </para>
             </note> 
            <para>
            Sent to acknowledge that an attachment changed states.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SubmitAttachmentStateChanges service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SubmitAttachmentStateChanges service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/SubmitAttachmentStateChanges">REST API Reference for SubmitAttachmentStateChanges Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.TagResourceAsync(Amazon.ECS.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Associates the specified tags to a resource with the specified <c>resourceArn</c>.
            If existing tags on a resource aren't specified in the request parameters, they aren't
            changed. When a resource is deleted, the tags that are associated with that resource
            are deleted as well.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ResourceNotFoundException">
            The specified resource wasn't found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UntagResourceAsync(Amazon.ECS.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes specified tags from a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ResourceNotFoundException">
            The specified resource wasn't found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateCapacityProviderAsync(Amazon.ECS.Model.UpdateCapacityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the parameters for a capacity provider.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCapacityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateCapacityProvider service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateCapacityProvider">REST API Reference for UpdateCapacityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateClusterAsync(Amazon.ECS.Model.UpdateClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateCluster service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.NamespaceNotFoundException">
            The specified namespace wasn't found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateCluster">REST API Reference for UpdateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateClusterSettingsAsync(Amazon.ECS.Model.UpdateClusterSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the settings to use for a cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateClusterSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateClusterSettings service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateClusterSettings">REST API Reference for UpdateClusterSettings Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateContainerAgentAsync(Amazon.ECS.Model.UpdateContainerAgentRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the Amazon ECS container agent on a specified container instance. Updating
            the Amazon ECS container agent doesn't interrupt running tasks or services on the
            container instance. The process for updating the agent differs depending on whether
            your container instance was launched with the Amazon ECS-optimized AMI or another
            operating system.
            
             <note> 
            <para>
            The <c>UpdateContainerAgent</c> API isn't supported for container instances using
            the Amazon ECS-optimized Amazon Linux 2 (arm64) AMI. To update the container agent,
            you can update the <c>ecs-init</c> package. This updates the agent. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/agent-update-ecs-ami.html">Updating
            the Amazon ECS container agent</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note> <note> 
            <para>
            Agent updates with the <c>UpdateContainerAgent</c> API operation do not apply to Windows
            container instances. We recommend that you launch new container instances to update
            the agent version in your Windows clusters.
            </para>
             </note> 
            <para>
            The <c>UpdateContainerAgent</c> API requires an Amazon ECS-optimized AMI or Amazon
            Linux AMI with the <c>ecs-init</c> service installed and running. For help updating
            the Amazon ECS container agent on other operating systems, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html#manually_update_agent">Manually
            updating the Amazon ECS container agent</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateContainerAgent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateContainerAgent service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.MissingVersionException">
            Amazon ECS can't determine the current version of the Amazon ECS container agent on
            the container instance and doesn't have enough information to proceed with an update.
            This could be because the agent running on the container instance is a previous or
            custom version that doesn't use our version information.
            </exception>
            <exception cref="T:Amazon.ECS.Model.NoUpdateAvailableException">
            There's no update available for this Amazon ECS container agent. This might be because
            the agent is already running the latest version or because it's so old that there's
            no update path to the current version.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There's already a current Amazon ECS container agent update in progress on the container
            instance that's specified. If the container agent becomes disconnected while it's
            in a transitional stage, such as <c>PENDING</c> or <c>STAGING</c>, the update process
            can get stuck in that state. However, when the agent reconnects, it resumes where
            it stopped previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateContainerAgent">REST API Reference for UpdateContainerAgent Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateContainerInstancesStateAsync(Amazon.ECS.Model.UpdateContainerInstancesStateRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the status of an Amazon ECS container instance.
            
             
            <para>
            Once a container instance has reached an <c>ACTIVE</c> state, you can change the status
            of a container instance to <c>DRAINING</c> to manually remove an instance from a cluster,
            for example to perform system updates, update the Docker daemon, or scale down the
            cluster size.
            </para>
             <important> 
            <para>
            A container instance can't be changed to <c>DRAINING</c> until it has reached an <c>ACTIVE</c>
            status. If the instance is in any other status, an error will be received.
            </para>
             </important> 
            <para>
            When you set a container instance to <c>DRAINING</c>, Amazon ECS prevents new tasks
            from being scheduled for placement on the container instance and replacement service
            tasks are started on other container instances in the cluster if the resources are
            available. Service tasks on the container instance that are in the <c>PENDING</c>
            state are stopped immediately.
            </para>
             
            <para>
            Service tasks on the container instance that are in the <c>RUNNING</c> state are stopped
            and replaced according to the service's deployment configuration parameters, <c>minimumHealthyPercent</c>
            and <c>maximumPercent</c>. You can change the deployment configuration of your service
            using <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>.
            </para>
             <ul> <li> 
            <para>
            If <c>minimumHealthyPercent</c> is below 100%, the scheduler can ignore <c>desiredCount</c>
            temporarily during task replacement. For example, <c>desiredCount</c> is four tasks,
            a minimum of 50% allows the scheduler to stop two existing tasks before starting two
            new tasks. If the minimum is 100%, the service scheduler can't remove existing tasks
            until the replacement tasks are considered healthy. Tasks for services that do not
            use a load balancer are considered healthy if they're in the <c>RUNNING</c> state.
            Tasks for services that use a load balancer are considered healthy if they're in the
            <c>RUNNING</c> state and are reported as healthy by the load balancer.
            </para>
             </li> <li> 
            <para>
            The <c>maximumPercent</c> parameter represents an upper limit on the number of running
            tasks during task replacement. You can use this to define the replacement batch size.
            For example, if <c>desiredCount</c> is four tasks, a maximum of 200% starts four new
            tasks before stopping the four tasks to be drained, provided that the cluster resources
            required to do this are available. If the maximum is 100%, then replacement tasks
            can't start until the draining tasks have stopped.
            </para>
             </li> </ul> 
            <para>
            Any <c>PENDING</c> or <c>RUNNING</c> tasks that do not belong to a service aren't
            affected. You must wait for them to finish or stop them manually.
            </para>
             
            <para>
            A container instance has completed draining when it has no more <c>RUNNING</c> tasks.
            You can verify this using <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListTasks.html">ListTasks</a>.
            </para>
             
            <para>
            When a container instance has been drained, you can set a container instance to <c>ACTIVE</c>
            status and once it has reached that status the Amazon ECS scheduler can begin scheduling
            tasks on the instance again.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateContainerInstancesState service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateContainerInstancesState service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateContainerInstancesState">REST API Reference for UpdateContainerInstancesState Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateServiceAsync(Amazon.ECS.Model.UpdateServiceRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the parameters of a service.
            
             <note> 
            <para>
            On March 21, 2024, a change was made to resolve the task definition revision before
            authorization. When a task definition revision is not specified, authorization will
            occur using the latest revision of a task definition.
            </para>
             </note> 
            <para>
            For services using the rolling update (<c>ECS</c>) you can update the desired count,
            deployment configuration, network configuration, load balancers, service registries,
            enable ECS managed tags option, propagate tags option, task placement constraints
            and strategies, and task definition. When you update any of these parameters, Amazon
            ECS starts new tasks with the new configuration. 
            </para>
             
            <para>
            You can attach Amazon EBS volumes to Amazon ECS tasks by configuring the volume when
            starting or running a task, or when creating or updating a service. For more infomation,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volume-types">Amazon
            EBS volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>. You
            can update your volume configurations and trigger a new deployment. <c>volumeConfigurations</c>
            is only supported for REPLICA service and not DAEMON service. If you leave <c>volumeConfigurations</c>
            <c>null</c>, it doesn't trigger a new deployment. For more infomation on volumes,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volume-types">Amazon
            EBS volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            For services using the blue/green (<c>CODE_DEPLOY</c>) deployment controller, only
            the desired count, deployment configuration, health check grace period, task placement
            constraints and strategies, enable ECS managed tags option, and propagate tags can
            be updated using this API. If the network configuration, platform version, task definition,
            or load balancer need to be updated, create a new CodeDeploy deployment. For more
            information, see <a href="https://docs.aws.amazon.com/codedeploy/latest/APIReference/API_CreateDeployment.html">CreateDeployment</a>
            in the <i>CodeDeploy API Reference</i>.
            </para>
             
            <para>
            For services using an external deployment controller, you can update only the desired
            count, task placement constraints and strategies, health check grace period, enable
            ECS managed tags option, and propagate tags option, using this API. If the launch
            type, load balancer, network configuration, platform version, or task definition need
            to be updated, create a new task set For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateTaskSet.html">CreateTaskSet</a>.
            </para>
             
            <para>
            You can add to or subtract from the number of instantiations of a task definition
            in a service by specifying the cluster that the service is running in and a new <c>desiredCount</c>
            parameter.
            </para>
             
            <para>
            You can attach Amazon EBS volumes to Amazon ECS tasks by configuring the volume when
            starting or running a task, or when creating or updating a service. For more infomation,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volume-types">Amazon
            EBS volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            If you have updated the container image of your application, you can create a new
            task definition with that image and deploy it to your service. The service scheduler
            uses the minimum healthy percent and maximum percent parameters (in the service's
            deployment configuration) to determine the deployment strategy.
            </para>
             <note> 
            <para>
            If your updated Docker image uses the same tag as what is in the existing task definition
            for your service (for example, <c>my_image:latest</c>), you don't need to create a
            new revision of your task definition. You can update the service using the <c>forceNewDeployment</c>
            option. The new tasks launched by the deployment pull the current image/tag combination
            from your repository when they start.
            </para>
             </note> 
            <para>
            You can also update the deployment configuration of a service. When a deployment is
            triggered by updating the task definition of a service, the service scheduler uses
            the deployment configuration parameters, <c>minimumHealthyPercent</c> and <c>maximumPercent</c>,
            to determine the deployment strategy.
            </para>
             <ul> <li> 
            <para>
            If <c>minimumHealthyPercent</c> is below 100%, the scheduler can ignore <c>desiredCount</c>
            temporarily during a deployment. For example, if <c>desiredCount</c> is four tasks,
            a minimum of 50% allows the scheduler to stop two existing tasks before starting two
            new tasks. Tasks for services that don't use a load balancer are considered healthy
            if they're in the <c>RUNNING</c> state. Tasks for services that use a load balancer
            are considered healthy if they're in the <c>RUNNING</c> state and are reported as
            healthy by the load balancer.
            </para>
             </li> <li> 
            <para>
            The <c>maximumPercent</c> parameter represents an upper limit on the number of running
            tasks during a deployment. You can use it to define the deployment batch size. For
            example, if <c>desiredCount</c> is four tasks, a maximum of 200% starts four new tasks
            before stopping the four older tasks (provided that the cluster resources required
            to do this are available).
            </para>
             </li> </ul> 
            <para>
            When <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>
            stops a task during a deployment, the equivalent of <c>docker stop</c> is issued to
            the containers running in the task. This results in a <c>SIGTERM</c> and a 30-second
            timeout. After this, <c>SIGKILL</c> is sent and the containers are forcibly stopped.
            If the container handles the <c>SIGTERM</c> gracefully and exits within 30 seconds
            from receiving it, no <c>SIGKILL</c> is sent.
            </para>
             
            <para>
            When the service scheduler launches new tasks, it determines task placement in your
            cluster with the following logic.
            </para>
             <ul> <li> 
            <para>
            Determine which of the container instances in your cluster can support your service's
            task definition. For example, they have the required CPU, memory, ports, and container
            instance attributes.
            </para>
             </li> <li> 
            <para>
            By default, the service scheduler attempts to balance tasks across Availability Zones
            in this manner even though you can choose a different placement strategy.
            </para>
             <ul> <li> 
            <para>
            Sort the valid container instances by the fewest number of running tasks for this
            service in the same Availability Zone as the instance. For example, if zone A has
            one running service task and zones B and C each have zero, valid container instances
            in either zone B or C are considered optimal for placement.
            </para>
             </li> <li> 
            <para>
            Place the new service task on a valid container instance in an optimal Availability
            Zone (based on the previous steps), favoring container instances with the fewest number
            of running tasks for this service.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            When the service scheduler stops running tasks, it attempts to maintain balance across
            the Availability Zones in your cluster using the following logic: 
            </para>
             <ul> <li> 
            <para>
            Sort the container instances by the largest number of running tasks for this service
            in the same Availability Zone as the instance. For example, if zone A has one running
            service task and zones B and C each have two, container instances in either zone B
            or C are considered optimal for termination.
            </para>
             </li> <li> 
            <para>
            Stop the task on a container instance in an optimal Availability Zone (based on the
            previous steps), favoring container instances with the largest number of running tasks
            for this service.
            </para>
             </li> </ul> <note> 
            <para>
            You must have a service-linked role when you update any of the following service properties:
            </para>
             <ul> <li> 
            <para>
             <c>loadBalancers</c>,
            </para>
             </li> <li> 
            <para>
             <c>serviceRegistries</c> 
            </para>
             </li> </ul> 
            <para>
            For more information about the role see the <c>CreateService</c> request parameter
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html#ECS-CreateService-request-role">
            <c>role</c> </a>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateService service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.NamespaceNotFoundException">
            The specified namespace wasn't found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version doesn't satisfy the required capabilities of the task
            definition.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version doesn't exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service isn't active. You can't update a service that's inactive. If
            you have previously deleted a service, you can re-create it with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html">CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateService">REST API Reference for UpdateService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateServicePrimaryTaskSetAsync(Amazon.ECS.Model.UpdateServicePrimaryTaskSetRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies which task set in a service is the primary task set. Any parameters that
            are updated on the primary task set in a service will transition to the service. This
            is used when a service uses the <c>EXTERNAL</c> deployment controller type. For more
            information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateServicePrimaryTaskSet service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateServicePrimaryTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service isn't active. You can't update a service that's inactive. If
            you have previously deleted a service, you can re-create it with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html">CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TaskSetNotFoundException">
            The specified task set wasn't found. You can view your available task sets with <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTaskSets.html">DescribeTaskSets</a>.
            Task sets are specific to each cluster, service and Region.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateServicePrimaryTaskSet">REST API Reference for UpdateServicePrimaryTaskSet Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateTaskProtectionAsync(Amazon.ECS.Model.UpdateTaskProtectionRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the protection status of a task. You can set <c>protectionEnabled</c> to <c>true</c>
            to protect your task from termination during scale-in events from <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-auto-scaling.html">Service
            Autoscaling</a> or <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">deployments</a>.
            
             
            <para>
            Task-protection, by default, expires after 2 hours at which point Amazon ECS clears
            the <c>protectionEnabled</c> property making the task eligible for termination by
            a subsequent scale-in event.
            </para>
             
            <para>
            You can specify a custom expiration period for task protection from 1 minute to up
            to 2,880 minutes (48 hours). To specify the custom expiration period, set the <c>expiresInMinutes</c>
            property. The <c>expiresInMinutes</c> property is always reset when you invoke this
            operation for a task that already has <c>protectionEnabled</c> set to <c>true</c>.
            You can keep extending the protection expiration period of a task by invoking this
            operation repeatedly.
            </para>
             
            <para>
            To learn more about Amazon ECS task protection, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-scale-in-protection.html">Task
            scale-in protection</a> in the <i> <i>Amazon Elastic Container Service Developer Guide</i>
            </i>.
            </para>
             <note> 
            <para>
            This operation is only supported for tasks belonging to an Amazon ECS service. Invoking
            this operation for a standalone task will result in an <c>TASK_NOT_VALID</c> failure.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/api_failures_messages.html">API
            failure reasons</a>.
            </para>
             </note> <important> 
            <para>
            If you prefer to set task protection from within the container, we recommend using
            the <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-scale-in-protection-endpoint.html">Task
            scale-in protection endpoint</a>.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateTaskProtection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateTaskProtection service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ResourceNotFoundException">
            The specified resource wasn't found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateTaskProtection">REST API Reference for UpdateTaskProtection Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateTaskSetAsync(Amazon.ECS.Model.UpdateTaskSetRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies a task set. This is used when a service uses the <c>EXTERNAL</c> deployment
            controller type. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateTaskSet service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service isn't active. You can't update a service that's inactive. If
            you have previously deleted a service, you can re-create it with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html">CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TaskSetNotFoundException">
            The specified task set wasn't found. You can view your available task sets with <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTaskSets.html">DescribeTaskSets</a>.
            Task sets are specific to each cluster, service and Region.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateTaskSet">REST API Reference for UpdateTaskSet Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.ECS.IAmazonECS">
             <summary>
             <para>Interface for accessing ECS</para>
            
             Amazon Elastic Container Service 
             <para>
             Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container
             management service. It makes it easy to run, stop, and manage Docker containers. You
             can host your cluster on a serverless infrastructure that's managed by Amazon ECS
             by launching your services or tasks on Fargate. For more control, you can host your
             tasks on a cluster of Amazon Elastic Compute Cloud (Amazon EC2) or External (on-premises)
             instances that you manage.
             </para>
              
             <para>
             Amazon ECS makes it easy to launch and stop container-based applications with simple
             API calls. This makes it easy to get the state of your cluster from a centralized
             service, and gives you access to many familiar Amazon EC2 features.
             </para>
              
             <para>
             You can use Amazon ECS to schedule the placement of containers across your cluster
             based on your resource needs, isolation policies, and availability requirements. With
             Amazon ECS, you don't need to operate your own cluster management and configuration
             management systems. You also don't need to worry about scaling your management infrastructure.
             
             </para>
             </summary>
        </member>
        <member name="P:Amazon.ECS.IAmazonECS.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.CreateCapacityProviderAsync(Amazon.ECS.Model.CreateCapacityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new capacity provider. Capacity providers are associated with an Amazon
            ECS cluster and are used in capacity provider strategies to facilitate cluster auto
            scaling.
            
             
            <para>
            Only capacity providers that use an Auto Scaling group can be created. Amazon ECS
            tasks on Fargate use the <c>FARGATE</c> and <c>FARGATE_SPOT</c> capacity providers.
            These providers are available to all accounts in the Amazon Web Services Regions that
            Fargate supports.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCapacityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCapacityProvider service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.LimitExceededException">
            The limit for the resource was exceeded.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There's already a current Amazon ECS container agent update in progress on the container
            instance that's specified. If the container agent becomes disconnected while it's
            in a transitional stage, such as <c>PENDING</c> or <c>STAGING</c>, the update process
            can get stuck in that state. However, when the agent reconnects, it resumes where
            it stopped previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateCapacityProvider">REST API Reference for CreateCapacityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.CreateClusterAsync(Amazon.ECS.Model.CreateClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new Amazon ECS cluster. By default, your account receives a <c>default</c>
            cluster when you launch your first container instance. However, you can create your
            own cluster with a unique name.
            
             <note> 
            <para>
            When you call the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateCluster.html">CreateCluster</a>
            API operation, Amazon ECS attempts to create the Amazon ECS service-linked role for
            your account. This is so that it can manage required resources in other Amazon Web
            Services services on your behalf. However, if the user that makes the call doesn't
            have permissions to create the service-linked role, it isn't created. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using-service-linked-roles.html">Using
            service-linked roles for Amazon ECS</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCluster service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.NamespaceNotFoundException">
            The specified namespace wasn't found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateCluster">REST API Reference for CreateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.CreateServiceAsync(Amazon.ECS.Model.CreateServiceRequest,System.Threading.CancellationToken)">
            <summary>
            Runs and maintains your desired number of tasks from a specified task definition.
            If the number of tasks running in a service drops below the <c>desiredCount</c>, Amazon
            ECS runs another copy of the task in the specified cluster. To update an existing
            service, use <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>.
            
             <note> 
            <para>
            On March 21, 2024, a change was made to resolve the task definition revision before
            authorization. When a task definition revision is not specified, authorization will
            occur using the latest revision of a task definition.
            </para>
             </note> <note> 
            <para>
            Amazon Elastic Inference (EI) is no longer available to customers.
            </para>
             </note> 
            <para>
            In addition to maintaining the desired count of tasks in your service, you can optionally
            run your service behind one or more load balancers. The load balancers distribute
            traffic across the tasks that are associated with the service. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-load-balancing.html">Service
            load balancing</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            You can attach Amazon EBS volumes to Amazon ECS tasks by configuring the volume when
            creating or updating a service. <c>volumeConfigurations</c> is only supported for
            REPLICA service and not DAEMON service. For more infomation, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volume-types">Amazon
            EBS volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            Tasks for services that don't use a load balancer are considered healthy if they're
            in the <c>RUNNING</c> state. Tasks for services that use a load balancer are considered
            healthy if they're in the <c>RUNNING</c> state and are reported as healthy by the
            load balancer.
            </para>
             
            <para>
            There are two service scheduler strategies available:
            </para>
             <ul> <li> 
            <para>
             <c>REPLICA</c> - The replica scheduling strategy places and maintains your desired
            number of tasks across your cluster. By default, the service scheduler spreads tasks
            across Availability Zones. You can use task placement strategies and constraints to
            customize task placement decisions. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html">Service
            scheduler concepts</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             </li> <li> 
            <para>
             <c>DAEMON</c> - The daemon scheduling strategy deploys exactly one task on each active
            container instance that meets all of the task placement constraints that you specify
            in your cluster. The service scheduler also evaluates the task placement constraints
            for running tasks. It also stops tasks that don't meet the placement constraints.
            When using this strategy, you don't need to specify a desired number of tasks, a task
            placement strategy, or use Service Auto Scaling policies. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html">Service
            scheduler concepts</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             </li> </ul> 
            <para>
            You can optionally specify a deployment configuration for your service. The deployment
            is initiated by changing properties. For example, the deployment might be initiated
            by the task definition or by your desired count of a service. You can use <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>.
            The default value for a replica service for <c>minimumHealthyPercent</c> is 100%.
            The default value for a daemon service for <c>minimumHealthyPercent</c> is 0%.
            </para>
             
            <para>
            If a service uses the <c>ECS</c> deployment controller, the minimum healthy percent
            represents a lower limit on the number of tasks in a service that must remain in the
            <c>RUNNING</c> state during a deployment. Specifically, it represents it as a percentage
            of your desired number of tasks (rounded up to the nearest integer). This happens
            when any of your container instances are in the <c>DRAINING</c> state if the service
            contains tasks using the EC2 launch type. Using this parameter, you can deploy without
            using additional cluster capacity. For example, if you set your service to have desired
            number of four tasks and a minimum healthy percent of 50%, the scheduler might stop
            two existing tasks to free up cluster capacity before starting two new tasks. If they're
            in the <c>RUNNING</c> state, tasks for services that don't use a load balancer are
            considered healthy . If they're in the <c>RUNNING</c> state and reported as healthy
            by the load balancer, tasks for services that <i>do</i> use a load balancer are considered
            healthy . The default value for minimum healthy percent is 100%.
            </para>
             
            <para>
            If a service uses the <c>ECS</c> deployment controller, the <b>maximum percent</b>
            parameter represents an upper limit on the number of tasks in a service that are allowed
            in the <c>RUNNING</c> or <c>PENDING</c> state during a deployment. Specifically, it
            represents it as a percentage of the desired number of tasks (rounded down to the
            nearest integer). This happens when any of your container instances are in the <c>DRAINING</c>
            state if the service contains tasks using the EC2 launch type. Using this parameter,
            you can define the deployment batch size. For example, if your service has a desired
            number of four tasks and a maximum percent value of 200%, the scheduler may start
            four new tasks before stopping the four older tasks (provided that the cluster resources
            required to do this are available). The default value for maximum percent is 200%.
            </para>
             
            <para>
            If a service uses either the <c>CODE_DEPLOY</c> or <c>EXTERNAL</c> deployment controller
            types and tasks that use the EC2 launch type, the <b>minimum healthy percent</b> and
            <b>maximum percent</b> values are used only to define the lower and upper limit on
            the number of the tasks in the service that remain in the <c>RUNNING</c> state. This
            is while the container instances are in the <c>DRAINING</c> state. If the tasks in
            the service use the Fargate launch type, the minimum healthy percent and maximum percent
            values aren't used. This is the case even if they're currently visible when describing
            your service.
            </para>
             
            <para>
            When creating a service that uses the <c>EXTERNAL</c> deployment controller, you can
            specify only parameters that aren't controlled at the task set level. The only required
            parameter is the service name. You control your services using the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateTaskSet.html">CreateTaskSet</a>.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS deployment types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            When the service scheduler launches new tasks, it determines task placement. For information
            about task placement and task placement strategies, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement.html">Amazon
            ECS task placement</a> in the <i>Amazon Elastic Container Service Developer Guide</i>
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateService service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.NamespaceNotFoundException">
            The specified namespace wasn't found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version doesn't satisfy the required capabilities of the task
            definition.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version doesn't exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateService">REST API Reference for CreateService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.CreateTaskSetAsync(Amazon.ECS.Model.CreateTaskSetRequest,System.Threading.CancellationToken)">
            <summary>
            Create a task set in the specified cluster and service. This is used when a service
            uses the <c>EXTERNAL</c> deployment controller type. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS deployment types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            
             <note> 
            <para>
            On March 21, 2024, a change was made to resolve the task definition revision before
            authorization. When a task definition revision is not specified, authorization will
            occur using the latest revision of a task definition.
            </para>
             </note> 
            <para>
            For information about the maximum number of task sets and other quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateTaskSet service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.NamespaceNotFoundException">
            The specified namespace wasn't found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version doesn't satisfy the required capabilities of the task
            definition.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version doesn't exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service isn't active. You can't update a service that's inactive. If
            you have previously deleted a service, you can re-create it with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html">CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateTaskSet">REST API Reference for CreateTaskSet Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteAccountSettingAsync(Amazon.ECS.Model.DeleteAccountSettingRequest,System.Threading.CancellationToken)">
            <summary>
            Disables an account setting for a specified user, role, or the root user for an account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAccountSetting service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAccountSetting service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteAccountSetting">REST API Reference for DeleteAccountSetting Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteAttributesAsync(Amazon.ECS.Model.DeleteAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes one or more custom attributes from an Amazon ECS resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TargetNotFoundException">
            The specified target wasn't found. You can view your available container instances
            with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListContainerInstances.html">ListContainerInstances</a>.
            Amazon ECS container instances are cluster-specific and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteAttributes">REST API Reference for DeleteAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteCapacityProviderAsync(Amazon.ECS.Model.DeleteCapacityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified capacity provider.
            
             <note> 
            <para>
            The <c>FARGATE</c> and <c>FARGATE_SPOT</c> capacity providers are reserved and can't
            be deleted. You can disassociate them from a cluster using either <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutClusterCapacityProviders.html">PutClusterCapacityProviders</a>
            or by deleting the cluster.
            </para>
             </note> 
            <para>
            Prior to a capacity provider being deleted, the capacity provider must be removed
            from the capacity provider strategy from all services. The <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>
            API can be used to remove a capacity provider from a service's capacity provider strategy.
            When updating a service, the <c>forceNewDeployment</c> option can be used to ensure
            that any tasks using the Amazon EC2 instance capacity provided by the capacity provider
            are transitioned to use the capacity from the remaining capacity providers. Only capacity
            providers that aren't associated with a cluster can be deleted. To remove a capacity
            provider from a cluster, you can either use <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutClusterCapacityProviders.html">PutClusterCapacityProviders</a>
            or delete the cluster.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCapacityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCapacityProvider service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteCapacityProvider">REST API Reference for DeleteCapacityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteClusterAsync(Amazon.ECS.Model.DeleteClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified cluster. The cluster transitions to the <c>INACTIVE</c> state.
            Clusters with an <c>INACTIVE</c> status might remain discoverable in your account
            for a period of time. However, this behavior is subject to change in the future. We
            don't recommend that you rely on <c>INACTIVE</c> clusters persisting.
            
             
            <para>
            You must deregister all container instances from this cluster before you may delete
            it. You can list the container instances in a cluster with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListContainerInstances.html">ListContainerInstances</a>
            and deregister them with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeregisterContainerInstance.html">DeregisterContainerInstance</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCluster service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterContainsContainerInstancesException">
            You can't delete a cluster that has registered container instances. First, deregister
            the container instances before you can delete the cluster. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeregisterContainerInstance.html">DeregisterContainerInstance</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterContainsServicesException">
            You can't delete a cluster that contains services. First, update the service to reduce
            its desired task count to 0, and then delete the service. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>
            and <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeleteService.html">DeleteService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterContainsTasksException">
            You can't delete a cluster that has active tasks.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There's already a current Amazon ECS container agent update in progress on the container
            instance that's specified. If the container agent becomes disconnected while it's
            in a transitional stage, such as <c>PENDING</c> or <c>STAGING</c>, the update process
            can get stuck in that state. However, when the agent reconnects, it resumes where
            it stopped previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteCluster">REST API Reference for DeleteCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteServiceAsync(Amazon.ECS.Model.DeleteServiceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified service within a cluster. You can delete a service if you have
            no running tasks in it and the desired task count is zero. If the service is actively
            maintaining tasks, you can't delete it, and you must update the service to a desired
            task count of zero. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>.
            
             <note> 
            <para>
            When you delete a service, if there are still running tasks that require cleanup,
            the service status moves from <c>ACTIVE</c> to <c>DRAINING</c>, and the service is
            no longer visible in the console or in the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>
            API operation. After all tasks have transitioned to either <c>STOPPING</c> or <c>STOPPED</c>
            status, the service status moves from <c>DRAINING</c> to <c>INACTIVE</c>. Services
            in the <c>DRAINING</c> or <c>INACTIVE</c> status can still be viewed with the <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeServices.html">DescribeServices</a>
            API operation. However, in the future, <c>INACTIVE</c> services may be cleaned up
            and purged from Amazon ECS record keeping, and <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeServices.html">DescribeServices</a>
            calls on those services return a <c>ServiceNotFoundException</c> error.
            </para>
             </note> <important> 
            <para>
            If you attempt to create a new service with the same name as an existing service in
            either <c>ACTIVE</c> or <c>DRAINING</c> status, you receive an error.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteService service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteService">REST API Reference for DeleteService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteTaskDefinitionsAsync(Amazon.ECS.Model.DeleteTaskDefinitionsRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes one or more task definitions.
            
             
            <para>
            You must deregister a task definition revision before you delete it. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeregisterTaskDefinition.html">DeregisterTaskDefinition</a>.
            </para>
             
            <para>
            When you delete a task definition revision, it is immediately transitions from the
            <c>INACTIVE</c> to <c>DELETE_IN_PROGRESS</c>. Existing tasks and services that reference
            a <c>DELETE_IN_PROGRESS</c> task definition revision continue to run without disruption.
            Existing services that reference a <c>DELETE_IN_PROGRESS</c> task definition revision
            can still scale up or down by modifying the service's desired count.
            </para>
             
            <para>
            You can't use a <c>DELETE_IN_PROGRESS</c> task definition revision to run new tasks
            or create new services. You also can't update an existing service to reference a <c>DELETE_IN_PROGRESS</c>
            task definition revision.
            </para>
             
            <para>
             A task definition revision will stay in <c>DELETE_IN_PROGRESS</c> status until all
            the associated tasks and services have been terminated.
            </para>
             
            <para>
            When you delete all <c>INACTIVE</c> task definition revisions, the task definition
            name is not displayed in the console and not returned in the API. If a task definition
            revisions are in the <c>DELETE_IN_PROGRESS</c> state, the task definition name is
            displayed in the console and returned in the API. The task definition name is retained
            by Amazon ECS and the revision is incremented the next time you create a task definition
            with that name.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteTaskDefinitions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteTaskDefinitions service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteTaskDefinitions">REST API Reference for DeleteTaskDefinitions Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteTaskSetAsync(Amazon.ECS.Model.DeleteTaskSetRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified task set within a service. This is used when a service uses the
            <c>EXTERNAL</c> deployment controller type. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS deployment types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteTaskSet service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service isn't active. You can't update a service that's inactive. If
            you have previously deleted a service, you can re-create it with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html">CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TaskSetNotFoundException">
            The specified task set wasn't found. You can view your available task sets with <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTaskSets.html">DescribeTaskSets</a>.
            Task sets are specific to each cluster, service and Region.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteTaskSet">REST API Reference for DeleteTaskSet Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeregisterContainerInstanceAsync(Amazon.ECS.Model.DeregisterContainerInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters an Amazon ECS container instance from the specified cluster. This instance
            is no longer available to run tasks.
            
             
            <para>
            If you intend to use the container instance for some other purpose after deregistration,
            we recommend that you stop all of the tasks running on the container instance before
            deregistration. That prevents any orphaned tasks from consuming resources.
            </para>
             
            <para>
            Deregistering a container instance removes the instance from a cluster, but it doesn't
            terminate the EC2 instance. If you are finished using the instance, be sure to terminate
            it in the Amazon EC2 console to stop billing.
            </para>
             <note> 
            <para>
            If you terminate a running container instance, Amazon ECS automatically deregisters
            the instance from your cluster (stopped container instances or instances with disconnected
            agents aren't automatically deregistered when terminated).
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterContainerInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterContainerInstance service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeregisterContainerInstance">REST API Reference for DeregisterContainerInstance Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeregisterTaskDefinitionAsync(Amazon.ECS.Model.DeregisterTaskDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters the specified task definition by family and revision. Upon deregistration,
            the task definition is marked as <c>INACTIVE</c>. Existing tasks and services that
            reference an <c>INACTIVE</c> task definition continue to run without disruption. Existing
            services that reference an <c>INACTIVE</c> task definition can still scale up or down
            by modifying the service's desired count. If you want to delete a task definition
            revision, you must first deregister the task definition revision.
            
             
            <para>
            You can't use an <c>INACTIVE</c> task definition to run new tasks or create new services,
            and you can't update an existing service to reference an <c>INACTIVE</c> task definition.
            However, there may be up to a 10-minute window following deregistration where these
            restrictions have not yet taken effect.
            </para>
             <note> 
            <para>
            At this time, <c>INACTIVE</c> task definitions remain discoverable in your account
            indefinitely. However, this behavior is subject to change in the future. We don't
            recommend that you rely on <c>INACTIVE</c> task definitions persisting beyond the
            lifecycle of any associated tasks and services.
            </para>
             </note> 
            <para>
            You must deregister a task definition revision before you delete it. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeleteTaskDefinitions.html">DeleteTaskDefinitions</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterTaskDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeregisterTaskDefinition">REST API Reference for DeregisterTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeCapacityProvidersAsync(Amazon.ECS.Model.DescribeCapacityProvidersRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your capacity providers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCapacityProviders service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCapacityProviders service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeCapacityProviders">REST API Reference for DescribeCapacityProviders Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeClustersAsync(Amazon.ECS.Model.DescribeClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your clusters.
            
             
            <para>
             For CLI examples, see <a href="https://github.com/aws/aws-cli/blob/develop/awscli/examples/ecs/describe-clusters.rst">describe-clusters.rst</a>
            on GitHub.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeClusters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeClusters service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeClusters">REST API Reference for DescribeClusters Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeContainerInstancesAsync(Amazon.ECS.Model.DescribeContainerInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more container instances. Returns metadata about each container instance
            requested.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeContainerInstances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeContainerInstances service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeContainerInstances">REST API Reference for DescribeContainerInstances Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeServiceDeploymentsAsync(Amazon.ECS.Model.DescribeServiceDeploymentsRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your service deployments.
            
             
            <para>
            A service deployment happens when you release a software update for the service. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-deployments.html">Amazon
            ECS service deployments</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeServiceDeployments service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeServiceDeployments service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeServiceDeployments">REST API Reference for DescribeServiceDeployments Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeServiceRevisionsAsync(Amazon.ECS.Model.DescribeServiceRevisionsRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more service revisions.
            
             
            <para>
            A service revision is a version of the service that includes the values for the Amazon
            ECS resources (for example, task definition) and the environment resources (for example,
            load balancers, subnets, and security groups). For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-revision.html">Amazon
            ECS service revisions</a>.
            </para>
             
            <para>
            You can't describe a service revision that was created before October 25, 2024.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeServiceRevisions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeServiceRevisions service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeServiceRevisions">REST API Reference for DescribeServiceRevisions Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeServicesAsync(Amazon.ECS.Model.DescribeServicesRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the specified services running in your cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeServices service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeServices service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeServices">REST API Reference for DescribeServices Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeTaskDefinitionAsync(Amazon.ECS.Model.DescribeTaskDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Describes a task definition. You can specify a <c>family</c> and <c>revision</c> to
            find information about a specific task definition, or you can simply specify the family
            to find the latest <c>ACTIVE</c> revision in that family.
            
             <note> 
            <para>
            You can only describe <c>INACTIVE</c> task definitions while an active task or service
            references them.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTaskDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTaskDefinition">REST API Reference for DescribeTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeTasksAsync(Amazon.ECS.Model.DescribeTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Describes a specified task or tasks.
            
             
            <para>
            Currently, stopped tasks appear in the returned results for at least one hour.
            </para>
             
            <para>
            If you have tasks with tags, and then delete the cluster, the tagged tasks are returned
            in the response. If you create a new cluster with the same name as the deleted cluster,
            the tagged tasks are not included in the response.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTasks service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTasks service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTasks">REST API Reference for DescribeTasks Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeTaskSetsAsync(Amazon.ECS.Model.DescribeTaskSetsRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the task sets in the specified cluster and service. This is used when a
            service uses the <c>EXTERNAL</c> deployment controller type. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTaskSets service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTaskSets service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service isn't active. You can't update a service that's inactive. If
            you have previously deleted a service, you can re-create it with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html">CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTaskSets">REST API Reference for DescribeTaskSets Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ExecuteCommandAsync(Amazon.ECS.Model.ExecuteCommandRequest,System.Threading.CancellationToken)">
            <summary>
            Runs a command remotely on a container within a task.
            
             
            <para>
            If you use a condition key in your IAM policy to refine the conditions for the policy
            statement, for example limit the actions to a specific cluster, you receive an <c>AccessDeniedException</c>
            when there is a mismatch between the condition key value and the corresponding parameter
            value.
            </para>
             
            <para>
            For information about required permissions and considerations, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-exec.html">Using
            Amazon ECS Exec for debugging</a> in the <i>Amazon ECS Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ExecuteCommand service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ExecuteCommand service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TargetNotConnectedException">
            The execute command cannot run. This error can be caused by any of the following configuration
            issues:
            
             <ul> <li> 
            <para>
            Incorrect IAM permissions
            </para>
             </li> <li> 
            <para>
            The SSM agent is not installed or is not running
            </para>
             </li> <li> 
            <para>
             There is an interface Amazon VPC endpoint for Amazon ECS, but there is not one for
            Systems Manager Session Manager
            </para>
             </li> </ul> 
            <para>
            For information about how to troubleshoot the issues, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-exec.html">Troubleshooting
            issues with ECS Exec</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ExecuteCommand">REST API Reference for ExecuteCommand Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.GetTaskProtectionAsync(Amazon.ECS.Model.GetTaskProtectionRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the protection status of tasks in an Amazon ECS service.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetTaskProtection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetTaskProtection service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ResourceNotFoundException">
            The specified resource wasn't found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/GetTaskProtection">REST API Reference for GetTaskProtection Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListAccountSettingsAsync(Amazon.ECS.Model.ListAccountSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the account settings for a specified principal.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAccountSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAccountSettings service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListAccountSettings">REST API Reference for ListAccountSettings Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListAttributesAsync(Amazon.ECS.Model.ListAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the attributes for Amazon ECS resources within a specified target type and cluster.
            When you specify a target type and cluster, <c>ListAttributes</c> returns a list of
            attribute objects, one for each attribute on each resource. You can filter the list
            of results to a single attribute name to only return results that have that name.
            You can also filter the results by attribute name and value. You can do this, for
            example, to see which container instances in a cluster are running a Linux AMI (<c>ecs.os-type=linux</c>).
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListAttributes">REST API Reference for ListAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListClustersAsync(Amazon.ECS.Model.ListClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of existing clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListClusters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListClusters service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListClusters">REST API Reference for ListClusters Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListContainerInstancesAsync(Amazon.ECS.Model.ListContainerInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of container instances in a specified cluster. You can filter the results
            of a <c>ListContainerInstances</c> operation with cluster query language statements
            inside the <c>filter</c> parameter. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
            Query Language</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListContainerInstances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListContainerInstances service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListContainerInstances">REST API Reference for ListContainerInstances Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListServiceDeploymentsAsync(Amazon.ECS.Model.ListServiceDeploymentsRequest,System.Threading.CancellationToken)">
            <summary>
            This operation lists all the service deployments that meet the specified filter criteria.
            
             
            <para>
            A service deployment happens when you release a softwre update for the service. You
            route traffic from the running service revisions to the new service revison and control
            the number of running tasks. 
            </para>
             
            <para>
            This API returns the values that you use for the request parameters in <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeServiceRevisions.html">DescribeServiceRevisions</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListServiceDeployments service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListServiceDeployments service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListServiceDeployments">REST API Reference for ListServiceDeployments Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListServicesAsync(Amazon.ECS.Model.ListServicesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of services. You can filter the results by cluster, launch type, and
            scheduling strategy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListServices service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListServices service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListServices">REST API Reference for ListServices Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListServicesByNamespaceAsync(Amazon.ECS.Model.ListServicesByNamespaceRequest,System.Threading.CancellationToken)">
            <summary>
            This operation lists all of the services that are associated with a Cloud Map namespace.
            This list might include services in different clusters. In contrast, <c>ListServices</c>
            can only list services in one cluster at a time. If you need to filter the list of
            services in a single cluster by various parameters, use <c>ListServices</c>. For more
            information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html">Service
            Connect</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListServicesByNamespace service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListServicesByNamespace service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.NamespaceNotFoundException">
            The specified namespace wasn't found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListServicesByNamespace">REST API Reference for ListServicesByNamespace Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListTagsForResourceAsync(Amazon.ECS.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            List the tags for an Amazon ECS resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListTaskDefinitionFamiliesAsync(Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of task definition families that are registered to your account. This
            list includes task definition families that no longer have any <c>ACTIVE</c> task
            definition revisions.
            
             
            <para>
            You can filter out task definition families that don't contain any <c>ACTIVE</c> task
            definition revisions by setting the <c>status</c> parameter to <c>ACTIVE</c>. You
            can also filter the results with the <c>familyPrefix</c> parameter.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTaskDefinitionFamilies service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTaskDefinitionFamilies service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTaskDefinitionFamilies">REST API Reference for ListTaskDefinitionFamilies Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListTaskDefinitionsAsync(Amazon.ECS.Model.ListTaskDefinitionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of task definitions that are registered to your account. You can filter
            the results by family name with the <c>familyPrefix</c> parameter or by status with
            the <c>status</c> parameter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTaskDefinitions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTaskDefinitions service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTaskDefinitions">REST API Reference for ListTaskDefinitions Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListTasksAsync(Amazon.ECS.Model.ListTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of tasks. You can filter the results by cluster, task definition family,
            container instance, launch type, what IAM principal started the task, or by the desired
            status of the task.
            
             
            <para>
            Recently stopped tasks might appear in the returned results. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTasks service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTasks service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTasks">REST API Reference for ListTasks Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.PutAccountSettingAsync(Amazon.ECS.Model.PutAccountSettingRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies an account setting. Account settings are set on a per-Region basis.
            
             
            <para>
            If you change the root user account setting, the default settings are reset for users
            and roles that do not have specified individual account settings. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html">Account
            Settings</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAccountSetting service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutAccountSetting service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutAccountSetting">REST API Reference for PutAccountSetting Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.PutAccountSettingDefaultAsync(Amazon.ECS.Model.PutAccountSettingDefaultRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies an account setting for all users on an account for whom no individual account
            setting has been specified. Account settings are set on a per-Region basis.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAccountSettingDefault service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutAccountSettingDefault service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutAccountSettingDefault">REST API Reference for PutAccountSettingDefault Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.PutAttributesAsync(Amazon.ECS.Model.PutAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Create or update an attribute on an Amazon ECS resource. If the attribute doesn't
            exist, it's created. If the attribute exists, its value is replaced with the specified
            value. To delete an attribute, use <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeleteAttributes.html">DeleteAttributes</a>.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes">Attributes</a>
            in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AttributeLimitExceededException">
            You can apply up to 10 custom attributes for each resource. You can view the attributes
            of a resource with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListAttributes.html">ListAttributes</a>.
            You can remove existing attributes on a resource with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeleteAttributes.html">DeleteAttributes</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TargetNotFoundException">
            The specified target wasn't found. You can view your available container instances
            with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListContainerInstances.html">ListContainerInstances</a>.
            Amazon ECS container instances are cluster-specific and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutAttributes">REST API Reference for PutAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.PutClusterCapacityProvidersAsync(Amazon.ECS.Model.PutClusterCapacityProvidersRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the available capacity providers and the default capacity provider strategy
            for a cluster.
            
             
            <para>
            You must specify both the available capacity providers and a default capacity provider
            strategy for the cluster. If the specified cluster has existing capacity providers
            associated with it, you must specify all existing capacity providers in addition to
            any new ones you want to add. Any existing capacity providers that are associated
            with a cluster that are omitted from a <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutClusterCapacityProviders.html">PutClusterCapacityProviders</a>
            API call will be disassociated with the cluster. You can only disassociate an existing
            capacity provider from a cluster if it's not being used by any existing tasks.
            </para>
             
            <para>
            When creating a service or running a task on a cluster, if no capacity provider or
            launch type is specified, then the cluster's default capacity provider strategy is
            used. We recommend that you define a default capacity provider strategy for your cluster.
            However, you must specify an empty array (<c>[]</c>) to bypass defining a default
            strategy.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutClusterCapacityProviders service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutClusterCapacityProviders service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ResourceInUseException">
            The specified resource is in-use and can't be removed.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There's already a current Amazon ECS container agent update in progress on the container
            instance that's specified. If the container agent becomes disconnected while it's
            in a transitional stage, such as <c>PENDING</c> or <c>STAGING</c>, the update process
            can get stuck in that state. However, when the agent reconnects, it resumes where
            it stopped previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutClusterCapacityProviders">REST API Reference for PutClusterCapacityProviders Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.RegisterTaskDefinitionAsync(Amazon.ECS.Model.RegisterTaskDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Registers a new task definition from the supplied <c>family</c> and <c>containerDefinitions</c>.
            Optionally, you can add data volumes to your containers with the <c>volumes</c> parameter.
            For more information about task definition parameters and defaults, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html">Amazon
            ECS Task Definitions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            
             
            <para>
            You can specify a role for your task with the <c>taskRoleArn</c> parameter. When you
            specify a role for a task, its containers can then use the latest versions of the
            CLI or SDKs to make API requests to the Amazon Web Services services that are specified
            in the policy that's associated with the role. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html">IAM
            Roles for Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            You can specify a Docker networking mode for the containers in your task definition
            with the <c>networkMode</c> parameter. If you specify the <c>awsvpc</c> network mode,
            the task is allocated an elastic network interface, and you must specify a <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_NetworkConfiguration.html">NetworkConfiguration</a>
            when you create a service or run a task with the task definition. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html">Task
            Networking</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterTaskDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/RegisterTaskDefinition">REST API Reference for RegisterTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.RunTaskAsync(Amazon.ECS.Model.RunTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a new task using the specified task definition.
            
             <note> 
            <para>
            On March 21, 2024, a change was made to resolve the task definition revision before
            authorization. When a task definition revision is not specified, authorization will
            occur using the latest revision of a task definition.
            </para>
             </note> <note> 
            <para>
            Amazon Elastic Inference (EI) is no longer available to customers.
            </para>
             </note> 
            <para>
            You can allow Amazon ECS to place tasks for you, or you can customize how Amazon ECS
            places tasks using placement constraints and placement strategies. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
            Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            Alternatively, you can use <c>StartTask</c> to use your own scheduler or place tasks
            manually on specific container instances.
            </para>
             
            <para>
            You can attach Amazon EBS volumes to Amazon ECS tasks by configuring the volume when
            creating or updating a service. For more infomation, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volume-types">Amazon
            EBS volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            The Amazon ECS API follows an eventual consistency model. This is because of the distributed
            nature of the system supporting the API. This means that the result of an API command
            you run that affects your Amazon ECS resources might not be immediately visible to
            all subsequent commands you run. Keep this in mind when you carry out an API command
            that immediately follows a previous API command.
            </para>
             
            <para>
            To manage eventual consistency, you can do the following:
            </para>
             <ul> <li> 
            <para>
            Confirm the state of the resource before you run a command to modify it. Run the DescribeTasks
            command using an exponential backoff algorithm to ensure that you allow enough time
            for the previous command to propagate through the system. To do this, run the DescribeTasks
            command repeatedly, starting with a couple of seconds of wait time and increasing
            gradually up to five minutes of wait time.
            </para>
             </li> <li> 
            <para>
            Add wait time between subsequent commands, even if the DescribeTasks command returns
            an accurate response. Apply an exponential backoff algorithm starting with a couple
            of seconds of wait time, and increase gradually up to about five minutes of wait time.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RunTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RunTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.BlockedException">
            Your Amazon Web Services account was blocked. For more information, contact <a href="http://aws.amazon.com/contact-us/">
            Amazon Web Services Support</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ConflictException">
            The <c>RunTask</c> request could not be processed due to conflicts. The provided <c>clientToken</c>
            is already in use with a different <c>RunTask</c> request. The <c>resourceIds</c>
            are the existing task ARNs which are already associated with the <c>clientToken</c>.
            
            
             
            <para>
            To fix this issue:
            </para>
             <ul> <li> 
            <para>
            Run <c>RunTask</c> with a unique <c>clientToken</c>.
            </para>
             </li> <li> 
            <para>
            Run <c>RunTask</c> with the <c>clientToken</c> and the original set of parameters
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version doesn't satisfy the required capabilities of the task
            definition.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version doesn't exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/RunTask">REST API Reference for RunTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.StartTaskAsync(Amazon.ECS.Model.StartTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a new task from the specified task definition on the specified container instance
            or instances.
            
             <note> 
            <para>
            On March 21, 2024, a change was made to resolve the task definition revision before
            authorization. When a task definition revision is not specified, authorization will
            occur using the latest revision of a task definition.
            </para>
             </note> <note> 
            <para>
            Amazon Elastic Inference (EI) is no longer available to customers.
            </para>
             </note> 
            <para>
            Alternatively, you can use<c>RunTask</c> to place tasks for you. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
            Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            You can attach Amazon EBS volumes to Amazon ECS tasks by configuring the volume when
            creating or updating a service. For more infomation, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volume-types">Amazon
            EBS volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/StartTask">REST API Reference for StartTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.StopTaskAsync(Amazon.ECS.Model.StopTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Stops a running task. Any tags associated with the task will be deleted.
            
             
            <para>
            When you call <c>StopTask</c> on a task, the equivalent of <c>docker stop</c> is issued
            to the containers running in the task. This results in a <c>SIGTERM</c> value and
            a default 30-second timeout, after which the <c>SIGKILL</c> value is sent and the
            containers are forcibly stopped. If the container handles the <c>SIGTERM</c> value
            gracefully and exits within 30 seconds from receiving it, no <c>SIGKILL</c> value
            is sent.
            </para>
             
            <para>
            For Windows containers, POSIX signals do not work and runtime stops the container
            by sending a <c>CTRL_SHUTDOWN_EVENT</c>. For more information, see <a href="https://github.com/moby/moby/issues/25982">Unable
            to react to graceful shutdown of (Windows) container #25982</a> on GitHub.
            </para>
             <note> 
            <para>
            The default 30-second timeout can be configured on the Amazon ECS container agent
            with the <c>ECS_CONTAINER_STOP_TIMEOUT</c> variable. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS Container Agent Configuration</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/StopTask">REST API Reference for StopTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.SubmitAttachmentStateChangesAsync(Amazon.ECS.Model.SubmitAttachmentStateChangesRequest,System.Threading.CancellationToken)">
            <summary>
            <note> 
            <para>
            This action is only used by the Amazon ECS agent, and it is not intended for use outside
            of the agent.
            </para>
             </note> 
            <para>
            Sent to acknowledge that an attachment changed states.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SubmitAttachmentStateChanges service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SubmitAttachmentStateChanges service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/SubmitAttachmentStateChanges">REST API Reference for SubmitAttachmentStateChanges Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.TagResourceAsync(Amazon.ECS.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Associates the specified tags to a resource with the specified <c>resourceArn</c>.
            If existing tags on a resource aren't specified in the request parameters, they aren't
            changed. When a resource is deleted, the tags that are associated with that resource
            are deleted as well.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ResourceNotFoundException">
            The specified resource wasn't found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UntagResourceAsync(Amazon.ECS.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes specified tags from a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ResourceNotFoundException">
            The specified resource wasn't found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateCapacityProviderAsync(Amazon.ECS.Model.UpdateCapacityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the parameters for a capacity provider.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCapacityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateCapacityProvider service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateCapacityProvider">REST API Reference for UpdateCapacityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateClusterAsync(Amazon.ECS.Model.UpdateClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateCluster service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.NamespaceNotFoundException">
            The specified namespace wasn't found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateCluster">REST API Reference for UpdateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateClusterSettingsAsync(Amazon.ECS.Model.UpdateClusterSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the settings to use for a cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateClusterSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateClusterSettings service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateClusterSettings">REST API Reference for UpdateClusterSettings Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateContainerAgentAsync(Amazon.ECS.Model.UpdateContainerAgentRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the Amazon ECS container agent on a specified container instance. Updating
            the Amazon ECS container agent doesn't interrupt running tasks or services on the
            container instance. The process for updating the agent differs depending on whether
            your container instance was launched with the Amazon ECS-optimized AMI or another
            operating system.
            
             <note> 
            <para>
            The <c>UpdateContainerAgent</c> API isn't supported for container instances using
            the Amazon ECS-optimized Amazon Linux 2 (arm64) AMI. To update the container agent,
            you can update the <c>ecs-init</c> package. This updates the agent. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/agent-update-ecs-ami.html">Updating
            the Amazon ECS container agent</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note> <note> 
            <para>
            Agent updates with the <c>UpdateContainerAgent</c> API operation do not apply to Windows
            container instances. We recommend that you launch new container instances to update
            the agent version in your Windows clusters.
            </para>
             </note> 
            <para>
            The <c>UpdateContainerAgent</c> API requires an Amazon ECS-optimized AMI or Amazon
            Linux AMI with the <c>ecs-init</c> service installed and running. For help updating
            the Amazon ECS container agent on other operating systems, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html#manually_update_agent">Manually
            updating the Amazon ECS container agent</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateContainerAgent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateContainerAgent service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.MissingVersionException">
            Amazon ECS can't determine the current version of the Amazon ECS container agent on
            the container instance and doesn't have enough information to proceed with an update.
            This could be because the agent running on the container instance is a previous or
            custom version that doesn't use our version information.
            </exception>
            <exception cref="T:Amazon.ECS.Model.NoUpdateAvailableException">
            There's no update available for this Amazon ECS container agent. This might be because
            the agent is already running the latest version or because it's so old that there's
            no update path to the current version.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There's already a current Amazon ECS container agent update in progress on the container
            instance that's specified. If the container agent becomes disconnected while it's
            in a transitional stage, such as <c>PENDING</c> or <c>STAGING</c>, the update process
            can get stuck in that state. However, when the agent reconnects, it resumes where
            it stopped previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateContainerAgent">REST API Reference for UpdateContainerAgent Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateContainerInstancesStateAsync(Amazon.ECS.Model.UpdateContainerInstancesStateRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the status of an Amazon ECS container instance.
            
             
            <para>
            Once a container instance has reached an <c>ACTIVE</c> state, you can change the status
            of a container instance to <c>DRAINING</c> to manually remove an instance from a cluster,
            for example to perform system updates, update the Docker daemon, or scale down the
            cluster size.
            </para>
             <important> 
            <para>
            A container instance can't be changed to <c>DRAINING</c> until it has reached an <c>ACTIVE</c>
            status. If the instance is in any other status, an error will be received.
            </para>
             </important> 
            <para>
            When you set a container instance to <c>DRAINING</c>, Amazon ECS prevents new tasks
            from being scheduled for placement on the container instance and replacement service
            tasks are started on other container instances in the cluster if the resources are
            available. Service tasks on the container instance that are in the <c>PENDING</c>
            state are stopped immediately.
            </para>
             
            <para>
            Service tasks on the container instance that are in the <c>RUNNING</c> state are stopped
            and replaced according to the service's deployment configuration parameters, <c>minimumHealthyPercent</c>
            and <c>maximumPercent</c>. You can change the deployment configuration of your service
            using <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>.
            </para>
             <ul> <li> 
            <para>
            If <c>minimumHealthyPercent</c> is below 100%, the scheduler can ignore <c>desiredCount</c>
            temporarily during task replacement. For example, <c>desiredCount</c> is four tasks,
            a minimum of 50% allows the scheduler to stop two existing tasks before starting two
            new tasks. If the minimum is 100%, the service scheduler can't remove existing tasks
            until the replacement tasks are considered healthy. Tasks for services that do not
            use a load balancer are considered healthy if they're in the <c>RUNNING</c> state.
            Tasks for services that use a load balancer are considered healthy if they're in the
            <c>RUNNING</c> state and are reported as healthy by the load balancer.
            </para>
             </li> <li> 
            <para>
            The <c>maximumPercent</c> parameter represents an upper limit on the number of running
            tasks during task replacement. You can use this to define the replacement batch size.
            For example, if <c>desiredCount</c> is four tasks, a maximum of 200% starts four new
            tasks before stopping the four tasks to be drained, provided that the cluster resources
            required to do this are available. If the maximum is 100%, then replacement tasks
            can't start until the draining tasks have stopped.
            </para>
             </li> </ul> 
            <para>
            Any <c>PENDING</c> or <c>RUNNING</c> tasks that do not belong to a service aren't
            affected. You must wait for them to finish or stop them manually.
            </para>
             
            <para>
            A container instance has completed draining when it has no more <c>RUNNING</c> tasks.
            You can verify this using <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListTasks.html">ListTasks</a>.
            </para>
             
            <para>
            When a container instance has been drained, you can set a container instance to <c>ACTIVE</c>
            status and once it has reached that status the Amazon ECS scheduler can begin scheduling
            tasks on the instance again.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateContainerInstancesState service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateContainerInstancesState service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateContainerInstancesState">REST API Reference for UpdateContainerInstancesState Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateServiceAsync(Amazon.ECS.Model.UpdateServiceRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the parameters of a service.
            
             <note> 
            <para>
            On March 21, 2024, a change was made to resolve the task definition revision before
            authorization. When a task definition revision is not specified, authorization will
            occur using the latest revision of a task definition.
            </para>
             </note> 
            <para>
            For services using the rolling update (<c>ECS</c>) you can update the desired count,
            deployment configuration, network configuration, load balancers, service registries,
            enable ECS managed tags option, propagate tags option, task placement constraints
            and strategies, and task definition. When you update any of these parameters, Amazon
            ECS starts new tasks with the new configuration. 
            </para>
             
            <para>
            You can attach Amazon EBS volumes to Amazon ECS tasks by configuring the volume when
            starting or running a task, or when creating or updating a service. For more infomation,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volume-types">Amazon
            EBS volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>. You
            can update your volume configurations and trigger a new deployment. <c>volumeConfigurations</c>
            is only supported for REPLICA service and not DAEMON service. If you leave <c>volumeConfigurations</c>
            <c>null</c>, it doesn't trigger a new deployment. For more infomation on volumes,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volume-types">Amazon
            EBS volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            For services using the blue/green (<c>CODE_DEPLOY</c>) deployment controller, only
            the desired count, deployment configuration, health check grace period, task placement
            constraints and strategies, enable ECS managed tags option, and propagate tags can
            be updated using this API. If the network configuration, platform version, task definition,
            or load balancer need to be updated, create a new CodeDeploy deployment. For more
            information, see <a href="https://docs.aws.amazon.com/codedeploy/latest/APIReference/API_CreateDeployment.html">CreateDeployment</a>
            in the <i>CodeDeploy API Reference</i>.
            </para>
             
            <para>
            For services using an external deployment controller, you can update only the desired
            count, task placement constraints and strategies, health check grace period, enable
            ECS managed tags option, and propagate tags option, using this API. If the launch
            type, load balancer, network configuration, platform version, or task definition need
            to be updated, create a new task set For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateTaskSet.html">CreateTaskSet</a>.
            </para>
             
            <para>
            You can add to or subtract from the number of instantiations of a task definition
            in a service by specifying the cluster that the service is running in and a new <c>desiredCount</c>
            parameter.
            </para>
             
            <para>
            You can attach Amazon EBS volumes to Amazon ECS tasks by configuring the volume when
            starting or running a task, or when creating or updating a service. For more infomation,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volume-types">Amazon
            EBS volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            If you have updated the container image of your application, you can create a new
            task definition with that image and deploy it to your service. The service scheduler
            uses the minimum healthy percent and maximum percent parameters (in the service's
            deployment configuration) to determine the deployment strategy.
            </para>
             <note> 
            <para>
            If your updated Docker image uses the same tag as what is in the existing task definition
            for your service (for example, <c>my_image:latest</c>), you don't need to create a
            new revision of your task definition. You can update the service using the <c>forceNewDeployment</c>
            option. The new tasks launched by the deployment pull the current image/tag combination
            from your repository when they start.
            </para>
             </note> 
            <para>
            You can also update the deployment configuration of a service. When a deployment is
            triggered by updating the task definition of a service, the service scheduler uses
            the deployment configuration parameters, <c>minimumHealthyPercent</c> and <c>maximumPercent</c>,
            to determine the deployment strategy.
            </para>
             <ul> <li> 
            <para>
            If <c>minimumHealthyPercent</c> is below 100%, the scheduler can ignore <c>desiredCount</c>
            temporarily during a deployment. For example, if <c>desiredCount</c> is four tasks,
            a minimum of 50% allows the scheduler to stop two existing tasks before starting two
            new tasks. Tasks for services that don't use a load balancer are considered healthy
            if they're in the <c>RUNNING</c> state. Tasks for services that use a load balancer
            are considered healthy if they're in the <c>RUNNING</c> state and are reported as
            healthy by the load balancer.
            </para>
             </li> <li> 
            <para>
            The <c>maximumPercent</c> parameter represents an upper limit on the number of running
            tasks during a deployment. You can use it to define the deployment batch size. For
            example, if <c>desiredCount</c> is four tasks, a maximum of 200% starts four new tasks
            before stopping the four older tasks (provided that the cluster resources required
            to do this are available).
            </para>
             </li> </ul> 
            <para>
            When <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html">UpdateService</a>
            stops a task during a deployment, the equivalent of <c>docker stop</c> is issued to
            the containers running in the task. This results in a <c>SIGTERM</c> and a 30-second
            timeout. After this, <c>SIGKILL</c> is sent and the containers are forcibly stopped.
            If the container handles the <c>SIGTERM</c> gracefully and exits within 30 seconds
            from receiving it, no <c>SIGKILL</c> is sent.
            </para>
             
            <para>
            When the service scheduler launches new tasks, it determines task placement in your
            cluster with the following logic.
            </para>
             <ul> <li> 
            <para>
            Determine which of the container instances in your cluster can support your service's
            task definition. For example, they have the required CPU, memory, ports, and container
            instance attributes.
            </para>
             </li> <li> 
            <para>
            By default, the service scheduler attempts to balance tasks across Availability Zones
            in this manner even though you can choose a different placement strategy.
            </para>
             <ul> <li> 
            <para>
            Sort the valid container instances by the fewest number of running tasks for this
            service in the same Availability Zone as the instance. For example, if zone A has
            one running service task and zones B and C each have zero, valid container instances
            in either zone B or C are considered optimal for placement.
            </para>
             </li> <li> 
            <para>
            Place the new service task on a valid container instance in an optimal Availability
            Zone (based on the previous steps), favoring container instances with the fewest number
            of running tasks for this service.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            When the service scheduler stops running tasks, it attempts to maintain balance across
            the Availability Zones in your cluster using the following logic: 
            </para>
             <ul> <li> 
            <para>
            Sort the container instances by the largest number of running tasks for this service
            in the same Availability Zone as the instance. For example, if zone A has one running
            service task and zones B and C each have two, container instances in either zone B
            or C are considered optimal for termination.
            </para>
             </li> <li> 
            <para>
            Stop the task on a container instance in an optimal Availability Zone (based on the
            previous steps), favoring container instances with the largest number of running tasks
            for this service.
            </para>
             </li> </ul> <note> 
            <para>
            You must have a service-linked role when you update any of the following service properties:
            </para>
             <ul> <li> 
            <para>
             <c>loadBalancers</c>,
            </para>
             </li> <li> 
            <para>
             <c>serviceRegistries</c> 
            </para>
             </li> </ul> 
            <para>
            For more information about the role see the <c>CreateService</c> request parameter
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html#ECS-CreateService-request-role">
            <c>role</c> </a>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateService service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.NamespaceNotFoundException">
            The specified namespace wasn't found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version doesn't satisfy the required capabilities of the task
            definition.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version doesn't exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service isn't active. You can't update a service that's inactive. If
            you have previously deleted a service, you can re-create it with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html">CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateService">REST API Reference for UpdateService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateServicePrimaryTaskSetAsync(Amazon.ECS.Model.UpdateServicePrimaryTaskSetRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies which task set in a service is the primary task set. Any parameters that
            are updated on the primary task set in a service will transition to the service. This
            is used when a service uses the <c>EXTERNAL</c> deployment controller type. For more
            information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateServicePrimaryTaskSet service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateServicePrimaryTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service isn't active. You can't update a service that's inactive. If
            you have previously deleted a service, you can re-create it with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html">CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TaskSetNotFoundException">
            The specified task set wasn't found. You can view your available task sets with <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTaskSets.html">DescribeTaskSets</a>.
            Task sets are specific to each cluster, service and Region.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateServicePrimaryTaskSet">REST API Reference for UpdateServicePrimaryTaskSet Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateTaskProtectionAsync(Amazon.ECS.Model.UpdateTaskProtectionRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the protection status of a task. You can set <c>protectionEnabled</c> to <c>true</c>
            to protect your task from termination during scale-in events from <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-auto-scaling.html">Service
            Autoscaling</a> or <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">deployments</a>.
            
             
            <para>
            Task-protection, by default, expires after 2 hours at which point Amazon ECS clears
            the <c>protectionEnabled</c> property making the task eligible for termination by
            a subsequent scale-in event.
            </para>
             
            <para>
            You can specify a custom expiration period for task protection from 1 minute to up
            to 2,880 minutes (48 hours). To specify the custom expiration period, set the <c>expiresInMinutes</c>
            property. The <c>expiresInMinutes</c> property is always reset when you invoke this
            operation for a task that already has <c>protectionEnabled</c> set to <c>true</c>.
            You can keep extending the protection expiration period of a task by invoking this
            operation repeatedly.
            </para>
             
            <para>
            To learn more about Amazon ECS task protection, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-scale-in-protection.html">Task
            scale-in protection</a> in the <i> <i>Amazon Elastic Container Service Developer Guide</i>
            </i>.
            </para>
             <note> 
            <para>
            This operation is only supported for tasks belonging to an Amazon ECS service. Invoking
            this operation for a standalone task will result in an <c>TASK_NOT_VALID</c> failure.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/api_failures_messages.html">API
            failure reasons</a>.
            </para>
             </note> <important> 
            <para>
            If you prefer to set task protection from within the container, we recommend using
            the <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-scale-in-protection-endpoint.html">Task
            scale-in protection endpoint</a>.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateTaskProtection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateTaskProtection service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ResourceNotFoundException">
            The specified resource wasn't found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateTaskProtection">REST API Reference for UpdateTaskProtection Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateTaskSetAsync(Amazon.ECS.Model.UpdateTaskSetRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies a task set. This is used when a service uses the <c>EXTERNAL</c> deployment
            controller type. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateTaskSet service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You don't have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action. This client action might be using
            an action or resource on behalf of a user that doesn't have permissions to use the
            action or resource. Or, it might be specifying an identifier that isn't valid.
            
             
            <para>
            The following list includes additional causes for the error:
            </para>
             <ul> <li> 
            <para>
            The <c>RunTask</c> could not be processed because you use managed scaling and there
            is a capacity error because the quota of tasks in the <c>PROVISIONING</c> per cluster
            has been reached. For information about the service quotas, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html">Amazon
            ECS service quotas</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster wasn't found. You can view your available clusters with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html">ListClusters</a>.
            Amazon ECS clusters are Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter isn't valid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service isn't active. You can't update a service that's inactive. If
            you have previously deleted a service, you can re-create it with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html">CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service wasn't found. You can view your available services with <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html">ListServices</a>.
            Amazon ECS services are cluster specific and Region specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TaskSetNotFoundException">
            The specified task set wasn't found. You can view your available task sets with <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTaskSets.html">DescribeTaskSets</a>.
            Task sets are specific to each cluster, service and Region.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task isn't supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateTaskSet">REST API Reference for UpdateTaskSet Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
