<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.PaymentCryptographyData</name>
    </assembly>
    <members>
        <member name="T:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataConfig">
            <summary>
            Configuration for accessing Amazon PaymentCryptographyData service
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon PaymentCryptographyData service
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            PaymentCryptographyData
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Endpoints.PaymentCryptographyDataEndpointParameters">
            <summary>
            Contains parameters used for resolving PaymentCryptographyData endpoints
            Parameters can be sourced from client config and service operations
            Used by internal PaymentCryptographyDataEndpointProvider and PaymentCryptographyDataEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Endpoints.PaymentCryptographyDataEndpointParameters.#ctor">
            <summary>
            PaymentCryptographyDataEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Endpoints.PaymentCryptographyDataEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Endpoints.PaymentCryptographyDataEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Endpoints.PaymentCryptographyDataEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Endpoints.PaymentCryptographyDataEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataException">
            <summary>
             Common exception for the PaymentCryptographyData service.
             </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonPaymentCryptographyDataException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonPaymentCryptographyDataException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonPaymentCryptographyDataException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonPaymentCryptographyDataException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonPaymentCryptographyDataException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Internal.AmazonPaymentCryptographyDataEndpointProvider">
            <summary>
            Amazon PaymentCryptographyData endpoint provider.
            Resolves endpoint for given set of PaymentCryptographyDataEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Internal.AmazonPaymentCryptographyDataEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for PaymentCryptographyDataEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Internal.AmazonPaymentCryptographyDataEndpointResolver">
            <summary>
            Amazon PaymentCryptographyData endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for PaymentCryptographyData service requests.
            Collects values for PaymentCryptographyDataEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses PaymentCryptographyDataEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Internal.AmazonPaymentCryptographyDataMetadata">
            <summary>
            Service metadata for  Amazon PaymentCryptographyData service
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Internal.AmazonPaymentCryptographyDataMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Internal.AmazonPaymentCryptographyDataMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            <summary>
            You do not have sufficient access to perform this action.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.AmexAttributes">
            <summary>
            Parameters to derive the confidentiality and integrity keys for a payment card using
            Amex derivation method.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.AmexAttributes.ApplicationTransactionCounter">
            <summary>
            Gets and sets the property ApplicationTransactionCounter. 
            <para>
            The transaction counter of the current transaction that is provided by the terminal
            during transaction processing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.AmexAttributes.AuthorizationRequestKeyIdentifier">
            <summary>
            Gets and sets the property AuthorizationRequestKeyIdentifier. 
            <para>
            The <c>keyArn</c> of the issuer master key for cryptogram (IMK-AC) for the payment
            card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.AmexAttributes.CurrentPinAttributes">
            <summary>
            Gets and sets the property CurrentPinAttributes. 
            <para>
            The encrypted pinblock of the old pin stored on the chip card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.AmexAttributes.MajorKeyDerivationMode">
            <summary>
            Gets and sets the property MajorKeyDerivationMode. 
            <para>
            The method to use when deriving the master key for a payment card using Amex derivation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.AmexAttributes.PanSequenceNumber">
            <summary>
            Gets and sets the property PanSequenceNumber. 
            <para>
            A number that identifies and differentiates payment cards with the same Primary Account
            Number (PAN). Typically 00 is used, if no value is provided by the terminal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.AmexAttributes.PrimaryAccountNumber">
            <summary>
            Gets and sets the property PrimaryAccountNumber. 
            <para>
            The Primary Account Number (PAN) of the cardholder.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.AmexCardSecurityCodeVersion1">
            <summary>
            Card data parameters that are required to generate a Card Security Code (CSC2) for
            an AMEX payment card.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.AmexCardSecurityCodeVersion1.CardExpiryDate">
            <summary>
            Gets and sets the property CardExpiryDate. 
            <para>
            The expiry date of a payment card.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.AmexCardSecurityCodeVersion2">
            <summary>
            Card data parameters that are required to generate a Card Security Code (CSC2) for
            an AMEX payment card.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.AmexCardSecurityCodeVersion2.CardExpiryDate">
            <summary>
            Gets and sets the property CardExpiryDate. 
            <para>
            The expiry date of a payment card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.AmexCardSecurityCodeVersion2.ServiceCode">
            <summary>
            Gets and sets the property ServiceCode. 
            <para>
            The service code of the AMEX payment card. This is different from the Card Security
            Code (CSC).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.AsymmetricEncryptionAttributes">
            <summary>
            Parameters for plaintext encryption using asymmetric keys.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.AsymmetricEncryptionAttributes.PaddingType">
            <summary>
            Gets and sets the property PaddingType. 
            <para>
            The padding to be included with the data.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.CardGenerationAttributes">
            <summary>
            Card data parameters that are required to generate Card Verification Values (CVV/CVV2),
            Dynamic Card Verification Values (dCVV/dCVV2), or Card Security Codes (CSC).
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CardGenerationAttributes.AmexCardSecurityCodeVersion1">
            <summary>
            Gets and sets the property AmexCardSecurityCodeVersion1.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CardGenerationAttributes.AmexCardSecurityCodeVersion2">
            <summary>
            Gets and sets the property AmexCardSecurityCodeVersion2. 
            <para>
            Card data parameters that are required to generate a Card Security Code (CSC2) for
            an AMEX payment card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CardGenerationAttributes.CardHolderVerificationValue">
            <summary>
            Gets and sets the property CardHolderVerificationValue. 
            <para>
            Card data parameters that are required to generate a cardholder verification value
            for the payment card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CardGenerationAttributes.CardVerificationValue1">
            <summary>
            Gets and sets the property CardVerificationValue1. 
            <para>
            Card data parameters that are required to generate Card Verification Value (CVV) for
            the payment card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CardGenerationAttributes.CardVerificationValue2">
            <summary>
            Gets and sets the property CardVerificationValue2. 
            <para>
            Card data parameters that are required to generate Card Verification Value (CVV2)
            for the payment card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CardGenerationAttributes.DynamicCardVerificationCode">
            <summary>
            Gets and sets the property DynamicCardVerificationCode. 
            <para>
            Card data parameters that are required to generate CDynamic Card Verification Code
            (dCVC) for the payment card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CardGenerationAttributes.DynamicCardVerificationValue">
            <summary>
            Gets and sets the property DynamicCardVerificationValue. 
            <para>
            Card data parameters that are required to generate CDynamic Card Verification Value
            (dCVV) for the payment card.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.CardHolderVerificationValue">
            <summary>
            Card data parameters that are required to generate a cardholder verification value
            for the payment card.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CardHolderVerificationValue.ApplicationTransactionCounter">
            <summary>
            Gets and sets the property ApplicationTransactionCounter. 
            <para>
            The transaction counter value that comes from a point of sale terminal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CardHolderVerificationValue.PanSequenceNumber">
            <summary>
            Gets and sets the property PanSequenceNumber. 
            <para>
            A number that identifies and differentiates payment cards with the same Primary Account
            Number (PAN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CardHolderVerificationValue.UnpredictableNumber">
            <summary>
            Gets and sets the property UnpredictableNumber. 
            <para>
            A random number generated by the issuer.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.CardVerificationAttributes">
            <summary>
            Card data parameters that are requried to verify Card Verification Values (CVV/CVV2),
            Dynamic Card Verification Values (dCVV/dCVV2), or Card Security Codes (CSC).
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CardVerificationAttributes.AmexCardSecurityCodeVersion1">
            <summary>
            Gets and sets the property AmexCardSecurityCodeVersion1.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CardVerificationAttributes.AmexCardSecurityCodeVersion2">
            <summary>
            Gets and sets the property AmexCardSecurityCodeVersion2. 
            <para>
            Card data parameters that are required to verify a Card Security Code (CSC2) for an
            AMEX payment card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CardVerificationAttributes.CardHolderVerificationValue">
            <summary>
            Gets and sets the property CardHolderVerificationValue. 
            <para>
            Card data parameters that are required to verify a cardholder verification value for
            the payment card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CardVerificationAttributes.CardVerificationValue1">
            <summary>
            Gets and sets the property CardVerificationValue1. 
            <para>
            Card data parameters that are required to verify Card Verification Value (CVV) for
            the payment card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CardVerificationAttributes.CardVerificationValue2">
            <summary>
            Gets and sets the property CardVerificationValue2. 
            <para>
            Card data parameters that are required to verify Card Verification Value (CVV2) for
            the payment card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CardVerificationAttributes.DiscoverDynamicCardVerificationCode">
            <summary>
            Gets and sets the property DiscoverDynamicCardVerificationCode. 
            <para>
            Card data parameters that are required to verify CDynamic Card Verification Code (dCVC)
            for the payment card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CardVerificationAttributes.DynamicCardVerificationCode">
            <summary>
            Gets and sets the property DynamicCardVerificationCode. 
            <para>
            Card data parameters that are required to verify CDynamic Card Verification Code (dCVC)
            for the payment card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CardVerificationAttributes.DynamicCardVerificationValue">
            <summary>
            Gets and sets the property DynamicCardVerificationValue. 
            <para>
            Card data parameters that are required to verify CDynamic Card Verification Value
            (dCVV) for the payment card.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.CardVerificationValue1">
            <summary>
            Card data parameters that are required to verify CVV (Card Verification Value) for
            the payment card.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CardVerificationValue1.CardExpiryDate">
            <summary>
            Gets and sets the property CardExpiryDate. 
            <para>
            The expiry date of a payment card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CardVerificationValue1.ServiceCode">
            <summary>
            Gets and sets the property ServiceCode. 
            <para>
            The service code of the payment card. This is different from Card Security Code (CSC).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.CardVerificationValue2">
            <summary>
            Card data parameters that are required to verify Card Verification Value (CVV2) for
            the payment card.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CardVerificationValue2.CardExpiryDate">
            <summary>
            Gets and sets the property CardExpiryDate. 
            <para>
            The expiry date of a payment card.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.CryptogramAuthResponse">
            <summary>
            Parameters that are required for Authorization Response Cryptogram (ARPC) generation
            after Authorization Request Cryptogram (ARQC) verification is successful.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CryptogramAuthResponse.ArpcMethod1">
            <summary>
            Gets and sets the property ArpcMethod1. 
            <para>
            Parameters that are required for ARPC response generation using method1 after ARQC
            verification is successful.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CryptogramAuthResponse.ArpcMethod2">
            <summary>
            Gets and sets the property ArpcMethod2. 
            <para>
            Parameters that are required for ARPC response generation using method2 after ARQC
            verification is successful.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.CryptogramVerificationArpcMethod1">
            <summary>
            Parameters that are required for ARPC response generation using method1 after ARQC
            verification is successful.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CryptogramVerificationArpcMethod1.AuthResponseCode">
            <summary>
            Gets and sets the property AuthResponseCode. 
            <para>
            The auth code used to calculate APRC after ARQC verification is successful. This is
            the same auth code used for ARQC generation outside of Amazon Web Services Payment
            Cryptography.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.CryptogramVerificationArpcMethod2">
            <summary>
            Parameters that are required for ARPC response generation using method2 after ARQC
            verification is successful.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CryptogramVerificationArpcMethod2.CardStatusUpdate">
            <summary>
            Gets and sets the property CardStatusUpdate. 
            <para>
            The data indicating whether the issuer approves or declines an online transaction
            using an EMV chip card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CryptogramVerificationArpcMethod2.ProprietaryAuthenticationData">
            <summary>
            Gets and sets the property ProprietaryAuthenticationData. 
            <para>
            The proprietary authentication data used by issuer for communication during online
            transaction using an EMV chip card.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.CurrentPinAttributes">
            <summary>
            The parameter values of the current PIN to be changed on the EMV chip card.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CurrentPinAttributes.CurrentEncryptedPinBlock">
            <summary>
            Gets and sets the property CurrentEncryptedPinBlock. 
            <para>
            The encrypted pinblock of the current pin stored on the chip card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.CurrentPinAttributes.CurrentPinPekIdentifier">
            <summary>
            Gets and sets the property CurrentPinPekIdentifier. 
            <para>
            The <c>keyArn</c> of the current PIN PEK.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.DecryptDataRequest">
            <summary>
            Container for the parameters to the DecryptData operation.
            Decrypts ciphertext data to plaintext using a symmetric (TDES, AES), asymmetric (RSA),
            or derived (DUKPT or EMV) encryption key scheme. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/decrypt-data.html">Decrypt
            data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            You can use an decryption key generated within Amazon Web Services Payment Cryptography,
            or you can import your own decryption key by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>.
            For this operation, the key must have <c>KeyModesOfUse</c> set to <c>Decrypt</c>.
            In asymmetric decryption, Amazon Web Services Payment Cryptography decrypts the ciphertext
            using the private component of the asymmetric encryption key pair. For data encryption
            outside of Amazon Web Services Payment Cryptography, you can export the public component
            of the asymmetric key pair by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_GetPublicKeyCertificate.html">GetPublicCertificate</a>.
            </para>
             
            <para>
            This operation also supports dynamic keys, allowing you to pass a dynamic decryption
            key as a TR-31 WrappedKeyBlock. This can be used when key material is frequently rotated,
            such as during every card transaction, and there is need to avoid importing short-lived
            keys into Amazon Web Services Payment Cryptography. To decrypt using dynamic keys,
            the <c>keyARN</c> is the Key Encryption Key (KEK) of the TR-31 wrapped decryption
            key material. The incoming wrapped key shall have a key purpose of D0 with a mode
            of use of B or D. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/use-cases-acquirers-dynamickeys.html">Using
            Dynamic Keys</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            </para>
             
            <para>
            For symmetric and DUKPT decryption, Amazon Web Services Payment Cryptography supports
            <c>TDES</c> and <c>AES</c> algorithms. For EMV decryption, Amazon Web Services Payment
            Cryptography supports <c>TDES</c> algorithms. For asymmetric decryption, Amazon Web
            Services Payment Cryptography supports <c>RSA</c>. 
            </para>
             
            <para>
            When you use TDES or TDES DUKPT, the ciphertext data length must be a multiple of
            8 bytes. For AES or AES DUKPT, the ciphertext data length must be a multiple of 16
            bytes. For RSA, it sould be equal to the key size unless padding is enabled.
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>EncryptData</a> 
            </para>
             </li> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_GetPublicKeyCertificate.html">GetPublicCertificate</a>
            
            </para>
             </li> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>
            
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DecryptDataRequest.CipherText">
            <summary>
            Gets and sets the property CipherText. 
            <para>
            The ciphertext to decrypt.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DecryptDataRequest.DecryptionAttributes">
            <summary>
            Gets and sets the property DecryptionAttributes. 
            <para>
            The encryption key type and attributes for ciphertext decryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DecryptDataRequest.KeyIdentifier">
            <summary>
            Gets and sets the property KeyIdentifier. 
            <para>
            The <c>keyARN</c> of the encryption key that Amazon Web Services Payment Cryptography
            uses for ciphertext decryption.
            </para>
             
            <para>
            When a WrappedKeyBlock is provided, this value will be the identifier to the key wrapping
            key. Otherwise, it is the key identifier used to perform the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DecryptDataRequest.WrappedKey">
            <summary>
            Gets and sets the property WrappedKey. 
            <para>
            The WrappedKeyBlock containing the encryption key for ciphertext decryption.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.DecryptDataResponse">
            <summary>
            This is the response object from the DecryptData operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DecryptDataResponse.KeyArn">
            <summary>
            Gets and sets the property KeyArn. 
            <para>
            The <c>keyARN</c> of the encryption key that Amazon Web Services Payment Cryptography
            uses for ciphertext decryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DecryptDataResponse.KeyCheckValue">
            <summary>
            Gets and sets the property KeyCheckValue. 
            <para>
            The key check value (KCV) of the encryption key. The KCV is used to check if all parties
            holding a given key have the same key or to detect that a key has changed.
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography computes the KCV according to the CMAC specification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DecryptDataResponse.PlainText">
            <summary>
            Gets and sets the property PlainText. 
            <para>
            The decrypted plaintext data in hexBinary format.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.DerivationMethodAttributes">
            <summary>
            Parameters to derive the payment card specific confidentiality and integrity keys.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DerivationMethodAttributes.Amex">
            <summary>
            Gets and sets the property Amex. 
            <para>
            Parameters to derive the confidentiality and integrity keys for a payment card using
            Amex derivation method.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DerivationMethodAttributes.Emv2000">
            <summary>
            Gets and sets the property Emv2000. 
            <para>
            Parameters to derive the confidentiality and integrity keys for a payment card using
            Emv2000 derivation method.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DerivationMethodAttributes.EmvCommon">
            <summary>
            Gets and sets the property EmvCommon. 
            <para>
            Parameters to derive the confidentiality and integrity keys for a payment card using
            Emv common derivation method.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DerivationMethodAttributes.Mastercard">
            <summary>
            Gets and sets the property Mastercard. 
            <para>
            Parameters to derive the confidentiality and integrity keys for a payment card using
            Mastercard derivation method.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DerivationMethodAttributes.Visa">
            <summary>
            Gets and sets the property Visa. 
            <para>
            Parameters to derive the confidentiality and integrity keys for a a payment card using
            Visa derivation method.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.DiscoverDynamicCardVerificationCode">
            <summary>
            Parameters that are required to generate or verify dCVC (Dynamic Card Verification
            Code).
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DiscoverDynamicCardVerificationCode.ApplicationTransactionCounter">
            <summary>
            Gets and sets the property ApplicationTransactionCounter. 
            <para>
            The transaction counter value that comes from the terminal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DiscoverDynamicCardVerificationCode.CardExpiryDate">
            <summary>
            Gets and sets the property CardExpiryDate. 
            <para>
            The expiry date of a payment card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DiscoverDynamicCardVerificationCode.UnpredictableNumber">
            <summary>
            Gets and sets the property UnpredictableNumber. 
            <para>
            A random number that is generated by the issuer.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.DukptAttributes">
            <summary>
            Parameters that are used for Derived Unique Key Per Transaction (DUKPT) derivation
            algorithm.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DukptAttributes.DukptDerivationType">
            <summary>
            Gets and sets the property DukptDerivationType. 
            <para>
            The key type derived using DUKPT from a Base Derivation Key (BDK) and Key Serial Number
            (KSN). This must be less than or equal to the strength of the BDK. For example, you
            can't use <c>AES_128</c> as a derivation type for a BDK of <c>AES_128</c> or <c>TDES_2KEY</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DukptAttributes.KeySerialNumber">
            <summary>
            Gets and sets the property KeySerialNumber. 
            <para>
            The unique identifier known as Key Serial Number (KSN) that comes from an encrypting
            device using DUKPT encryption method. The KSN is derived from the encrypting device
            unique identifier and an internal transaction counter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.DukptDerivationAttributes">
            <summary>
            Parameters required for encryption or decryption of data using DUKPT.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DukptDerivationAttributes.DukptKeyDerivationType">
            <summary>
            Gets and sets the property DukptKeyDerivationType. 
            <para>
            The key type derived using DUKPT from a Base Derivation Key (BDK) and Key Serial Number
            (KSN). This must be less than or equal to the strength of the BDK. For example, you
            can't use <c>AES_128</c> as a derivation type for a BDK of <c>AES_128</c> or <c>TDES_2KEY</c>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DukptDerivationAttributes.DukptKeyVariant">
            <summary>
            Gets and sets the property DukptKeyVariant. 
            <para>
            The type of use of DUKPT, which can be for incoming data decryption, outgoing data
            encryption, or both.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DukptDerivationAttributes.KeySerialNumber">
            <summary>
            Gets and sets the property KeySerialNumber. 
            <para>
            The unique identifier known as Key Serial Number (KSN) that comes from an encrypting
            device using DUKPT encryption method. The KSN is derived from the encrypting device
            unique identifier and an internal transaction counter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.DukptEncryptionAttributes">
            <summary>
            Parameters that are required to encrypt plaintext data using DUKPT.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DukptEncryptionAttributes.DukptKeyDerivationType">
            <summary>
            Gets and sets the property DukptKeyDerivationType. 
            <para>
            The key type encrypted using DUKPT from a Base Derivation Key (BDK) and Key Serial
            Number (KSN). This must be less than or equal to the strength of the BDK. For example,
            you can't use <c>AES_128</c> as a derivation type for a BDK of <c>AES_128</c> or <c>TDES_2KEY</c>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DukptEncryptionAttributes.DukptKeyVariant">
            <summary>
            Gets and sets the property DukptKeyVariant. 
            <para>
            The type of use of DUKPT, which can be incoming data decryption, outgoing data encryption,
            or both.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DukptEncryptionAttributes.InitializationVector">
            <summary>
            Gets and sets the property InitializationVector. 
            <para>
            An input used to provide the intial state. If no value is provided, Amazon Web Services
            Payment Cryptography defaults it to zero.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DukptEncryptionAttributes.KeySerialNumber">
            <summary>
            Gets and sets the property KeySerialNumber. 
            <para>
            The unique identifier known as Key Serial Number (KSN) that comes from an encrypting
            device using DUKPT encryption method. The KSN is derived from the encrypting device
            unique identifier and an internal transaction counter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DukptEncryptionAttributes.Mode">
            <summary>
            Gets and sets the property Mode. 
            <para>
            The block cipher method to use for encryption.
            </para>
             
            <para>
            The default is CBC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.DynamicCardVerificationCode">
            <summary>
            Parameters that are required to generate or verify Dynamic Card Verification Value
            (dCVV).
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DynamicCardVerificationCode.ApplicationTransactionCounter">
            <summary>
            Gets and sets the property ApplicationTransactionCounter. 
            <para>
            The transaction counter value that comes from the terminal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DynamicCardVerificationCode.PanSequenceNumber">
            <summary>
            Gets and sets the property PanSequenceNumber. 
            <para>
            A number that identifies and differentiates payment cards with the same Primary Account
            Number (PAN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DynamicCardVerificationCode.TrackData">
            <summary>
            Gets and sets the property TrackData. 
            <para>
            The data on the two tracks of magnetic cards used for financial transactions. This
            includes the cardholder name, PAN, expiration date, bank ID (BIN) and several other
            numbers the issuing bank uses to validate the data received.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DynamicCardVerificationCode.UnpredictableNumber">
            <summary>
            Gets and sets the property UnpredictableNumber. 
            <para>
            A random number generated by the issuer.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.DynamicCardVerificationValue">
            <summary>
            Parameters that are required to generate or verify Dynamic Card Verification Value
            (dCVV).
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DynamicCardVerificationValue.ApplicationTransactionCounter">
            <summary>
            Gets and sets the property ApplicationTransactionCounter. 
            <para>
            The transaction counter value that comes from the terminal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DynamicCardVerificationValue.CardExpiryDate">
            <summary>
            Gets and sets the property CardExpiryDate. 
            <para>
            The expiry date of a payment card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DynamicCardVerificationValue.PanSequenceNumber">
            <summary>
            Gets and sets the property PanSequenceNumber. 
            <para>
            A number that identifies and differentiates payment cards with the same Primary Account
            Number (PAN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.DynamicCardVerificationValue.ServiceCode">
            <summary>
            Gets and sets the property ServiceCode. 
            <para>
            The service code of the payment card. This is different from Card Security Code (CSC).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.EcdhDerivationAttributes">
            <summary>
            Parameters required to establish ECDH based key exchange.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EcdhDerivationAttributes.CertificateAuthorityPublicKeyIdentifier">
            <summary>
            Gets and sets the property CertificateAuthorityPublicKeyIdentifier. 
            <para>
            The <c>keyArn</c> of the certificate that signed the client's <c>PublicKeyCertificate</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EcdhDerivationAttributes.KeyAlgorithm">
            <summary>
            Gets and sets the property KeyAlgorithm. 
            <para>
            The key algorithm of the derived ECDH key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EcdhDerivationAttributes.KeyDerivationFunction">
            <summary>
            Gets and sets the property KeyDerivationFunction. 
            <para>
            The key derivation function to use for deriving a key using ECDH.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EcdhDerivationAttributes.KeyDerivationHashAlgorithm">
            <summary>
            Gets and sets the property KeyDerivationHashAlgorithm. 
            <para>
            The hash type to use for deriving a key using ECDH.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EcdhDerivationAttributes.PublicKeyCertificate">
            <summary>
            Gets and sets the property PublicKeyCertificate. 
            <para>
            The client's public key certificate in PEM format (base64 encoded) to use for ECDH
            key derivation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EcdhDerivationAttributes.SharedInformation">
            <summary>
            Gets and sets the property SharedInformation. 
            <para>
            A byte string containing information that binds the ECDH derived key to the two parties
            involved or to the context of the key.
            </para>
             
            <para>
            It may include details like identities of the two parties deriving the key, context
            of the operation, session IDs, and optionally a nonce. It must not contain zero bytes,
            and re-using shared information for multiple ECDH key derivations is not recommended.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Emv2000Attributes">
            <summary>
            Parameters to derive the confidentiality and integrity keys for a payment card using
            EMV2000 deruv.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Emv2000Attributes.ApplicationTransactionCounter">
            <summary>
            Gets and sets the property ApplicationTransactionCounter. 
            <para>
            The transaction counter of the current transaction that is provided by the terminal
            during transaction processing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Emv2000Attributes.MajorKeyDerivationMode">
            <summary>
            Gets and sets the property MajorKeyDerivationMode. 
            <para>
            The method to use when deriving the master key for the payment card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Emv2000Attributes.PanSequenceNumber">
            <summary>
            Gets and sets the property PanSequenceNumber. 
            <para>
            A number that identifies and differentiates payment cards with the same Primary Account
            Number (PAN). Typically 00 is used, if no value is provided by the terminal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Emv2000Attributes.PrimaryAccountNumber">
            <summary>
            Gets and sets the property PrimaryAccountNumber. 
            <para>
            The Primary Account Number (PAN) of the cardholder.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.EmvCommonAttributes">
            <summary>
            Parameters to derive the confidentiality and integrity keys for an Emv common payment
            card.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EmvCommonAttributes.ApplicationCryptogram">
            <summary>
            Gets and sets the property ApplicationCryptogram. 
            <para>
            The application cryptogram for the current transaction that is provided by the terminal
            during transaction processing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EmvCommonAttributes.MajorKeyDerivationMode">
            <summary>
            Gets and sets the property MajorKeyDerivationMode. 
            <para>
            The method to use when deriving the master key for the payment card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EmvCommonAttributes.Mode">
            <summary>
            Gets and sets the property Mode. 
            <para>
            The block cipher method to use for encryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EmvCommonAttributes.PanSequenceNumber">
            <summary>
            Gets and sets the property PanSequenceNumber. 
            <para>
            A number that identifies and differentiates payment cards with the same Primary Account
            Number (PAN). Typically 00 is used, if no value is provided by the terminal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EmvCommonAttributes.PinBlockLengthPosition">
            <summary>
            Gets and sets the property PinBlockLengthPosition. 
            <para>
            Specifies if PIN block length should be added to front of the pin block. 
            </para>
             
            <para>
            If value is set to <c>FRONT_OF_PIN_BLOCK</c>, then PIN block padding type should be
            <c>ISO_IEC_7816_4</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EmvCommonAttributes.PinBlockPaddingType">
            <summary>
            Gets and sets the property PinBlockPaddingType. 
            <para>
            The padding to be added to the PIN block prior to encryption.
            </para>
             
            <para>
            Padding type should be <c>ISO_IEC_7816_4</c>, if <c>PinBlockLengthPosition</c> is
            set to <c>FRONT_OF_PIN_BLOCK</c>. No padding is required, if <c>PinBlockLengthPosition</c>
            is set to <c>NONE</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EmvCommonAttributes.PrimaryAccountNumber">
            <summary>
            Gets and sets the property PrimaryAccountNumber. 
            <para>
            The Primary Account Number (PAN) of the cardholder.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.EmvEncryptionAttributes">
            <summary>
            Parameters for plaintext encryption using EMV keys.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EmvEncryptionAttributes.InitializationVector">
            <summary>
            Gets and sets the property InitializationVector. 
            <para>
            An input used to provide the intial state. If no value is provided, Amazon Web Services
            Payment Cryptography defaults it to zero.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EmvEncryptionAttributes.MajorKeyDerivationMode">
            <summary>
            Gets and sets the property MajorKeyDerivationMode. 
            <para>
            The EMV derivation mode to use for ICC master key derivation as per EMV version 4.3
            book 2.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EmvEncryptionAttributes.Mode">
            <summary>
            Gets and sets the property Mode. 
            <para>
            The block cipher method to use for encryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EmvEncryptionAttributes.PanSequenceNumber">
            <summary>
            Gets and sets the property PanSequenceNumber. 
            <para>
            A number that identifies and differentiates payment cards with the same Primary Account
            Number (PAN). Typically 00 is used, if no value is provided by the terminal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EmvEncryptionAttributes.PrimaryAccountNumber">
            <summary>
            Gets and sets the property PrimaryAccountNumber. 
            <para>
            The Primary Account Number (PAN), a unique identifier for a payment credit or debit
            card and associates the card to a specific account holder.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EmvEncryptionAttributes.SessionDerivationData">
            <summary>
            Gets and sets the property SessionDerivationData. 
            <para>
            The derivation value used to derive the ICC session key. It is typically the application
            transaction counter value padded with zeros or previous ARQC value padded with zeros
            as per EMV version 4.3 book 2.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.EncryptDataRequest">
            <summary>
            Container for the parameters to the EncryptData operation.
            Encrypts plaintext data to ciphertext using a symmetric (TDES, AES), asymmetric (RSA),
            or derived (DUKPT or EMV) encryption key scheme. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/encrypt-data.html">Encrypt
            data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            You can generate an encryption key within Amazon Web Services Payment Cryptography
            by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a>.
            You can import your own encryption key by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>.
            </para>
             
            <para>
            For this operation, the key must have <c>KeyModesOfUse</c> set to <c>Encrypt</c>.
            In asymmetric encryption, plaintext is encrypted using public component. You can import
            the public component of an asymmetric key pair created outside Amazon Web Services
            Payment Cryptography by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>.
            
            </para>
             
            <para>
            This operation also supports dynamic keys, allowing you to pass a dynamic encryption
            key as a TR-31 WrappedKeyBlock. This can be used when key material is frequently rotated,
            such as during every card transaction, and there is need to avoid importing short-lived
            keys into Amazon Web Services Payment Cryptography. To encrypt using dynamic keys,
            the <c>keyARN</c> is the Key Encryption Key (KEK) of the TR-31 wrapped encryption
            key material. The incoming wrapped key shall have a key purpose of D0 with a mode
            of use of B or D. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/use-cases-acquirers-dynamickeys.html">Using
            Dynamic Keys</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            </para>
             
            <para>
            For symmetric and DUKPT encryption, Amazon Web Services Payment Cryptography supports
            <c>TDES</c> and <c>AES</c> algorithms. For EMV encryption, Amazon Web Services Payment
            Cryptography supports <c>TDES</c> algorithms.For asymmetric encryption, Amazon Web
            Services Payment Cryptography supports <c>RSA</c>. 
            </para>
             
            <para>
            When you use TDES or TDES DUKPT, the plaintext data length must be a multiple of 8
            bytes. For AES or AES DUKPT, the plaintext data length must be a multiple of 16 bytes.
            For RSA, it sould be equal to the key size unless padding is enabled.
            </para>
             
            <para>
            To encrypt using DUKPT, you must already have a BDK (Base Derivation Key) key in your
            account with <c>KeyModesOfUse</c> set to <c>DeriveKey</c>, or you can generate a new
            DUKPT key by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a>.
            To encrypt using EMV, you must already have an IMK (Issuer Master Key) key in your
            account with <c>KeyModesOfUse</c> set to <c>DeriveKey</c>.
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>.
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>DecryptData</a> 
            </para>
             </li> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_GetPublicKeyCertificate.html">GetPublicCertificate</a>
            
            </para>
             </li> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>
            
            </para>
             </li> <li> 
            <para>
             <a>ReEncryptData</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EncryptDataRequest.EncryptionAttributes">
            <summary>
            Gets and sets the property EncryptionAttributes. 
            <para>
            The encryption key type and attributes for plaintext encryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EncryptDataRequest.KeyIdentifier">
            <summary>
            Gets and sets the property KeyIdentifier. 
            <para>
            The <c>keyARN</c> of the encryption key that Amazon Web Services Payment Cryptography
            uses for plaintext encryption.
            </para>
             
            <para>
            When a WrappedKeyBlock is provided, this value will be the identifier to the key wrapping
            key. Otherwise, it is the key identifier used to perform the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EncryptDataRequest.PlainText">
            <summary>
            Gets and sets the property PlainText. 
            <para>
            The plaintext to be encrypted.
            </para>
             <note> 
            <para>
            For encryption using asymmetric keys, plaintext data length is constrained by encryption
            key strength that you define in <c>KeyAlgorithm</c> and padding type that you define
            in <c>AsymmetricEncryptionAttributes</c>. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/encrypt-data.html">Encrypt
            data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EncryptDataRequest.WrappedKey">
            <summary>
            Gets and sets the property WrappedKey. 
            <para>
            The WrappedKeyBlock containing the encryption key for plaintext encryption.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.EncryptDataResponse">
            <summary>
            This is the response object from the EncryptData operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EncryptDataResponse.CipherText">
            <summary>
            Gets and sets the property CipherText. 
            <para>
            The encrypted ciphertext.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EncryptDataResponse.KeyArn">
            <summary>
            Gets and sets the property KeyArn. 
            <para>
            The <c>keyARN</c> of the encryption key that Amazon Web Services Payment Cryptography
            uses for plaintext encryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EncryptDataResponse.KeyCheckValue">
            <summary>
            Gets and sets the property KeyCheckValue. 
            <para>
            The key check value (KCV) of the encryption key. The KCV is used to check if all parties
            holding a given key have the same key or to detect that a key has changed.
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography computes the KCV according to the CMAC specification.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.EncryptionDecryptionAttributes">
            <summary>
            Parameters that are required to perform encryption and decryption operations.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EncryptionDecryptionAttributes.Asymmetric">
            <summary>
            Gets and sets the property Asymmetric.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EncryptionDecryptionAttributes.Dukpt">
            <summary>
            Gets and sets the property Dukpt.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EncryptionDecryptionAttributes.Emv">
            <summary>
            Gets and sets the property Emv. 
            <para>
            Parameters for plaintext encryption using EMV keys.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.EncryptionDecryptionAttributes.Symmetric">
            <summary>
            Gets and sets the property Symmetric. 
            <para>
            Parameters that are required to perform encryption and decryption using symmetric
            keys.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.GenerateCardValidationDataRequest">
            <summary>
            Container for the parameters to the GenerateCardValidationData operation.
            Generates card-related validation data using algorithms such as Card Verification
            Values (CVV/CVV2), Dynamic Card Verification Values (dCVV/dCVV2), or Card Security
            Codes (CSC). For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/generate-card-data.html">Generate
            card data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            This operation generates a CVV or CSC value that is printed on a payment credit or
            debit card during card production. The CVV or CSC, PAN (Primary Account Number) and
            expiration date of the card are required to check its validity during transaction
            processing. To begin this operation, a CVK (Card Verification Key) encryption key
            is required. You can use <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a>
            or <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>
            to establish a CVK within Amazon Web Services Payment Cryptography. The <c>KeyModesOfUse</c>
            should be set to <c>Generate</c> and <c>Verify</c> for a CVK encryption key. 
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>
            
            </para>
             </li> <li> 
            <para>
             <a>VerifyCardValidationData</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateCardValidationDataRequest.GenerationAttributes">
            <summary>
            Gets and sets the property GenerationAttributes. 
            <para>
            The algorithm for generating CVV or CSC values for the card within Amazon Web Services
            Payment Cryptography.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateCardValidationDataRequest.KeyIdentifier">
            <summary>
            Gets and sets the property KeyIdentifier. 
            <para>
            The <c>keyARN</c> of the CVK encryption key that Amazon Web Services Payment Cryptography
            uses to generate card data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateCardValidationDataRequest.PrimaryAccountNumber">
            <summary>
            Gets and sets the property PrimaryAccountNumber. 
            <para>
            The Primary Account Number (PAN), a unique identifier for a payment credit or debit
            card that associates the card with a specific account holder.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateCardValidationDataRequest.ValidationDataLength">
            <summary>
            Gets and sets the property ValidationDataLength. 
            <para>
            The length of the CVV or CSC to be generated. The default value is 3.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.GenerateCardValidationDataResponse">
            <summary>
            This is the response object from the GenerateCardValidationData operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateCardValidationDataResponse.KeyArn">
            <summary>
            Gets and sets the property KeyArn. 
            <para>
            The <c>keyARN</c> of the CVK encryption key that Amazon Web Services Payment Cryptography
            uses to generate CVV or CSC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateCardValidationDataResponse.KeyCheckValue">
            <summary>
            Gets and sets the property KeyCheckValue. 
            <para>
            The key check value (KCV) of the encryption key. The KCV is used to check if all parties
            holding a given key have the same key or to detect that a key has changed.
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography computes the KCV according to the CMAC specification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateCardValidationDataResponse.ValidationData">
            <summary>
            Gets and sets the property ValidationData. 
            <para>
            The CVV or CSC value that Amazon Web Services Payment Cryptography generates for the
            card.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.GenerateMacEmvPinChangeRequest">
            <summary>
            Container for the parameters to the GenerateMacEmvPinChange operation.
            Generates an issuer script mac for EMV payment cards that use offline PINs as the
            cardholder verification method (CVM).
            
             
            <para>
            This operation generates an authenticated issuer script response by appending the
            incoming message data (APDU command) with the target encrypted PIN block in ISO2 format.
            The command structure and method to send the issuer script update to the card is not
            defined by this operation and is typically determined by the applicable payment card
            scheme.
            </para>
             
            <para>
            The primary inputs to this operation include the incoming new encrypted pinblock,
            PIN encryption key (PEK), issuer master key (IMK), primary account number (PAN), and
            the payment card derivation method.
            </para>
             
            <para>
            The operation uses two issuer master keys - secure messaging for confidentiality (IMK-SMC)
            and secure messaging for integrity (IMK-SMI). The SMC key is used to internally derive
            a key to secure the pin, while SMI key is used to internally derive a key to authenticate
            the script reponse as per the <a href="https://www.emvco.com/specifications/">EMV
            4.4 - Book 2 - Security and Key Management</a> specification. 
            </para>
             
            <para>
            This operation supports Amex, EMV2000, EMVCommon, Mastercard and Visa derivation methods,
            each requiring specific input parameters. Users must follow the specific derivation
            method and input parameters defined by the respective payment card scheme.
            </para>
             <note> 
            <para>
            Use <a>GenerateMac</a> operation when sending a script update to an EMV card that
            does not involve PIN change. When assigning IAM permissions, it is important to understand
            that <a>EncryptData</a> using EMV keys and <a>GenerateMac</a> perform similar functions
            to this command.
            </para>
             </note> 
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>EncryptData</a> 
            </para>
             </li> <li> 
            <para>
             <a>GenerateMac</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacEmvPinChangeRequest.DerivationMethodAttributes">
            <summary>
            Gets and sets the property DerivationMethodAttributes. 
            <para>
            The attributes and data values to derive payment card specific confidentiality and
            integrity keys.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacEmvPinChangeRequest.MessageData">
            <summary>
            Gets and sets the property MessageData. 
            <para>
            The message data is the APDU command from the card reader or terminal. The target
            encrypted PIN block, after translation to ISO2 format, is appended to this message
            data to generate an issuer script response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacEmvPinChangeRequest.NewEncryptedPinBlock">
            <summary>
            Gets and sets the property NewEncryptedPinBlock. 
            <para>
            The incoming new encrypted PIN block data for offline pin change on an EMV card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacEmvPinChangeRequest.NewPinPekIdentifier">
            <summary>
            Gets and sets the property NewPinPekIdentifier. 
            <para>
            The <c>keyARN</c> of the PEK protecting the incoming new encrypted PIN block.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacEmvPinChangeRequest.PinBlockFormat">
            <summary>
            Gets and sets the property PinBlockFormat. 
            <para>
            The PIN encoding format of the incoming new encrypted PIN block as specified in ISO
            9564.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacEmvPinChangeRequest.SecureMessagingConfidentialityKeyIdentifier">
            <summary>
            Gets and sets the property SecureMessagingConfidentialityKeyIdentifier. 
            <para>
            The <c>keyARN</c> of the issuer master key (IMK-SMC) used to protect the PIN block
            data in the issuer script response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacEmvPinChangeRequest.SecureMessagingIntegrityKeyIdentifier">
            <summary>
            Gets and sets the property SecureMessagingIntegrityKeyIdentifier. 
            <para>
            The <c>keyARN</c> of the issuer master key (IMK-SMI) used to authenticate the issuer
            script response.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.GenerateMacEmvPinChangeResponse">
            <summary>
            This is the response object from the GenerateMacEmvPinChange operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacEmvPinChangeResponse.EncryptedPinBlock">
            <summary>
            Gets and sets the property EncryptedPinBlock. 
            <para>
            Returns the incoming new encrpted PIN block.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacEmvPinChangeResponse.Mac">
            <summary>
            Gets and sets the property Mac. 
            <para>
            Returns the mac of the issuer script containing message data and appended target encrypted
            pin block in ISO2 format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacEmvPinChangeResponse.NewPinPekArn">
            <summary>
            Gets and sets the property NewPinPekArn. 
            <para>
            Returns the <c>keyArn</c> of the PEK protecting the incoming new encrypted PIN block.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacEmvPinChangeResponse.NewPinPekKeyCheckValue">
            <summary>
            Gets and sets the property NewPinPekKeyCheckValue. 
            <para>
            The key check value (KCV) of the PEK uprotecting the incoming new encrypted PIN block.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacEmvPinChangeResponse.SecureMessagingConfidentialityKeyArn">
            <summary>
            Gets and sets the property SecureMessagingConfidentialityKeyArn. 
            <para>
            Returns the <c>keyArn</c> of the IMK-SMC used by the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacEmvPinChangeResponse.SecureMessagingConfidentialityKeyCheckValue">
            <summary>
            Gets and sets the property SecureMessagingConfidentialityKeyCheckValue. 
            <para>
            The key check value (KCV) of the SMC issuer master key used by the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacEmvPinChangeResponse.SecureMessagingIntegrityKeyArn">
            <summary>
            Gets and sets the property SecureMessagingIntegrityKeyArn. 
            <para>
            Returns the <c>keyArn</c> of the IMK-SMI used by the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacEmvPinChangeResponse.SecureMessagingIntegrityKeyCheckValue">
            <summary>
            Gets and sets the property SecureMessagingIntegrityKeyCheckValue. 
            <para>
            The key check value (KCV) of the SMI issuer master key used by the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacEmvPinChangeResponse.VisaAmexDerivationOutputs">
            <summary>
            Gets and sets the property VisaAmexDerivationOutputs. 
            <para>
            The attribute values used for Amex and Visa derivation methods.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.GenerateMacRequest">
            <summary>
            Container for the parameters to the GenerateMac operation.
            Generates a Message Authentication Code (MAC) cryptogram within Amazon Web Services
            Payment Cryptography. 
            
             
            <para>
            You can use this operation to authenticate card-related data by using known data values
            to generate MAC for data validation between the sending and receiving parties. This
            operation uses message data, a secret encryption key and MAC algorithm to generate
            a unique MAC value for transmission. The receiving party of the MAC must use the same
            message data, secret encryption key and MAC algorithm to reproduce another MAC value
            for comparision.
            </para>
             
            <para>
            You can use this operation to generate a DUPKT, CMAC, HMAC or EMV MAC by setting generation
            attributes and algorithm to the associated values. The MAC generation encryption key
            must have valid values for <c>KeyUsage</c> such as <c>TR31_M7_HMAC_KEY</c> for HMAC
            generation, and they key must have <c>KeyModesOfUse</c> set to <c>Generate</c> and
            <c>Verify</c>.
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>VerifyMac</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacRequest.GenerationAttributes">
            <summary>
            Gets and sets the property GenerationAttributes. 
            <para>
            The attributes and data values to use for MAC generation within Amazon Web Services
            Payment Cryptography.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacRequest.KeyIdentifier">
            <summary>
            Gets and sets the property KeyIdentifier. 
            <para>
            The <c>keyARN</c> of the MAC generation encryption key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacRequest.MacLength">
            <summary>
            Gets and sets the property MacLength. 
            <para>
            The length of a MAC under generation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacRequest.MessageData">
            <summary>
            Gets and sets the property MessageData. 
            <para>
            The data for which a MAC is under generation. This value must be hexBinary.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.GenerateMacResponse">
            <summary>
            This is the response object from the GenerateMac operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacResponse.KeyArn">
            <summary>
            Gets and sets the property KeyArn. 
            <para>
            The <c>keyARN</c> of the encryption key that Amazon Web Services Payment Cryptography
            uses for MAC generation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacResponse.KeyCheckValue">
            <summary>
            Gets and sets the property KeyCheckValue. 
            <para>
            The key check value (KCV) of the encryption key. The KCV is used to check if all parties
            holding a given key have the same key or to detect that a key has changed.
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography computes the KCV according to the CMAC specification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GenerateMacResponse.Mac">
            <summary>
            Gets and sets the property Mac. 
            <para>
            The MAC cryptogram generated within Amazon Web Services Payment Cryptography.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.GeneratePinDataRequest">
            <summary>
            Container for the parameters to the GeneratePinData operation.
            Generates pin-related data such as PIN, PIN Verification Value (PVV), PIN Block, and
            PIN Offset during new card issuance or reissuance. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/generate-pin-data.html">Generate
            PIN data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            PIN data is never transmitted in clear to or from Amazon Web Services Payment Cryptography.
            This operation generates PIN, PVV, or PIN Offset and then encrypts it using Pin Encryption
            Key (PEK) to create an <c>EncryptedPinBlock</c> for transmission from Amazon Web Services
            Payment Cryptography. This operation uses a separate Pin Verification Key (PVK) for
            VISA PVV generation. 
            </para>
             
            <para>
            Using ECDH key exchange, you can receive cardholder selectable PINs into Amazon Web
            Services Payment Cryptography. The ECDH derived key protects the incoming PIN block.
            You can also use it for reveal PIN, wherein the generated PIN block is protected by
            the ECDH derived key before transmission from Amazon Web Services Payment Cryptography.
            For more information on establishing ECDH derived keys, see the <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/create-keys.html">Generating
            keys</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>.
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>GenerateCardValidationData</a> 
            </para>
             </li> <li> 
            <para>
             <a>TranslatePinData</a> 
            </para>
             </li> <li> 
            <para>
             <a>VerifyPinData</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GeneratePinDataRequest.EncryptionKeyIdentifier">
            <summary>
            Gets and sets the property EncryptionKeyIdentifier. 
            <para>
            The <c>keyARN</c> of the PEK that Amazon Web Services Payment Cryptography uses to
            encrypt the PIN Block. For ECDH, it is the <c>keyARN</c> of the asymmetric ECC key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GeneratePinDataRequest.EncryptionWrappedKey">
            <summary>
            Gets and sets the property EncryptionWrappedKey.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GeneratePinDataRequest.GenerationAttributes">
            <summary>
            Gets and sets the property GenerationAttributes. 
            <para>
            The attributes and values to use for PIN, PVV, or PIN Offset generation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GeneratePinDataRequest.GenerationKeyIdentifier">
            <summary>
            Gets and sets the property GenerationKeyIdentifier. 
            <para>
            The <c>keyARN</c> of the PEK that Amazon Web Services Payment Cryptography uses for
            pin data generation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GeneratePinDataRequest.PinBlockFormat">
            <summary>
            Gets and sets the property PinBlockFormat. 
            <para>
            The PIN encoding format for pin data generation as specified in ISO 9564. Amazon Web
            Services Payment Cryptography supports <c>ISO_Format_0</c> and <c>ISO_Format_3</c>.
            </para>
             
            <para>
            The <c>ISO_Format_0</c> PIN block format is equivalent to the ANSI X9.8, VISA-1, and
            ECI-1 PIN block formats. It is similar to a VISA-4 PIN block format. It supports a
            PIN from 4 to 12 digits in length.
            </para>
             
            <para>
            The <c>ISO_Format_3</c> PIN block format is the same as <c>ISO_Format_0</c> except
            that the fill digits are random values from 10 to 15.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GeneratePinDataRequest.PinDataLength">
            <summary>
            Gets and sets the property PinDataLength. 
            <para>
            The length of PIN under generation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GeneratePinDataRequest.PrimaryAccountNumber">
            <summary>
            Gets and sets the property PrimaryAccountNumber. 
            <para>
            The Primary Account Number (PAN), a unique identifier for a payment credit or debit
            card that associates the card with a specific account holder.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.GeneratePinDataResponse">
            <summary>
            This is the response object from the GeneratePinData operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GeneratePinDataResponse.EncryptedPinBlock">
            <summary>
            Gets and sets the property EncryptedPinBlock. 
            <para>
            The PIN block encrypted under PEK from Amazon Web Services Payment Cryptography. The
            encrypted PIN block is a composite of PAN (Primary Account Number) and PIN (Personal
            Identification Number), generated in accordance with ISO 9564 standard.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GeneratePinDataResponse.EncryptionKeyArn">
            <summary>
            Gets and sets the property EncryptionKeyArn. 
            <para>
            The <c>keyARN</c> of the PEK that Amazon Web Services Payment Cryptography uses for
            encrypted pin block generation. For ECDH, it is the <c>keyARN</c> of the asymmetric
            ECC key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GeneratePinDataResponse.EncryptionKeyCheckValue">
            <summary>
            Gets and sets the property EncryptionKeyCheckValue. 
            <para>
            The key check value (KCV) of the encryption key. The KCV is used to check if all parties
            holding a given key have the same key or to detect that a key has changed.
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography computes the KCV according to the CMAC specification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GeneratePinDataResponse.GenerationKeyArn">
            <summary>
            Gets and sets the property GenerationKeyArn. 
            <para>
            The <c>keyARN</c> of the pin data generation key that Amazon Web Services Payment
            Cryptography uses for PIN, PVV or PIN Offset generation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GeneratePinDataResponse.GenerationKeyCheckValue">
            <summary>
            Gets and sets the property GenerationKeyCheckValue. 
            <para>
            The key check value (KCV) of the encryption key. The KCV is used to check if all parties
            holding a given key have the same key or to detect that a key has changed.
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography computes the KCV according to the CMAC specification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.GeneratePinDataResponse.PinData">
            <summary>
            Gets and sets the property PinData. 
            <para>
            The attributes and values Amazon Web Services Payment Cryptography uses for pin data
            generation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Ibm3624NaturalPin">
            <summary>
            Parameters that are required to generate or verify Ibm3624 natural PIN.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Ibm3624NaturalPin.DecimalizationTable">
            <summary>
            Gets and sets the property DecimalizationTable. 
            <para>
            The decimalization table to use for IBM 3624 PIN algorithm. The table is used to convert
            the algorithm intermediate result from hexadecimal characters to decimal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Ibm3624NaturalPin.PinValidationData">
            <summary>
            Gets and sets the property PinValidationData. 
            <para>
            The unique data for cardholder identification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Ibm3624NaturalPin.PinValidationDataPadCharacter">
            <summary>
            Gets and sets the property PinValidationDataPadCharacter. 
            <para>
            The padding character for validation data.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Ibm3624PinFromOffset">
            <summary>
            Parameters that are required to generate or verify Ibm3624 PIN from offset PIN.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Ibm3624PinFromOffset.DecimalizationTable">
            <summary>
            Gets and sets the property DecimalizationTable. 
            <para>
            The decimalization table to use for IBM 3624 PIN algorithm. The table is used to convert
            the algorithm intermediate result from hexadecimal characters to decimal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Ibm3624PinFromOffset.PinOffset">
            <summary>
            Gets and sets the property PinOffset. 
            <para>
            The PIN offset value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Ibm3624PinFromOffset.PinValidationData">
            <summary>
            Gets and sets the property PinValidationData. 
            <para>
            The unique data for cardholder identification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Ibm3624PinFromOffset.PinValidationDataPadCharacter">
            <summary>
            Gets and sets the property PinValidationDataPadCharacter. 
            <para>
            The padding character for validation data.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Ibm3624PinOffset">
            <summary>
            Pparameters that are required to generate or verify Ibm3624 PIN offset PIN.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Ibm3624PinOffset.DecimalizationTable">
            <summary>
            Gets and sets the property DecimalizationTable. 
            <para>
            The decimalization table to use for IBM 3624 PIN algorithm. The table is used to convert
            the algorithm intermediate result from hexadecimal characters to decimal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Ibm3624PinOffset.EncryptedPinBlock">
            <summary>
            Gets and sets the property EncryptedPinBlock. 
            <para>
            The encrypted PIN block data. According to ISO 9564 standard, a PIN Block is an encoded
            representation of a payment card Personal Account Number (PAN) and the cardholder
            Personal Identification Number (PIN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Ibm3624PinOffset.PinValidationData">
            <summary>
            Gets and sets the property PinValidationData. 
            <para>
            The unique data for cardholder identification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Ibm3624PinOffset.PinValidationDataPadCharacter">
            <summary>
            Gets and sets the property PinValidationDataPadCharacter. 
            <para>
            The padding character for validation data.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Ibm3624PinVerification">
            <summary>
            Parameters that are required to generate or verify Ibm3624 PIN verification PIN.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Ibm3624PinVerification.DecimalizationTable">
            <summary>
            Gets and sets the property DecimalizationTable. 
            <para>
            The decimalization table to use for IBM 3624 PIN algorithm. The table is used to convert
            the algorithm intermediate result from hexadecimal characters to decimal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Ibm3624PinVerification.PinOffset">
            <summary>
            Gets and sets the property PinOffset. 
            <para>
            The PIN offset value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Ibm3624PinVerification.PinValidationData">
            <summary>
            Gets and sets the property PinValidationData. 
            <para>
            The unique data for cardholder identification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Ibm3624PinVerification.PinValidationDataPadCharacter">
            <summary>
            Gets and sets the property PinValidationDataPadCharacter. 
            <para>
            The padding character for validation data.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Ibm3624RandomPin">
            <summary>
            Parameters that are required to generate or verify Ibm3624 random PIN.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Ibm3624RandomPin.DecimalizationTable">
            <summary>
            Gets and sets the property DecimalizationTable. 
            <para>
            The decimalization table to use for IBM 3624 PIN algorithm. The table is used to convert
            the algorithm intermediate result from hexadecimal characters to decimal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Ibm3624RandomPin.PinValidationData">
            <summary>
            Gets and sets the property PinValidationData. 
            <para>
            The unique data for cardholder identification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Ibm3624RandomPin.PinValidationDataPadCharacter">
            <summary>
            Gets and sets the property PinValidationDataPadCharacter. 
            <para>
            The padding character for validation data.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            <summary>
            The request processing has failed because of an unknown error, exception, or failure.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.InternalServerException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.InternalServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.InternalServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.InternalServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.InternalServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.AmexAttributesMarshaller">
            <summary>
            AmexAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.AmexAttributesMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.AmexAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.AmexAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.AmexCardSecurityCodeVersion1Marshaller">
            <summary>
            AmexCardSecurityCodeVersion1 Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.AmexCardSecurityCodeVersion1Marshaller.Marshall(Amazon.PaymentCryptographyData.Model.AmexCardSecurityCodeVersion1,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.AmexCardSecurityCodeVersion1Marshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.AmexCardSecurityCodeVersion2Marshaller">
            <summary>
            AmexCardSecurityCodeVersion2 Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.AmexCardSecurityCodeVersion2Marshaller.Marshall(Amazon.PaymentCryptographyData.Model.AmexCardSecurityCodeVersion2,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.AmexCardSecurityCodeVersion2Marshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.AsymmetricEncryptionAttributesMarshaller">
            <summary>
            AsymmetricEncryptionAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.AsymmetricEncryptionAttributesMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.AsymmetricEncryptionAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.AsymmetricEncryptionAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CardGenerationAttributesMarshaller">
            <summary>
            CardGenerationAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CardGenerationAttributesMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.CardGenerationAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CardGenerationAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CardHolderVerificationValueMarshaller">
            <summary>
            CardHolderVerificationValue Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CardHolderVerificationValueMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.CardHolderVerificationValue,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CardHolderVerificationValueMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CardVerificationAttributesMarshaller">
            <summary>
            CardVerificationAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CardVerificationAttributesMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.CardVerificationAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CardVerificationAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CardVerificationValue1Marshaller">
            <summary>
            CardVerificationValue1 Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CardVerificationValue1Marshaller.Marshall(Amazon.PaymentCryptographyData.Model.CardVerificationValue1,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CardVerificationValue1Marshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CardVerificationValue2Marshaller">
            <summary>
            CardVerificationValue2 Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CardVerificationValue2Marshaller.Marshall(Amazon.PaymentCryptographyData.Model.CardVerificationValue2,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CardVerificationValue2Marshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CryptogramAuthResponseMarshaller">
            <summary>
            CryptogramAuthResponse Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CryptogramAuthResponseMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.CryptogramAuthResponse,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CryptogramAuthResponseMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CryptogramVerificationArpcMethod1Marshaller">
            <summary>
            CryptogramVerificationArpcMethod1 Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CryptogramVerificationArpcMethod1Marshaller.Marshall(Amazon.PaymentCryptographyData.Model.CryptogramVerificationArpcMethod1,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CryptogramVerificationArpcMethod1Marshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CryptogramVerificationArpcMethod2Marshaller">
            <summary>
            CryptogramVerificationArpcMethod2 Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CryptogramVerificationArpcMethod2Marshaller.Marshall(Amazon.PaymentCryptographyData.Model.CryptogramVerificationArpcMethod2,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CryptogramVerificationArpcMethod2Marshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CurrentPinAttributesMarshaller">
            <summary>
            CurrentPinAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CurrentPinAttributesMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.CurrentPinAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.CurrentPinAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DecryptDataRequestMarshaller">
            <summary>
            DecryptData Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DecryptDataRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DecryptDataRequestMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.DecryptDataRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DecryptDataRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DecryptDataResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DecryptData operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DecryptDataResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DecryptDataResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DecryptDataResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DerivationMethodAttributesMarshaller">
            <summary>
            DerivationMethodAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DerivationMethodAttributesMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.DerivationMethodAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DerivationMethodAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DiscoverDynamicCardVerificationCodeMarshaller">
            <summary>
            DiscoverDynamicCardVerificationCode Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DiscoverDynamicCardVerificationCodeMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.DiscoverDynamicCardVerificationCode,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DiscoverDynamicCardVerificationCodeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DukptAttributesMarshaller">
            <summary>
            DukptAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DukptAttributesMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.DukptAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DukptAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DukptDerivationAttributesMarshaller">
            <summary>
            DukptDerivationAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DukptDerivationAttributesMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.DukptDerivationAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DukptDerivationAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DukptEncryptionAttributesMarshaller">
            <summary>
            DukptEncryptionAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DukptEncryptionAttributesMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.DukptEncryptionAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DukptEncryptionAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DynamicCardVerificationCodeMarshaller">
            <summary>
            DynamicCardVerificationCode Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DynamicCardVerificationCodeMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.DynamicCardVerificationCode,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DynamicCardVerificationCodeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DynamicCardVerificationValueMarshaller">
            <summary>
            DynamicCardVerificationValue Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DynamicCardVerificationValueMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.DynamicCardVerificationValue,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.DynamicCardVerificationValueMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.EcdhDerivationAttributesMarshaller">
            <summary>
            EcdhDerivationAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.EcdhDerivationAttributesMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.EcdhDerivationAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.EcdhDerivationAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.Emv2000AttributesMarshaller">
            <summary>
            Emv2000Attributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.Emv2000AttributesMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.Emv2000Attributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.Emv2000AttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.EmvCommonAttributesMarshaller">
            <summary>
            EmvCommonAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.EmvCommonAttributesMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.EmvCommonAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.EmvCommonAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.EmvEncryptionAttributesMarshaller">
            <summary>
            EmvEncryptionAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.EmvEncryptionAttributesMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.EmvEncryptionAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.EmvEncryptionAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.EncryptDataRequestMarshaller">
            <summary>
            EncryptData Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.EncryptDataRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.EncryptDataRequestMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.EncryptDataRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.EncryptDataRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.EncryptDataResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EncryptData operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.EncryptDataResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.EncryptDataResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.EncryptDataResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.EncryptionDecryptionAttributesMarshaller">
            <summary>
            EncryptionDecryptionAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.EncryptionDecryptionAttributesMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.EncryptionDecryptionAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.EncryptionDecryptionAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateCardValidationDataRequestMarshaller">
            <summary>
            GenerateCardValidationData Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateCardValidationDataRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateCardValidationDataRequestMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.GenerateCardValidationDataRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateCardValidationDataRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateCardValidationDataResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GenerateCardValidationData operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateCardValidationDataResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateCardValidationDataResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateCardValidationDataResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateMacEmvPinChangeRequestMarshaller">
            <summary>
            GenerateMacEmvPinChange Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateMacEmvPinChangeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateMacEmvPinChangeRequestMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.GenerateMacEmvPinChangeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateMacEmvPinChangeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateMacEmvPinChangeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GenerateMacEmvPinChange operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateMacEmvPinChangeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateMacEmvPinChangeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateMacEmvPinChangeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateMacRequestMarshaller">
            <summary>
            GenerateMac Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateMacRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateMacRequestMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.GenerateMacRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateMacRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateMacResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GenerateMac operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateMacResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateMacResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GenerateMacResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GeneratePinDataRequestMarshaller">
            <summary>
            GeneratePinData Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GeneratePinDataRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GeneratePinDataRequestMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.GeneratePinDataRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GeneratePinDataRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GeneratePinDataResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GeneratePinData operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GeneratePinDataResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GeneratePinDataResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.GeneratePinDataResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.Ibm3624NaturalPinMarshaller">
            <summary>
            Ibm3624NaturalPin Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.Ibm3624NaturalPinMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.Ibm3624NaturalPin,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.Ibm3624NaturalPinMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.Ibm3624PinFromOffsetMarshaller">
            <summary>
            Ibm3624PinFromOffset Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.Ibm3624PinFromOffsetMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.Ibm3624PinFromOffset,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.Ibm3624PinFromOffsetMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.Ibm3624PinOffsetMarshaller">
            <summary>
            Ibm3624PinOffset Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.Ibm3624PinOffsetMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.Ibm3624PinOffset,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.Ibm3624PinOffsetMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.Ibm3624PinVerificationMarshaller">
            <summary>
            Ibm3624PinVerification Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.Ibm3624PinVerificationMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.Ibm3624PinVerification,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.Ibm3624PinVerificationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.Ibm3624RandomPinMarshaller">
            <summary>
            Ibm3624RandomPin Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.Ibm3624RandomPinMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.Ibm3624RandomPin,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.Ibm3624RandomPinMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.MacAlgorithmDukptMarshaller">
            <summary>
            MacAlgorithmDukpt Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.MacAlgorithmDukptMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.MacAlgorithmDukpt,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.MacAlgorithmDukptMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.MacAlgorithmEmvMarshaller">
            <summary>
            MacAlgorithmEmv Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.MacAlgorithmEmvMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.MacAlgorithmEmv,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.MacAlgorithmEmvMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.MacAttributesMarshaller">
            <summary>
            MacAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.MacAttributesMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.MacAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.MacAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.MasterCardAttributesMarshaller">
            <summary>
            MasterCardAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.MasterCardAttributesMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.MasterCardAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.MasterCardAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.PinDataUnmarshaller">
            <summary>
            Response Unmarshaller for PinData Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.PinDataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#PaymentCryptographyData#Model#PinData,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.PinDataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.PinDataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.PinGenerationAttributesMarshaller">
            <summary>
            PinGenerationAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.PinGenerationAttributesMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.PinGenerationAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.PinGenerationAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.PinVerificationAttributesMarshaller">
            <summary>
            PinVerificationAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.PinVerificationAttributesMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.PinVerificationAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.PinVerificationAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ReEncryptDataRequestMarshaller">
            <summary>
            ReEncryptData Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ReEncryptDataRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ReEncryptDataRequestMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.ReEncryptDataRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ReEncryptDataRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ReEncryptDataResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ReEncryptData operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ReEncryptDataResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ReEncryptDataResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ReEncryptDataResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ReEncryptionAttributesMarshaller">
            <summary>
            ReEncryptionAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ReEncryptionAttributesMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.ReEncryptionAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ReEncryptionAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SessionKeyAmexMarshaller">
            <summary>
            SessionKeyAmex Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SessionKeyAmexMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.SessionKeyAmex,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SessionKeyAmexMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SessionKeyDerivationMarshaller">
            <summary>
            SessionKeyDerivation Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SessionKeyDerivationMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.SessionKeyDerivation,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SessionKeyDerivationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SessionKeyDerivationValueMarshaller">
            <summary>
            SessionKeyDerivationValue Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SessionKeyDerivationValueMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.SessionKeyDerivationValue,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SessionKeyDerivationValueMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SessionKeyEmv2000Marshaller">
            <summary>
            SessionKeyEmv2000 Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SessionKeyEmv2000Marshaller.Marshall(Amazon.PaymentCryptographyData.Model.SessionKeyEmv2000,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SessionKeyEmv2000Marshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SessionKeyEmvCommonMarshaller">
            <summary>
            SessionKeyEmvCommon Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SessionKeyEmvCommonMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.SessionKeyEmvCommon,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SessionKeyEmvCommonMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SessionKeyMastercardMarshaller">
            <summary>
            SessionKeyMastercard Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SessionKeyMastercardMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.SessionKeyMastercard,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SessionKeyMastercardMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SessionKeyVisaMarshaller">
            <summary>
            SessionKeyVisa Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SessionKeyVisaMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.SessionKeyVisa,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SessionKeyVisaMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SymmetricEncryptionAttributesMarshaller">
            <summary>
            SymmetricEncryptionAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SymmetricEncryptionAttributesMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.SymmetricEncryptionAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.SymmetricEncryptionAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.TranslatePinDataRequestMarshaller">
            <summary>
            TranslatePinData Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.TranslatePinDataRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.TranslatePinDataRequestMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.TranslatePinDataRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.TranslatePinDataRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.TranslatePinDataResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TranslatePinData operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.TranslatePinDataResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.TranslatePinDataResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.TranslatePinDataResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.TranslationIsoFormatsMarshaller">
            <summary>
            TranslationIsoFormats Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.TranslationIsoFormatsMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.TranslationIsoFormats,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.TranslationIsoFormatsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.TranslationPinDataIsoFormat034Marshaller">
            <summary>
            TranslationPinDataIsoFormat034 Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.TranslationPinDataIsoFormat034Marshaller.Marshall(Amazon.PaymentCryptographyData.Model.TranslationPinDataIsoFormat034,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.TranslationPinDataIsoFormat034Marshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.TranslationPinDataIsoFormat1Marshaller">
            <summary>
            TranslationPinDataIsoFormat1 Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.TranslationPinDataIsoFormat1Marshaller.Marshall(Amazon.PaymentCryptographyData.Model.TranslationPinDataIsoFormat1,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.TranslationPinDataIsoFormat1Marshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ValidationExceptionFieldUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationExceptionField Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ValidationExceptionFieldUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#PaymentCryptographyData#Model#ValidationExceptionField,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ValidationExceptionFieldUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ValidationExceptionFieldUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerificationFailedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for VerificationFailedException Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerificationFailedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerificationFailedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerificationFailedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyAuthRequestCryptogramRequestMarshaller">
            <summary>
            VerifyAuthRequestCryptogram Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyAuthRequestCryptogramRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyAuthRequestCryptogramRequestMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.VerifyAuthRequestCryptogramRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyAuthRequestCryptogramRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyAuthRequestCryptogramResponseUnmarshaller">
            <summary>
            Response Unmarshaller for VerifyAuthRequestCryptogram operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyAuthRequestCryptogramResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyAuthRequestCryptogramResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyAuthRequestCryptogramResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyCardValidationDataRequestMarshaller">
            <summary>
            VerifyCardValidationData Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyCardValidationDataRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyCardValidationDataRequestMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.VerifyCardValidationDataRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyCardValidationDataRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyCardValidationDataResponseUnmarshaller">
            <summary>
            Response Unmarshaller for VerifyCardValidationData operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyCardValidationDataResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyCardValidationDataResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyCardValidationDataResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyMacRequestMarshaller">
            <summary>
            VerifyMac Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyMacRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyMacRequestMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.VerifyMacRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyMacRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyMacResponseUnmarshaller">
            <summary>
            Response Unmarshaller for VerifyMac operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyMacResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyMacResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyMacResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyPinDataRequestMarshaller">
            <summary>
            VerifyPinData Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyPinDataRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyPinDataRequestMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.VerifyPinDataRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyPinDataRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyPinDataResponseUnmarshaller">
            <summary>
            Response Unmarshaller for VerifyPinData operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyPinDataResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyPinDataResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VerifyPinDataResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VisaAmexDerivationOutputsUnmarshaller">
            <summary>
            Response Unmarshaller for VisaAmexDerivationOutputs Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VisaAmexDerivationOutputsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#PaymentCryptographyData#Model#VisaAmexDerivationOutputs,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VisaAmexDerivationOutputsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VisaAmexDerivationOutputsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VisaAttributesMarshaller">
            <summary>
            VisaAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VisaAttributesMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.VisaAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VisaAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VisaPinMarshaller">
            <summary>
            VisaPin Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VisaPinMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.VisaPin,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VisaPinMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VisaPinVerificationMarshaller">
            <summary>
            VisaPinVerification Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VisaPinVerificationMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.VisaPinVerification,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VisaPinVerificationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VisaPinVerificationValueMarshaller">
            <summary>
            VisaPinVerificationValue Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VisaPinVerificationValueMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.VisaPinVerificationValue,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.VisaPinVerificationValueMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.WrappedKeyMarshaller">
            <summary>
            WrappedKey Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.WrappedKeyMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.WrappedKey,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.WrappedKeyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.WrappedKeyMaterialMarshaller">
            <summary>
            WrappedKeyMaterial Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.WrappedKeyMaterialMarshaller.Marshall(Amazon.PaymentCryptographyData.Model.WrappedKeyMaterial,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.Model.Internal.MarshallTransformations.WrappedKeyMaterialMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.MacAlgorithmDukpt">
            <summary>
            Parameters required for DUKPT MAC generation and verification.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.MacAlgorithmDukpt.DukptDerivationType">
            <summary>
            Gets and sets the property DukptDerivationType. 
            <para>
            The key type derived using DUKPT from a Base Derivation Key (BDK) and Key Serial Number
            (KSN). This must be less than or equal to the strength of the BDK. For example, you
            can't use <c>AES_128</c> as a derivation type for a BDK of <c>AES_128</c> or <c>TDES_2KEY</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.MacAlgorithmDukpt.DukptKeyVariant">
            <summary>
            Gets and sets the property DukptKeyVariant. 
            <para>
            The type of use of DUKPT, which can be MAC generation, MAC verification, or both.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.MacAlgorithmDukpt.KeySerialNumber">
            <summary>
            Gets and sets the property KeySerialNumber. 
            <para>
            The unique identifier known as Key Serial Number (KSN) that comes from an encrypting
            device using DUKPT encryption method. The KSN is derived from the encrypting device
            unique identifier and an internal transaction counter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.MacAlgorithmEmv">
            <summary>
            Parameters that are required for EMV MAC generation and verification.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.MacAlgorithmEmv.MajorKeyDerivationMode">
            <summary>
            Gets and sets the property MajorKeyDerivationMode. 
            <para>
            The method to use when deriving the master key for EMV MAC generation or verification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.MacAlgorithmEmv.PanSequenceNumber">
            <summary>
            Gets and sets the property PanSequenceNumber. 
            <para>
            A number that identifies and differentiates payment cards with the same Primary Account
            Number (PAN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.MacAlgorithmEmv.PrimaryAccountNumber">
            <summary>
            Gets and sets the property PrimaryAccountNumber. 
            <para>
            The Primary Account Number (PAN), a unique identifier for a payment credit or debit
            card and associates the card to a specific account holder.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.MacAlgorithmEmv.SessionKeyDerivationMode">
            <summary>
            Gets and sets the property SessionKeyDerivationMode. 
            <para>
            The method of deriving a session key for EMV MAC generation or verification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.MacAlgorithmEmv.SessionKeyDerivationValue">
            <summary>
            Gets and sets the property SessionKeyDerivationValue. 
            <para>
            Parameters that are required to generate session key for EMV generation and verification.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.MacAttributes">
            <summary>
            Parameters that are required for DUKPT, HMAC, or EMV MAC generation or verification.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.MacAttributes.Algorithm">
            <summary>
            Gets and sets the property Algorithm. 
            <para>
            The encryption algorithm for MAC generation or verification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.MacAttributes.DukptCmac">
            <summary>
            Gets and sets the property DukptCmac. 
            <para>
            Parameters that are required for MAC generation or verification using DUKPT CMAC algorithm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.MacAttributes.DukptIso9797Algorithm1">
            <summary>
            Gets and sets the property DukptIso9797Algorithm1. 
            <para>
            Parameters that are required for MAC generation or verification using DUKPT ISO 9797
            algorithm1.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.MacAttributes.DukptIso9797Algorithm3">
            <summary>
            Gets and sets the property DukptIso9797Algorithm3. 
            <para>
            Parameters that are required for MAC generation or verification using DUKPT ISO 9797
            algorithm3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.MacAttributes.EmvMac">
            <summary>
            Gets and sets the property EmvMac. 
            <para>
            Parameters that are required for MAC generation or verification using EMV MAC algorithm.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.MasterCardAttributes">
            <summary>
            Parameters to derive the confidentiality and integrity keys for a Mastercard payment
            card.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.MasterCardAttributes.ApplicationCryptogram">
            <summary>
            Gets and sets the property ApplicationCryptogram. 
            <para>
            The application cryptogram for the current transaction that is provided by the terminal
            during transaction processing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.MasterCardAttributes.MajorKeyDerivationMode">
            <summary>
            Gets and sets the property MajorKeyDerivationMode. 
            <para>
            The method to use when deriving the master key for the payment card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.MasterCardAttributes.PanSequenceNumber">
            <summary>
            Gets and sets the property PanSequenceNumber. 
            <para>
            A number that identifies and differentiates payment cards with the same Primary Account
            Number (PAN). Typically 00 is used, if no value is provided by the terminal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.MasterCardAttributes.PrimaryAccountNumber">
            <summary>
            Gets and sets the property PrimaryAccountNumber. 
            <para>
            The Primary Account Number (PAN) of the cardholder.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.PinData">
            <summary>
            Parameters that are required to generate, translate, or verify PIN data.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.PinData.PinOffset">
            <summary>
            Gets and sets the property PinOffset. 
            <para>
            The PIN offset value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.PinData.VerificationValue">
            <summary>
            Gets and sets the property VerificationValue. 
            <para>
            The unique data to identify a cardholder. In most cases, this is the same as cardholder's
            Primary Account Number (PAN). If a value is not provided, it defaults to PAN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.PinGenerationAttributes">
            <summary>
            Parameters that are required for PIN data generation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.PinGenerationAttributes.Ibm3624NaturalPin">
            <summary>
            Gets and sets the property Ibm3624NaturalPin. 
            <para>
            Parameters that are required to generate or verify Ibm3624 natural PIN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.PinGenerationAttributes.Ibm3624PinFromOffset">
            <summary>
            Gets and sets the property Ibm3624PinFromOffset. 
            <para>
            Parameters that are required to generate or verify Ibm3624 PIN from offset PIN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.PinGenerationAttributes.Ibm3624PinOffset">
            <summary>
            Gets and sets the property Ibm3624PinOffset. 
            <para>
            Parameters that are required to generate or verify Ibm3624 PIN offset PIN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.PinGenerationAttributes.Ibm3624RandomPin">
            <summary>
            Gets and sets the property Ibm3624RandomPin. 
            <para>
            Parameters that are required to generate or verify Ibm3624 random PIN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.PinGenerationAttributes.VisaPin">
            <summary>
            Gets and sets the property VisaPin. 
            <para>
            Parameters that are required to generate or verify Visa PIN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.PinGenerationAttributes.VisaPinVerificationValue">
            <summary>
            Gets and sets the property VisaPinVerificationValue. 
            <para>
            Parameters that are required to generate or verify Visa PIN Verification Value (PVV).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.PinVerificationAttributes">
            <summary>
            Parameters that are required for PIN data verification.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.PinVerificationAttributes.Ibm3624Pin">
            <summary>
            Gets and sets the property Ibm3624Pin. 
            <para>
            Parameters that are required to generate or verify Ibm3624 PIN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.PinVerificationAttributes.VisaPin">
            <summary>
            Gets and sets the property VisaPin. 
            <para>
            Parameters that are required to generate or verify Visa PIN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.ReEncryptDataRequest">
            <summary>
            Container for the parameters to the ReEncryptData operation.
            Re-encrypt ciphertext using DUKPT or Symmetric data encryption keys. 
            
             
            <para>
            You can either generate an encryption key within Amazon Web Services Payment Cryptography
            by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a>
            or import your own encryption key by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>.
            The <c>KeyArn</c> for use with this operation must be in a compatible key state with
            <c>KeyModesOfUse</c> set to <c>Encrypt</c>. 
            </para>
             
            <para>
            This operation also supports dynamic keys, allowing you to pass a dynamic encryption
            key as a TR-31 WrappedKeyBlock. This can be used when key material is frequently rotated,
            such as during every card transaction, and there is need to avoid importing short-lived
            keys into Amazon Web Services Payment Cryptography. To re-encrypt using dynamic keys,
            the <c>keyARN</c> is the Key Encryption Key (KEK) of the TR-31 wrapped encryption
            key material. The incoming wrapped key shall have a key purpose of D0 with a mode
            of use of B or D. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/use-cases-acquirers-dynamickeys.html">Using
            Dynamic Keys</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            </para>
             
            <para>
            For symmetric and DUKPT encryption, Amazon Web Services Payment Cryptography supports
            <c>TDES</c> and <c>AES</c> algorithms. To encrypt using DUKPT, a DUKPT key must already
            exist within your account with <c>KeyModesOfUse</c> set to <c>DeriveKey</c> or a new
            DUKPT can be generated by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a>.
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>DecryptData</a> 
            </para>
             </li> <li> 
            <para>
             <a>EncryptData</a> 
            </para>
             </li> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_GetPublicKeyCertificate.html">GetPublicCertificate</a>
            
            </para>
             </li> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>
            
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.ReEncryptDataRequest.CipherText">
            <summary>
            Gets and sets the property CipherText. 
            <para>
            Ciphertext to be encrypted. The minimum allowed length is 16 bytes and maximum allowed
            length is 4096 bytes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.ReEncryptDataRequest.IncomingEncryptionAttributes">
            <summary>
            Gets and sets the property IncomingEncryptionAttributes. 
            <para>
            The attributes and values for incoming ciphertext.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.ReEncryptDataRequest.IncomingKeyIdentifier">
            <summary>
            Gets and sets the property IncomingKeyIdentifier. 
            <para>
            The <c>keyARN</c> of the encryption key of incoming ciphertext data.
            </para>
             
            <para>
            When a WrappedKeyBlock is provided, this value will be the identifier to the key wrapping
            key. Otherwise, it is the key identifier used to perform the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.ReEncryptDataRequest.IncomingWrappedKey">
            <summary>
            Gets and sets the property IncomingWrappedKey. 
            <para>
            The WrappedKeyBlock containing the encryption key of incoming ciphertext data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.ReEncryptDataRequest.OutgoingEncryptionAttributes">
            <summary>
            Gets and sets the property OutgoingEncryptionAttributes. 
            <para>
            The attributes and values for outgoing ciphertext data after encryption by Amazon
            Web Services Payment Cryptography.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.ReEncryptDataRequest.OutgoingKeyIdentifier">
            <summary>
            Gets and sets the property OutgoingKeyIdentifier. 
            <para>
            The <c>keyARN</c> of the encryption key of outgoing ciphertext data after encryption
            by Amazon Web Services Payment Cryptography.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.ReEncryptDataRequest.OutgoingWrappedKey">
            <summary>
            Gets and sets the property OutgoingWrappedKey. 
            <para>
            The WrappedKeyBlock containing the encryption key of outgoing ciphertext data after
            encryption by Amazon Web Services Payment Cryptography.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.ReEncryptDataResponse">
            <summary>
            This is the response object from the ReEncryptData operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.ReEncryptDataResponse.CipherText">
            <summary>
            Gets and sets the property CipherText. 
            <para>
            The encrypted ciphertext.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.ReEncryptDataResponse.KeyArn">
            <summary>
            Gets and sets the property KeyArn. 
            <para>
            The keyARN (Amazon Resource Name) of the encryption key that Amazon Web Services Payment
            Cryptography uses for plaintext encryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.ReEncryptDataResponse.KeyCheckValue">
            <summary>
            Gets and sets the property KeyCheckValue. 
            <para>
            The key check value (KCV) of the encryption key. The KCV is used to check if all parties
            holding a given key have the same key or to detect that a key has changed.
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography computes the KCV according to the CMAC specification.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.ReEncryptionAttributes">
            <summary>
            Parameters that are required to perform reencryption operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.ReEncryptionAttributes.Dukpt">
            <summary>
            Gets and sets the property Dukpt.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.ReEncryptionAttributes.Symmetric">
            <summary>
            Gets and sets the property Symmetric. 
            <para>
            Parameters that are required to encrypt data using symmetric keys.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            <summary>
            The request was denied due to an invalid resource error.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException.ResourceId">
            <summary>
            Gets and sets the property ResourceId. 
            <para>
            The resource that is missing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.SessionKeyAmex">
            <summary>
            Parameters to derive session key for an Amex payment card.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SessionKeyAmex.PanSequenceNumber">
            <summary>
            Gets and sets the property PanSequenceNumber. 
            <para>
            A number that identifies and differentiates payment cards with the same Primary Account
            Number (PAN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SessionKeyAmex.PrimaryAccountNumber">
            <summary>
            Gets and sets the property PrimaryAccountNumber. 
            <para>
            The Primary Account Number (PAN) of the cardholder. A PAN is a unique identifier for
            a payment credit or debit card and associates the card to a specific account holder.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.SessionKeyDerivation">
            <summary>
            Parameters to derive a session key for Authorization Response Cryptogram (ARQC) verification.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SessionKeyDerivation.Amex">
            <summary>
            Gets and sets the property Amex. 
            <para>
            Parameters to derive session key for an Amex payment card for ARQC verification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SessionKeyDerivation.Emv2000">
            <summary>
            Gets and sets the property Emv2000. 
            <para>
            Parameters to derive session key for an Emv2000 payment card for ARQC verification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SessionKeyDerivation.EmvCommon">
            <summary>
            Gets and sets the property EmvCommon. 
            <para>
            Parameters to derive session key for an Emv common payment card for ARQC verification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SessionKeyDerivation.Mastercard">
            <summary>
            Gets and sets the property Mastercard. 
            <para>
            Parameters to derive session key for a Mastercard payment card for ARQC verification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SessionKeyDerivation.Visa">
            <summary>
            Gets and sets the property Visa. 
            <para>
            Parameters to derive session key for a Visa payment cardfor ARQC verification.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.SessionKeyDerivationValue">
            <summary>
            Parameters to derive session key value using a MAC EMV algorithm.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SessionKeyDerivationValue.ApplicationCryptogram">
            <summary>
            Gets and sets the property ApplicationCryptogram. 
            <para>
            The cryptogram provided by the terminal during transaction processing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SessionKeyDerivationValue.ApplicationTransactionCounter">
            <summary>
            Gets and sets the property ApplicationTransactionCounter. 
            <para>
            The transaction counter that is provided by the terminal during transaction processing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.SessionKeyEmv2000">
            <summary>
            Parameters to derive session key for an Emv2000 payment card for ARQC verification.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SessionKeyEmv2000.ApplicationTransactionCounter">
            <summary>
            Gets and sets the property ApplicationTransactionCounter. 
            <para>
            The transaction counter that is provided by the terminal during transaction processing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SessionKeyEmv2000.PanSequenceNumber">
            <summary>
            Gets and sets the property PanSequenceNumber. 
            <para>
            A number that identifies and differentiates payment cards with the same Primary Account
            Number (PAN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SessionKeyEmv2000.PrimaryAccountNumber">
            <summary>
            Gets and sets the property PrimaryAccountNumber. 
            <para>
            The Primary Account Number (PAN) of the cardholder. A PAN is a unique identifier for
            a payment credit or debit card and associates the card to a specific account holder.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.SessionKeyEmvCommon">
            <summary>
            Parameters to derive session key for an Emv common payment card for ARQC verification.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SessionKeyEmvCommon.ApplicationTransactionCounter">
            <summary>
            Gets and sets the property ApplicationTransactionCounter. 
            <para>
            The transaction counter that is provided by the terminal during transaction processing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SessionKeyEmvCommon.PanSequenceNumber">
            <summary>
            Gets and sets the property PanSequenceNumber. 
            <para>
            A number that identifies and differentiates payment cards with the same Primary Account
            Number (PAN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SessionKeyEmvCommon.PrimaryAccountNumber">
            <summary>
            Gets and sets the property PrimaryAccountNumber. 
            <para>
            The Primary Account Number (PAN) of the cardholder. A PAN is a unique identifier for
            a payment credit or debit card and associates the card to a specific account holder.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.SessionKeyMastercard">
            <summary>
            Parameters to derive session key for Mastercard payment card for ARQC verification.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SessionKeyMastercard.ApplicationTransactionCounter">
            <summary>
            Gets and sets the property ApplicationTransactionCounter. 
            <para>
            The transaction counter that is provided by the terminal during transaction processing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SessionKeyMastercard.PanSequenceNumber">
            <summary>
            Gets and sets the property PanSequenceNumber. 
            <para>
            A number that identifies and differentiates payment cards with the same Primary Account
            Number (PAN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SessionKeyMastercard.PrimaryAccountNumber">
            <summary>
            Gets and sets the property PrimaryAccountNumber. 
            <para>
            The Primary Account Number (PAN) of the cardholder. A PAN is a unique identifier for
            a payment credit or debit card and associates the card to a specific account holder.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SessionKeyMastercard.UnpredictableNumber">
            <summary>
            Gets and sets the property UnpredictableNumber. 
            <para>
            A random number generated by the issuer.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.SessionKeyVisa">
            <summary>
            Parameters to derive session key for Visa payment card for ARQC verification.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SessionKeyVisa.PanSequenceNumber">
            <summary>
            Gets and sets the property PanSequenceNumber. 
            <para>
            A number that identifies and differentiates payment cards with the same Primary Account
            Number (PAN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SessionKeyVisa.PrimaryAccountNumber">
            <summary>
            Gets and sets the property PrimaryAccountNumber. 
            <para>
            The Primary Account Number (PAN) of the cardholder. A PAN is a unique identifier for
            a payment credit or debit card and associates the card to a specific account holder.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.SymmetricEncryptionAttributes">
            <summary>
            Parameters requried to encrypt plaintext data using symmetric keys.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SymmetricEncryptionAttributes.InitializationVector">
            <summary>
            Gets and sets the property InitializationVector. 
            <para>
            An input used to provide the intial state. If no value is provided, Amazon Web Services
            Payment Cryptography defaults it to zero.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SymmetricEncryptionAttributes.Mode">
            <summary>
            Gets and sets the property Mode. 
            <para>
            The block cipher method to use for encryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.SymmetricEncryptionAttributes.PaddingType">
            <summary>
            Gets and sets the property PaddingType. 
            <para>
            The padding to be included with the data.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            <summary>
            The request was denied due to request throttling.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.TranslatePinDataRequest">
            <summary>
            Container for the parameters to the TranslatePinData operation.
            Translates encrypted PIN block from and to ISO 9564 formats 0,1,3,4. For more information,
            see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/translate-pin-data.html">Translate
            PIN data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            PIN block translation involves changing a PIN block from one encryption key to another
            and optionally change its format. PIN block translation occurs entirely within the
            HSM boundary and PIN data never enters or leaves Amazon Web Services Payment Cryptography
            in clear text. The encryption key transformation can be from PEK (Pin Encryption Key)
            to BDK (Base Derivation Key) for DUKPT or from BDK for DUKPT to PEK.
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography also supports use of dynamic keys and ECDH
            (Elliptic Curve Diffie-Hellman) based key exchange for this operation.
            </para>
             
            <para>
            Dynamic keys allow you to pass a PEK as a TR-31 WrappedKeyBlock. They can be used
            when key material is frequently rotated, such as during every card transaction, and
            there is need to avoid importing short-lived keys into Amazon Web Services Payment
            Cryptography. To translate PIN block using dynamic keys, the <c>keyARN</c> is the
            Key Encryption Key (KEK) of the TR-31 wrapped PEK. The incoming wrapped key shall
            have a key purpose of P0 with a mode of use of B or D. For more information, see <a
            href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/use-cases-acquirers-dynamickeys.html">Using
            Dynamic Keys</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            </para>
             
            <para>
            Using ECDH key exchange, you can receive cardholder selectable PINs into Amazon Web
            Services Payment Cryptography. The ECDH derived key protects the incoming PIN block,
            which is translated to a PEK encrypted PIN block for use within the service. You can
            also use ECDH for reveal PIN, wherein the service translates the PIN block from PEK
            to a ECDH derived encryption key. For more information on establishing ECDH derived
            keys, see the <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/create-keys.html">Generating
            keys</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            </para>
             
            <para>
            The allowed combinations of PIN block format translations are guided by PCI. It is
            important to note that not all encrypted PIN block formats (example, format 1) require
            PAN (Primary Account Number) as input. And as such, PIN block format that requires
            PAN (example, formats 0,3,4) cannot be translated to a format (format 1) that does
            not require a PAN for generation. 
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>.
            </para>
             <note> 
            <para>
            Amazon Web Services Payment Cryptography currently supports ISO PIN block 4 translation
            for PIN block built using legacy PAN length. That is, PAN is the right most 12 digits
            excluding the check digits.
            </para>
             </note> 
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>GeneratePinData</a> 
            </para>
             </li> <li> 
            <para>
             <a>VerifyPinData</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.TranslatePinDataRequest.EncryptedPinBlock">
            <summary>
            Gets and sets the property EncryptedPinBlock. 
            <para>
            The encrypted PIN block data that Amazon Web Services Payment Cryptography translates.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.TranslatePinDataRequest.IncomingDukptAttributes">
            <summary>
            Gets and sets the property IncomingDukptAttributes. 
            <para>
            The attributes and values to use for incoming DUKPT encryption key for PIN block translation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.TranslatePinDataRequest.IncomingKeyIdentifier">
            <summary>
            Gets and sets the property IncomingKeyIdentifier. 
            <para>
            The <c>keyARN</c> of the encryption key under which incoming PIN block data is encrypted.
            This key type can be PEK or BDK.
            </para>
             
            <para>
            For dynamic keys, it is the <c>keyARN</c> of KEK of the TR-31 wrapped PEK. For ECDH,
            it is the <c>keyARN</c> of the asymmetric ECC key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.TranslatePinDataRequest.IncomingTranslationAttributes">
            <summary>
            Gets and sets the property IncomingTranslationAttributes. 
            <para>
            The format of the incoming PIN block data for translation within Amazon Web Services
            Payment Cryptography.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.TranslatePinDataRequest.IncomingWrappedKey">
            <summary>
            Gets and sets the property IncomingWrappedKey. 
            <para>
            The WrappedKeyBlock containing the encryption key under which incoming PIN block data
            is encrypted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.TranslatePinDataRequest.OutgoingDukptAttributes">
            <summary>
            Gets and sets the property OutgoingDukptAttributes. 
            <para>
            The attributes and values to use for outgoing DUKPT encryption key after PIN block
            translation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.TranslatePinDataRequest.OutgoingKeyIdentifier">
            <summary>
            Gets and sets the property OutgoingKeyIdentifier. 
            <para>
            The <c>keyARN</c> of the encryption key for encrypting outgoing PIN block data. This
            key type can be PEK or BDK.
            </para>
             
            <para>
            For ECDH, it is the <c>keyARN</c> of the asymmetric ECC key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.TranslatePinDataRequest.OutgoingTranslationAttributes">
            <summary>
            Gets and sets the property OutgoingTranslationAttributes. 
            <para>
            The format of the outgoing PIN block data after translation by Amazon Web Services
            Payment Cryptography.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.TranslatePinDataRequest.OutgoingWrappedKey">
            <summary>
            Gets and sets the property OutgoingWrappedKey. 
            <para>
            The WrappedKeyBlock containing the encryption key for encrypting outgoing PIN block
            data.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.TranslatePinDataResponse">
            <summary>
            This is the response object from the TranslatePinData operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.TranslatePinDataResponse.KeyArn">
            <summary>
            Gets and sets the property KeyArn. 
            <para>
            The <c>keyARN</c> of the encryption key that Amazon Web Services Payment Cryptography
            uses to encrypt outgoing PIN block data after translation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.TranslatePinDataResponse.KeyCheckValue">
            <summary>
            Gets and sets the property KeyCheckValue. 
            <para>
            The key check value (KCV) of the encryption key. The KCV is used to check if all parties
            holding a given key have the same key or to detect that a key has changed.
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography computes the KCV according to the CMAC specification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.TranslatePinDataResponse.PinBlock">
            <summary>
            Gets and sets the property PinBlock. 
            <para>
            The outgoing encrypted PIN block data after translation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.TranslationIsoFormats">
            <summary>
            Parameters that are required for translation between ISO9564 PIN block formats 0,1,3,4.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.TranslationIsoFormats.IsoFormat0">
            <summary>
            Gets and sets the property IsoFormat0. 
            <para>
            Parameters that are required for ISO9564 PIN format 0 tranlation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.TranslationIsoFormats.IsoFormat1">
            <summary>
            Gets and sets the property IsoFormat1. 
            <para>
            Parameters that are required for ISO9564 PIN format 1 tranlation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.TranslationIsoFormats.IsoFormat3">
            <summary>
            Gets and sets the property IsoFormat3. 
            <para>
            Parameters that are required for ISO9564 PIN format 3 tranlation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.TranslationIsoFormats.IsoFormat4">
            <summary>
            Gets and sets the property IsoFormat4. 
            <para>
            Parameters that are required for ISO9564 PIN format 4 tranlation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.TranslationPinDataIsoFormat034">
            <summary>
            Parameters that are required for tranlation between ISO9564 PIN format 0,3,4 tranlation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.TranslationPinDataIsoFormat034.PrimaryAccountNumber">
            <summary>
            Gets and sets the property PrimaryAccountNumber. 
            <para>
            The Primary Account Number (PAN) of the cardholder. A PAN is a unique identifier for
            a payment credit or debit card and associates the card to a specific account holder.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.TranslationPinDataIsoFormat1">
            <summary>
            Parameters that are required for ISO9564 PIN format 1 tranlation.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            <summary>
            The request was denied due to an invalid request error.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.ValidationException.FieldList">
            <summary>
            Gets and sets the property FieldList. 
            <para>
            The request was denied due to an invalid request error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.ValidationExceptionField">
            <summary>
            The request was denied due to an invalid request error.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.ValidationExceptionField.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The request was denied due to an invalid request error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.ValidationExceptionField.Path">
            <summary>
            Gets and sets the property Path. 
            <para>
            The request was denied due to an invalid request error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.VerificationFailedException">
            <summary>
            This request failed verification.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.VerificationFailedException.#ctor(System.String)">
            <summary>
            Constructs a new VerificationFailedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.VerificationFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of VerificationFailedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.VerificationFailedException.#ctor(System.Exception)">
            <summary>
            Construct instance of VerificationFailedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.VerificationFailedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of VerificationFailedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.Model.VerificationFailedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of VerificationFailedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerificationFailedException.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            The reason for the exception.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.VerifyAuthRequestCryptogramRequest">
            <summary>
            Container for the parameters to the VerifyAuthRequestCryptogram operation.
            Verifies Authorization Request Cryptogram (ARQC) for a EMV chip payment card authorization.
            For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/data-operations.verifyauthrequestcryptogram.html">Verify
            auth request cryptogram</a> in the <i>Amazon Web Services Payment Cryptography User
            Guide</i>.
            
             
            <para>
            ARQC generation is done outside of Amazon Web Services Payment Cryptography and is
            typically generated on a point of sale terminal for an EMV chip card to obtain payment
            authorization during transaction time. For ARQC verification, you must first import
            the ARQC generated outside of Amazon Web Services Payment Cryptography by calling
            <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>.
            This operation uses the imported ARQC and an major encryption key (DUKPT) created
            by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a>
            to either provide a boolean ARQC verification result or provide an APRC (Authorization
            Response Cryptogram) response using Method 1 or Method 2. The <c>ARPC_METHOD_1</c>
            uses <c>AuthResponseCode</c> to generate ARPC and <c>ARPC_METHOD_2</c> uses <c>CardStatusUpdate</c>
            to generate ARPC. 
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>.
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>VerifyCardValidationData</a> 
            </para>
             </li> <li> 
            <para>
             <a>VerifyPinData</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyAuthRequestCryptogramRequest.AuthRequestCryptogram">
            <summary>
            Gets and sets the property AuthRequestCryptogram. 
            <para>
            The auth request cryptogram imported into Amazon Web Services Payment Cryptography
            for ARQC verification using a major encryption key and transaction data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyAuthRequestCryptogramRequest.AuthResponseAttributes">
            <summary>
            Gets and sets the property AuthResponseAttributes. 
            <para>
            The attributes and values for auth request cryptogram verification. These parameters
            are required in case using ARPC Method 1 or Method 2 for ARQC verification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyAuthRequestCryptogramRequest.KeyIdentifier">
            <summary>
            Gets and sets the property KeyIdentifier. 
            <para>
            The <c>keyARN</c> of the major encryption key that Amazon Web Services Payment Cryptography
            uses for ARQC verification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyAuthRequestCryptogramRequest.MajorKeyDerivationMode">
            <summary>
            Gets and sets the property MajorKeyDerivationMode. 
            <para>
            The method to use when deriving the major encryption key for ARQC verification within
            Amazon Web Services Payment Cryptography. The same key derivation mode was used for
            ARQC generation outside of Amazon Web Services Payment Cryptography.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyAuthRequestCryptogramRequest.SessionKeyDerivationAttributes">
            <summary>
            Gets and sets the property SessionKeyDerivationAttributes. 
            <para>
            The attributes and values to use for deriving a session key for ARQC verification
            within Amazon Web Services Payment Cryptography. The same attributes were used for
            ARQC generation outside of Amazon Web Services Payment Cryptography.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyAuthRequestCryptogramRequest.TransactionData">
            <summary>
            Gets and sets the property TransactionData. 
            <para>
            The transaction data that Amazon Web Services Payment Cryptography uses for ARQC verification.
            The same transaction is used for ARQC generation outside of Amazon Web Services Payment
            Cryptography.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.VerifyAuthRequestCryptogramResponse">
            <summary>
            This is the response object from the VerifyAuthRequestCryptogram operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyAuthRequestCryptogramResponse.AuthResponseValue">
            <summary>
            Gets and sets the property AuthResponseValue. 
            <para>
            The result for ARQC verification or ARPC generation within Amazon Web Services Payment
            Cryptography.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyAuthRequestCryptogramResponse.KeyArn">
            <summary>
            Gets and sets the property KeyArn. 
            <para>
            The <c>keyARN</c> of the major encryption key that Amazon Web Services Payment Cryptography
            uses for ARQC verification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyAuthRequestCryptogramResponse.KeyCheckValue">
            <summary>
            Gets and sets the property KeyCheckValue. 
            <para>
            The key check value (KCV) of the encryption key. The KCV is used to check if all parties
            holding a given key have the same key or to detect that a key has changed.
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography computes the KCV according to the CMAC specification.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.VerifyCardValidationDataRequest">
            <summary>
            Container for the parameters to the VerifyCardValidationData operation.
            Verifies card-related validation data using algorithms such as Card Verification Values
            (CVV/CVV2), Dynamic Card Verification Values (dCVV/dCVV2) and Card Security Codes
            (CSC). For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/verify-card-data.html">Verify
            card data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            This operation validates the CVV or CSC codes that is printed on a payment credit
            or debit card during card payment transaction. The input values are typically provided
            as part of an inbound transaction to an issuer or supporting platform partner. Amazon
            Web Services Payment Cryptography uses CVV or CSC, PAN (Primary Account Number) and
            expiration date of the card to check its validity during transaction processing. In
            this operation, the CVK (Card Verification Key) encryption key for use with card data
            verification is same as the one in used for <a>GenerateCardValidationData</a>. 
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>GenerateCardValidationData</a> 
            </para>
             </li> <li> 
            <para>
             <a>VerifyAuthRequestCryptogram</a> 
            </para>
             </li> <li> 
            <para>
             <a>VerifyPinData</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyCardValidationDataRequest.KeyIdentifier">
            <summary>
            Gets and sets the property KeyIdentifier. 
            <para>
            The <c>keyARN</c> of the CVK encryption key that Amazon Web Services Payment Cryptography
            uses to verify card data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyCardValidationDataRequest.PrimaryAccountNumber">
            <summary>
            Gets and sets the property PrimaryAccountNumber. 
            <para>
            The Primary Account Number (PAN), a unique identifier for a payment credit or debit
            card that associates the card with a specific account holder.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyCardValidationDataRequest.ValidationData">
            <summary>
            Gets and sets the property ValidationData. 
            <para>
            The CVV or CSC value for use for card data verification within Amazon Web Services
            Payment Cryptography.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyCardValidationDataRequest.VerificationAttributes">
            <summary>
            Gets and sets the property VerificationAttributes. 
            <para>
            The algorithm to use for verification of card data within Amazon Web Services Payment
            Cryptography.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.VerifyCardValidationDataResponse">
            <summary>
            This is the response object from the VerifyCardValidationData operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyCardValidationDataResponse.KeyArn">
            <summary>
            Gets and sets the property KeyArn. 
            <para>
            The <c>keyARN</c> of the CVK encryption key that Amazon Web Services Payment Cryptography
            uses to verify CVV or CSC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyCardValidationDataResponse.KeyCheckValue">
            <summary>
            Gets and sets the property KeyCheckValue. 
            <para>
            The key check value (KCV) of the encryption key. The KCV is used to check if all parties
            holding a given key have the same key or to detect that a key has changed.
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography computes the KCV according to the CMAC specification.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.VerifyMacRequest">
            <summary>
            Container for the parameters to the VerifyMac operation.
            Verifies a Message Authentication Code (MAC). 
            
             
            <para>
            You can use this operation to verify MAC for message data authentication such as .
            In this operation, you must use the same message data, secret encryption key and MAC
            algorithm that was used to generate MAC. You can use this operation to verify a DUPKT,
            CMAC, HMAC or EMV MAC by setting generation attributes and algorithm to the associated
            values. 
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>GenerateMac</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyMacRequest.KeyIdentifier">
            <summary>
            Gets and sets the property KeyIdentifier. 
            <para>
            The <c>keyARN</c> of the encryption key that Amazon Web Services Payment Cryptography
            uses to verify MAC data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyMacRequest.Mac">
            <summary>
            Gets and sets the property Mac. 
            <para>
            The MAC being verified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyMacRequest.MacLength">
            <summary>
            Gets and sets the property MacLength. 
            <para>
            The length of the MAC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyMacRequest.MessageData">
            <summary>
            Gets and sets the property MessageData. 
            <para>
            The data on for which MAC is under verification. This value must be hexBinary.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyMacRequest.VerificationAttributes">
            <summary>
            Gets and sets the property VerificationAttributes. 
            <para>
            The attributes and data values to use for MAC verification within Amazon Web Services
            Payment Cryptography.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.VerifyMacResponse">
            <summary>
            This is the response object from the VerifyMac operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyMacResponse.KeyArn">
            <summary>
            Gets and sets the property KeyArn. 
            <para>
            The <c>keyARN</c> of the encryption key that Amazon Web Services Payment Cryptography
            uses for MAC verification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyMacResponse.KeyCheckValue">
            <summary>
            Gets and sets the property KeyCheckValue. 
            <para>
            The key check value (KCV) of the encryption key. The KCV is used to check if all parties
            holding a given key have the same key or to detect that a key has changed.
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography computes the KCV according to the CMAC specification.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.VerifyPinDataRequest">
            <summary>
            Container for the parameters to the VerifyPinData operation.
            Verifies pin-related data such as PIN and PIN Offset using algorithms including VISA
            PVV and IBM3624. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/verify-pin-data.html">Verify
            PIN data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            This operation verifies PIN data for user payment card. A card holder PIN data is
            never transmitted in clear to or from Amazon Web Services Payment Cryptography. This
            operation uses PIN Verification Key (PVK) for PIN or PIN Offset generation and then
            encrypts it using PIN Encryption Key (PEK) to create an <c>EncryptedPinBlock</c> for
            transmission from Amazon Web Services Payment Cryptography. 
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>GeneratePinData</a> 
            </para>
             </li> <li> 
            <para>
             <a>TranslatePinData</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyPinDataRequest.DukptAttributes">
            <summary>
            Gets and sets the property DukptAttributes. 
            <para>
            The attributes and values for the DUKPT encrypted PIN block data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyPinDataRequest.EncryptedPinBlock">
            <summary>
            Gets and sets the property EncryptedPinBlock. 
            <para>
            The encrypted PIN block data that Amazon Web Services Payment Cryptography verifies.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyPinDataRequest.EncryptionKeyIdentifier">
            <summary>
            Gets and sets the property EncryptionKeyIdentifier. 
            <para>
            The <c>keyARN</c> of the encryption key under which the PIN block data is encrypted.
            This key type can be PEK or BDK.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyPinDataRequest.EncryptionWrappedKey">
            <summary>
            Gets and sets the property EncryptionWrappedKey.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyPinDataRequest.PinBlockFormat">
            <summary>
            Gets and sets the property PinBlockFormat. 
            <para>
            The PIN encoding format for pin data generation as specified in ISO 9564. Amazon Web
            Services Payment Cryptography supports <c>ISO_Format_0</c> and <c>ISO_Format_3</c>.
            </para>
             
            <para>
            The <c>ISO_Format_0</c> PIN block format is equivalent to the ANSI X9.8, VISA-1, and
            ECI-1 PIN block formats. It is similar to a VISA-4 PIN block format. It supports a
            PIN from 4 to 12 digits in length.
            </para>
             
            <para>
            The <c>ISO_Format_3</c> PIN block format is the same as <c>ISO_Format_0</c> except
            that the fill digits are random values from 10 to 15.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyPinDataRequest.PinDataLength">
            <summary>
            Gets and sets the property PinDataLength. 
            <para>
            The length of PIN being verified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyPinDataRequest.PrimaryAccountNumber">
            <summary>
            Gets and sets the property PrimaryAccountNumber. 
            <para>
            The Primary Account Number (PAN), a unique identifier for a payment credit or debit
            card that associates the card with a specific account holder.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyPinDataRequest.VerificationAttributes">
            <summary>
            Gets and sets the property VerificationAttributes. 
            <para>
            The attributes and values for PIN data verification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyPinDataRequest.VerificationKeyIdentifier">
            <summary>
            Gets and sets the property VerificationKeyIdentifier. 
            <para>
            The <c>keyARN</c> of the PIN verification key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.VerifyPinDataResponse">
            <summary>
            This is the response object from the VerifyPinData operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyPinDataResponse.EncryptionKeyArn">
            <summary>
            Gets and sets the property EncryptionKeyArn. 
            <para>
            The <c>keyARN</c> of the PEK that Amazon Web Services Payment Cryptography uses for
            encrypted pin block generation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyPinDataResponse.EncryptionKeyCheckValue">
            <summary>
            Gets and sets the property EncryptionKeyCheckValue. 
            <para>
            The key check value (KCV) of the encryption key. The KCV is used to check if all parties
            holding a given key have the same key or to detect that a key has changed.
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography computes the KCV according to the CMAC specification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyPinDataResponse.VerificationKeyArn">
            <summary>
            Gets and sets the property VerificationKeyArn. 
            <para>
            The <c>keyARN</c> of the PIN encryption key that Amazon Web Services Payment Cryptography
            uses for PIN or PIN Offset verification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VerifyPinDataResponse.VerificationKeyCheckValue">
            <summary>
            Gets and sets the property VerificationKeyCheckValue. 
            <para>
            The key check value (KCV) of the encryption key. The KCV is used to check if all parties
            holding a given key have the same key or to detect that a key has changed.
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography computes the KCV according to the CMAC specification.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.VisaAmexDerivationOutputs">
            <summary>
            The attributes values used for Amex and Visa derivation methods.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VisaAmexDerivationOutputs.AuthorizationRequestKeyArn">
            <summary>
            Gets and sets the property AuthorizationRequestKeyArn. 
            <para>
            The <c>keyArn</c> of the issuer master key for cryptogram (IMK-AC) used by the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VisaAmexDerivationOutputs.AuthorizationRequestKeyCheckValue">
            <summary>
            Gets and sets the property AuthorizationRequestKeyCheckValue. 
            <para>
            The key check value (KCV) of the issuer master key for cryptogram (IMK-AC) used by
            the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VisaAmexDerivationOutputs.CurrentPinPekArn">
            <summary>
            Gets and sets the property CurrentPinPekArn. 
            <para>
            The <c>keyArn</c> of the current PIN PEK.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VisaAmexDerivationOutputs.CurrentPinPekKeyCheckValue">
            <summary>
            Gets and sets the property CurrentPinPekKeyCheckValue. 
            <para>
            The key check value (KCV) of the current PIN PEK.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.VisaAttributes">
            <summary>
            Parameters to derive the confidentiality and integrity keys for a Visa payment card.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VisaAttributes.ApplicationTransactionCounter">
            <summary>
            Gets and sets the property ApplicationTransactionCounter. 
            <para>
            The transaction counter of the current transaction that is provided by the terminal
            during transaction processing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VisaAttributes.AuthorizationRequestKeyIdentifier">
            <summary>
            Gets and sets the property AuthorizationRequestKeyIdentifier. 
            <para>
            The <c>keyArn</c> of the issuer master key for cryptogram (IMK-AC) for the payment
            card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VisaAttributes.CurrentPinAttributes">
            <summary>
            Gets and sets the property CurrentPinAttributes. 
            <para>
            The encrypted pinblock of the old pin stored on the chip card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VisaAttributes.MajorKeyDerivationMode">
            <summary>
            Gets and sets the property MajorKeyDerivationMode. 
            <para>
            The method to use when deriving the master key for the payment card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VisaAttributes.PanSequenceNumber">
            <summary>
            Gets and sets the property PanSequenceNumber. 
            <para>
            A number that identifies and differentiates payment cards with the same Primary Account
            Number (PAN). Typically 00 is used, if no value is provided by the terminal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VisaAttributes.PrimaryAccountNumber">
            <summary>
            Gets and sets the property PrimaryAccountNumber. 
            <para>
            The Primary Account Number (PAN) of the cardholder.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.VisaPin">
            <summary>
            Parameters that are required to generate or verify Visa PIN.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VisaPin.PinVerificationKeyIndex">
            <summary>
            Gets and sets the property PinVerificationKeyIndex. 
            <para>
            The value for PIN verification index. It is used in the Visa PIN algorithm to calculate
            the PVV (PIN Verification Value).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.VisaPinVerification">
            <summary>
            Parameters that are required to generate or verify Visa PIN.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VisaPinVerification.PinVerificationKeyIndex">
            <summary>
            Gets and sets the property PinVerificationKeyIndex. 
            <para>
            The value for PIN verification index. It is used in the Visa PIN algorithm to calculate
            the PVV (PIN Verification Value).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VisaPinVerification.VerificationValue">
            <summary>
            Gets and sets the property VerificationValue. 
            <para>
            Parameters that are required to generate or verify Visa PVV (PIN Verification Value).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.VisaPinVerificationValue">
            <summary>
            Parameters that are required to generate or verify Visa PVV (PIN Verification Value).
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VisaPinVerificationValue.EncryptedPinBlock">
            <summary>
            Gets and sets the property EncryptedPinBlock. 
            <para>
            The encrypted PIN block data to verify.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.VisaPinVerificationValue.PinVerificationKeyIndex">
            <summary>
            Gets and sets the property PinVerificationKeyIndex. 
            <para>
            The value for PIN verification index. It is used in the Visa PIN algorithm to calculate
            the PVV (PIN Verification Value).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.WrappedKey">
            <summary>
            Parameter information of a WrappedKeyBlock for encryption key exchange.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.WrappedKey.KeyCheckValueAlgorithm">
            <summary>
            Gets and sets the property KeyCheckValueAlgorithm. 
            <para>
            The algorithm that Amazon Web Services Payment Cryptography uses to calculate the
            key check value (KCV). It is used to validate the key integrity.
            </para>
             
            <para>
            For TDES keys, the KCV is computed by encrypting 8 bytes, each with value of zero,
            with the key to be checked and retaining the 3 highest order bytes of the encrypted
            result. For AES keys, the KCV is computed using a CMAC algorithm where the input data
            is 16 bytes of zero and retaining the 3 highest order bytes of the encrypted result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.WrappedKey.WrappedKeyMaterial">
            <summary>
            Gets and sets the property WrappedKeyMaterial. 
            <para>
            Parameter information of a WrappedKeyBlock for encryption key exchange.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.Model.WrappedKeyMaterial">
            <summary>
            Parameter information of a WrappedKeyBlock for encryption key exchange.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.WrappedKeyMaterial.DiffieHellmanSymmetricKey">
            <summary>
            Gets and sets the property DiffieHellmanSymmetricKey. 
            <para>
            The parameter information for deriving a ECDH shared key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.Model.WrappedKeyMaterial.Tr31KeyBlock">
            <summary>
            Gets and sets the property Tr31KeyBlock. 
            <para>
            The TR-31 wrapped key block.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataRequest">
            <summary>
            Base class for PaymentCryptographyData operation requests.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.DukptDerivationType">
            <summary>
            Constants used for properties of type DukptDerivationType.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.DukptDerivationType.AES_128">
            <summary>
            Constant AES_128 for DukptDerivationType
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.DukptDerivationType.AES_192">
            <summary>
            Constant AES_192 for DukptDerivationType
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.DukptDerivationType.AES_256">
            <summary>
            Constant AES_256 for DukptDerivationType
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.DukptDerivationType.TDES_2KEY">
            <summary>
            Constant TDES_2KEY for DukptDerivationType
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.DukptDerivationType.TDES_3KEY">
            <summary>
            Constant TDES_3KEY for DukptDerivationType
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.DukptDerivationType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.DukptDerivationType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.DukptDerivationType.op_Implicit(System.String)~Amazon.PaymentCryptographyData.DukptDerivationType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.DukptEncryptionMode">
            <summary>
            Constants used for properties of type DukptEncryptionMode.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.DukptEncryptionMode.CBC">
            <summary>
            Constant CBC for DukptEncryptionMode
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.DukptEncryptionMode.ECB">
            <summary>
            Constant ECB for DukptEncryptionMode
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.DukptEncryptionMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.DukptEncryptionMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.DukptEncryptionMode.op_Implicit(System.String)~Amazon.PaymentCryptographyData.DukptEncryptionMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.DukptKeyVariant">
            <summary>
            Constants used for properties of type DukptKeyVariant.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.DukptKeyVariant.BIDIRECTIONAL">
            <summary>
            Constant BIDIRECTIONAL for DukptKeyVariant
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.DukptKeyVariant.REQUEST">
            <summary>
            Constant REQUEST for DukptKeyVariant
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.DukptKeyVariant.RESPONSE">
            <summary>
            Constant RESPONSE for DukptKeyVariant
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.DukptKeyVariant.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.DukptKeyVariant.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.DukptKeyVariant.op_Implicit(System.String)~Amazon.PaymentCryptographyData.DukptKeyVariant">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.EmvEncryptionMode">
            <summary>
            Constants used for properties of type EmvEncryptionMode.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.EmvEncryptionMode.CBC">
            <summary>
            Constant CBC for EmvEncryptionMode
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.EmvEncryptionMode.ECB">
            <summary>
            Constant ECB for EmvEncryptionMode
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.EmvEncryptionMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.EmvEncryptionMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.EmvEncryptionMode.op_Implicit(System.String)~Amazon.PaymentCryptographyData.EmvEncryptionMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.EmvMajorKeyDerivationMode">
            <summary>
            Constants used for properties of type EmvMajorKeyDerivationMode.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.EmvMajorKeyDerivationMode.EMV_OPTION_A">
            <summary>
            Constant EMV_OPTION_A for EmvMajorKeyDerivationMode
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.EmvMajorKeyDerivationMode.EMV_OPTION_B">
            <summary>
            Constant EMV_OPTION_B for EmvMajorKeyDerivationMode
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.EmvMajorKeyDerivationMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.EmvMajorKeyDerivationMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.EmvMajorKeyDerivationMode.op_Implicit(System.String)~Amazon.PaymentCryptographyData.EmvMajorKeyDerivationMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.EncryptionMode">
            <summary>
            Constants used for properties of type EncryptionMode.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.EncryptionMode.CBC">
            <summary>
            Constant CBC for EncryptionMode
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.EncryptionMode.CFB">
            <summary>
            Constant CFB for EncryptionMode
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.EncryptionMode.CFB1">
            <summary>
            Constant CFB1 for EncryptionMode
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.EncryptionMode.CFB128">
            <summary>
            Constant CFB128 for EncryptionMode
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.EncryptionMode.CFB64">
            <summary>
            Constant CFB64 for EncryptionMode
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.EncryptionMode.CFB8">
            <summary>
            Constant CFB8 for EncryptionMode
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.EncryptionMode.ECB">
            <summary>
            Constant ECB for EncryptionMode
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.EncryptionMode.OFB">
            <summary>
            Constant OFB for EncryptionMode
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.EncryptionMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.EncryptionMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.EncryptionMode.op_Implicit(System.String)~Amazon.PaymentCryptographyData.EncryptionMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.KeyCheckValueAlgorithm">
            <summary>
            Constants used for properties of type KeyCheckValueAlgorithm.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.KeyCheckValueAlgorithm.ANSI_X9_24">
            <summary>
            Constant ANSI_X9_24 for KeyCheckValueAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.KeyCheckValueAlgorithm.CMAC">
            <summary>
            Constant CMAC for KeyCheckValueAlgorithm
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.KeyCheckValueAlgorithm.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.KeyCheckValueAlgorithm.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.KeyCheckValueAlgorithm.op_Implicit(System.String)~Amazon.PaymentCryptographyData.KeyCheckValueAlgorithm">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.KeyDerivationFunction">
            <summary>
            Constants used for properties of type KeyDerivationFunction.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.KeyDerivationFunction.ANSI_X963">
            <summary>
            Constant ANSI_X963 for KeyDerivationFunction
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.KeyDerivationFunction.NIST_SP800">
            <summary>
            Constant NIST_SP800 for KeyDerivationFunction
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.KeyDerivationFunction.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.KeyDerivationFunction.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.KeyDerivationFunction.op_Implicit(System.String)~Amazon.PaymentCryptographyData.KeyDerivationFunction">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.KeyDerivationHashAlgorithm">
            <summary>
            Constants used for properties of type KeyDerivationHashAlgorithm.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.KeyDerivationHashAlgorithm.SHA_256">
            <summary>
            Constant SHA_256 for KeyDerivationHashAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.KeyDerivationHashAlgorithm.SHA_384">
            <summary>
            Constant SHA_384 for KeyDerivationHashAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.KeyDerivationHashAlgorithm.SHA_512">
            <summary>
            Constant SHA_512 for KeyDerivationHashAlgorithm
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.KeyDerivationHashAlgorithm.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.KeyDerivationHashAlgorithm.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.KeyDerivationHashAlgorithm.op_Implicit(System.String)~Amazon.PaymentCryptographyData.KeyDerivationHashAlgorithm">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.MacAlgorithm">
            <summary>
            Constants used for properties of type MacAlgorithm.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.MacAlgorithm.CMAC">
            <summary>
            Constant CMAC for MacAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.MacAlgorithm.HMAC_SHA224">
            <summary>
            Constant HMAC_SHA224 for MacAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.MacAlgorithm.HMAC_SHA256">
            <summary>
            Constant HMAC_SHA256 for MacAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.MacAlgorithm.HMAC_SHA384">
            <summary>
            Constant HMAC_SHA384 for MacAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.MacAlgorithm.HMAC_SHA512">
            <summary>
            Constant HMAC_SHA512 for MacAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.MacAlgorithm.ISO9797_ALGORITHM1">
            <summary>
            Constant ISO9797_ALGORITHM1 for MacAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.MacAlgorithm.ISO9797_ALGORITHM3">
            <summary>
            Constant ISO9797_ALGORITHM3 for MacAlgorithm
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.MacAlgorithm.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.MacAlgorithm.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.MacAlgorithm.op_Implicit(System.String)~Amazon.PaymentCryptographyData.MacAlgorithm">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.MajorKeyDerivationMode">
            <summary>
            Constants used for properties of type MajorKeyDerivationMode.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.MajorKeyDerivationMode.EMV_OPTION_A">
            <summary>
            Constant EMV_OPTION_A for MajorKeyDerivationMode
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.MajorKeyDerivationMode.EMV_OPTION_B">
            <summary>
            Constant EMV_OPTION_B for MajorKeyDerivationMode
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.MajorKeyDerivationMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.MajorKeyDerivationMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.MajorKeyDerivationMode.op_Implicit(System.String)~Amazon.PaymentCryptographyData.MajorKeyDerivationMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.PaddingType">
            <summary>
            Constants used for properties of type PaddingType.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.PaddingType.OAEP_SHA1">
            <summary>
            Constant OAEP_SHA1 for PaddingType
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.PaddingType.OAEP_SHA256">
            <summary>
            Constant OAEP_SHA256 for PaddingType
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.PaddingType.OAEP_SHA512">
            <summary>
            Constant OAEP_SHA512 for PaddingType
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.PaddingType.PKCS1">
            <summary>
            Constant PKCS1 for PaddingType
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.PaddingType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.PaddingType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.PaddingType.op_Implicit(System.String)~Amazon.PaymentCryptographyData.PaddingType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.PinBlockFormatForEmvPinChange">
            <summary>
            Constants used for properties of type PinBlockFormatForEmvPinChange.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.PinBlockFormatForEmvPinChange.ISO_FORMAT_0">
            <summary>
            Constant ISO_FORMAT_0 for PinBlockFormatForEmvPinChange
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.PinBlockFormatForEmvPinChange.ISO_FORMAT_1">
            <summary>
            Constant ISO_FORMAT_1 for PinBlockFormatForEmvPinChange
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.PinBlockFormatForEmvPinChange.ISO_FORMAT_3">
            <summary>
            Constant ISO_FORMAT_3 for PinBlockFormatForEmvPinChange
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.PinBlockFormatForEmvPinChange.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.PinBlockFormatForEmvPinChange.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.PinBlockFormatForEmvPinChange.op_Implicit(System.String)~Amazon.PaymentCryptographyData.PinBlockFormatForEmvPinChange">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.PinBlockFormatForPinData">
            <summary>
            Constants used for properties of type PinBlockFormatForPinData.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.PinBlockFormatForPinData.ISO_FORMAT_0">
            <summary>
            Constant ISO_FORMAT_0 for PinBlockFormatForPinData
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.PinBlockFormatForPinData.ISO_FORMAT_3">
            <summary>
            Constant ISO_FORMAT_3 for PinBlockFormatForPinData
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.PinBlockFormatForPinData.ISO_FORMAT_4">
            <summary>
            Constant ISO_FORMAT_4 for PinBlockFormatForPinData
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.PinBlockFormatForPinData.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.PinBlockFormatForPinData.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.PinBlockFormatForPinData.op_Implicit(System.String)~Amazon.PaymentCryptographyData.PinBlockFormatForPinData">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.PinBlockLengthPosition">
            <summary>
            Constants used for properties of type PinBlockLengthPosition.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.PinBlockLengthPosition.FRONT_OF_PIN_BLOCK">
            <summary>
            Constant FRONT_OF_PIN_BLOCK for PinBlockLengthPosition
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.PinBlockLengthPosition.NONE">
            <summary>
            Constant NONE for PinBlockLengthPosition
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.PinBlockLengthPosition.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.PinBlockLengthPosition.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.PinBlockLengthPosition.op_Implicit(System.String)~Amazon.PaymentCryptographyData.PinBlockLengthPosition">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.PinBlockPaddingType">
            <summary>
            Constants used for properties of type PinBlockPaddingType.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.PinBlockPaddingType.ISO_IEC_7816_4">
            <summary>
            Constant ISO_IEC_7816_4 for PinBlockPaddingType
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.PinBlockPaddingType.NO_PADDING">
            <summary>
            Constant NO_PADDING for PinBlockPaddingType
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.PinBlockPaddingType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.PinBlockPaddingType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.PinBlockPaddingType.op_Implicit(System.String)~Amazon.PaymentCryptographyData.PinBlockPaddingType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.SessionKeyDerivationMode">
            <summary>
            Constants used for properties of type SessionKeyDerivationMode.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.SessionKeyDerivationMode.AMEX">
            <summary>
            Constant AMEX for SessionKeyDerivationMode
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.SessionKeyDerivationMode.EMV_COMMON_SESSION_KEY">
            <summary>
            Constant EMV_COMMON_SESSION_KEY for SessionKeyDerivationMode
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.SessionKeyDerivationMode.EMV2000">
            <summary>
            Constant EMV2000 for SessionKeyDerivationMode
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.SessionKeyDerivationMode.MASTERCARD_SESSION_KEY">
            <summary>
            Constant MASTERCARD_SESSION_KEY for SessionKeyDerivationMode
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.SessionKeyDerivationMode.VISA">
            <summary>
            Constant VISA for SessionKeyDerivationMode
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.SessionKeyDerivationMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.SessionKeyDerivationMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.SessionKeyDerivationMode.op_Implicit(System.String)~Amazon.PaymentCryptographyData.SessionKeyDerivationMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.SymmetricKeyAlgorithm">
            <summary>
            Constants used for properties of type SymmetricKeyAlgorithm.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.SymmetricKeyAlgorithm.AES_128">
            <summary>
            Constant AES_128 for SymmetricKeyAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.SymmetricKeyAlgorithm.AES_192">
            <summary>
            Constant AES_192 for SymmetricKeyAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.SymmetricKeyAlgorithm.AES_256">
            <summary>
            Constant AES_256 for SymmetricKeyAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.SymmetricKeyAlgorithm.TDES_2KEY">
            <summary>
            Constant TDES_2KEY for SymmetricKeyAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.SymmetricKeyAlgorithm.TDES_3KEY">
            <summary>
            Constant TDES_3KEY for SymmetricKeyAlgorithm
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.SymmetricKeyAlgorithm.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.SymmetricKeyAlgorithm.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.SymmetricKeyAlgorithm.op_Implicit(System.String)~Amazon.PaymentCryptographyData.SymmetricKeyAlgorithm">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.VerificationFailedReason">
            <summary>
            Constants used for properties of type VerificationFailedReason.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.VerificationFailedReason.INVALID_AUTH_REQUEST_CRYPTOGRAM">
            <summary>
            Constant INVALID_AUTH_REQUEST_CRYPTOGRAM for VerificationFailedReason
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.VerificationFailedReason.INVALID_MAC">
            <summary>
            Constant INVALID_MAC for VerificationFailedReason
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.VerificationFailedReason.INVALID_PIN">
            <summary>
            Constant INVALID_PIN for VerificationFailedReason
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptographyData.VerificationFailedReason.INVALID_VALIDATION_DATA">
            <summary>
            Constant INVALID_VALIDATION_DATA for VerificationFailedReason
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.VerificationFailedReason.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.VerificationFailedReason.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.VerificationFailedReason.op_Implicit(System.String)~Amazon.PaymentCryptographyData.VerificationFailedReason">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient">
             <summary>
             <para>Implementation for accessing PaymentCryptographyData</para>
            
             You use the Amazon Web Services Payment Cryptography Data Plane to manage how encryption
             keys are used for payment-related transaction processing and associated cryptographic
             operations. You can encrypt, decrypt, generate, verify, and translate payment-related
             cryptographic operations in Amazon Web Services Payment Cryptography. For more information,
             see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/data-operations.html">Data
             operations</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
             
              
             <para>
             To manage your encryption keys, you use the <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/Welcome.html">Amazon
             Web Services Payment Cryptography Control Plane</a>. You can create, import, export,
             share, manage, and delete keys. You can also manage Identity and Access Management
             (IAM) policies for keys. 
             </para>
             </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.#ctor">
             <summary>
             Constructs AmazonPaymentCryptographyDataClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonPaymentCryptographyDataClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.#ctor(Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataConfig)">
             <summary>
             Constructs AmazonPaymentCryptographyDataClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonPaymentCryptographyDataClient Configuration Object</param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonPaymentCryptographyDataClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonPaymentCryptographyDataClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataConfig)">
            <summary>
            Constructs AmazonPaymentCryptographyDataClient with AWS Credentials and an
            AmazonPaymentCryptographyDataClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonPaymentCryptographyDataClient Configuration Object</param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonPaymentCryptographyDataClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonPaymentCryptographyDataClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.#ctor(System.String,System.String,Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataConfig)">
            <summary>
            Constructs AmazonPaymentCryptographyDataClient with AWS Access Key ID, AWS Secret Key and an
            AmazonPaymentCryptographyDataClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonPaymentCryptographyDataClient Configuration Object</param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonPaymentCryptographyDataClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonPaymentCryptographyDataClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.#ctor(System.String,System.String,System.String,Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataConfig)">
            <summary>
            Constructs AmazonPaymentCryptographyDataClient with AWS Access Key ID, AWS Secret Key and an
            AmazonPaymentCryptographyDataClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonPaymentCryptographyDataClient Configuration Object</param>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.DecryptDataAsync(Amazon.PaymentCryptographyData.Model.DecryptDataRequest,System.Threading.CancellationToken)">
            <summary>
            Decrypts ciphertext data to plaintext using a symmetric (TDES, AES), asymmetric (RSA),
            or derived (DUKPT or EMV) encryption key scheme. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/decrypt-data.html">Decrypt
            data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            You can use an decryption key generated within Amazon Web Services Payment Cryptography,
            or you can import your own decryption key by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>.
            For this operation, the key must have <c>KeyModesOfUse</c> set to <c>Decrypt</c>.
            In asymmetric decryption, Amazon Web Services Payment Cryptography decrypts the ciphertext
            using the private component of the asymmetric encryption key pair. For data encryption
            outside of Amazon Web Services Payment Cryptography, you can export the public component
            of the asymmetric key pair by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_GetPublicKeyCertificate.html">GetPublicCertificate</a>.
            </para>
             
            <para>
            This operation also supports dynamic keys, allowing you to pass a dynamic decryption
            key as a TR-31 WrappedKeyBlock. This can be used when key material is frequently rotated,
            such as during every card transaction, and there is need to avoid importing short-lived
            keys into Amazon Web Services Payment Cryptography. To decrypt using dynamic keys,
            the <c>keyARN</c> is the Key Encryption Key (KEK) of the TR-31 wrapped decryption
            key material. The incoming wrapped key shall have a key purpose of D0 with a mode
            of use of B or D. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/use-cases-acquirers-dynamickeys.html">Using
            Dynamic Keys</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            </para>
             
            <para>
            For symmetric and DUKPT decryption, Amazon Web Services Payment Cryptography supports
            <c>TDES</c> and <c>AES</c> algorithms. For EMV decryption, Amazon Web Services Payment
            Cryptography supports <c>TDES</c> algorithms. For asymmetric decryption, Amazon Web
            Services Payment Cryptography supports <c>RSA</c>. 
            </para>
             
            <para>
            When you use TDES or TDES DUKPT, the ciphertext data length must be a multiple of
            8 bytes. For AES or AES DUKPT, the ciphertext data length must be a multiple of 16
            bytes. For RSA, it sould be equal to the key size unless padding is enabled.
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>EncryptData</a> 
            </para>
             </li> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_GetPublicKeyCertificate.html">GetPublicCertificate</a>
            
            </para>
             </li> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>
            
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DecryptData service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DecryptData service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/DecryptData">REST API Reference for DecryptData Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.EncryptDataAsync(Amazon.PaymentCryptographyData.Model.EncryptDataRequest,System.Threading.CancellationToken)">
            <summary>
            Encrypts plaintext data to ciphertext using a symmetric (TDES, AES), asymmetric (RSA),
            or derived (DUKPT or EMV) encryption key scheme. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/encrypt-data.html">Encrypt
            data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            You can generate an encryption key within Amazon Web Services Payment Cryptography
            by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a>.
            You can import your own encryption key by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>.
            </para>
             
            <para>
            For this operation, the key must have <c>KeyModesOfUse</c> set to <c>Encrypt</c>.
            In asymmetric encryption, plaintext is encrypted using public component. You can import
            the public component of an asymmetric key pair created outside Amazon Web Services
            Payment Cryptography by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>.
            
            </para>
             
            <para>
            This operation also supports dynamic keys, allowing you to pass a dynamic encryption
            key as a TR-31 WrappedKeyBlock. This can be used when key material is frequently rotated,
            such as during every card transaction, and there is need to avoid importing short-lived
            keys into Amazon Web Services Payment Cryptography. To encrypt using dynamic keys,
            the <c>keyARN</c> is the Key Encryption Key (KEK) of the TR-31 wrapped encryption
            key material. The incoming wrapped key shall have a key purpose of D0 with a mode
            of use of B or D. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/use-cases-acquirers-dynamickeys.html">Using
            Dynamic Keys</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            </para>
             
            <para>
            For symmetric and DUKPT encryption, Amazon Web Services Payment Cryptography supports
            <c>TDES</c> and <c>AES</c> algorithms. For EMV encryption, Amazon Web Services Payment
            Cryptography supports <c>TDES</c> algorithms.For asymmetric encryption, Amazon Web
            Services Payment Cryptography supports <c>RSA</c>. 
            </para>
             
            <para>
            When you use TDES or TDES DUKPT, the plaintext data length must be a multiple of 8
            bytes. For AES or AES DUKPT, the plaintext data length must be a multiple of 16 bytes.
            For RSA, it sould be equal to the key size unless padding is enabled.
            </para>
             
            <para>
            To encrypt using DUKPT, you must already have a BDK (Base Derivation Key) key in your
            account with <c>KeyModesOfUse</c> set to <c>DeriveKey</c>, or you can generate a new
            DUKPT key by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a>.
            To encrypt using EMV, you must already have an IMK (Issuer Master Key) key in your
            account with <c>KeyModesOfUse</c> set to <c>DeriveKey</c>.
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>.
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>DecryptData</a> 
            </para>
             </li> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_GetPublicKeyCertificate.html">GetPublicCertificate</a>
            
            </para>
             </li> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>
            
            </para>
             </li> <li> 
            <para>
             <a>ReEncryptData</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the EncryptData service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the EncryptData service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/EncryptData">REST API Reference for EncryptData Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.GenerateCardValidationDataAsync(Amazon.PaymentCryptographyData.Model.GenerateCardValidationDataRequest,System.Threading.CancellationToken)">
            <summary>
            Generates card-related validation data using algorithms such as Card Verification
            Values (CVV/CVV2), Dynamic Card Verification Values (dCVV/dCVV2), or Card Security
            Codes (CSC). For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/generate-card-data.html">Generate
            card data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            This operation generates a CVV or CSC value that is printed on a payment credit or
            debit card during card production. The CVV or CSC, PAN (Primary Account Number) and
            expiration date of the card are required to check its validity during transaction
            processing. To begin this operation, a CVK (Card Verification Key) encryption key
            is required. You can use <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a>
            or <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>
            to establish a CVK within Amazon Web Services Payment Cryptography. The <c>KeyModesOfUse</c>
            should be set to <c>Generate</c> and <c>Verify</c> for a CVK encryption key. 
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>
            
            </para>
             </li> <li> 
            <para>
             <a>VerifyCardValidationData</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GenerateCardValidationData service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GenerateCardValidationData service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/GenerateCardValidationData">REST API Reference for GenerateCardValidationData Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.GenerateMacAsync(Amazon.PaymentCryptographyData.Model.GenerateMacRequest,System.Threading.CancellationToken)">
            <summary>
            Generates a Message Authentication Code (MAC) cryptogram within Amazon Web Services
            Payment Cryptography. 
            
             
            <para>
            You can use this operation to authenticate card-related data by using known data values
            to generate MAC for data validation between the sending and receiving parties. This
            operation uses message data, a secret encryption key and MAC algorithm to generate
            a unique MAC value for transmission. The receiving party of the MAC must use the same
            message data, secret encryption key and MAC algorithm to reproduce another MAC value
            for comparision.
            </para>
             
            <para>
            You can use this operation to generate a DUPKT, CMAC, HMAC or EMV MAC by setting generation
            attributes and algorithm to the associated values. The MAC generation encryption key
            must have valid values for <c>KeyUsage</c> such as <c>TR31_M7_HMAC_KEY</c> for HMAC
            generation, and they key must have <c>KeyModesOfUse</c> set to <c>Generate</c> and
            <c>Verify</c>.
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>VerifyMac</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GenerateMac service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GenerateMac service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/GenerateMac">REST API Reference for GenerateMac Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.GenerateMacEmvPinChangeAsync(Amazon.PaymentCryptographyData.Model.GenerateMacEmvPinChangeRequest,System.Threading.CancellationToken)">
            <summary>
            Generates an issuer script mac for EMV payment cards that use offline PINs as the
            cardholder verification method (CVM).
            
             
            <para>
            This operation generates an authenticated issuer script response by appending the
            incoming message data (APDU command) with the target encrypted PIN block in ISO2 format.
            The command structure and method to send the issuer script update to the card is not
            defined by this operation and is typically determined by the applicable payment card
            scheme.
            </para>
             
            <para>
            The primary inputs to this operation include the incoming new encrypted pinblock,
            PIN encryption key (PEK), issuer master key (IMK), primary account number (PAN), and
            the payment card derivation method.
            </para>
             
            <para>
            The operation uses two issuer master keys - secure messaging for confidentiality (IMK-SMC)
            and secure messaging for integrity (IMK-SMI). The SMC key is used to internally derive
            a key to secure the pin, while SMI key is used to internally derive a key to authenticate
            the script reponse as per the <a href="https://www.emvco.com/specifications/">EMV
            4.4 - Book 2 - Security and Key Management</a> specification. 
            </para>
             
            <para>
            This operation supports Amex, EMV2000, EMVCommon, Mastercard and Visa derivation methods,
            each requiring specific input parameters. Users must follow the specific derivation
            method and input parameters defined by the respective payment card scheme.
            </para>
             <note> 
            <para>
            Use <a>GenerateMac</a> operation when sending a script update to an EMV card that
            does not involve PIN change. When assigning IAM permissions, it is important to understand
            that <a>EncryptData</a> using EMV keys and <a>GenerateMac</a> perform similar functions
            to this command.
            </para>
             </note> 
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>EncryptData</a> 
            </para>
             </li> <li> 
            <para>
             <a>GenerateMac</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GenerateMacEmvPinChange service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GenerateMacEmvPinChange service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/GenerateMacEmvPinChange">REST API Reference for GenerateMacEmvPinChange Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.GeneratePinDataAsync(Amazon.PaymentCryptographyData.Model.GeneratePinDataRequest,System.Threading.CancellationToken)">
            <summary>
            Generates pin-related data such as PIN, PIN Verification Value (PVV), PIN Block, and
            PIN Offset during new card issuance or reissuance. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/generate-pin-data.html">Generate
            PIN data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            PIN data is never transmitted in clear to or from Amazon Web Services Payment Cryptography.
            This operation generates PIN, PVV, or PIN Offset and then encrypts it using Pin Encryption
            Key (PEK) to create an <c>EncryptedPinBlock</c> for transmission from Amazon Web Services
            Payment Cryptography. This operation uses a separate Pin Verification Key (PVK) for
            VISA PVV generation. 
            </para>
             
            <para>
            Using ECDH key exchange, you can receive cardholder selectable PINs into Amazon Web
            Services Payment Cryptography. The ECDH derived key protects the incoming PIN block.
            You can also use it for reveal PIN, wherein the generated PIN block is protected by
            the ECDH derived key before transmission from Amazon Web Services Payment Cryptography.
            For more information on establishing ECDH derived keys, see the <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/create-keys.html">Generating
            keys</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>.
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>GenerateCardValidationData</a> 
            </para>
             </li> <li> 
            <para>
             <a>TranslatePinData</a> 
            </para>
             </li> <li> 
            <para>
             <a>VerifyPinData</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GeneratePinData service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GeneratePinData service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/GeneratePinData">REST API Reference for GeneratePinData Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.ReEncryptDataAsync(Amazon.PaymentCryptographyData.Model.ReEncryptDataRequest,System.Threading.CancellationToken)">
            <summary>
            Re-encrypt ciphertext using DUKPT or Symmetric data encryption keys. 
            
             
            <para>
            You can either generate an encryption key within Amazon Web Services Payment Cryptography
            by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a>
            or import your own encryption key by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>.
            The <c>KeyArn</c> for use with this operation must be in a compatible key state with
            <c>KeyModesOfUse</c> set to <c>Encrypt</c>. 
            </para>
             
            <para>
            This operation also supports dynamic keys, allowing you to pass a dynamic encryption
            key as a TR-31 WrappedKeyBlock. This can be used when key material is frequently rotated,
            such as during every card transaction, and there is need to avoid importing short-lived
            keys into Amazon Web Services Payment Cryptography. To re-encrypt using dynamic keys,
            the <c>keyARN</c> is the Key Encryption Key (KEK) of the TR-31 wrapped encryption
            key material. The incoming wrapped key shall have a key purpose of D0 with a mode
            of use of B or D. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/use-cases-acquirers-dynamickeys.html">Using
            Dynamic Keys</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            </para>
             
            <para>
            For symmetric and DUKPT encryption, Amazon Web Services Payment Cryptography supports
            <c>TDES</c> and <c>AES</c> algorithms. To encrypt using DUKPT, a DUKPT key must already
            exist within your account with <c>KeyModesOfUse</c> set to <c>DeriveKey</c> or a new
            DUKPT can be generated by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a>.
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>DecryptData</a> 
            </para>
             </li> <li> 
            <para>
             <a>EncryptData</a> 
            </para>
             </li> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_GetPublicKeyCertificate.html">GetPublicCertificate</a>
            
            </para>
             </li> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>
            
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReEncryptData service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ReEncryptData service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/ReEncryptData">REST API Reference for ReEncryptData Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.TranslatePinDataAsync(Amazon.PaymentCryptographyData.Model.TranslatePinDataRequest,System.Threading.CancellationToken)">
            <summary>
            Translates encrypted PIN block from and to ISO 9564 formats 0,1,3,4. For more information,
            see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/translate-pin-data.html">Translate
            PIN data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            PIN block translation involves changing a PIN block from one encryption key to another
            and optionally change its format. PIN block translation occurs entirely within the
            HSM boundary and PIN data never enters or leaves Amazon Web Services Payment Cryptography
            in clear text. The encryption key transformation can be from PEK (Pin Encryption Key)
            to BDK (Base Derivation Key) for DUKPT or from BDK for DUKPT to PEK.
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography also supports use of dynamic keys and ECDH
            (Elliptic Curve Diffie-Hellman) based key exchange for this operation.
            </para>
             
            <para>
            Dynamic keys allow you to pass a PEK as a TR-31 WrappedKeyBlock. They can be used
            when key material is frequently rotated, such as during every card transaction, and
            there is need to avoid importing short-lived keys into Amazon Web Services Payment
            Cryptography. To translate PIN block using dynamic keys, the <c>keyARN</c> is the
            Key Encryption Key (KEK) of the TR-31 wrapped PEK. The incoming wrapped key shall
            have a key purpose of P0 with a mode of use of B or D. For more information, see <a
            href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/use-cases-acquirers-dynamickeys.html">Using
            Dynamic Keys</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            </para>
             
            <para>
            Using ECDH key exchange, you can receive cardholder selectable PINs into Amazon Web
            Services Payment Cryptography. The ECDH derived key protects the incoming PIN block,
            which is translated to a PEK encrypted PIN block for use within the service. You can
            also use ECDH for reveal PIN, wherein the service translates the PIN block from PEK
            to a ECDH derived encryption key. For more information on establishing ECDH derived
            keys, see the <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/create-keys.html">Generating
            keys</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            </para>
             
            <para>
            The allowed combinations of PIN block format translations are guided by PCI. It is
            important to note that not all encrypted PIN block formats (example, format 1) require
            PAN (Primary Account Number) as input. And as such, PIN block format that requires
            PAN (example, formats 0,3,4) cannot be translated to a format (format 1) that does
            not require a PAN for generation. 
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>.
            </para>
             <note> 
            <para>
            Amazon Web Services Payment Cryptography currently supports ISO PIN block 4 translation
            for PIN block built using legacy PAN length. That is, PAN is the right most 12 digits
            excluding the check digits.
            </para>
             </note> 
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>GeneratePinData</a> 
            </para>
             </li> <li> 
            <para>
             <a>VerifyPinData</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TranslatePinData service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TranslatePinData service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/TranslatePinData">REST API Reference for TranslatePinData Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.VerifyAuthRequestCryptogramAsync(Amazon.PaymentCryptographyData.Model.VerifyAuthRequestCryptogramRequest,System.Threading.CancellationToken)">
            <summary>
            Verifies Authorization Request Cryptogram (ARQC) for a EMV chip payment card authorization.
            For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/data-operations.verifyauthrequestcryptogram.html">Verify
            auth request cryptogram</a> in the <i>Amazon Web Services Payment Cryptography User
            Guide</i>.
            
             
            <para>
            ARQC generation is done outside of Amazon Web Services Payment Cryptography and is
            typically generated on a point of sale terminal for an EMV chip card to obtain payment
            authorization during transaction time. For ARQC verification, you must first import
            the ARQC generated outside of Amazon Web Services Payment Cryptography by calling
            <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>.
            This operation uses the imported ARQC and an major encryption key (DUKPT) created
            by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a>
            to either provide a boolean ARQC verification result or provide an APRC (Authorization
            Response Cryptogram) response using Method 1 or Method 2. The <c>ARPC_METHOD_1</c>
            uses <c>AuthResponseCode</c> to generate ARPC and <c>ARPC_METHOD_2</c> uses <c>CardStatusUpdate</c>
            to generate ARPC. 
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>.
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>VerifyCardValidationData</a> 
            </para>
             </li> <li> 
            <para>
             <a>VerifyPinData</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyAuthRequestCryptogram service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the VerifyAuthRequestCryptogram service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.VerificationFailedException">
            This request failed verification.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/VerifyAuthRequestCryptogram">REST API Reference for VerifyAuthRequestCryptogram Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.VerifyCardValidationDataAsync(Amazon.PaymentCryptographyData.Model.VerifyCardValidationDataRequest,System.Threading.CancellationToken)">
            <summary>
            Verifies card-related validation data using algorithms such as Card Verification Values
            (CVV/CVV2), Dynamic Card Verification Values (dCVV/dCVV2) and Card Security Codes
            (CSC). For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/verify-card-data.html">Verify
            card data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            This operation validates the CVV or CSC codes that is printed on a payment credit
            or debit card during card payment transaction. The input values are typically provided
            as part of an inbound transaction to an issuer or supporting platform partner. Amazon
            Web Services Payment Cryptography uses CVV or CSC, PAN (Primary Account Number) and
            expiration date of the card to check its validity during transaction processing. In
            this operation, the CVK (Card Verification Key) encryption key for use with card data
            verification is same as the one in used for <a>GenerateCardValidationData</a>. 
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>GenerateCardValidationData</a> 
            </para>
             </li> <li> 
            <para>
             <a>VerifyAuthRequestCryptogram</a> 
            </para>
             </li> <li> 
            <para>
             <a>VerifyPinData</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyCardValidationData service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the VerifyCardValidationData service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.VerificationFailedException">
            This request failed verification.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/VerifyCardValidationData">REST API Reference for VerifyCardValidationData Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.VerifyMacAsync(Amazon.PaymentCryptographyData.Model.VerifyMacRequest,System.Threading.CancellationToken)">
            <summary>
            Verifies a Message Authentication Code (MAC). 
            
             
            <para>
            You can use this operation to verify MAC for message data authentication such as .
            In this operation, you must use the same message data, secret encryption key and MAC
            algorithm that was used to generate MAC. You can use this operation to verify a DUPKT,
            CMAC, HMAC or EMV MAC by setting generation attributes and algorithm to the associated
            values. 
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>GenerateMac</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyMac service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the VerifyMac service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.VerificationFailedException">
            This request failed verification.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/VerifyMac">REST API Reference for VerifyMac Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.VerifyPinDataAsync(Amazon.PaymentCryptographyData.Model.VerifyPinDataRequest,System.Threading.CancellationToken)">
            <summary>
            Verifies pin-related data such as PIN and PIN Offset using algorithms including VISA
            PVV and IBM3624. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/verify-pin-data.html">Verify
            PIN data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            This operation verifies PIN data for user payment card. A card holder PIN data is
            never transmitted in clear to or from Amazon Web Services Payment Cryptography. This
            operation uses PIN Verification Key (PVK) for PIN or PIN Offset generation and then
            encrypts it using PIN Encryption Key (PEK) to create an <c>EncryptedPinBlock</c> for
            transmission from Amazon Web Services Payment Cryptography. 
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>GeneratePinData</a> 
            </para>
             </li> <li> 
            <para>
             <a>TranslatePinData</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyPinData service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the VerifyPinData service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.VerificationFailedException">
            This request failed verification.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/VerifyPinData">REST API Reference for VerifyPinData Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.AmazonPaymentCryptographyDataClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.PaymentCryptographyData.IAmazonPaymentCryptographyData">
             <summary>
             <para>Interface for accessing PaymentCryptographyData</para>
            
             You use the Amazon Web Services Payment Cryptography Data Plane to manage how encryption
             keys are used for payment-related transaction processing and associated cryptographic
             operations. You can encrypt, decrypt, generate, verify, and translate payment-related
             cryptographic operations in Amazon Web Services Payment Cryptography. For more information,
             see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/data-operations.html">Data
             operations</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
             
              
             <para>
             To manage your encryption keys, you use the <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/Welcome.html">Amazon
             Web Services Payment Cryptography Control Plane</a>. You can create, import, export,
             share, manage, and delete keys. You can also manage Identity and Access Management
             (IAM) policies for keys. 
             </para>
             </summary>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.IAmazonPaymentCryptographyData.DecryptDataAsync(Amazon.PaymentCryptographyData.Model.DecryptDataRequest,System.Threading.CancellationToken)">
            <summary>
            Decrypts ciphertext data to plaintext using a symmetric (TDES, AES), asymmetric (RSA),
            or derived (DUKPT or EMV) encryption key scheme. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/decrypt-data.html">Decrypt
            data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            You can use an decryption key generated within Amazon Web Services Payment Cryptography,
            or you can import your own decryption key by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>.
            For this operation, the key must have <c>KeyModesOfUse</c> set to <c>Decrypt</c>.
            In asymmetric decryption, Amazon Web Services Payment Cryptography decrypts the ciphertext
            using the private component of the asymmetric encryption key pair. For data encryption
            outside of Amazon Web Services Payment Cryptography, you can export the public component
            of the asymmetric key pair by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_GetPublicKeyCertificate.html">GetPublicCertificate</a>.
            </para>
             
            <para>
            This operation also supports dynamic keys, allowing you to pass a dynamic decryption
            key as a TR-31 WrappedKeyBlock. This can be used when key material is frequently rotated,
            such as during every card transaction, and there is need to avoid importing short-lived
            keys into Amazon Web Services Payment Cryptography. To decrypt using dynamic keys,
            the <c>keyARN</c> is the Key Encryption Key (KEK) of the TR-31 wrapped decryption
            key material. The incoming wrapped key shall have a key purpose of D0 with a mode
            of use of B or D. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/use-cases-acquirers-dynamickeys.html">Using
            Dynamic Keys</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            </para>
             
            <para>
            For symmetric and DUKPT decryption, Amazon Web Services Payment Cryptography supports
            <c>TDES</c> and <c>AES</c> algorithms. For EMV decryption, Amazon Web Services Payment
            Cryptography supports <c>TDES</c> algorithms. For asymmetric decryption, Amazon Web
            Services Payment Cryptography supports <c>RSA</c>. 
            </para>
             
            <para>
            When you use TDES or TDES DUKPT, the ciphertext data length must be a multiple of
            8 bytes. For AES or AES DUKPT, the ciphertext data length must be a multiple of 16
            bytes. For RSA, it sould be equal to the key size unless padding is enabled.
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>EncryptData</a> 
            </para>
             </li> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_GetPublicKeyCertificate.html">GetPublicCertificate</a>
            
            </para>
             </li> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>
            
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DecryptData service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DecryptData service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/DecryptData">REST API Reference for DecryptData Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.IAmazonPaymentCryptographyData.EncryptDataAsync(Amazon.PaymentCryptographyData.Model.EncryptDataRequest,System.Threading.CancellationToken)">
            <summary>
            Encrypts plaintext data to ciphertext using a symmetric (TDES, AES), asymmetric (RSA),
            or derived (DUKPT or EMV) encryption key scheme. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/encrypt-data.html">Encrypt
            data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            You can generate an encryption key within Amazon Web Services Payment Cryptography
            by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a>.
            You can import your own encryption key by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>.
            </para>
             
            <para>
            For this operation, the key must have <c>KeyModesOfUse</c> set to <c>Encrypt</c>.
            In asymmetric encryption, plaintext is encrypted using public component. You can import
            the public component of an asymmetric key pair created outside Amazon Web Services
            Payment Cryptography by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>.
            
            </para>
             
            <para>
            This operation also supports dynamic keys, allowing you to pass a dynamic encryption
            key as a TR-31 WrappedKeyBlock. This can be used when key material is frequently rotated,
            such as during every card transaction, and there is need to avoid importing short-lived
            keys into Amazon Web Services Payment Cryptography. To encrypt using dynamic keys,
            the <c>keyARN</c> is the Key Encryption Key (KEK) of the TR-31 wrapped encryption
            key material. The incoming wrapped key shall have a key purpose of D0 with a mode
            of use of B or D. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/use-cases-acquirers-dynamickeys.html">Using
            Dynamic Keys</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            </para>
             
            <para>
            For symmetric and DUKPT encryption, Amazon Web Services Payment Cryptography supports
            <c>TDES</c> and <c>AES</c> algorithms. For EMV encryption, Amazon Web Services Payment
            Cryptography supports <c>TDES</c> algorithms.For asymmetric encryption, Amazon Web
            Services Payment Cryptography supports <c>RSA</c>. 
            </para>
             
            <para>
            When you use TDES or TDES DUKPT, the plaintext data length must be a multiple of 8
            bytes. For AES or AES DUKPT, the plaintext data length must be a multiple of 16 bytes.
            For RSA, it sould be equal to the key size unless padding is enabled.
            </para>
             
            <para>
            To encrypt using DUKPT, you must already have a BDK (Base Derivation Key) key in your
            account with <c>KeyModesOfUse</c> set to <c>DeriveKey</c>, or you can generate a new
            DUKPT key by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a>.
            To encrypt using EMV, you must already have an IMK (Issuer Master Key) key in your
            account with <c>KeyModesOfUse</c> set to <c>DeriveKey</c>.
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>.
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>DecryptData</a> 
            </para>
             </li> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_GetPublicKeyCertificate.html">GetPublicCertificate</a>
            
            </para>
             </li> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>
            
            </para>
             </li> <li> 
            <para>
             <a>ReEncryptData</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the EncryptData service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the EncryptData service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/EncryptData">REST API Reference for EncryptData Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.IAmazonPaymentCryptographyData.GenerateCardValidationDataAsync(Amazon.PaymentCryptographyData.Model.GenerateCardValidationDataRequest,System.Threading.CancellationToken)">
            <summary>
            Generates card-related validation data using algorithms such as Card Verification
            Values (CVV/CVV2), Dynamic Card Verification Values (dCVV/dCVV2), or Card Security
            Codes (CSC). For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/generate-card-data.html">Generate
            card data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            This operation generates a CVV or CSC value that is printed on a payment credit or
            debit card during card production. The CVV or CSC, PAN (Primary Account Number) and
            expiration date of the card are required to check its validity during transaction
            processing. To begin this operation, a CVK (Card Verification Key) encryption key
            is required. You can use <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a>
            or <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>
            to establish a CVK within Amazon Web Services Payment Cryptography. The <c>KeyModesOfUse</c>
            should be set to <c>Generate</c> and <c>Verify</c> for a CVK encryption key. 
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>
            
            </para>
             </li> <li> 
            <para>
             <a>VerifyCardValidationData</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GenerateCardValidationData service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GenerateCardValidationData service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/GenerateCardValidationData">REST API Reference for GenerateCardValidationData Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.IAmazonPaymentCryptographyData.GenerateMacAsync(Amazon.PaymentCryptographyData.Model.GenerateMacRequest,System.Threading.CancellationToken)">
            <summary>
            Generates a Message Authentication Code (MAC) cryptogram within Amazon Web Services
            Payment Cryptography. 
            
             
            <para>
            You can use this operation to authenticate card-related data by using known data values
            to generate MAC for data validation between the sending and receiving parties. This
            operation uses message data, a secret encryption key and MAC algorithm to generate
            a unique MAC value for transmission. The receiving party of the MAC must use the same
            message data, secret encryption key and MAC algorithm to reproduce another MAC value
            for comparision.
            </para>
             
            <para>
            You can use this operation to generate a DUPKT, CMAC, HMAC or EMV MAC by setting generation
            attributes and algorithm to the associated values. The MAC generation encryption key
            must have valid values for <c>KeyUsage</c> such as <c>TR31_M7_HMAC_KEY</c> for HMAC
            generation, and they key must have <c>KeyModesOfUse</c> set to <c>Generate</c> and
            <c>Verify</c>.
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>VerifyMac</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GenerateMac service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GenerateMac service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/GenerateMac">REST API Reference for GenerateMac Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.IAmazonPaymentCryptographyData.GenerateMacEmvPinChangeAsync(Amazon.PaymentCryptographyData.Model.GenerateMacEmvPinChangeRequest,System.Threading.CancellationToken)">
            <summary>
            Generates an issuer script mac for EMV payment cards that use offline PINs as the
            cardholder verification method (CVM).
            
             
            <para>
            This operation generates an authenticated issuer script response by appending the
            incoming message data (APDU command) with the target encrypted PIN block in ISO2 format.
            The command structure and method to send the issuer script update to the card is not
            defined by this operation and is typically determined by the applicable payment card
            scheme.
            </para>
             
            <para>
            The primary inputs to this operation include the incoming new encrypted pinblock,
            PIN encryption key (PEK), issuer master key (IMK), primary account number (PAN), and
            the payment card derivation method.
            </para>
             
            <para>
            The operation uses two issuer master keys - secure messaging for confidentiality (IMK-SMC)
            and secure messaging for integrity (IMK-SMI). The SMC key is used to internally derive
            a key to secure the pin, while SMI key is used to internally derive a key to authenticate
            the script reponse as per the <a href="https://www.emvco.com/specifications/">EMV
            4.4 - Book 2 - Security and Key Management</a> specification. 
            </para>
             
            <para>
            This operation supports Amex, EMV2000, EMVCommon, Mastercard and Visa derivation methods,
            each requiring specific input parameters. Users must follow the specific derivation
            method and input parameters defined by the respective payment card scheme.
            </para>
             <note> 
            <para>
            Use <a>GenerateMac</a> operation when sending a script update to an EMV card that
            does not involve PIN change. When assigning IAM permissions, it is important to understand
            that <a>EncryptData</a> using EMV keys and <a>GenerateMac</a> perform similar functions
            to this command.
            </para>
             </note> 
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>EncryptData</a> 
            </para>
             </li> <li> 
            <para>
             <a>GenerateMac</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GenerateMacEmvPinChange service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GenerateMacEmvPinChange service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/GenerateMacEmvPinChange">REST API Reference for GenerateMacEmvPinChange Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.IAmazonPaymentCryptographyData.GeneratePinDataAsync(Amazon.PaymentCryptographyData.Model.GeneratePinDataRequest,System.Threading.CancellationToken)">
            <summary>
            Generates pin-related data such as PIN, PIN Verification Value (PVV), PIN Block, and
            PIN Offset during new card issuance or reissuance. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/generate-pin-data.html">Generate
            PIN data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            PIN data is never transmitted in clear to or from Amazon Web Services Payment Cryptography.
            This operation generates PIN, PVV, or PIN Offset and then encrypts it using Pin Encryption
            Key (PEK) to create an <c>EncryptedPinBlock</c> for transmission from Amazon Web Services
            Payment Cryptography. This operation uses a separate Pin Verification Key (PVK) for
            VISA PVV generation. 
            </para>
             
            <para>
            Using ECDH key exchange, you can receive cardholder selectable PINs into Amazon Web
            Services Payment Cryptography. The ECDH derived key protects the incoming PIN block.
            You can also use it for reveal PIN, wherein the generated PIN block is protected by
            the ECDH derived key before transmission from Amazon Web Services Payment Cryptography.
            For more information on establishing ECDH derived keys, see the <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/create-keys.html">Generating
            keys</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>.
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>GenerateCardValidationData</a> 
            </para>
             </li> <li> 
            <para>
             <a>TranslatePinData</a> 
            </para>
             </li> <li> 
            <para>
             <a>VerifyPinData</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GeneratePinData service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GeneratePinData service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/GeneratePinData">REST API Reference for GeneratePinData Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.IAmazonPaymentCryptographyData.ReEncryptDataAsync(Amazon.PaymentCryptographyData.Model.ReEncryptDataRequest,System.Threading.CancellationToken)">
            <summary>
            Re-encrypt ciphertext using DUKPT or Symmetric data encryption keys. 
            
             
            <para>
            You can either generate an encryption key within Amazon Web Services Payment Cryptography
            by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a>
            or import your own encryption key by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>.
            The <c>KeyArn</c> for use with this operation must be in a compatible key state with
            <c>KeyModesOfUse</c> set to <c>Encrypt</c>. 
            </para>
             
            <para>
            This operation also supports dynamic keys, allowing you to pass a dynamic encryption
            key as a TR-31 WrappedKeyBlock. This can be used when key material is frequently rotated,
            such as during every card transaction, and there is need to avoid importing short-lived
            keys into Amazon Web Services Payment Cryptography. To re-encrypt using dynamic keys,
            the <c>keyARN</c> is the Key Encryption Key (KEK) of the TR-31 wrapped encryption
            key material. The incoming wrapped key shall have a key purpose of D0 with a mode
            of use of B or D. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/use-cases-acquirers-dynamickeys.html">Using
            Dynamic Keys</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            </para>
             
            <para>
            For symmetric and DUKPT encryption, Amazon Web Services Payment Cryptography supports
            <c>TDES</c> and <c>AES</c> algorithms. To encrypt using DUKPT, a DUKPT key must already
            exist within your account with <c>KeyModesOfUse</c> set to <c>DeriveKey</c> or a new
            DUKPT can be generated by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a>.
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>DecryptData</a> 
            </para>
             </li> <li> 
            <para>
             <a>EncryptData</a> 
            </para>
             </li> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_GetPublicKeyCertificate.html">GetPublicCertificate</a>
            
            </para>
             </li> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>
            
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReEncryptData service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ReEncryptData service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/ReEncryptData">REST API Reference for ReEncryptData Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.IAmazonPaymentCryptographyData.TranslatePinDataAsync(Amazon.PaymentCryptographyData.Model.TranslatePinDataRequest,System.Threading.CancellationToken)">
            <summary>
            Translates encrypted PIN block from and to ISO 9564 formats 0,1,3,4. For more information,
            see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/translate-pin-data.html">Translate
            PIN data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            PIN block translation involves changing a PIN block from one encryption key to another
            and optionally change its format. PIN block translation occurs entirely within the
            HSM boundary and PIN data never enters or leaves Amazon Web Services Payment Cryptography
            in clear text. The encryption key transformation can be from PEK (Pin Encryption Key)
            to BDK (Base Derivation Key) for DUKPT or from BDK for DUKPT to PEK.
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography also supports use of dynamic keys and ECDH
            (Elliptic Curve Diffie-Hellman) based key exchange for this operation.
            </para>
             
            <para>
            Dynamic keys allow you to pass a PEK as a TR-31 WrappedKeyBlock. They can be used
            when key material is frequently rotated, such as during every card transaction, and
            there is need to avoid importing short-lived keys into Amazon Web Services Payment
            Cryptography. To translate PIN block using dynamic keys, the <c>keyARN</c> is the
            Key Encryption Key (KEK) of the TR-31 wrapped PEK. The incoming wrapped key shall
            have a key purpose of P0 with a mode of use of B or D. For more information, see <a
            href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/use-cases-acquirers-dynamickeys.html">Using
            Dynamic Keys</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            </para>
             
            <para>
            Using ECDH key exchange, you can receive cardholder selectable PINs into Amazon Web
            Services Payment Cryptography. The ECDH derived key protects the incoming PIN block,
            which is translated to a PEK encrypted PIN block for use within the service. You can
            also use ECDH for reveal PIN, wherein the service translates the PIN block from PEK
            to a ECDH derived encryption key. For more information on establishing ECDH derived
            keys, see the <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/create-keys.html">Generating
            keys</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            </para>
             
            <para>
            The allowed combinations of PIN block format translations are guided by PCI. It is
            important to note that not all encrypted PIN block formats (example, format 1) require
            PAN (Primary Account Number) as input. And as such, PIN block format that requires
            PAN (example, formats 0,3,4) cannot be translated to a format (format 1) that does
            not require a PAN for generation. 
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>.
            </para>
             <note> 
            <para>
            Amazon Web Services Payment Cryptography currently supports ISO PIN block 4 translation
            for PIN block built using legacy PAN length. That is, PAN is the right most 12 digits
            excluding the check digits.
            </para>
             </note> 
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>GeneratePinData</a> 
            </para>
             </li> <li> 
            <para>
             <a>VerifyPinData</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TranslatePinData service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TranslatePinData service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/TranslatePinData">REST API Reference for TranslatePinData Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.IAmazonPaymentCryptographyData.VerifyAuthRequestCryptogramAsync(Amazon.PaymentCryptographyData.Model.VerifyAuthRequestCryptogramRequest,System.Threading.CancellationToken)">
            <summary>
            Verifies Authorization Request Cryptogram (ARQC) for a EMV chip payment card authorization.
            For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/data-operations.verifyauthrequestcryptogram.html">Verify
            auth request cryptogram</a> in the <i>Amazon Web Services Payment Cryptography User
            Guide</i>.
            
             
            <para>
            ARQC generation is done outside of Amazon Web Services Payment Cryptography and is
            typically generated on a point of sale terminal for an EMV chip card to obtain payment
            authorization during transaction time. For ARQC verification, you must first import
            the ARQC generated outside of Amazon Web Services Payment Cryptography by calling
            <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>.
            This operation uses the imported ARQC and an major encryption key (DUKPT) created
            by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a>
            to either provide a boolean ARQC verification result or provide an APRC (Authorization
            Response Cryptogram) response using Method 1 or Method 2. The <c>ARPC_METHOD_1</c>
            uses <c>AuthResponseCode</c> to generate ARPC and <c>ARPC_METHOD_2</c> uses <c>CardStatusUpdate</c>
            to generate ARPC. 
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>.
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>VerifyCardValidationData</a> 
            </para>
             </li> <li> 
            <para>
             <a>VerifyPinData</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyAuthRequestCryptogram service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the VerifyAuthRequestCryptogram service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.VerificationFailedException">
            This request failed verification.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/VerifyAuthRequestCryptogram">REST API Reference for VerifyAuthRequestCryptogram Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.IAmazonPaymentCryptographyData.VerifyCardValidationDataAsync(Amazon.PaymentCryptographyData.Model.VerifyCardValidationDataRequest,System.Threading.CancellationToken)">
            <summary>
            Verifies card-related validation data using algorithms such as Card Verification Values
            (CVV/CVV2), Dynamic Card Verification Values (dCVV/dCVV2) and Card Security Codes
            (CSC). For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/verify-card-data.html">Verify
            card data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            This operation validates the CVV or CSC codes that is printed on a payment credit
            or debit card during card payment transaction. The input values are typically provided
            as part of an inbound transaction to an issuer or supporting platform partner. Amazon
            Web Services Payment Cryptography uses CVV or CSC, PAN (Primary Account Number) and
            expiration date of the card to check its validity during transaction processing. In
            this operation, the CVK (Card Verification Key) encryption key for use with card data
            verification is same as the one in used for <a>GenerateCardValidationData</a>. 
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>GenerateCardValidationData</a> 
            </para>
             </li> <li> 
            <para>
             <a>VerifyAuthRequestCryptogram</a> 
            </para>
             </li> <li> 
            <para>
             <a>VerifyPinData</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyCardValidationData service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the VerifyCardValidationData service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.VerificationFailedException">
            This request failed verification.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/VerifyCardValidationData">REST API Reference for VerifyCardValidationData Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.IAmazonPaymentCryptographyData.VerifyMacAsync(Amazon.PaymentCryptographyData.Model.VerifyMacRequest,System.Threading.CancellationToken)">
            <summary>
            Verifies a Message Authentication Code (MAC). 
            
             
            <para>
            You can use this operation to verify MAC for message data authentication such as .
            In this operation, you must use the same message data, secret encryption key and MAC
            algorithm that was used to generate MAC. You can use this operation to verify a DUPKT,
            CMAC, HMAC or EMV MAC by setting generation attributes and algorithm to the associated
            values. 
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>GenerateMac</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyMac service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the VerifyMac service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.VerificationFailedException">
            This request failed verification.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/VerifyMac">REST API Reference for VerifyMac Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.IAmazonPaymentCryptographyData.VerifyPinDataAsync(Amazon.PaymentCryptographyData.Model.VerifyPinDataRequest,System.Threading.CancellationToken)">
            <summary>
            Verifies pin-related data such as PIN and PIN Offset using algorithms including VISA
            PVV and IBM3624. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/verify-pin-data.html">Verify
            PIN data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            This operation verifies PIN data for user payment card. A card holder PIN data is
            never transmitted in clear to or from Amazon Web Services Payment Cryptography. This
            operation uses PIN Verification Key (PVK) for PIN or PIN Offset generation and then
            encrypts it using PIN Encryption Key (PEK) to create an <c>EncryptedPinBlock</c> for
            transmission from Amazon Web Services Payment Cryptography. 
            </para>
             
            <para>
            For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key
            types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography
            User Guide</i>. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>GeneratePinData</a> 
            </para>
             </li> <li> 
            <para>
             <a>TranslatePinData</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyPinData service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the VerifyPinData service method, as returned by PaymentCryptographyData.</returns>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptographyData.Model.VerificationFailedException">
            This request failed verification.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-data-2022-02-03/VerifyPinData">REST API Reference for VerifyPinData Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptographyData.IAmazonPaymentCryptographyData.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
