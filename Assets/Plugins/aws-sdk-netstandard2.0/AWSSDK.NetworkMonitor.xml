<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.NetworkMonitor</name>
    </assembly>
    <members>
        <member name="T:Amazon.NetworkMonitor.AmazonNetworkMonitorConfig">
            <summary>
            Configuration for accessing Amazon NetworkMonitor service
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.AmazonNetworkMonitorConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.AmazonNetworkMonitorConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.AmazonNetworkMonitorConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.AmazonNetworkMonitorConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.AmazonNetworkMonitorDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon NetworkMonitor service
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            NetworkMonitor
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.AmazonNetworkMonitorDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.AmazonNetworkMonitorDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.AmazonNetworkMonitorDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.AmazonNetworkMonitorDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.AmazonNetworkMonitorDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.AmazonNetworkMonitorDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Endpoints.NetworkMonitorEndpointParameters">
            <summary>
            Contains parameters used for resolving NetworkMonitor endpoints
            Parameters can be sourced from client config and service operations
            Used by internal NetworkMonitorEndpointProvider and NetworkMonitorEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.Endpoints.NetworkMonitorEndpointParameters.#ctor">
            <summary>
            NetworkMonitorEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Endpoints.NetworkMonitorEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Endpoints.NetworkMonitorEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Endpoints.NetworkMonitorEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Endpoints.NetworkMonitorEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.AmazonNetworkMonitorException">
            <summary>
             Common exception for the NetworkMonitor service.
             </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonNetworkMonitorException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonNetworkMonitorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonNetworkMonitorException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonNetworkMonitorException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonNetworkMonitorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.NetworkMonitor.Internal.AmazonNetworkMonitorEndpointProvider">
            <summary>
            Amazon NetworkMonitor endpoint provider.
            Resolves endpoint for given set of NetworkMonitorEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.Internal.AmazonNetworkMonitorEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for NetworkMonitorEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Internal.AmazonNetworkMonitorEndpointResolver">
            <summary>
            Amazon NetworkMonitor endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for NetworkMonitor service requests.
            Collects values for NetworkMonitorEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses NetworkMonitorEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Internal.AmazonNetworkMonitorMetadata">
            <summary>
            Service metadata for  Amazon NetworkMonitor service
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Internal.AmazonNetworkMonitorMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Internal.AmazonNetworkMonitorMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            <summary>
            You do not have sufficient access to perform this action.
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.ConflictException">
            <summary>
            This operation attempted to create a resource that already exists.
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.CreateMonitorProbeInput">
            <summary>
            Creates a monitor probe.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateMonitorProbeInput.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The destination IP address. This must be either <c>IPV4</c> or <c>IPV6</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateMonitorProbeInput.DestinationPort">
            <summary>
            Gets and sets the property DestinationPort. 
            <para>
            The port associated with the <c>destination</c>. This is required only if the <c>protocol</c>
            is <c>TCP</c> and must be a number between <c>1</c> and <c>65536</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateMonitorProbeInput.PacketSize">
            <summary>
            Gets and sets the property PacketSize. 
            <para>
            The size of the packets sent between the source and destination. This must be a number
            between <c>56</c> and <c>8500</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateMonitorProbeInput.ProbeTags">
            <summary>
            Gets and sets the property ProbeTags. 
            <para>
            The list of key-value pairs created and assigned to the monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateMonitorProbeInput.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
            The protocol used for the network traffic between the <c>source</c> and <c>destination</c>.
            This must be either <c>TCP</c> or <c>ICMP</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateMonitorProbeInput.SourceArn">
            <summary>
            Gets and sets the property SourceArn. 
            <para>
            The ARN of the subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.CreateMonitorRequest">
            <summary>
            Container for the parameters to the CreateMonitor operation.
            Creates a monitor between a source subnet and destination IP address. Within a monitor
            you'll create one or more probes that monitor network traffic between your source
            Amazon Web Services VPC subnets and your destination IP addresses. Each probe then
            aggregates and sends metrics to Amazon CloudWatch.
            
             
            <para>
            You can also create a monitor with probes using this command. For each probe, you
            define the following:
            </para>
             <ul> <li> 
            <para>
             <c>source</c>—The subnet IDs where the probes will be created.
            </para>
             </li> <li> 
            <para>
             <c>destination</c>— The target destination IP address for the probe.
            </para>
             </li> <li> 
            <para>
             <c>destinationPort</c>—Required only if the protocol is <c>TCP</c>.
            </para>
             </li> <li> 
            <para>
             <c>protocol</c>—The communication protocol between the source and destination. This
            will be either <c>TCP</c> or <c>ICMP</c>.
            </para>
             </li> <li> 
            <para>
             <c>packetSize</c>—The size of the packets. This must be a number between <c>56</c>
            and <c>8500</c>.
            </para>
             </li> <li> 
            <para>
            (Optional) <c>tags</c> —Key-value pairs created and assigned to the probe.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateMonitorRequest.AggregationPeriod">
            <summary>
            Gets and sets the property AggregationPeriod. 
            <para>
            The time, in seconds, that metrics are aggregated and sent to Amazon CloudWatch. Valid
            values are either <c>30</c> or <c>60</c>. <c>60</c> is the default if no period is
            chosen.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateMonitorRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier to ensure the idempotency of the request. Only returned
            if a client token was provided in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateMonitorRequest.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name identifying the monitor. It can contain only letters, underscores (_), or
            dashes (-), and can be up to 200 characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateMonitorRequest.Probes">
            <summary>
            Gets and sets the property Probes. 
            <para>
            Displays a list of all of the probes created for a monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateMonitorRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of key-value pairs created and assigned to the monitor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.CreateMonitorResponse">
            <summary>
            This is the response object from the CreateMonitor operation.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateMonitorResponse.AggregationPeriod">
            <summary>
            Gets and sets the property AggregationPeriod. 
            <para>
            The number of seconds that metrics are aggregated by and sent to Amazon CloudWatch.
            This will be either <c>30</c> or <c>60</c>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateMonitorResponse.MonitorArn">
            <summary>
            Gets and sets the property MonitorArn. 
            <para>
            The ARN of the monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateMonitorResponse.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateMonitorResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateMonitorResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of key-value pairs assigned to the monitor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.CreateProbeRequest">
            <summary>
            Container for the parameters to the CreateProbe operation.
            Create a probe within a monitor. Once you create a probe, and it begins monitoring
            your network traffic, you'll incur billing charges for that probe. This action requires
            the <c>monitorName</c> parameter. Run <c>ListMonitors</c> to get a list of monitor
            names. Note the name of the <c>monitorName</c> you want to create the probe for.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateProbeRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier to ensure the idempotency of the request. Only returned
            if a client token was provided in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateProbeRequest.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor to associated with the probe. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateProbeRequest.Probe">
            <summary>
            Gets and sets the property Probe. 
            <para>
            Describes the details of an individual probe for a monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateProbeRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of key-value pairs created and assigned to the probe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.CreateProbeResponse">
            <summary>
            This is the response object from the CreateProbe operation.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateProbeResponse.AddressFamily">
            <summary>
            Gets and sets the property AddressFamily. 
            <para>
            Indicates whether the IP address is <c>IPV4</c> or <c>IPV6</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateProbeResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time and date that the probe was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateProbeResponse.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The destination IP address for the monitor. This must be either an IPv4 or IPv6 address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateProbeResponse.DestinationPort">
            <summary>
            Gets and sets the property DestinationPort. 
            <para>
            The port associated with the <c>destination</c>. This is required only if the <c>protocol</c>
            is <c>TCP</c> and must be a number between <c>1</c> and <c>65536</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateProbeResponse.ModifiedAt">
            <summary>
            Gets and sets the property ModifiedAt. 
            <para>
            The time and date when the probe was last modified. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateProbeResponse.PacketSize">
            <summary>
            Gets and sets the property PacketSize. 
            <para>
            The size of the packets sent between the source and destination. This must be a number
            between <c>56</c> and <c>8500</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateProbeResponse.ProbeArn">
            <summary>
            Gets and sets the property ProbeArn. 
            <para>
            The ARN of the probe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateProbeResponse.ProbeId">
            <summary>
            Gets and sets the property ProbeId. 
            <para>
            The ID of the probe for which details are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateProbeResponse.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
            The protocol used for the network traffic between the <c>source</c> and <c>destination</c>.
            This must be either <c>TCP</c> or <c>ICMP</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateProbeResponse.SourceArn">
            <summary>
            Gets and sets the property SourceArn. 
            <para>
            The ARN of the probe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateProbeResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the probe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateProbeResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of key-value pairs assigned to the probe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.CreateProbeResponse.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the source VPC or subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.DeleteMonitorRequest">
            <summary>
            Container for the parameters to the DeleteMonitor operation.
            Deletes a specified monitor.
            
             
            <para>
            This action requires the <c>monitorName</c> parameter. Run <c>ListMonitors</c> to
            get a list of monitor names. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.DeleteMonitorRequest.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor to delete. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.DeleteMonitorResponse">
            <summary>
            This is the response object from the DeleteMonitor operation.
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.DeleteProbeRequest">
            <summary>
            Container for the parameters to the DeleteProbe operation.
            Deletes the specified probe. Once a probe is deleted you'll no longer incur any billing
            fees for that probe.
            
             
            <para>
            This action requires both the <c>monitorName</c> and <c>probeId</c> parameters. Run
            <c>ListMonitors</c> to get a list of monitor names. Run <c>GetMonitor</c> to get a
            list of probes and probe IDs. You can only delete a single probe at a time using this
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.DeleteProbeRequest.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor to delete. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.DeleteProbeRequest.ProbeId">
            <summary>
            Gets and sets the property ProbeId. 
            <para>
            The ID of the probe to delete. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.DeleteProbeResponse">
            <summary>
            This is the response object from the DeleteProbe operation.
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.GetMonitorRequest">
            <summary>
            Container for the parameters to the GetMonitor operation.
            Returns details about a specific monitor. 
            
             
            <para>
            This action requires the <c>monitorName</c> parameter. Run <c>ListMonitors</c> to
            get a list of monitor names. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetMonitorRequest.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor that details are returned for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.GetMonitorResponse">
            <summary>
            This is the response object from the GetMonitor operation.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetMonitorResponse.AggregationPeriod">
            <summary>
            Gets and sets the property AggregationPeriod. 
            <para>
            The aggregation period for the specified monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetMonitorResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time and date when the monitor was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetMonitorResponse.ModifiedAt">
            <summary>
            Gets and sets the property ModifiedAt. 
            <para>
            The time and date when the monitor was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetMonitorResponse.MonitorArn">
            <summary>
            Gets and sets the property MonitorArn. 
            <para>
            The ARN of the selected monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetMonitorResponse.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetMonitorResponse.Probes">
            <summary>
            Gets and sets the property Probes. 
            <para>
            The details about each probe associated with that monitor. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetMonitorResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            Lists the status of the <c>state</c> of each monitor. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetMonitorResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of key-value pairs assigned to the monitor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.GetProbeRequest">
            <summary>
            Container for the parameters to the GetProbe operation.
            Returns the details about a probe. This action requires both the <c>monitorName</c>
            and <c>probeId</c> parameters. Run <c>ListMonitors</c> to get a list of monitor names.
            Run <c>GetMonitor</c> to get a list of probes and probe IDs.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetProbeRequest.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor associated with the probe. Run <c>ListMonitors</c> to get
            a list of monitor names.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetProbeRequest.ProbeId">
            <summary>
            Gets and sets the property ProbeId. 
            <para>
            The ID of the probe to get information about. Run <c>GetMonitor</c> action to get
            a list of probes and probe IDs for the monitor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.GetProbeResponse">
            <summary>
            This is the response object from the GetProbe operation.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetProbeResponse.AddressFamily">
            <summary>
            Gets and sets the property AddressFamily. 
            <para>
            Indicates whether the IP address is <c>IPV4</c> or <c>IPV6</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetProbeResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time and date that the probe was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetProbeResponse.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The destination IP address for the monitor. This must be either an IPv4 or IPv6 address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetProbeResponse.DestinationPort">
            <summary>
            Gets and sets the property DestinationPort. 
            <para>
            The port associated with the <c>destination</c>. This is required only if the <c>protocol</c>
            is <c>TCP</c> and must be a number between <c>1</c> and <c>65536</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetProbeResponse.ModifiedAt">
            <summary>
            Gets and sets the property ModifiedAt. 
            <para>
            The time and date that the probe was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetProbeResponse.PacketSize">
            <summary>
            Gets and sets the property PacketSize. 
            <para>
            The size of the packets sent between the source and destination. This must be a number
            between <c>56</c> and <c>8500</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetProbeResponse.ProbeArn">
            <summary>
            Gets and sets the property ProbeArn. 
            <para>
            The ARN of the probe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetProbeResponse.ProbeId">
            <summary>
            Gets and sets the property ProbeId. 
            <para>
            The ID of the probe for which details are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetProbeResponse.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
            The protocol used for the network traffic between the <c>source</c> and <c>destination</c>.
            This must be either <c>TCP</c> or <c>ICMP</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetProbeResponse.SourceArn">
            <summary>
            Gets and sets the property SourceArn. 
            <para>
            The ARN of the probe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetProbeResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the probe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetProbeResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of key-value pairs assigned to the probe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.GetProbeResponse.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the source VPC or subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.InternalServerException">
            <summary>
            The request processing has failed because of an unknown error, exception or failure.
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.InternalServerException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.InternalServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.InternalServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.InternalServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.InternalServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.InternalServerException.Retryable">
            <summary>
            Flag indicating if the exception is retryable and the associated retry
            details. A null value indicates that the exception is not retryable.
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.CreateMonitorProbeInputMarshaller">
            <summary>
            CreateMonitorProbeInput Marshaller
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.CreateMonitorProbeInputMarshaller.Marshall(Amazon.NetworkMonitor.Model.CreateMonitorProbeInput,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.CreateMonitorProbeInputMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.CreateMonitorRequestMarshaller">
            <summary>
            CreateMonitor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.CreateMonitorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.CreateMonitorRequestMarshaller.Marshall(Amazon.NetworkMonitor.Model.CreateMonitorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.CreateMonitorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.CreateMonitorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateMonitor operation
            </summary>  
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.CreateMonitorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.CreateMonitorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.CreateMonitorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.CreateProbeRequestMarshaller">
            <summary>
            CreateProbe Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.CreateProbeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.CreateProbeRequestMarshaller.Marshall(Amazon.NetworkMonitor.Model.CreateProbeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.CreateProbeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.CreateProbeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateProbe operation
            </summary>  
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.CreateProbeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.CreateProbeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.CreateProbeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.DeleteMonitorRequestMarshaller">
            <summary>
            DeleteMonitor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.DeleteMonitorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.DeleteMonitorRequestMarshaller.Marshall(Amazon.NetworkMonitor.Model.DeleteMonitorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.DeleteMonitorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.DeleteMonitorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteMonitor operation
            </summary>  
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.DeleteMonitorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.DeleteMonitorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.DeleteMonitorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.DeleteProbeRequestMarshaller">
            <summary>
            DeleteProbe Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.DeleteProbeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.DeleteProbeRequestMarshaller.Marshall(Amazon.NetworkMonitor.Model.DeleteProbeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.DeleteProbeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.DeleteProbeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteProbe operation
            </summary>  
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.DeleteProbeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.DeleteProbeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.DeleteProbeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.GetMonitorRequestMarshaller">
            <summary>
            GetMonitor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.GetMonitorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.GetMonitorRequestMarshaller.Marshall(Amazon.NetworkMonitor.Model.GetMonitorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.GetMonitorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.GetMonitorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetMonitor operation
            </summary>  
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.GetMonitorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.GetMonitorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.GetMonitorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.GetProbeRequestMarshaller">
            <summary>
            GetProbe Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.GetProbeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.GetProbeRequestMarshaller.Marshall(Amazon.NetworkMonitor.Model.GetProbeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.GetProbeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.GetProbeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetProbe operation
            </summary>  
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.GetProbeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.GetProbeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.GetProbeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ListMonitorsRequestMarshaller">
            <summary>
            ListMonitors Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ListMonitorsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ListMonitorsRequestMarshaller.Marshall(Amazon.NetworkMonitor.Model.ListMonitorsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ListMonitorsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ListMonitorsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListMonitors operation
            </summary>  
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ListMonitorsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ListMonitorsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ListMonitorsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.NetworkMonitor.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.MonitorSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for MonitorSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.MonitorSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#NetworkMonitor#Model#MonitorSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.MonitorSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.MonitorSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ProbeInputMarshaller">
            <summary>
            ProbeInput Marshaller
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ProbeInputMarshaller.Marshall(Amazon.NetworkMonitor.Model.ProbeInput,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ProbeInputMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ProbeUnmarshaller">
            <summary>
            Response Unmarshaller for Probe Object
            </summary>  
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ProbeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#NetworkMonitor#Model#Probe,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ProbeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ProbeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.NetworkMonitor.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.NetworkMonitor.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UpdateMonitorRequestMarshaller">
            <summary>
            UpdateMonitor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UpdateMonitorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UpdateMonitorRequestMarshaller.Marshall(Amazon.NetworkMonitor.Model.UpdateMonitorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UpdateMonitorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UpdateMonitorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateMonitor operation
            </summary>  
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UpdateMonitorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UpdateMonitorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UpdateMonitorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UpdateProbeRequestMarshaller">
            <summary>
            UpdateProbe Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UpdateProbeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UpdateProbeRequestMarshaller.Marshall(Amazon.NetworkMonitor.Model.UpdateProbeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UpdateProbeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UpdateProbeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateProbe operation
            </summary>  
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UpdateProbeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UpdateProbeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.UpdateProbeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.ListMonitorsRequest">
            <summary>
            Container for the parameters to the ListMonitors operation.
            Returns a list of all of your monitors.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.ListMonitorsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <c>nextToken</c> value.
            </para>
             
            <para>
            If <c>MaxResults</c> is given a value larger than 100, only 100 results are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.ListMonitorsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next page of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.ListMonitorsRequest.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The list of all monitors and their states.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.ListMonitorsResponse">
            <summary>
            This is the response object from the ListMonitors operation.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.ListMonitorsResponse.Monitors">
            <summary>
            Gets and sets the property Monitors. 
            <para>
            Lists individual details about each of your monitors.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.ListMonitorsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next page of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Lists the tags assigned to this resource.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Lists the tags assigned to the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.MonitorSummary">
            <summary>
            Displays summary information about a monitor.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.MonitorSummary.AggregationPeriod">
            <summary>
            Gets and sets the property AggregationPeriod. 
            <para>
            The time, in seconds, that metrics are collected and sent to Amazon CloudWatch. Valid
            values are either <c>30</c> or <c>60</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.MonitorSummary.MonitorArn">
            <summary>
            Gets and sets the property MonitorArn. 
            <para>
            The ARN of the monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.MonitorSummary.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.MonitorSummary.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.MonitorSummary.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of key-value pairs assigned to the monitor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.Probe">
            <summary>
            Describes information about a network monitor probe.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Probe.AddressFamily">
            <summary>
            Gets and sets the property AddressFamily. 
            <para>
            The IPv4 or IPv6 address for the probe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Probe.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time and date the probe was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Probe.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The destination for the probe. This should be either an <c>IPV4</c> or <c>IPV6</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Probe.DestinationPort">
            <summary>
            Gets and sets the property DestinationPort. 
            <para>
            The destination port for the probe. This is required only if the <c>protocol</c> is
            <c>TCP</c> and must be a number between <c>1</c> and <c>65536</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Probe.ModifiedAt">
            <summary>
            Gets and sets the property ModifiedAt. 
            <para>
            The time and date that the probe was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Probe.PacketSize">
            <summary>
            Gets and sets the property PacketSize. 
            <para>
            The size of the packets traveling between the <c>source</c> and <c>destination</c>.
            This must be a number between <c>56</c> and 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Probe.ProbeArn">
            <summary>
            Gets and sets the property ProbeArn. 
            <para>
            The ARN of the probe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Probe.ProbeId">
            <summary>
            Gets and sets the property ProbeId. 
            <para>
            The ID of the probe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Probe.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
            The network protocol for the destination. This can be either <c>TCP</c> or <c>ICMP</c>.
            If the protocol is <c>TCP</c>, then <c>port</c> is also required.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Probe.SourceArn">
            <summary>
            Gets and sets the property SourceArn. 
            <para>
            The ARN of the probe source subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Probe.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the probe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Probe.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of key-value pairs created and assigned to the probe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.Probe.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the source VPC subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.ProbeInput">
            <summary>
            Defines a probe when creating a probe or monitor.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.ProbeInput.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The destination IP address. This must be either <c>IPV4</c> or <c>IPV6</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.ProbeInput.DestinationPort">
            <summary>
            Gets and sets the property DestinationPort. 
            <para>
            The port associated with the <c>destination</c>. This is required only if the <c>protocol</c>
            is <c>TCP</c> and must be a number between <c>1</c> and <c>65536</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.ProbeInput.PacketSize">
            <summary>
            Gets and sets the property PacketSize. 
            <para>
            The size of the packets sent between the source and destination. This must be a number
            between <c>56</c> and <c>8500</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.ProbeInput.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
            The protocol used for the network traffic between the <c>source</c> and <c>destination</c>.
            This must be either <c>TCP</c> or <c>ICMP</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.ProbeInput.SourceArn">
            <summary>
            Gets and sets the property SourceArn. 
            <para>
            The ARN of the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.ProbeInput.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of key-value pairs created and assigned to the monitor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.ResourceNotFoundException">
            <summary>
            The specified resource does not exist.
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.ServiceQuotaExceededException">
            <summary>
            This request exceeds a service quota.
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ServiceQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ServiceQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ServiceQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Adds key-value pairs to a monitor or probe.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The ARN of the monitor or probe to tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of key-value pairs assigned to the monitor or probe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            <summary>
            The request was denied due to request throttling
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.ThrottlingException.Retryable">
            <summary>
            Flag indicating if the exception is retryable and the associated retry
            details. A null value indicates that the exception is not retryable.
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes a key-value pair from a monitor or probe.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The ARN of the monitor or probe that the tag should be removed from. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            The key-value pa
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.UpdateMonitorRequest">
            <summary>
            Container for the parameters to the UpdateMonitor operation.
            Updates the <c>aggregationPeriod</c> for a monitor. Monitors support an <c>aggregationPeriod</c>
            of either <c>30</c> or <c>60</c> seconds. This action requires the <c>monitorName</c>
            and <c>probeId</c> parameter. Run <c>ListMonitors</c> to get a list of monitor names.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateMonitorRequest.AggregationPeriod">
            <summary>
            Gets and sets the property AggregationPeriod. 
            <para>
            The aggregation time, in seconds, to change to. This must be either <c>30</c> or <c>60</c>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateMonitorRequest.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor to update. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.UpdateMonitorResponse">
            <summary>
            This is the response object from the UpdateMonitor operation.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateMonitorResponse.AggregationPeriod">
            <summary>
            Gets and sets the property AggregationPeriod. 
            <para>
            The changed aggregation period.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateMonitorResponse.MonitorArn">
            <summary>
            Gets and sets the property MonitorArn. 
            <para>
            The ARN of the monitor that was updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateMonitorResponse.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor that was updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateMonitorResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the updated monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateMonitorResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of key-value pairs associated with the monitor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.UpdateProbeRequest">
            <summary>
            Container for the parameters to the UpdateProbe operation.
            Updates a monitor probe. This action requires both the <c>monitorName</c> and <c>probeId</c>
            parameters. Run <c>ListMonitors</c> to get a list of monitor names. Run <c>GetMonitor</c>
            to get a list of probes and probe IDs. 
            
             
            <para>
            You can update the following para create a monitor with probes using this command.
            For each probe, you define the following:
            </para>
             <ul> <li> 
            <para>
             <c>state</c>—The state of the probe.
            </para>
             </li> <li> 
            <para>
             <c>destination</c>— The target destination IP address for the probe.
            </para>
             </li> <li> 
            <para>
             <c>destinationPort</c>—Required only if the protocol is <c>TCP</c>.
            </para>
             </li> <li> 
            <para>
             <c>protocol</c>—The communication protocol between the source and destination. This
            will be either <c>TCP</c> or <c>ICMP</c>.
            </para>
             </li> <li> 
            <para>
             <c>packetSize</c>—The size of the packets. This must be a number between <c>56</c>
            and <c>8500</c>.
            </para>
             </li> <li> 
            <para>
            (Optional) <c>tags</c> —Key-value pairs created and assigned to the probe.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateProbeRequest.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The updated IP address for the probe destination. This must be either an IPv4 or IPv6
            address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateProbeRequest.DestinationPort">
            <summary>
            Gets and sets the property DestinationPort. 
            <para>
            The updated port for the probe destination. This is required only if the <c>protocol</c>
            is <c>TCP</c> and must be a number between <c>1</c> and <c>65536</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateProbeRequest.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor that the probe was updated for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateProbeRequest.PacketSize">
            <summary>
            Gets and sets the property PacketSize. 
            <para>
            he updated packets size for network traffic between the source and destination. This
            must be a number between <c>56</c> and <c>8500</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateProbeRequest.ProbeId">
            <summary>
            Gets and sets the property ProbeId. 
            <para>
            The ID of the probe to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateProbeRequest.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
            The updated network protocol for the destination. This can be either <c>TCP</c> or
            <c>ICMP</c>. If the protocol is <c>TCP</c>, then <c>port</c> is also required.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateProbeRequest.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the probe update.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.UpdateProbeResponse">
            <summary>
            This is the response object from the UpdateProbe operation.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateProbeResponse.AddressFamily">
            <summary>
            Gets and sets the property AddressFamily. 
            <para>
            The updated IP address family. This must be either <c>IPV4</c> or <c>IPV6</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateProbeResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time and date that the probe was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateProbeResponse.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The updated destination IP address for the probe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateProbeResponse.DestinationPort">
            <summary>
            Gets and sets the property DestinationPort. 
            <para>
            The updated destination port. This must be a number between <c>1</c> and <c>65536</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateProbeResponse.ModifiedAt">
            <summary>
            Gets and sets the property ModifiedAt. 
            <para>
            The time and date that the probe was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateProbeResponse.PacketSize">
            <summary>
            Gets and sets the property PacketSize. 
            <para>
            The updated packet size for the probe. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateProbeResponse.ProbeArn">
            <summary>
            Gets and sets the property ProbeArn. 
            <para>
            The updated ARN of the probe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateProbeResponse.ProbeId">
            <summary>
            Gets and sets the property ProbeId. 
            <para>
            The updated ID of the probe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateProbeResponse.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
            The updated protocol for the probe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateProbeResponse.SourceArn">
            <summary>
            Gets and sets the property SourceArn. 
            <para>
            The updated ARN of the source subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateProbeResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the updated probe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateProbeResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Update tags for a probe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.UpdateProbeResponse.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The updated ID of the source VPC subnet ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.ValidationException">
            <summary>
            One of the parameters for the request is not valid.
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.IListMonitorsPaginator">
             <summary>
             Paginator for the ListMonitors operation
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.IListMonitorsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.IListMonitorsPaginator.Monitors">
            <summary>
            Enumerable containing all of the Monitors
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.INetworkMonitorPaginatorFactory">
             <summary>
             Paginators for the NetworkMonitor service
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.INetworkMonitorPaginatorFactory.ListMonitors(Amazon.NetworkMonitor.Model.ListMonitorsRequest)">
             <summary>
             Paginator for ListMonitors operation
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.ListMonitorsPaginator">
            <summary>
            Base class for ListMonitors paginators.
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.ListMonitorsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.Model.ListMonitorsPaginator.Monitors">
            <summary>
            Enumerable containing all of the Monitors
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.Model.NetworkMonitorPaginatorFactory">
             <summary>
             Paginators for the NetworkMonitor service
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.Model.NetworkMonitorPaginatorFactory.ListMonitors(Amazon.NetworkMonitor.Model.ListMonitorsRequest)">
             <summary>
             Paginator for ListMonitors operation
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.AmazonNetworkMonitorRequest">
            <summary>
            Base class for NetworkMonitor operation requests.
            </summary>
        </member>
        <member name="T:Amazon.NetworkMonitor.AddressFamily">
            <summary>
            Constants used for properties of type AddressFamily.
            </summary>
        </member>
        <member name="F:Amazon.NetworkMonitor.AddressFamily.IPV4">
            <summary>
            Constant IPV4 for AddressFamily
            </summary>
        </member>
        <member name="F:Amazon.NetworkMonitor.AddressFamily.IPV6">
            <summary>
            Constant IPV6 for AddressFamily
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.AddressFamily.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.AddressFamily.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.AddressFamily.op_Implicit(System.String)~Amazon.NetworkMonitor.AddressFamily">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.NetworkMonitor.MonitorState">
            <summary>
            Constants used for properties of type MonitorState.
            </summary>
        </member>
        <member name="F:Amazon.NetworkMonitor.MonitorState.ACTIVE">
            <summary>
            Constant ACTIVE for MonitorState
            </summary>
        </member>
        <member name="F:Amazon.NetworkMonitor.MonitorState.DELETING">
            <summary>
            Constant DELETING for MonitorState
            </summary>
        </member>
        <member name="F:Amazon.NetworkMonitor.MonitorState.ERROR">
            <summary>
            Constant ERROR for MonitorState
            </summary>
        </member>
        <member name="F:Amazon.NetworkMonitor.MonitorState.INACTIVE">
            <summary>
            Constant INACTIVE for MonitorState
            </summary>
        </member>
        <member name="F:Amazon.NetworkMonitor.MonitorState.PENDING">
            <summary>
            Constant PENDING for MonitorState
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.MonitorState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.MonitorState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.MonitorState.op_Implicit(System.String)~Amazon.NetworkMonitor.MonitorState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.NetworkMonitor.ProbeState">
            <summary>
            Constants used for properties of type ProbeState.
            </summary>
        </member>
        <member name="F:Amazon.NetworkMonitor.ProbeState.ACTIVE">
            <summary>
            Constant ACTIVE for ProbeState
            </summary>
        </member>
        <member name="F:Amazon.NetworkMonitor.ProbeState.DELETED">
            <summary>
            Constant DELETED for ProbeState
            </summary>
        </member>
        <member name="F:Amazon.NetworkMonitor.ProbeState.DELETING">
            <summary>
            Constant DELETING for ProbeState
            </summary>
        </member>
        <member name="F:Amazon.NetworkMonitor.ProbeState.ERROR">
            <summary>
            Constant ERROR for ProbeState
            </summary>
        </member>
        <member name="F:Amazon.NetworkMonitor.ProbeState.INACTIVE">
            <summary>
            Constant INACTIVE for ProbeState
            </summary>
        </member>
        <member name="F:Amazon.NetworkMonitor.ProbeState.PENDING">
            <summary>
            Constant PENDING for ProbeState
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.ProbeState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.ProbeState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.ProbeState.op_Implicit(System.String)~Amazon.NetworkMonitor.ProbeState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.NetworkMonitor.Protocol">
            <summary>
            Constants used for properties of type Protocol.
            </summary>
        </member>
        <member name="F:Amazon.NetworkMonitor.Protocol.ICMP">
            <summary>
            Constant ICMP for Protocol
            </summary>
        </member>
        <member name="F:Amazon.NetworkMonitor.Protocol.TCP">
            <summary>
            Constant TCP for Protocol
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.Protocol.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.Protocol.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.NetworkMonitor.Protocol.op_Implicit(System.String)~Amazon.NetworkMonitor.Protocol">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.NetworkMonitor.AmazonNetworkMonitorClient">
             <summary>
             <para>Implementation for accessing NetworkMonitor</para>
            
             Amazon CloudWatch Network Monitor is an Amazon Web Services active network monitoring
             service that identifies if a network issues exists within the Amazon Web Services
             network or your own company network. Within Network Monitor you'll choose the source
             VPCs and subnets from the Amazon Web Services network in which you operate and then
             you'll choose the destination IP addresses from your on-premises network. From these
             sources and destinations, Network Monitor creates a monitor containing all the possible
             source and destination combinations, each of which is called a probe, within a single
             monitor. These probes then monitor network traffic to help you identify where network
             issues might be affecting your traffic.
             
              
             <para>
             Before you begin, ensure the Amazon Web Services CLI is configured in the Amazon Web
             Services Account where you will create the Network Monitor resource. Network Monitor
             doesn’t support creation on cross-account resources, but you can create a Network
             Monitor in any subnet belonging to a VPC owned by your Account.
             </para>
              
             <para>
             For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/what-is-network-monitor.html">Using
             Amazon CloudWatch Network Monitor</a> in the <i>Amazon CloudWatch User Guide</i>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.#ctor">
             <summary>
             Constructs AmazonNetworkMonitorClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonNetworkMonitorClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.#ctor(Amazon.NetworkMonitor.AmazonNetworkMonitorConfig)">
             <summary>
             Constructs AmazonNetworkMonitorClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonNetworkMonitorClient Configuration Object</param>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonNetworkMonitorClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonNetworkMonitorClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.NetworkMonitor.AmazonNetworkMonitorConfig)">
            <summary>
            Constructs AmazonNetworkMonitorClient with AWS Credentials and an
            AmazonNetworkMonitorClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonNetworkMonitorClient Configuration Object</param>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonNetworkMonitorClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonNetworkMonitorClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.#ctor(System.String,System.String,Amazon.NetworkMonitor.AmazonNetworkMonitorConfig)">
            <summary>
            Constructs AmazonNetworkMonitorClient with AWS Access Key ID, AWS Secret Key and an
            AmazonNetworkMonitorClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonNetworkMonitorClient Configuration Object</param>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonNetworkMonitorClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonNetworkMonitorClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.#ctor(System.String,System.String,System.String,Amazon.NetworkMonitor.AmazonNetworkMonitorConfig)">
            <summary>
            Constructs AmazonNetworkMonitorClient with AWS Access Key ID, AWS Secret Key and an
            AmazonNetworkMonitorClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonNetworkMonitorClient Configuration Object</param>
        </member>
        <member name="P:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.CreateMonitorAsync(Amazon.NetworkMonitor.Model.CreateMonitorRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a monitor between a source subnet and destination IP address. Within a monitor
            you'll create one or more probes that monitor network traffic between your source
            Amazon Web Services VPC subnets and your destination IP addresses. Each probe then
            aggregates and sends metrics to Amazon CloudWatch.
            
             
            <para>
            You can also create a monitor with probes using this command. For each probe, you
            define the following:
            </para>
             <ul> <li> 
            <para>
             <c>source</c>—The subnet IDs where the probes will be created.
            </para>
             </li> <li> 
            <para>
             <c>destination</c>— The target destination IP address for the probe.
            </para>
             </li> <li> 
            <para>
             <c>destinationPort</c>—Required only if the protocol is <c>TCP</c>.
            </para>
             </li> <li> 
            <para>
             <c>protocol</c>—The communication protocol between the source and destination. This
            will be either <c>TCP</c> or <c>ICMP</c>.
            </para>
             </li> <li> 
            <para>
             <c>packetSize</c>—The size of the packets. This must be a number between <c>56</c>
            and <c>8500</c>.
            </para>
             </li> <li> 
            <para>
            (Optional) <c>tags</c> —Key-value pairs created and assigned to the probe.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateMonitor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateMonitor service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/CreateMonitor">REST API Reference for CreateMonitor Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.CreateProbeAsync(Amazon.NetworkMonitor.Model.CreateProbeRequest,System.Threading.CancellationToken)">
            <summary>
            Create a probe within a monitor. Once you create a probe, and it begins monitoring
            your network traffic, you'll incur billing charges for that probe. This action requires
            the <c>monitorName</c> parameter. Run <c>ListMonitors</c> to get a list of monitor
            names. Note the name of the <c>monitorName</c> you want to create the probe for.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateProbe service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateProbe service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/CreateProbe">REST API Reference for CreateProbe Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.DeleteMonitorAsync(Amazon.NetworkMonitor.Model.DeleteMonitorRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified monitor.
            
             
            <para>
            This action requires the <c>monitorName</c> parameter. Run <c>ListMonitors</c> to
            get a list of monitor names. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMonitor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteMonitor service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/DeleteMonitor">REST API Reference for DeleteMonitor Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.DeleteProbeAsync(Amazon.NetworkMonitor.Model.DeleteProbeRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified probe. Once a probe is deleted you'll no longer incur any billing
            fees for that probe.
            
             
            <para>
            This action requires both the <c>monitorName</c> and <c>probeId</c> parameters. Run
            <c>ListMonitors</c> to get a list of monitor names. Run <c>GetMonitor</c> to get a
            list of probes and probe IDs. You can only delete a single probe at a time using this
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteProbe service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteProbe service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/DeleteProbe">REST API Reference for DeleteProbe Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.GetMonitorAsync(Amazon.NetworkMonitor.Model.GetMonitorRequest,System.Threading.CancellationToken)">
            <summary>
            Returns details about a specific monitor. 
            
             
            <para>
            This action requires the <c>monitorName</c> parameter. Run <c>ListMonitors</c> to
            get a list of monitor names. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMonitor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMonitor service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/GetMonitor">REST API Reference for GetMonitor Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.GetProbeAsync(Amazon.NetworkMonitor.Model.GetProbeRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the details about a probe. This action requires both the <c>monitorName</c>
            and <c>probeId</c> parameters. Run <c>ListMonitors</c> to get a list of monitor names.
            Run <c>GetMonitor</c> to get a list of probes and probe IDs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetProbe service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetProbe service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/GetProbe">REST API Reference for GetProbe Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.ListMonitorsAsync(Amazon.NetworkMonitor.Model.ListMonitorsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all of your monitors.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListMonitors service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListMonitors service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/ListMonitors">REST API Reference for ListMonitors Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.ListTagsForResourceAsync(Amazon.NetworkMonitor.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the tags assigned to this resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.TagResourceAsync(Amazon.NetworkMonitor.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds key-value pairs to a monitor or probe.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.UntagResourceAsync(Amazon.NetworkMonitor.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a key-value pair from a monitor or probe.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.UpdateMonitorAsync(Amazon.NetworkMonitor.Model.UpdateMonitorRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the <c>aggregationPeriod</c> for a monitor. Monitors support an <c>aggregationPeriod</c>
            of either <c>30</c> or <c>60</c> seconds. This action requires the <c>monitorName</c>
            and <c>probeId</c> parameter. Run <c>ListMonitors</c> to get a list of monitor names.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateMonitor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateMonitor service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/UpdateMonitor">REST API Reference for UpdateMonitor Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.UpdateProbeAsync(Amazon.NetworkMonitor.Model.UpdateProbeRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a monitor probe. This action requires both the <c>monitorName</c> and <c>probeId</c>
            parameters. Run <c>ListMonitors</c> to get a list of monitor names. Run <c>GetMonitor</c>
            to get a list of probes and probe IDs. 
            
             
            <para>
            You can update the following para create a monitor with probes using this command.
            For each probe, you define the following:
            </para>
             <ul> <li> 
            <para>
             <c>state</c>—The state of the probe.
            </para>
             </li> <li> 
            <para>
             <c>destination</c>— The target destination IP address for the probe.
            </para>
             </li> <li> 
            <para>
             <c>destinationPort</c>—Required only if the protocol is <c>TCP</c>.
            </para>
             </li> <li> 
            <para>
             <c>protocol</c>—The communication protocol between the source and destination. This
            will be either <c>TCP</c> or <c>ICMP</c>.
            </para>
             </li> <li> 
            <para>
             <c>packetSize</c>—The size of the packets. This must be a number between <c>56</c>
            and <c>8500</c>.
            </para>
             </li> <li> 
            <para>
            (Optional) <c>tags</c> —Key-value pairs created and assigned to the probe.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateProbe service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateProbe service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/UpdateProbe">REST API Reference for UpdateProbe Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.AmazonNetworkMonitorClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.NetworkMonitor.IAmazonNetworkMonitor">
             <summary>
             <para>Interface for accessing NetworkMonitor</para>
            
             Amazon CloudWatch Network Monitor is an Amazon Web Services active network monitoring
             service that identifies if a network issues exists within the Amazon Web Services
             network or your own company network. Within Network Monitor you'll choose the source
             VPCs and subnets from the Amazon Web Services network in which you operate and then
             you'll choose the destination IP addresses from your on-premises network. From these
             sources and destinations, Network Monitor creates a monitor containing all the possible
             source and destination combinations, each of which is called a probe, within a single
             monitor. These probes then monitor network traffic to help you identify where network
             issues might be affecting your traffic.
             
              
             <para>
             Before you begin, ensure the Amazon Web Services CLI is configured in the Amazon Web
             Services Account where you will create the Network Monitor resource. Network Monitor
             doesn’t support creation on cross-account resources, but you can create a Network
             Monitor in any subnet belonging to a VPC owned by your Account.
             </para>
              
             <para>
             For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/what-is-network-monitor.html">Using
             Amazon CloudWatch Network Monitor</a> in the <i>Amazon CloudWatch User Guide</i>.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.NetworkMonitor.IAmazonNetworkMonitor.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.NetworkMonitor.IAmazonNetworkMonitor.CreateMonitorAsync(Amazon.NetworkMonitor.Model.CreateMonitorRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a monitor between a source subnet and destination IP address. Within a monitor
            you'll create one or more probes that monitor network traffic between your source
            Amazon Web Services VPC subnets and your destination IP addresses. Each probe then
            aggregates and sends metrics to Amazon CloudWatch.
            
             
            <para>
            You can also create a monitor with probes using this command. For each probe, you
            define the following:
            </para>
             <ul> <li> 
            <para>
             <c>source</c>—The subnet IDs where the probes will be created.
            </para>
             </li> <li> 
            <para>
             <c>destination</c>— The target destination IP address for the probe.
            </para>
             </li> <li> 
            <para>
             <c>destinationPort</c>—Required only if the protocol is <c>TCP</c>.
            </para>
             </li> <li> 
            <para>
             <c>protocol</c>—The communication protocol between the source and destination. This
            will be either <c>TCP</c> or <c>ICMP</c>.
            </para>
             </li> <li> 
            <para>
             <c>packetSize</c>—The size of the packets. This must be a number between <c>56</c>
            and <c>8500</c>.
            </para>
             </li> <li> 
            <para>
            (Optional) <c>tags</c> —Key-value pairs created and assigned to the probe.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateMonitor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateMonitor service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/CreateMonitor">REST API Reference for CreateMonitor Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.IAmazonNetworkMonitor.CreateProbeAsync(Amazon.NetworkMonitor.Model.CreateProbeRequest,System.Threading.CancellationToken)">
            <summary>
            Create a probe within a monitor. Once you create a probe, and it begins monitoring
            your network traffic, you'll incur billing charges for that probe. This action requires
            the <c>monitorName</c> parameter. Run <c>ListMonitors</c> to get a list of monitor
            names. Note the name of the <c>monitorName</c> you want to create the probe for.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateProbe service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateProbe service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/CreateProbe">REST API Reference for CreateProbe Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.IAmazonNetworkMonitor.DeleteMonitorAsync(Amazon.NetworkMonitor.Model.DeleteMonitorRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified monitor.
            
             
            <para>
            This action requires the <c>monitorName</c> parameter. Run <c>ListMonitors</c> to
            get a list of monitor names. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMonitor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteMonitor service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/DeleteMonitor">REST API Reference for DeleteMonitor Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.IAmazonNetworkMonitor.DeleteProbeAsync(Amazon.NetworkMonitor.Model.DeleteProbeRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified probe. Once a probe is deleted you'll no longer incur any billing
            fees for that probe.
            
             
            <para>
            This action requires both the <c>monitorName</c> and <c>probeId</c> parameters. Run
            <c>ListMonitors</c> to get a list of monitor names. Run <c>GetMonitor</c> to get a
            list of probes and probe IDs. You can only delete a single probe at a time using this
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteProbe service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteProbe service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/DeleteProbe">REST API Reference for DeleteProbe Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.IAmazonNetworkMonitor.GetMonitorAsync(Amazon.NetworkMonitor.Model.GetMonitorRequest,System.Threading.CancellationToken)">
            <summary>
            Returns details about a specific monitor. 
            
             
            <para>
            This action requires the <c>monitorName</c> parameter. Run <c>ListMonitors</c> to
            get a list of monitor names. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMonitor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMonitor service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/GetMonitor">REST API Reference for GetMonitor Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.IAmazonNetworkMonitor.GetProbeAsync(Amazon.NetworkMonitor.Model.GetProbeRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the details about a probe. This action requires both the <c>monitorName</c>
            and <c>probeId</c> parameters. Run <c>ListMonitors</c> to get a list of monitor names.
            Run <c>GetMonitor</c> to get a list of probes and probe IDs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetProbe service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetProbe service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/GetProbe">REST API Reference for GetProbe Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.IAmazonNetworkMonitor.ListMonitorsAsync(Amazon.NetworkMonitor.Model.ListMonitorsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all of your monitors.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListMonitors service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListMonitors service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/ListMonitors">REST API Reference for ListMonitors Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.IAmazonNetworkMonitor.ListTagsForResourceAsync(Amazon.NetworkMonitor.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the tags assigned to this resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.IAmazonNetworkMonitor.TagResourceAsync(Amazon.NetworkMonitor.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds key-value pairs to a monitor or probe.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.IAmazonNetworkMonitor.UntagResourceAsync(Amazon.NetworkMonitor.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a key-value pair from a monitor or probe.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.IAmazonNetworkMonitor.UpdateMonitorAsync(Amazon.NetworkMonitor.Model.UpdateMonitorRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the <c>aggregationPeriod</c> for a monitor. Monitors support an <c>aggregationPeriod</c>
            of either <c>30</c> or <c>60</c> seconds. This action requires the <c>monitorName</c>
            and <c>probeId</c> parameter. Run <c>ListMonitors</c> to get a list of monitor names.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateMonitor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateMonitor service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/UpdateMonitor">REST API Reference for UpdateMonitor Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.IAmazonNetworkMonitor.UpdateProbeAsync(Amazon.NetworkMonitor.Model.UpdateProbeRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a monitor probe. This action requires both the <c>monitorName</c> and <c>probeId</c>
            parameters. Run <c>ListMonitors</c> to get a list of monitor names. Run <c>GetMonitor</c>
            to get a list of probes and probe IDs. 
            
             
            <para>
            You can update the following para create a monitor with probes using this command.
            For each probe, you define the following:
            </para>
             <ul> <li> 
            <para>
             <c>state</c>—The state of the probe.
            </para>
             </li> <li> 
            <para>
             <c>destination</c>— The target destination IP address for the probe.
            </para>
             </li> <li> 
            <para>
             <c>destinationPort</c>—Required only if the protocol is <c>TCP</c>.
            </para>
             </li> <li> 
            <para>
             <c>protocol</c>—The communication protocol between the source and destination. This
            will be either <c>TCP</c> or <c>ICMP</c>.
            </para>
             </li> <li> 
            <para>
             <c>packetSize</c>—The size of the packets. This must be a number between <c>56</c>
            and <c>8500</c>.
            </para>
             </li> <li> 
            <para>
            (Optional) <c>tags</c> —Key-value pairs created and assigned to the probe.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateProbe service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateProbe service method, as returned by NetworkMonitor.</returns>
            <exception cref="T:Amazon.NetworkMonitor.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ThrottlingException">
            The request was denied due to request throttling
            </exception>
            <exception cref="T:Amazon.NetworkMonitor.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/networkmonitor-2023-08-01/UpdateProbe">REST API Reference for UpdateProbe Operation</seealso>
        </member>
        <member name="M:Amazon.NetworkMonitor.IAmazonNetworkMonitor.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
