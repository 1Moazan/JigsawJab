<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.Batch</name>
    </assembly>
    <members>
        <member name="T:Amazon.Batch.AmazonBatchConfig">
            <summary>
            Configuration for accessing Amazon Batch service
            </summary>
        </member>
        <member name="P:Amazon.Batch.AmazonBatchConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.Batch.AmazonBatchConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Batch.AmazonBatchConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.Batch.AmazonBatchConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.Batch.AmazonBatchDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon Batch service
            </summary>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            Batch
            </summary>
        </member>
        <member name="P:Amazon.Batch.AmazonBatchDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Batch.AmazonBatchDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Batch.AmazonBatchDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Batch.AmazonBatchDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Batch.AmazonBatchDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.Batch.AmazonBatchDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Endpoints.BatchEndpointParameters">
            <summary>
            Contains parameters used for resolving Batch endpoints
            Parameters can be sourced from client config and service operations
            Used by internal BatchEndpointProvider and BatchEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.Batch.Endpoints.BatchEndpointParameters.#ctor">
            <summary>
            BatchEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.Batch.Endpoints.BatchEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.Batch.Endpoints.BatchEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.Batch.Endpoints.BatchEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.Batch.Endpoints.BatchEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.Batch.AmazonBatchException">
            <summary>
             Common exception for the Batch service.
             </summary>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonBatchException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonBatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonBatchException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonBatchException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonBatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Batch.Internal.AmazonBatchEndpointProvider">
            <summary>
            Amazon Batch endpoint provider.
            Resolves endpoint for given set of BatchEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.Batch.Internal.AmazonBatchEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for BatchEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.Batch.Internal.AmazonBatchEndpointResolver">
            <summary>
            Amazon Batch endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for Batch service requests.
            Collects values for BatchEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses BatchEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Internal.AmazonBatchMetadata">
            <summary>
            Service metadata for  Amazon Batch service
            </summary>
        </member>
        <member name="P:Amazon.Batch.Internal.AmazonBatchMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Internal.AmazonBatchMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.Batch.AmazonBatchRequest">
            <summary>
            Base class for Batch operation requests.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ArrayProperties">
            <summary>
            An object that represents an Batch array job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ArrayProperties.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the array job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ArrayPropertiesDetail">
            <summary>
            An object that represents the array properties of a job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ArrayPropertiesDetail.Index">
            <summary>
            Gets and sets the property Index. 
            <para>
            The job index within the array that's associated with this job. This parameter is
            returned for array job children.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ArrayPropertiesDetail.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the array job. This parameter is returned for parent array jobs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ArrayPropertiesDetail.StatusSummary">
            <summary>
            Gets and sets the property StatusSummary. 
            <para>
            A summary of the number of array job children in each available job status. This parameter
            is returned for parent array jobs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ArrayPropertiesSummary">
            <summary>
            An object that represents the array properties of a job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ArrayPropertiesSummary.Index">
            <summary>
            Gets and sets the property Index. 
            <para>
            The job index within the array that's associated with this job. This parameter is
            returned for children of array jobs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ArrayPropertiesSummary.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the array job. This parameter is returned for parent array jobs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.AttemptContainerDetail">
            <summary>
            An object that represents the details of a container that's part of a job attempt.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptContainerDetail.ContainerInstanceArn">
            <summary>
            Gets and sets the property ContainerInstanceArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon ECS container instance that hosts the
            job attempt.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptContainerDetail.ExitCode">
            <summary>
            Gets and sets the property ExitCode. 
            <para>
            The exit code for the job attempt. A non-zero exit code is considered failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptContainerDetail.LogStreamName">
            <summary>
            Gets and sets the property LogStreamName. 
            <para>
            The name of the CloudWatch Logs log stream that's associated with the container. The
            log group for Batch jobs is <c>/aws/batch/job</c>. Each container attempt receives
            a log stream name when they reach the <c>RUNNING</c> status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptContainerDetail.NetworkInterfaces">
            <summary>
            Gets and sets the property NetworkInterfaces. 
            <para>
            The network interfaces that are associated with the job attempt.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptContainerDetail.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            A short (255 max characters) human-readable string to provide additional details for
            a running or stopped container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptContainerDetail.TaskArn">
            <summary>
            Gets and sets the property TaskArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon ECS task that's associated with the job
            attempt. Each container attempt receives a task ARN when they reach the <c>STARTING</c>
            status.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.AttemptDetail">
            <summary>
            An object that represents a job attempt.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptDetail.Container">
            <summary>
            Gets and sets the property Container. 
            <para>
            The details for the container in this job attempt.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptDetail.StartedAt">
            <summary>
            Gets and sets the property StartedAt. 
            <para>
            The Unix timestamp (in milliseconds) for when the attempt was started (when the attempt
            transitioned from the <c>STARTING</c> state to the <c>RUNNING</c> state).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptDetail.StatusReason">
            <summary>
            Gets and sets the property StatusReason. 
            <para>
            A short, human-readable string to provide additional details for the current status
            of the job attempt.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptDetail.StoppedAt">
            <summary>
            Gets and sets the property StoppedAt. 
            <para>
            The Unix timestamp (in milliseconds) for when the attempt was stopped (when the attempt
            transitioned from the <c>RUNNING</c> state to a terminal state, such as <c>SUCCEEDED</c>
            or <c>FAILED</c>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptDetail.TaskProperties">
            <summary>
            Gets and sets the property TaskProperties. 
            <para>
            The properties for a task definition that describes the container and volume definitions
            of an Amazon ECS task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.AttemptEcsTaskDetails">
            <summary>
            An object that represents the details of a task.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptEcsTaskDetails.ContainerInstanceArn">
            <summary>
            Gets and sets the property ContainerInstanceArn. 
            <para>
            The Amazon Resource Name (ARN) of the container instance that hosts the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptEcsTaskDetails.Containers">
            <summary>
            Gets and sets the property Containers. 
            <para>
            A list of containers that are included in the <c>taskProperties</c> list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptEcsTaskDetails.TaskArn">
            <summary>
            Gets and sets the property TaskArn. 
            <para>
            The ARN of the Amazon ECS task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.AttemptTaskContainerDetails">
            <summary>
            An object that represents the details of a container that's part of a job attempt.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptTaskContainerDetails.ExitCode">
            <summary>
            Gets and sets the property ExitCode. 
            <para>
            The exit code for the container’s attempt. A non-zero exit code is considered failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptTaskContainerDetails.LogStreamName">
            <summary>
            Gets and sets the property LogStreamName. 
            <para>
            The name of the Amazon CloudWatch Logs log stream that's associated with the container.
            The log group for Batch jobs is <c>/aws/batch/job</c>. Each container attempt receives
            a log stream name when they reach the <c>RUNNING</c> status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptTaskContainerDetails.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of a container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptTaskContainerDetails.NetworkInterfaces">
            <summary>
            Gets and sets the property NetworkInterfaces. 
            <para>
            The network interfaces that are associated with the job attempt.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptTaskContainerDetails.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            A short (255 max characters) string that's easy to understand and provides additional
            details for a running or stopped container.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.CancelJobRequest">
            <summary>
            Container for the parameters to the CancelJob operation.
            Cancels a job in an Batch job queue. Jobs that are in a <c>SUBMITTED</c>, <c>PENDING</c>,
            or <c>RUNNABLE</c> state are cancelled and the job status is updated to <c>FAILED</c>.
            
             <note> 
            <para>
            A <c>PENDING</c> job is canceled after all dependency jobs are completed. Therefore,
            it may take longer than expected to cancel a job in <c>PENDING</c> status.
            </para>
             
            <para>
            When you try to cancel an array parent job in <c>PENDING</c>, Batch attempts to cancel
            all child jobs. The array parent job is canceled when all child jobs are completed.
            </para>
             </note> 
            <para>
            Jobs that progressed to the <c>STARTING</c> or <c>RUNNING</c> state aren't canceled.
            However, the API operation still succeeds, even if no job is canceled. These jobs
            must be terminated with the <a>TerminateJob</a> operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CancelJobRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The Batch job ID of the job to cancel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CancelJobRequest.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            A message to attach to the job that explains the reason for canceling it. This message
            is returned by future <a>DescribeJobs</a> operations on the job. It is also recorded
            in the Batch activity logs.
            </para>
             
            <para>
            This parameter has as limit of 1024 characters.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.CancelJobResponse">
            <summary>
            This is the response object from the CancelJob operation.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ClientException">
            <summary>
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.ClientException.#ctor(System.String)">
            <summary>
            Constructs a new ClientException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Batch.Model.ClientException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Batch.Model.ClientException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Batch.Model.ClientException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Batch.Model.ClientException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Batch.Model.ComputeEnvironmentDetail">
            <summary>
            An object that represents an Batch compute environment.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.ComputeEnvironmentArn">
            <summary>
            Gets and sets the property ComputeEnvironmentArn. 
            <para>
            The Amazon Resource Name (ARN) of the compute environment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.ComputeEnvironmentName">
            <summary>
            Gets and sets the property ComputeEnvironmentName. 
            <para>
            The name of the compute environment. It can be up to 128 characters long. It can contain
            uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.ComputeResources">
            <summary>
            Gets and sets the property ComputeResources. 
            <para>
            The compute resources defined for the compute environment. For more information, see
            <a href="https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html">Compute
            environments</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.ContainerOrchestrationType">
            <summary>
            Gets and sets the property ContainerOrchestrationType. 
            <para>
            The orchestration type of the compute environment. The valid values are <c>ECS</c>
            (default) or <c>EKS</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.Context">
            <summary>
            Gets and sets the property Context. 
            <para>
            Reserved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.EcsClusterArn">
            <summary>
            Gets and sets the property EcsClusterArn. 
            <para>
            The Amazon Resource Name (ARN) of the underlying Amazon ECS cluster that the compute
            environment uses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.EksConfiguration">
            <summary>
            Gets and sets the property EksConfiguration. 
            <para>
            The configuration for the Amazon EKS cluster that supports the Batch compute environment.
            Only specify this parameter if the <c>containerOrchestrationType</c> is <c>EKS</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.ServiceRole">
            <summary>
            Gets and sets the property ServiceRole. 
            <para>
            The service role that's associated with the compute environment that allows Batch
            to make calls to Amazon Web Services API operations on your behalf. For more information,
            see <a href="https://docs.aws.amazon.com/batch/latest/userguide/service_IAM_role.html">Batch
            service IAM role</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the compute environment. The valid values are <c>ENABLED</c> or <c>DISABLED</c>.
            </para>
             
            <para>
            If the state is <c>ENABLED</c>, then the Batch scheduler can attempt to place jobs
            from an associated job queue on the compute resources within the environment. If the
            compute environment is managed, then it can scale its instances out or in automatically
            based on the job queue demand.
            </para>
             
            <para>
            If the state is <c>DISABLED</c>, then the Batch scheduler doesn't attempt to place
            jobs within the environment. Jobs in a <c>STARTING</c> or <c>RUNNING</c> state continue
            to progress normally. Managed compute environments in the <c>DISABLED</c> state don't
            scale out. 
            </para>
             <note> 
            <para>
            Compute environments in a <c>DISABLED</c> state may continue to incur billing charges.
            To prevent additional charges, turn off and then delete the compute environment. For
            more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/compute_environment_parameters.html#compute_environment_state">State</a>
            in the <i>Batch User Guide</i>.
            </para>
             </note> 
            <para>
            When an instance is idle, the instance scales down to the <c>minvCpus</c> value. However,
            the instance size doesn't change. For example, consider a <c>c5.8xlarge</c> instance
            with a <c>minvCpus</c> value of <c>4</c> and a <c>desiredvCpus</c> value of <c>36</c>.
            This instance doesn't scale down to a <c>c5.large</c> instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the compute environment (for example, <c>CREATING</c> or <c>VALID</c>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.StatusReason">
            <summary>
            Gets and sets the property StatusReason. 
            <para>
            A short, human-readable string to provide additional details for the current status
            of the compute environment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags applied to the compute environment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the compute environment: <c>MANAGED</c> or <c>UNMANAGED</c>. For more
            information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html">Compute
            environments</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.UnmanagedvCpus">
            <summary>
            Gets and sets the property UnmanagedvCpus. 
            <para>
            The maximum number of VCPUs expected to be used for an unmanaged compute environment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.UpdatePolicy">
            <summary>
            Gets and sets the property UpdatePolicy. 
            <para>
            Specifies the infrastructure update policy for the compute environment. For more information
            about infrastructure updates, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.Uuid">
            <summary>
            Gets and sets the property Uuid. 
            <para>
            Unique identifier for the compute environment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ComputeEnvironmentOrder">
            <summary>
            The order that compute environments are tried in for job placement within a queue.
            Compute environments are tried in ascending order. For example, if two compute environments
            are associated with a job queue, the compute environment with a lower order integer
            value is tried for job placement first. Compute environments must be in the <c>VALID</c>
            state before you can associate them with a job queue. All of the compute environments
            must be either EC2 (<c>EC2</c> or <c>SPOT</c>) or Fargate (<c>FARGATE</c> or <c>FARGATE_SPOT</c>);
            Amazon EC2 and Fargate compute environments can't be mixed.
            
             <note> 
            <para>
            All compute environments that are associated with a job queue must share the same
            architecture. Batch doesn't support mixing compute environment architecture types
            in a single job queue.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentOrder.ComputeEnvironment">
            <summary>
            Gets and sets the property ComputeEnvironment. 
            <para>
            The Amazon Resource Name (ARN) of the compute environment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentOrder.Order">
            <summary>
            Gets and sets the property Order. 
            <para>
            The order of the compute environment. Compute environments are tried in ascending
            order. For example, if two compute environments are associated with a job queue, the
            compute environment with a lower <c>order</c> integer value is tried for job placement
            first.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ComputeResource">
            <summary>
            An object that represents an Batch compute resource. For more information, see <a
            href="https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html">Compute
            environments</a> in the <i>Batch User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.AllocationStrategy">
            <summary>
            Gets and sets the property AllocationStrategy. 
            <para>
            The allocation strategy to use for the compute resource if not enough instances of
            the best fitting instance type can be allocated. This might be because of availability
            of the instance type in the Region or <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-resource-limits.html">Amazon
            EC2 service limits</a>. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/allocation-strategies.html">Allocation
            strategies</a> in the <i>Batch User Guide</i>.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note> <dl> <dt>BEST_FIT (default)</dt> <dd> 
            <para>
            Batch selects an instance type that best fits the needs of the jobs with a preference
            for the lowest-cost instance type. If additional instances of the selected instance
            type aren't available, Batch waits for the additional instances to be available. If
            there aren't enough instances available or the user is reaching <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-resource-limits.html">Amazon
            EC2 service limits</a>, additional jobs aren't run until the currently running jobs
            are completed. This allocation strategy keeps costs lower but can limit scaling. If
            you're using Spot Fleets with <c>BEST_FIT</c>, the Spot Fleet IAM Role must be specified.
            Compute resources that use a <c>BEST_FIT</c> allocation strategy don't support infrastructure
            updates and can't update some parameters. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>.
            </para>
             </dd> <dt>BEST_FIT_PROGRESSIVE</dt> <dd> 
            <para>
            Batch selects additional instance types that are large enough to meet the requirements
            of the jobs in the queue. Its preference is for instance types with lower cost vCPUs.
            If additional instances of the previously selected instance types aren't available,
            Batch selects new instance types.
            </para>
             </dd> <dt>SPOT_CAPACITY_OPTIMIZED</dt> <dd> 
            <para>
            Batch selects one or more instance types that are large enough to meet the requirements
            of the jobs in the queue. Its preference is for instance types that are less likely
            to be interrupted. This allocation strategy is only available for Spot Instance compute
            resources.
            </para>
             </dd> <dt>SPOT_PRICE_CAPACITY_OPTIMIZED</dt> <dd> 
            <para>
            The price and capacity optimized allocation strategy looks at both price and capacity
            to select the Spot Instance pools that are the least likely to be interrupted and
            have the lowest possible price. This allocation strategy is only available for Spot
            Instance compute resources.
            </para>
             </dd> </dl> 
            <para>
            With <c>BEST_FIT_PROGRESSIVE</c>,<c>SPOT_CAPACITY_OPTIMIZED</c> and <c>SPOT_PRICE_CAPACITY_OPTIMIZED</c>
            (recommended) strategies using On-Demand or Spot Instances, and the <c>BEST_FIT</c>
            strategy using Spot Instances, Batch might need to exceed <c>maxvCpus</c> to meet
            your capacity requirements. In this event, Batch never exceeds <c>maxvCpus</c> by
            more than a single instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.BidPercentage">
            <summary>
            Gets and sets the property BidPercentage. 
            <para>
            The maximum percentage that a Spot Instance price can be when compared with the On-Demand
            price for that instance type before instances are launched. For example, if your maximum
            percentage is 20%, then the Spot price must be less than 20% of the current On-Demand
            price for that Amazon EC2 instance. You always pay the lowest (market) price and never
            more than your maximum percentage. If you leave this field empty, the default value
            is 100% of the On-Demand price. For most use cases, we recommend leaving this field
            empty.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.DesiredvCpus">
            <summary>
            Gets and sets the property DesiredvCpus. 
            <para>
            The desired number of vCPUS in the compute environment. Batch modifies this value
            between the minimum and maximum values based on job queue demand.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.Ec2Configuration">
            <summary>
            Gets and sets the property Ec2Configuration. 
            <para>
            Provides information that's used to select Amazon Machine Images (AMIs) for Amazon
            EC2 instances in the compute environment. If <c>Ec2Configuration</c> isn't specified,
            the default is <c>ECS_AL2</c>.
            </para>
             
            <para>
            One or two values can be provided.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.Ec2KeyPair">
            <summary>
            Gets and sets the property Ec2KeyPair. 
            <para>
            The Amazon EC2 key pair that's used for instances launched in the compute environment.
            You can use this key pair to log in to your instances with SSH.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The Amazon Machine Image (AMI) ID used for instances launched in the compute environment.
            This parameter is overridden by the <c>imageIdOverride</c> member of the <c>Ec2Configuration</c>
            structure.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note> <note> 
            <para>
            The AMI that you choose for a compute environment must match the architecture of the
            instance types that you intend to use for that compute environment. For example, if
            your compute environment uses A1 instance types, the compute resource AMI that you
            choose must support ARM instances. Amazon ECS vends both x86 and ARM versions of the
            Amazon ECS-optimized Amazon Linux 2 AMI. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html#ecs-optimized-ami-linux-variants.html">Amazon
            ECS-optimized Amazon Linux 2 AMI</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.InstanceRole">
            <summary>
            Gets and sets the property InstanceRole. 
            <para>
            The Amazon ECS instance profile applied to Amazon EC2 instances in a compute environment.
            This parameter is required for Amazon EC2 instances types. You can specify the short
            name or full Amazon Resource Name (ARN) of an instance profile. For example, <c> <i>ecsInstanceRole</i>
            </c> or <c>arn:aws:iam::<i>&lt;aws_account_id&gt;</i>:instance-profile/<i>ecsInstanceRole</i>
            </c>. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/instance_IAM_role.html">Amazon
            ECS instance role</a> in the <i>Batch User Guide</i>.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.InstanceTypes">
            <summary>
            Gets and sets the property InstanceTypes. 
            <para>
            The instances types that can be launched. You can specify instance families to launch
            any instance type within those families (for example, <c>c5</c> or <c>p3</c>), or
            you can specify specific sizes within a family (such as <c>c5.8xlarge</c>). You can
            also choose <c>optimal</c> to select instance types (from the C4, M4, and R4 instance
            families) that match the demand of your job queues.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note> <note> 
            <para>
            When you create a compute environment, the instance types that you select for the
            compute environment must share the same architecture. For example, you can't mix x86
            and ARM instances in the same compute environment.
            </para>
             </note> <note> 
            <para>
            Currently, <c>optimal</c> uses instance types from the C4, M4, and R4 instance families.
            In Regions that don't have instance types from those instance families, instance types
            from the C5, M5, and R5 instance families are used.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.LaunchTemplate">
            <summary>
            Gets and sets the property LaunchTemplate. 
            <para>
            The launch template to use for your compute resources. Any other compute resource
            parameters that you specify in a <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_CreateComputeEnvironment.html">CreateComputeEnvironment</a>
            API operation override the same parameters in the launch template. You must specify
            either the launch template ID or launch template name in the request, but not both.
            For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/launch-templates.html">Launch
            template support</a> in the <i>Batch User Guide</i>.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.MaxvCpus">
            <summary>
            Gets and sets the property MaxvCpus. 
            <para>
            The maximum number of vCPUs that a compute environment can support.
            </para>
             <note> 
            <para>
            With <c>BEST_FIT_PROGRESSIVE</c>,<c>SPOT_CAPACITY_OPTIMIZED</c> and <c>SPOT_PRICE_CAPACITY_OPTIMIZED</c>
            (recommended) strategies using On-Demand or Spot Instances, and the <c>BEST_FIT</c>
            strategy using Spot Instances, Batch might need to exceed <c>maxvCpus</c> to meet
            your capacity requirements. In this event, Batch never exceeds <c>maxvCpus</c> by
            more than a single instance.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.MinvCpus">
            <summary>
            Gets and sets the property MinvCpus. 
            <para>
            The minimum number of vCPUs that a compute environment should maintain (even if the
            compute environment is <c>DISABLED</c>).
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.PlacementGroup">
            <summary>
            Gets and sets the property PlacementGroup. 
            <para>
            The Amazon EC2 placement group to associate with your compute resources. If you intend
            to submit multi-node parallel jobs to your compute environment, you should consider
            creating a cluster placement group and associate it with your compute resources. This
            keeps your multi-node parallel job on a logical grouping of instances within a single
            Availability Zone with high network flow potential. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement
            groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.SecurityGroupIds">
            <summary>
            Gets and sets the property SecurityGroupIds. 
            <para>
            The Amazon EC2 security groups that are associated with instances launched in the
            compute environment. One or more security groups must be specified, either in <c>securityGroupIds</c>
            or using a launch template referenced in <c>launchTemplate</c>. This parameter is
            required for jobs that are running on Fargate resources and must contain at least
            one security group. Fargate doesn't support launch templates. If security groups are
            specified using both <c>securityGroupIds</c> and <c>launchTemplate</c>, the values
            in <c>securityGroupIds</c> are used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.SpotIamFleetRole">
            <summary>
            Gets and sets the property SpotIamFleetRole. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a
            <c>SPOT</c> compute environment. This role is required if the allocation strategy
            set to <c>BEST_FIT</c> or if the allocation strategy isn't specified. For more information,
            see <a href="https://docs.aws.amazon.com/batch/latest/userguide/spot_fleet_IAM_role.html">Amazon
            EC2 spot fleet role</a> in the <i>Batch User Guide</i>.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note> <important> 
            <para>
            To tag your Spot Instances on creation, the Spot Fleet IAM role specified here must
            use the newer <b>AmazonEC2SpotFleetTaggingRole</b> managed policy. The previously
            recommended <b>AmazonEC2SpotFleetRole</b> managed policy doesn't have the required
            permissions to tag Spot Instances. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/troubleshooting.html#spot-instance-no-tag">Spot
            instances not tagged on creation</a> in the <i>Batch User Guide</i>.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
            The VPC subnets where the compute resources are launched. These subnets must be within
            the same VPC. Fargate compute resources can contain up to 16 subnets. For more information,
            see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">VPCs
            and subnets</a> in the <i>Amazon VPC User Guide</i>.
            </para>
             <note> 
            <para>
            Batch on Amazon EC2 and Batch on Amazon EKS support Local Zones. For more information,
            see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-local-zones">
            Local Zones</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>, <a href="https://docs.aws.amazon.com/eks/latest/userguide/local-zones.html">Amazon
            EKS and Amazon Web Services Local Zones</a> in the <i>Amazon EKS User Guide</i> and
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-regions-zones.html#clusters-local-zones">
            Amazon ECS clusters in Local Zones, Wavelength Zones, and Amazon Web Services Outposts</a>
            in the <i>Amazon ECS Developer Guide</i>.
            </para>
             
            <para>
            Batch on Fargate doesn't currently support Local Zones.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pair tags to be applied to Amazon EC2 resources that are launched in the
            compute environment. For Batch, these take the form of <c>"String1": "String2"</c>,
            where <c>String1</c> is the tag key and <c>String2</c> is the tag value-for example,
            <c>{ "Name": "Batch Instance - C4OnDemand" }</c>. This is helpful for recognizing
            your Batch instances in the Amazon EC2 console. Updating these tags requires an infrastructure
            update to the compute environment. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>. These tags aren't seen when
            using the Batch <c>ListTagsForResource</c> API operation.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of compute environment: <c>EC2</c>, <c>SPOT</c>, <c>FARGATE</c>, or <c>FARGATE_SPOT</c>.
            For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html">Compute
            environments</a> in the <i>Batch User Guide</i>.
            </para>
             
            <para>
             If you choose <c>SPOT</c>, you must also specify an Amazon EC2 Spot Fleet role with
            the <c>spotIamFleetRole</c> parameter. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/spot_fleet_IAM_role.html">Amazon
            EC2 spot fleet role</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ComputeResourceUpdate">
            <summary>
            An object that represents the attributes of a compute environment that can be updated.
            For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResourceUpdate.AllocationStrategy">
            <summary>
            Gets and sets the property AllocationStrategy. 
            <para>
            The allocation strategy to use for the compute resource if there's not enough instances
            of the best fitting instance type that can be allocated. This might be because of
            availability of the instance type in the Region or <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-resource-limits.html">Amazon
            EC2 service limits</a>. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/allocation-strategies.html">Allocation
            strategies</a> in the <i>Batch User Guide</i>.
            </para>
             
            <para>
            When updating a compute environment, changing the allocation strategy requires an
            infrastructure update of the compute environment. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>. <c>BEST_FIT</c> isn't supported
            when updating a compute environment.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note> <dl> <dt>BEST_FIT_PROGRESSIVE</dt> <dd> 
            <para>
            Batch selects additional instance types that are large enough to meet the requirements
            of the jobs in the queue. Its preference is for instance types with lower cost vCPUs.
            If additional instances of the previously selected instance types aren't available,
            Batch selects new instance types.
            </para>
             </dd> <dt>SPOT_CAPACITY_OPTIMIZED</dt> <dd> 
            <para>
            Batch selects one or more instance types that are large enough to meet the requirements
            of the jobs in the queue. Its preference is for instance types that are less likely
            to be interrupted. This allocation strategy is only available for Spot Instance compute
            resources.
            </para>
             </dd> <dt>SPOT_PRICE_CAPACITY_OPTIMIZED</dt> <dd> 
            <para>
            The price and capacity optimized allocation strategy looks at both price and capacity
            to select the Spot Instance pools that are the least likely to be interrupted and
            have the lowest possible price. This allocation strategy is only available for Spot
            Instance compute resources.
            </para>
             </dd> </dl> 
            <para>
            With <c>BEST_FIT_PROGRESSIVE</c>,<c>SPOT_CAPACITY_OPTIMIZED</c> and <c>SPOT_PRICE_CAPACITY_OPTIMIZED</c>
            (recommended) strategies using On-Demand or Spot Instances, and the <c>BEST_FIT</c>
            strategy using Spot Instances, Batch might need to exceed <c>maxvCpus</c> to meet
            your capacity requirements. In this event, Batch never exceeds <c>maxvCpus</c> by
            more than a single instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResourceUpdate.BidPercentage">
            <summary>
            Gets and sets the property BidPercentage. 
            <para>
            The maximum percentage that a Spot Instance price can be when compared with the On-Demand
            price for that instance type before instances are launched. For example, if your maximum
            percentage is 20%, the Spot price must be less than 20% of the current On-Demand price
            for that Amazon EC2 instance. You always pay the lowest (market) price and never more
            than your maximum percentage. For most use cases, we recommend leaving this field
            empty.
            </para>
             
            <para>
            When updating a compute environment, changing the bid percentage requires an infrastructure
            update of the compute environment. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResourceUpdate.DesiredvCpus">
            <summary>
            Gets and sets the property DesiredvCpus. 
            <para>
            The desired number of vCPUS in the compute environment. Batch modifies this value
            between the minimum and maximum values based on job queue demand.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note> <note> 
            <para>
            Batch doesn't support changing the desired number of vCPUs of an existing compute
            environment. Don't specify this parameter for compute environments using Amazon EKS
            clusters.
            </para>
             </note> <note> 
            <para>
            When you update the <c>desiredvCpus</c> setting, the value must be between the <c>minvCpus</c>
            and <c>maxvCpus</c> values. 
            </para>
             
            <para>
            Additionally, the updated <c>desiredvCpus</c> value must be greater than or equal
            to the current <c>desiredvCpus</c> value. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/troubleshooting.html#error-desired-vcpus-update">Troubleshooting
            Batch</a> in the <i>Batch User Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResourceUpdate.Ec2Configuration">
            <summary>
            Gets and sets the property Ec2Configuration. 
            <para>
            Provides information used to select Amazon Machine Images (AMIs) for Amazon EC2 instances
            in the compute environment. If <c>Ec2Configuration</c> isn't specified, the default
            is <c>ECS_AL2</c>.
            </para>
             
            <para>
            When updating a compute environment, changing this setting requires an infrastructure
            update of the compute environment. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>. To remove the Amazon EC2
            configuration and any custom AMI ID specified in <c>imageIdOverride</c>, set this
            value to an empty string.
            </para>
             
            <para>
            One or two values can be provided.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResourceUpdate.Ec2KeyPair">
            <summary>
            Gets and sets the property Ec2KeyPair. 
            <para>
            The Amazon EC2 key pair that's used for instances launched in the compute environment.
            You can use this key pair to log in to your instances with SSH. To remove the Amazon
            EC2 key pair, set this value to an empty string.
            </para>
             
            <para>
            When updating a compute environment, changing the Amazon EC2 key pair requires an
            infrastructure update of the compute environment. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResourceUpdate.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The Amazon Machine Image (AMI) ID used for instances launched in the compute environment.
            This parameter is overridden by the <c>imageIdOverride</c> member of the <c>Ec2Configuration</c>
            structure. To remove the custom AMI ID and use the default AMI ID, set this value
            to an empty string.
            </para>
             
            <para>
            When updating a compute environment, changing the AMI ID requires an infrastructure
            update of the compute environment. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note> <note> 
            <para>
            The AMI that you choose for a compute environment must match the architecture of the
            instance types that you intend to use for that compute environment. For example, if
            your compute environment uses A1 instance types, the compute resource AMI that you
            choose must support ARM instances. Amazon ECS vends both x86 and ARM versions of the
            Amazon ECS-optimized Amazon Linux 2 AMI. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html#ecs-optimized-ami-linux-variants.html">Amazon
            ECS-optimized Amazon Linux 2 AMI</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResourceUpdate.InstanceRole">
            <summary>
            Gets and sets the property InstanceRole. 
            <para>
            The Amazon ECS instance profile applied to Amazon EC2 instances in a compute environment.
            Required for Amazon EC2 instances. You can specify the short name or full Amazon Resource
            Name (ARN) of an instance profile. For example, <c> <i>ecsInstanceRole</i> </c> or
            <c>arn:aws:iam::<i>&lt;aws_account_id&gt;</i>:instance-profile/<i>ecsInstanceRole</i>
            </c>. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/instance_IAM_role.html">Amazon
            ECS instance role</a> in the <i>Batch User Guide</i>.
            </para>
             
            <para>
            When updating a compute environment, changing this setting requires an infrastructure
            update of the compute environment. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResourceUpdate.InstanceTypes">
            <summary>
            Gets and sets the property InstanceTypes. 
            <para>
            The instances types that can be launched. You can specify instance families to launch
            any instance type within those families (for example, <c>c5</c> or <c>p3</c>), or
            you can specify specific sizes within a family (such as <c>c5.8xlarge</c>). You can
            also choose <c>optimal</c> to select instance types (from the C4, M4, and R4 instance
            families) that match the demand of your job queues.
            </para>
             
            <para>
            When updating a compute environment, changing this setting requires an infrastructure
            update of the compute environment. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note> <note> 
            <para>
            When you create a compute environment, the instance types that you select for the
            compute environment must share the same architecture. For example, you can't mix x86
            and ARM instances in the same compute environment.
            </para>
             </note> <note> 
            <para>
            Currently, <c>optimal</c> uses instance types from the C4, M4, and R4 instance families.
            In Regions that don't have instance types from those instance families, instance types
            from the C5, M5, and R5 instance families are used.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResourceUpdate.LaunchTemplate">
            <summary>
            Gets and sets the property LaunchTemplate. 
            <para>
            The updated launch template to use for your compute resources. You must specify either
            the launch template ID or launch template name in the request, but not both. For more
            information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/launch-templates.html">Launch
            template support</a> in the <i>Batch User Guide</i>. To remove the custom launch template
            and use the default launch template, set <c>launchTemplateId</c> or <c>launchTemplateName</c>
            member of the launch template specification to an empty string. Removing the launch
            template from a compute environment will not remove the AMI specified in the launch
            template. In order to update the AMI specified in a launch template, the <c>updateToLatestImageVersion</c>
            parameter must be set to <c>true</c>.
            </para>
             
            <para>
            When updating a compute environment, changing the launch template requires an infrastructure
            update of the compute environment. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResourceUpdate.MaxvCpus">
            <summary>
            Gets and sets the property MaxvCpus. 
            <para>
            The maximum number of Amazon EC2 vCPUs that an environment can reach.
            </para>
             <note> 
            <para>
            With <c>BEST_FIT_PROGRESSIVE</c>,<c>SPOT_CAPACITY_OPTIMIZED</c> and <c>SPOT_PRICE_CAPACITY_OPTIMIZED</c>
            (recommended) strategies using On-Demand or Spot Instances, and the <c>BEST_FIT</c>
            strategy using Spot Instances, Batch might need to exceed <c>maxvCpus</c> to meet
            your capacity requirements. In this event, Batch never exceeds <c>maxvCpus</c> by
            more than a single instance.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResourceUpdate.MinvCpus">
            <summary>
            Gets and sets the property MinvCpus. 
            <para>
            The minimum number of vCPUs that an environment should maintain (even if the compute
            environment is <c>DISABLED</c>).
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResourceUpdate.PlacementGroup">
            <summary>
            Gets and sets the property PlacementGroup. 
            <para>
            The Amazon EC2 placement group to associate with your compute resources. If you intend
            to submit multi-node parallel jobs to your compute environment, you should consider
            creating a cluster placement group and associate it with your compute resources. This
            keeps your multi-node parallel job on a logical grouping of instances within a single
            Availability Zone with high network flow potential. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement
            groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
            </para>
             
            <para>
            When updating a compute environment, changing the placement group requires an infrastructure
            update of the compute environment. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResourceUpdate.SecurityGroupIds">
            <summary>
            Gets and sets the property SecurityGroupIds. 
            <para>
            The Amazon EC2 security groups that are associated with instances launched in the
            compute environment. This parameter is required for Fargate compute resources, where
            it can contain up to 5 security groups. For Fargate compute resources, providing an
            empty list is handled as if this parameter wasn't specified and no change is made.
            For Amazon EC2 compute resources, providing an empty list removes the security groups
            from the compute resource.
            </para>
             
            <para>
            When updating a compute environment, changing the Amazon EC2 security groups requires
            an infrastructure update of the compute environment. For more information, see <a
            href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResourceUpdate.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
            The VPC subnets where the compute resources are launched. Fargate compute resources
            can contain up to 16 subnets. For Fargate compute resources, providing an empty list
            will be handled as if this parameter wasn't specified and no change is made. For Amazon
            EC2 compute resources, providing an empty list removes the VPC subnets from the compute
            resource. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">VPCs
            and subnets</a> in the <i>Amazon VPC User Guide</i>.
            </para>
             
            <para>
            When updating a compute environment, changing the VPC subnets requires an infrastructure
            update of the compute environment. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>.
            </para>
             <note> 
            <para>
            Batch on Amazon EC2 and Batch on Amazon EKS support Local Zones. For more information,
            see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-local-zones">
            Local Zones</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>, <a href="https://docs.aws.amazon.com/eks/latest/userguide/local-zones.html">Amazon
            EKS and Amazon Web Services Local Zones</a> in the <i>Amazon EKS User Guide</i> and
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-regions-zones.html#clusters-local-zones">
            Amazon ECS clusters in Local Zones, Wavelength Zones, and Amazon Web Services Outposts</a>
            in the <i>Amazon ECS Developer Guide</i>.
            </para>
             
            <para>
            Batch on Fargate doesn't currently support Local Zones.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResourceUpdate.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pair tags to be applied to Amazon EC2 resources that are launched in the
            compute environment. For Batch, these take the form of <c>"String1": "String2"</c>,
            where <c>String1</c> is the tag key and <c>String2</c> is the tag value-for example,
            <c>{ "Name": "Batch Instance - C4OnDemand" }</c>. This is helpful for recognizing
            your Batch instances in the Amazon EC2 console. These tags aren't seen when using
            the Batch <c>ListTagsForResource</c> API operation.
            </para>
             
            <para>
            When updating a compute environment, changing this setting requires an infrastructure
            update of the compute environment. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            specify it.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResourceUpdate.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of compute environment: <c>EC2</c>, <c>SPOT</c>, <c>FARGATE</c>, or <c>FARGATE_SPOT</c>.
            For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html">Compute
            environments</a> in the <i>Batch User Guide</i>.
            </para>
             
            <para>
             If you choose <c>SPOT</c>, you must also specify an Amazon EC2 Spot Fleet role with
            the <c>spotIamFleetRole</c> parameter. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/spot_fleet_IAM_role.html">Amazon
            EC2 spot fleet role</a> in the <i>Batch User Guide</i>.
            </para>
             
            <para>
            When updating a compute environment, changing the type of a compute environment requires
            an infrastructure update of the compute environment. For more information, see <a
            href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResourceUpdate.UpdateToLatestImageVersion">
            <summary>
            Gets and sets the property UpdateToLatestImageVersion. 
            <para>
            Specifies whether the AMI ID is updated to the latest one that's supported by Batch
            when the compute environment has an infrastructure update. The default value is <c>false</c>.
            </para>
             <note> 
            <para>
            An AMI ID can either be specified in the <c>imageId</c> or <c>imageIdOverride</c>
            parameters or be determined by the launch template that's specified in the <c>launchTemplate</c>
            parameter. If an AMI ID is specified any of these ways, this parameter is ignored.
            For more information about to update AMI IDs during an infrastructure update, see
            <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html#updating-compute-environments-ami">Updating
            the AMI ID</a> in the <i>Batch User Guide</i>.
            </para>
             </note> 
            <para>
            When updating a compute environment, changing this setting requires an infrastructure
            update of the compute environment. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ContainerDetail">
            <summary>
            An object that represents the details of a container that's part of a job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            The command that's passed to the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.ContainerInstanceArn">
            <summary>
            Gets and sets the property ContainerInstanceArn. 
            <para>
            The Amazon Resource Name (ARN) of the container instance that the container is running
            on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.Environment">
            <summary>
            Gets and sets the property Environment. 
            <para>
            The environment variables to pass to a container.
            </para>
             <note> 
            <para>
            Environment variables cannot start with "<c>AWS_BATCH</c>". This naming convention
            is reserved for variables that Batch sets.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.EphemeralStorage">
            <summary>
            Gets and sets the property EphemeralStorage. 
            <para>
            The amount of ephemeral storage allocated for the task. This parameter is used to
            expand the total amount of ephemeral storage available, beyond the default amount,
            for tasks hosted on Fargate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.ExecutionRoleArn">
            <summary>
            Gets and sets the property ExecutionRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the execution role that Batch can assume. For more
            information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/execution-IAM-role.html">Batch
            execution IAM role</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.ExitCode">
            <summary>
            Gets and sets the property ExitCode. 
            <para>
            The exit code returned upon completion.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.FargatePlatformConfiguration">
            <summary>
            Gets and sets the property FargatePlatformConfiguration. 
            <para>
            The platform configuration for jobs that are running on Fargate resources. Jobs that
            are running on Amazon EC2 resources must not specify this parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The image used to start the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type of the underlying host infrastructure of a multi-node parallel job.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.JobRoleArn">
            <summary>
            Gets and sets the property JobRoleArn. 
            <para>
            The Amazon Resource Name (ARN) that's associated with the job when run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.LinuxParameters">
            <summary>
            Gets and sets the property LinuxParameters. 
            <para>
            Linux-specific modifications that are applied to the container, such as details for
            device mappings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.LogConfiguration">
            <summary>
            Gets and sets the property LogConfiguration. 
            <para>
            The log configuration specification for the container.
            </para>
             
            <para>
            This parameter maps to <c>LogConfig</c> in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <c>--log-driver</c> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>. By default, containers use the same logging driver that the Docker daemon
            uses. However, the container might use a different logging driver than the Docker
            daemon by specifying a log driver with this parameter in the container definition.
            To use a different logging driver for a container, the log system must be configured
            properly on the container instance. Or, alternatively, it must be configured on a
            different log server for remote logging options. For more information on the options
            for different supported log drivers, see <a href="https://docs.docker.com/engine/admin/logging/overview/">Configure
            logging drivers</a> in the Docker documentation.
            </para>
             <note> 
            <para>
            Batch currently supports a subset of the logging drivers available to the Docker daemon
            (shown in the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-jobdefinition-containerproperties-logconfiguration.html">LogConfiguration</a>
            data type). Additional log drivers might be available in future releases of the Amazon
            ECS container agent.
            </para>
             </note> 
            <para>
            This parameter requires version 1.18 of the Docker Remote API or greater on your container
            instance. To check the Docker Remote API version on your container instance, log in
            to your container instance and run the following command: <c>sudo docker version |
            grep "Server API version"</c> 
            </para>
             <note> 
            <para>
            The Amazon ECS container agent running on a container instance must register the logging
            drivers available on that instance with the <c>ECS_AVAILABLE_LOGGING_DRIVERS</c> environment
            variable before containers placed on that instance can use these log configuration
            options. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS container agent configuration</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.LogStreamName">
            <summary>
            Gets and sets the property LogStreamName. 
            <para>
            The name of the Amazon CloudWatch Logs log stream that's associated with the container.
            The log group for Batch jobs is <c>/aws/batch/job</c>. Each container attempt receives
            a log stream name when they reach the <c>RUNNING</c> status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            For jobs running on Amazon EC2 resources that didn't specify memory requirements using
            <c>resourceRequirements</c>, the number of MiB of memory reserved for the job. For
            other jobs, including all run on Fargate resources, see <c>resourceRequirements</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.MountPoints">
            <summary>
            Gets and sets the property MountPoints. 
            <para>
            The mount points for data volumes in your container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.NetworkConfiguration">
            <summary>
            Gets and sets the property NetworkConfiguration. 
            <para>
            The network configuration for jobs that are running on Fargate resources. Jobs that
            are running on Amazon EC2 resources must not specify this parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.NetworkInterfaces">
            <summary>
            Gets and sets the property NetworkInterfaces. 
            <para>
            The network interfaces that are associated with the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.Privileged">
            <summary>
            Gets and sets the property Privileged. 
            <para>
            When this parameter is true, the container is given elevated permissions on the host
            container instance (similar to the <c>root</c> user). The default value is <c>false</c>.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources and
            shouldn't be provided, or specified as <c>false</c>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.ReadonlyRootFilesystem">
            <summary>
            Gets and sets the property ReadonlyRootFilesystem. 
            <para>
            When this parameter is true, the container is given read-only access to its root file
            system. This parameter maps to <c>ReadonlyRootfs</c> in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <c>--read-only</c> option to <a href="https://docs.docker.com/engine/reference/commandline/run/">
            <c>docker run</c> </a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            A short (255 max characters) human-readable string to provide additional details for
            a running or stopped container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.RepositoryCredentials">
            <summary>
            Gets and sets the property RepositoryCredentials. 
            <para>
            The private repository authentication credentials to use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.ResourceRequirements">
            <summary>
            Gets and sets the property ResourceRequirements. 
            <para>
            The type and amount of resources to assign to a container. The supported resources
            include <c>GPU</c>, <c>MEMORY</c>, and <c>VCPU</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.RuntimePlatform">
            <summary>
            Gets and sets the property RuntimePlatform. 
            <para>
            An object that represents the compute environment architecture for Batch jobs on Fargate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.Secrets">
            <summary>
            Gets and sets the property Secrets. 
            <para>
            The secrets to pass to the container. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/specifying-sensitive-data.html">Specifying
            sensitive data</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.TaskArn">
            <summary>
            Gets and sets the property TaskArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon ECS task that's associated with the container
            job. Each container attempt receives a task ARN when they reach the <c>STARTING</c>
            status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.Ulimits">
            <summary>
            Gets and sets the property Ulimits. 
            <para>
            A list of <c>ulimit</c> values to set in the container. This parameter maps to <c>Ulimits</c>
            in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <c>--ulimit</c> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.User">
            <summary>
            Gets and sets the property User. 
            <para>
            The user name to use inside the container. This parameter maps to <c>User</c> in the
            <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create a container</a>
            section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker Remote API</a>
            and the <c>--user</c> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.Vcpus">
            <summary>
            Gets and sets the property Vcpus. 
            <para>
            The number of vCPUs reserved for the container. For jobs that run on Amazon EC2 resources,
            you can specify the vCPU requirement for the job using <c>resourceRequirements</c>,
            but you can't specify the vCPU requirements in both the <c>vcpus</c> and <c>resourceRequirements</c>
            object. This parameter maps to <c>CpuShares</c> in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <c>--cpu-shares</c> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>. Each vCPU is equivalent to 1,024 CPU shares. You must specify at least one
            vCPU. This is required but can be specified in several places. It must be specified
            for each node at least once.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that run on Fargate resources. For jobs that
            run on Fargate resources, you must specify the vCPU requirement for the job using
            <c>resourceRequirements</c>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.Volumes">
            <summary>
            Gets and sets the property Volumes. 
            <para>
            A list of volumes that are associated with the job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ContainerOverrides">
            <summary>
            The overrides that should be sent to a container.
            
             
            <para>
            For information about using Batch overrides when you connect event sources to targets,
            see <a href="https://docs.aws.amazon.com/eventbridge/latest/pipes-reference/API_BatchContainerOverrides.html">BatchContainerOverrides</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerOverrides.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            The command to send to the container that overrides the default command from the Docker
            image or the job definition.
            </para>
             <note> 
            <para>
            This parameter can't contain an empty string.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerOverrides.Environment">
            <summary>
            Gets and sets the property Environment. 
            <para>
            The environment variables to send to the container. You can add new environment variables,
            which are added to the container at launch, or you can override the existing environment
            variables from the Docker image or the job definition.
            </para>
             <note> 
            <para>
            Environment variables cannot start with "<c>AWS_BATCH</c>". This naming convention
            is reserved for variables that Batch sets.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerOverrides.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type to use for a multi-node parallel job.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to single-node container jobs or jobs that run on
            Fargate resources, and shouldn't be provided.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerOverrides.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            This parameter is deprecated, use <c>resourceRequirements</c> to override the memory
            requirements specified in the job definition. It's not supported for jobs running
            on Fargate resources. For jobs that run on Amazon EC2 resources, it overrides the
            <c>memory</c> parameter set in the job definition, but doesn't override any memory
            requirement that's specified in the <c>resourceRequirements</c> structure in the job
            definition. To override memory requirements that are specified in the <c>resourceRequirements</c>
            structure in the job definition, <c>resourceRequirements</c> must be specified in
            the <c>SubmitJob</c> request, with <c>type</c> set to <c>MEMORY</c> and <c>value</c>
            set to the new value. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/troubleshooting.html#override-resource-requirements">Can't
            override job definition resource requirements</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerOverrides.ResourceRequirements">
            <summary>
            Gets and sets the property ResourceRequirements. 
            <para>
            The type and amount of resources to assign to a container. This overrides the settings
            in the job definition. The supported resources include <c>GPU</c>, <c>MEMORY</c>,
            and <c>VCPU</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerOverrides.Vcpus">
            <summary>
            Gets and sets the property Vcpus. 
            <para>
            This parameter is deprecated, use <c>resourceRequirements</c> to override the <c>vcpus</c>
            parameter that's set in the job definition. It's not supported for jobs running on
            Fargate resources. For jobs that run on Amazon EC2 resources, it overrides the <c>vcpus</c>
            parameter set in the job definition, but doesn't override any vCPU requirement specified
            in the <c>resourceRequirements</c> structure in the job definition. To override vCPU
            requirements that are specified in the <c>resourceRequirements</c> structure in the
            job definition, <c>resourceRequirements</c> must be specified in the <c>SubmitJob</c>
            request, with <c>type</c> set to <c>VCPU</c> and <c>value</c> set to the new value.
            For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/troubleshooting.html#override-resource-requirements">Can't
            override job definition resource requirements</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ContainerProperties">
            <summary>
            Container properties are used for Amazon ECS based job definitions. These properties
            to describe the container that's launched as part of a job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            The command that's passed to the container. This parameter maps to <c>Cmd</c> in the
            <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create a container</a>
            section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker Remote API</a>
            and the <c>COMMAND</c> parameter to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>. For more information, see <a href="https://docs.docker.com/engine/reference/builder/#cmd">https://docs.docker.com/engine/reference/builder/#cmd</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.Environment">
            <summary>
            Gets and sets the property Environment. 
            <para>
            The environment variables to pass to a container. This parameter maps to <c>Env</c>
            in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <c>--env</c> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
             <important> 
            <para>
            We don't recommend using plaintext environment variables for sensitive information,
            such as credential data.
            </para>
             </important> <note> 
            <para>
            Environment variables cannot start with "<c>AWS_BATCH</c>". This naming convention
            is reserved for variables that Batch sets.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.EphemeralStorage">
            <summary>
            Gets and sets the property EphemeralStorage. 
            <para>
            The amount of ephemeral storage to allocate for the task. This parameter is used to
            expand the total amount of ephemeral storage available, beyond the default amount,
            for tasks hosted on Fargate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.ExecutionRoleArn">
            <summary>
            Gets and sets the property ExecutionRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the execution role that Batch can assume. For jobs
            that run on Fargate resources, you must provide an execution role. For more information,
            see <a href="https://docs.aws.amazon.com/batch/latest/userguide/execution-IAM-role.html">Batch
            execution IAM role</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.FargatePlatformConfiguration">
            <summary>
            Gets and sets the property FargatePlatformConfiguration. 
            <para>
            The platform configuration for jobs that are running on Fargate resources. Jobs that
            are running on Amazon EC2 resources must not specify this parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            Required. The image used to start a container. This string is passed directly to the
            Docker daemon. Images in the Docker Hub registry are available by default. Other repositories
            are specified with <c> <i>repository-url</i>/<i>image</i>:<i>tag</i> </c>. It can
            be 255 characters long. It can contain uppercase and lowercase letters, numbers, hyphens
            (-), underscores (_), colons (:), periods (.), forward slashes (/), and number signs
            (#). This parameter maps to <c>Image</c> in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <c>IMAGE</c> parameter of <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
             <note> 
            <para>
            Docker image architecture must match the processor architecture of the compute resources
            that they're scheduled on. For example, ARM-based Docker images can only run on ARM-based
            compute resources.
            </para>
             </note> <ul> <li> 
            <para>
            Images in Amazon ECR Public repositories use the full <c>registry/repository[:tag]</c>
            or <c>registry/repository[@digest]</c> naming conventions. For example, <c>public.ecr.aws/<i>registry_alias</i>/<i>my-web-app</i>:<i>latest</i>
            </c>.
            </para>
             </li> <li> 
            <para>
            Images in Amazon ECR repositories use the full registry and repository URI (for example,
            <c>123456789012.dkr.ecr.&lt;region-name&gt;.amazonaws.com/&lt;repository-name&gt;</c>).
            </para>
             </li> <li> 
            <para>
            Images in official repositories on Docker Hub use a single name (for example, <c>ubuntu</c>
            or <c>mongo</c>).
            </para>
             </li> <li> 
            <para>
            Images in other repositories on Docker Hub are qualified with an organization name
            (for example, <c>amazon/amazon-ecs-agent</c>).
            </para>
             </li> <li> 
            <para>
            Images in other online repositories are qualified further by a domain name (for example,
            <c>quay.io/assemblyline/ubuntu</c>).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type to use for a multi-node parallel job. All node groups in a multi-node
            parallel job must use the same instance type.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to single-node container jobs or jobs that run on
            Fargate resources, and shouldn't be provided.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.JobRoleArn">
            <summary>
            Gets and sets the property JobRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role that the container can assume for Amazon
            Web Services permissions. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html">IAM
            roles for tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.LinuxParameters">
            <summary>
            Gets and sets the property LinuxParameters. 
            <para>
            Linux-specific modifications that are applied to the container, such as details for
            device mappings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.LogConfiguration">
            <summary>
            Gets and sets the property LogConfiguration. 
            <para>
            The log configuration specification for the container.
            </para>
             
            <para>
            This parameter maps to <c>LogConfig</c> in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <c>--log-driver</c> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>. By default, containers use the same logging driver that the Docker daemon
            uses. However the container might use a different logging driver than the Docker daemon
            by specifying a log driver with this parameter in the container definition. To use
            a different logging driver for a container, the log system must be configured properly
            on the container instance (or on a different log server for remote logging options).
            For more information on the options for different supported log drivers, see <a href="https://docs.docker.com/engine/admin/logging/overview/">Configure
            logging drivers</a> in the Docker documentation.
            </para>
             <note> 
            <para>
            Batch currently supports a subset of the logging drivers available to the Docker daemon
            (shown in the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-jobdefinition-containerproperties-logconfiguration.html">LogConfiguration</a>
            data type).
            </para>
             </note> 
            <para>
            This parameter requires version 1.18 of the Docker Remote API or greater on your container
            instance. To check the Docker Remote API version on your container instance, log in
            to your container instance and run the following command: <c>sudo docker version |
            grep "Server API version"</c> 
            </para>
             <note> 
            <para>
            The Amazon ECS container agent running on a container instance must register the logging
            drivers available on that instance with the <c>ECS_AVAILABLE_LOGGING_DRIVERS</c> environment
            variable before containers placed on that instance can use these log configuration
            options. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS container agent configuration</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            This parameter is deprecated, use <c>resourceRequirements</c> to specify the memory
            requirements for the job definition. It's not supported for jobs running on Fargate
            resources. For jobs that run on Amazon EC2 resources, it specifies the memory hard
            limit (in MiB) for a container. If your container attempts to exceed the specified
            number, it's terminated. You must specify at least 4 MiB of memory for a job using
            this parameter. The memory hard limit can be specified in several places. It must
            be specified for each node at least once.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.MountPoints">
            <summary>
            Gets and sets the property MountPoints. 
            <para>
            The mount points for data volumes in your container. This parameter maps to <c>Volumes</c>
            in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <c>--volume</c> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.NetworkConfiguration">
            <summary>
            Gets and sets the property NetworkConfiguration. 
            <para>
            The network configuration for jobs that are running on Fargate resources. Jobs that
            are running on Amazon EC2 resources must not specify this parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.Privileged">
            <summary>
            Gets and sets the property Privileged. 
            <para>
            When this parameter is true, the container is given elevated permissions on the host
            container instance (similar to the <c>root</c> user). This parameter maps to <c>Privileged</c>
            in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <c>--privileged</c> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>. The default value is false.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources and
            shouldn't be provided, or specified as false.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.ReadonlyRootFilesystem">
            <summary>
            Gets and sets the property ReadonlyRootFilesystem. 
            <para>
            When this parameter is true, the container is given read-only access to its root file
            system. This parameter maps to <c>ReadonlyRootfs</c> in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <c>--read-only</c> option to <c>docker run</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.RepositoryCredentials">
            <summary>
            Gets and sets the property RepositoryCredentials. 
            <para>
            The private repository authentication credentials to use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.ResourceRequirements">
            <summary>
            Gets and sets the property ResourceRequirements. 
            <para>
            The type and amount of resources to assign to a container. The supported resources
            include <c>GPU</c>, <c>MEMORY</c>, and <c>VCPU</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.RuntimePlatform">
            <summary>
            Gets and sets the property RuntimePlatform. 
            <para>
            An object that represents the compute environment architecture for Batch jobs on Fargate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.Secrets">
            <summary>
            Gets and sets the property Secrets. 
            <para>
            The secrets for the container. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/specifying-sensitive-data.html">Specifying
            sensitive data</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.Ulimits">
            <summary>
            Gets and sets the property Ulimits. 
            <para>
            A list of <c>ulimits</c> to set in the container. This parameter maps to <c>Ulimits</c>
            in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <c>--ulimit</c> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources and
            shouldn't be provided.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.User">
            <summary>
            Gets and sets the property User. 
            <para>
            The user name to use inside the container. This parameter maps to <c>User</c> in the
            <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create a container</a>
            section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker Remote API</a>
            and the <c>--user</c> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.Vcpus">
            <summary>
            Gets and sets the property Vcpus. 
            <para>
            This parameter is deprecated, use <c>resourceRequirements</c> to specify the vCPU
            requirements for the job definition. It's not supported for jobs running on Fargate
            resources. For jobs running on Amazon EC2 resources, it specifies the number of vCPUs
            reserved for the job.
            </para>
             
            <para>
            Each vCPU is equivalent to 1,024 CPU shares. This parameter maps to <c>CpuShares</c>
            in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <c>--cpu-shares</c> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>. The number of vCPUs must be specified but can be specified in several places.
            You must specify it at least once for each node.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.Volumes">
            <summary>
            Gets and sets the property Volumes. 
            <para>
            A list of data volumes used in a job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ContainerSummary">
            <summary>
            An object that represents summary details of a container within a job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerSummary.ExitCode">
            <summary>
            Gets and sets the property ExitCode. 
            <para>
            The exit code to return upon completion.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerSummary.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            A short (255 max characters) human-readable string to provide additional details for
            a running or stopped container.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.CreateComputeEnvironmentRequest">
            <summary>
            Container for the parameters to the CreateComputeEnvironment operation.
            Creates an Batch compute environment. You can create <c>MANAGED</c> or <c>UNMANAGED</c>
            compute environments. <c>MANAGED</c> compute environments can use Amazon EC2 or Fargate
            resources. <c>UNMANAGED</c> compute environments can only use EC2 resources.
            
             
            <para>
            In a managed compute environment, Batch manages the capacity and instance types of
            the compute resources within the environment. This is based on the compute resource
            specification that you define or the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html">launch
            template</a> that you specify when you create the compute environment. Either, you
            can choose to use EC2 On-Demand Instances and EC2 Spot Instances. Or, you can use
            Fargate and Fargate Spot capacity in your managed compute environment. You can optionally
            set a maximum price so that Spot Instances only launch when the Spot Instance price
            is less than a specified percentage of the On-Demand price.
            </para>
             <note> 
            <para>
            Multi-node parallel jobs aren't supported on Spot Instances.
            </para>
             </note> 
            <para>
            In an unmanaged compute environment, you can manage your own EC2 compute resources
            and have flexibility with how you configure your compute resources. For example, you
            can use custom AMIs. However, you must verify that each of your AMIs meet the Amazon
            ECS container instance AMI specification. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container_instance_AMIs.html">container
            instance AMIs</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            After you created your unmanaged compute environment, you can use the <a>DescribeComputeEnvironments</a>
            operation to find the Amazon ECS cluster that's associated with it. Then, launch your
            container instances into that Amazon ECS cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_container_instance.html">Launching
            an Amazon ECS container instance</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             <note> 
            <para>
            To create a compute environment that uses EKS resources, the caller must have permissions
            to call <c>eks:DescribeCluster</c>.
            </para>
             </note> <note> 
            <para>
            Batch doesn't automatically upgrade the AMIs in a compute environment after it's created.
            For example, it also doesn't update the AMIs in your compute environment when a newer
            version of the Amazon ECS optimized AMI is available. You're responsible for the management
            of the guest operating system. This includes any updates and security patches. You're
            also responsible for any additional application software or utilities that you install
            on the compute resources. There are two ways to use a new AMI for your Batch jobs.
            The original method is to complete these steps:
            </para>
             <ol> <li> 
            <para>
            Create a new compute environment with the new AMI.
            </para>
             </li> <li> 
            <para>
            Add the compute environment to an existing job queue.
            </para>
             </li> <li> 
            <para>
            Remove the earlier compute environment from your job queue.
            </para>
             </li> <li> 
            <para>
            Delete the earlier compute environment.
            </para>
             </li> </ol> 
            <para>
            In April 2022, Batch added enhanced support for updating compute environments. For
            more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a>. To use the enhanced updating of compute environments to
            update AMIs, follow these rules:
            </para>
             <ul> <li> 
            <para>
            Either don't set the service role (<c>serviceRole</c>) parameter or set it to the
            <b>AWSBatchServiceRole</b> service-linked role.
            </para>
             </li> <li> 
            <para>
            Set the allocation strategy (<c>allocationStrategy</c>) parameter to <c>BEST_FIT_PROGRESSIVE</c>,
            <c>SPOT_CAPACITY_OPTIMIZED</c>, or <c>SPOT_PRICE_CAPACITY_OPTIMIZED</c>.
            </para>
             </li> <li> 
            <para>
            Set the update to latest image version (<c>updateToLatestImageVersion</c>) parameter
            to <c>true</c>. The <c>updateToLatestImageVersion</c> parameter is used when you update
            a compute environment. This parameter is ignored when you create a compute environment.
            </para>
             </li> <li> 
            <para>
            Don't specify an AMI ID in <c>imageId</c>, <c>imageIdOverride</c> (in <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_Ec2Configuration.html">
            <c>ec2Configuration</c> </a>), or in the launch template (<c>launchTemplate</c>).
            In that case, Batch selects the latest Amazon ECS optimized AMI that's supported by
            Batch at the time the infrastructure update is initiated. Alternatively, you can specify
            the AMI ID in the <c>imageId</c> or <c>imageIdOverride</c> parameters, or the launch
            template identified by the <c>LaunchTemplate</c> properties. Changing any of these
            properties starts an infrastructure update. If the AMI ID is specified in the launch
            template, it can't be replaced by specifying an AMI ID in either the <c>imageId</c>
            or <c>imageIdOverride</c> parameters. It can only be replaced by specifying a different
            launch template, or if the launch template version is set to <c>$Default</c> or <c>$Latest</c>,
            by setting either a new default version for the launch template (if <c>$Default</c>)
            or by adding a new version to the launch template (if <c>$Latest</c>).
            </para>
             </li> </ul> 
            <para>
            If these rules are followed, any update that starts an infrastructure update causes
            the AMI ID to be re-selected. If the <c>version</c> setting in the launch template
            (<c>launchTemplate</c>) is set to <c>$Latest</c> or <c>$Default</c>, the latest or
            default version of the launch template is evaluated up at the time of the infrastructure
            update, even if the <c>launchTemplate</c> wasn't updated.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateComputeEnvironmentRequest.ComputeEnvironmentName">
            <summary>
            Gets and sets the property ComputeEnvironmentName. 
            <para>
            The name for your compute environment. It can be up to 128 characters long. It can
            contain uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateComputeEnvironmentRequest.ComputeResources">
            <summary>
            Gets and sets the property ComputeResources. 
            <para>
            Details about the compute resources managed by the compute environment. This parameter
            is required for managed compute environments. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html">Compute
            Environments</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateComputeEnvironmentRequest.Context">
            <summary>
            Gets and sets the property Context. 
            <para>
            Reserved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateComputeEnvironmentRequest.EksConfiguration">
            <summary>
            Gets and sets the property EksConfiguration. 
            <para>
            The details for the Amazon EKS cluster that supports the compute environment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateComputeEnvironmentRequest.ServiceRole">
            <summary>
            Gets and sets the property ServiceRole. 
            <para>
            The full Amazon Resource Name (ARN) of the IAM role that allows Batch to make calls
            to other Amazon Web Services services on your behalf. For more information, see <a
            href="https://docs.aws.amazon.com/batch/latest/userguide/service_IAM_role.html">Batch
            service IAM role</a> in the <i>Batch User Guide</i>.
            </para>
             <important> 
            <para>
            If your account already created the Batch service-linked role, that role is used by
            default for your compute environment unless you specify a different role here. If
            the Batch service-linked role doesn't exist in your account, and no role is specified
            here, the service attempts to create the Batch service-linked role in your account.
            </para>
             </important> 
            <para>
            If your specified role has a path other than <c>/</c>, then you must specify either
            the full role ARN (recommended) or prefix the role name with the path. For example,
            if a role with the name <c>bar</c> has a path of <c>/foo/</c>, specify <c>/foo/bar</c>
            as the role name. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names">Friendly
            names and paths</a> in the <i>IAM User Guide</i>.
            </para>
             <note> 
            <para>
            Depending on how you created your Batch service role, its ARN might contain the <c>service-role</c>
            path prefix. When you only specify the name of the service role, Batch assumes that
            your ARN doesn't use the <c>service-role</c> path prefix. Because of this, we recommend
            that you specify the full ARN of your service role when you create compute environments.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateComputeEnvironmentRequest.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the compute environment. If the state is <c>ENABLED</c>, then the compute
            environment accepts jobs from a queue and can scale out automatically based on queues.
            </para>
             
            <para>
            If the state is <c>ENABLED</c>, then the Batch scheduler can attempt to place jobs
            from an associated job queue on the compute resources within the environment. If the
            compute environment is managed, then it can scale its instances out or in automatically,
            based on the job queue demand.
            </para>
             
            <para>
            If the state is <c>DISABLED</c>, then the Batch scheduler doesn't attempt to place
            jobs within the environment. Jobs in a <c>STARTING</c> or <c>RUNNING</c> state continue
            to progress normally. Managed compute environments in the <c>DISABLED</c> state don't
            scale out. 
            </para>
             <note> 
            <para>
            Compute environments in a <c>DISABLED</c> state may continue to incur billing charges.
            To prevent additional charges, turn off and then delete the compute environment. For
            more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/compute_environment_parameters.html#compute_environment_state">State</a>
            in the <i>Batch User Guide</i>.
            </para>
             </note> 
            <para>
            When an instance is idle, the instance scales down to the <c>minvCpus</c> value. However,
            the instance size doesn't change. For example, consider a <c>c5.8xlarge</c> instance
            with a <c>minvCpus</c> value of <c>4</c> and a <c>desiredvCpus</c> value of <c>36</c>.
            This instance doesn't scale down to a <c>c5.large</c> instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateComputeEnvironmentRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags that you apply to the compute environment to help you categorize and organize
            your resources. Each tag consists of a key and an optional value. For more information,
            see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            Amazon Web Services Resources</a> in <i>Amazon Web Services General Reference</i>.
            </para>
             
            <para>
            These tags can be updated or removed using the <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_TagResource.html">TagResource</a>
            and <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_UntagResource.html">UntagResource</a>
            API operations. These tags don't propagate to the underlying compute resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateComputeEnvironmentRequest.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the compute environment: <c>MANAGED</c> or <c>UNMANAGED</c>. For more
            information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html">Compute
            Environments</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateComputeEnvironmentRequest.UnmanagedvCpus">
            <summary>
            Gets and sets the property UnmanagedvCpus. 
            <para>
            The maximum number of vCPUs for an unmanaged compute environment. This parameter is
            only used for fair share scheduling to reserve vCPU capacity for new share identifiers.
            If this parameter isn't provided for a fair share job queue, no vCPU capacity is reserved.
            </para>
             <note> 
            <para>
            This parameter is only supported when the <c>type</c> parameter is set to <c>UNMANAGED</c>.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.CreateComputeEnvironmentResponse">
            <summary>
            This is the response object from the CreateComputeEnvironment operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateComputeEnvironmentResponse.ComputeEnvironmentArn">
            <summary>
            Gets and sets the property ComputeEnvironmentArn. 
            <para>
            The Amazon Resource Name (ARN) of the compute environment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateComputeEnvironmentResponse.ComputeEnvironmentName">
            <summary>
            Gets and sets the property ComputeEnvironmentName. 
            <para>
            The name of the compute environment. It can be up to 128 characters long. It can contain
            uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.CreateJobQueueRequest">
            <summary>
            Container for the parameters to the CreateJobQueue operation.
            Creates an Batch job queue. When you create a job queue, you associate one or more
            compute environments to the queue and assign an order of preference for the compute
            environments.
            
             
            <para>
            You also set a priority to the job queue that determines the order that the Batch
            scheduler places jobs onto its associated compute environments. For example, if a
            compute environment is associated with more than one job queue, the job queue with
            a higher priority is given preference for scheduling jobs to that compute environment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateJobQueueRequest.ComputeEnvironmentOrder">
            <summary>
            Gets and sets the property ComputeEnvironmentOrder. 
            <para>
            The set of compute environments mapped to a job queue and their order relative to
            each other. The job scheduler uses this parameter to determine which compute environment
            runs a specific job. Compute environments must be in the <c>VALID</c> state before
            you can associate them with a job queue. You can associate up to three compute environments
            with a job queue. All of the compute environments must be either EC2 (<c>EC2</c> or
            <c>SPOT</c>) or Fargate (<c>FARGATE</c> or <c>FARGATE_SPOT</c>); EC2 and Fargate compute
            environments can't be mixed.
            </para>
             <note> 
            <para>
            All compute environments that are associated with a job queue must share the same
            architecture. Batch doesn't support mixing compute environment architecture types
            in a single job queue.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateJobQueueRequest.JobQueueName">
            <summary>
            Gets and sets the property JobQueueName. 
            <para>
            The name of the job queue. It can be up to 128 letters long. It can contain uppercase
            and lowercase letters, numbers, hyphens (-), and underscores (_).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateJobQueueRequest.JobStateTimeLimitActions">
            <summary>
            Gets and sets the property JobStateTimeLimitActions. 
            <para>
            The set of actions that Batch performs on jobs that remain at the head of the job
            queue in the specified state longer than specified times. Batch will perform each
            action after <c>maxTimeSeconds</c> has passed. (<b>Note</b>: The minimum value for
            maxTimeSeconds is 600 (10 minutes) and its maximum value is 86,400 (24 hours).)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateJobQueueRequest.Priority">
            <summary>
            Gets and sets the property Priority. 
            <para>
            The priority of the job queue. Job queues with a higher priority (or a higher integer
            value for the <c>priority</c> parameter) are evaluated first when associated with
            the same compute environment. Priority is determined in descending order. For example,
            a job queue with a priority value of <c>10</c> is given scheduling preference over
            a job queue with a priority value of <c>1</c>. All of the compute environments must
            be either EC2 (<c>EC2</c> or <c>SPOT</c>) or Fargate (<c>FARGATE</c> or <c>FARGATE_SPOT</c>);
            EC2 and Fargate compute environments can't be mixed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateJobQueueRequest.SchedulingPolicyArn">
            <summary>
            Gets and sets the property SchedulingPolicyArn. 
            <para>
            The Amazon Resource Name (ARN) of the fair share scheduling policy. Job queues that
            don't have a scheduling policy are scheduled in a first-in, first-out (FIFO) model.
            After a job queue has a scheduling policy, it can be replaced but can't be removed.
            </para>
             
            <para>
            The format is <c>aws:<i>Partition</i>:batch:<i>Region</i>:<i>Account</i>:scheduling-policy/<i>Name</i>
            </c>.
            </para>
             
            <para>
            An example is <c>aws:aws:batch:us-west-2:123456789012:scheduling-policy/MySchedulingPolicy</c>.
            </para>
             
            <para>
            A job queue without a scheduling policy is scheduled as a FIFO job queue and can't
            have a scheduling policy added. Jobs queues with a scheduling policy can have a maximum
            of 500 active fair share identifiers. When the limit has been reached, submissions
            of any jobs that add a new fair share identifier fail.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateJobQueueRequest.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the job queue. If the job queue state is <c>ENABLED</c>, it is able to
            accept jobs. If the job queue state is <c>DISABLED</c>, new jobs can't be added to
            the queue, but jobs already in the queue can finish.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateJobQueueRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags that you apply to the job queue to help you categorize and organize your
            resources. Each tag consists of a key and an optional value. For more information,
            see <a href="https://docs.aws.amazon.com/batch/latest/userguide/using-tags.html">Tagging
            your Batch resources</a> in <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.CreateJobQueueResponse">
            <summary>
            This is the response object from the CreateJobQueue operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateJobQueueResponse.JobQueueArn">
            <summary>
            Gets and sets the property JobQueueArn. 
            <para>
            The Amazon Resource Name (ARN) of the job queue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateJobQueueResponse.JobQueueName">
            <summary>
            Gets and sets the property JobQueueName. 
            <para>
            The name of the job queue.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.CreateSchedulingPolicyRequest">
            <summary>
            Container for the parameters to the CreateSchedulingPolicy operation.
            Creates an Batch scheduling policy.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateSchedulingPolicyRequest.FairsharePolicy">
            <summary>
            Gets and sets the property FairsharePolicy. 
            <para>
            The fair share policy of the scheduling policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateSchedulingPolicyRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the scheduling policy. It can be up to 128 letters long. It can contain
            uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateSchedulingPolicyRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags that you apply to the scheduling policy to help you categorize and organize
            your resources. Each tag consists of a key and an optional value. For more information,
            see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            Amazon Web Services Resources</a> in <i>Amazon Web Services General Reference</i>.
            </para>
             
            <para>
            These tags can be updated or removed using the <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_TagResource.html">TagResource</a>
            and <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_UntagResource.html">UntagResource</a>
            API operations.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.CreateSchedulingPolicyResponse">
            <summary>
            This is the response object from the CreateSchedulingPolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateSchedulingPolicyResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the scheduling policy. The format is <c>aws:<i>Partition</i>:batch:<i>Region</i>:<i>Account</i>:scheduling-policy/<i>Name</i>
            </c>. For example, <c>aws:aws:batch:us-west-2:123456789012:scheduling-policy/MySchedulingPolicy</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateSchedulingPolicyResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the scheduling policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DeleteComputeEnvironmentRequest">
            <summary>
            Container for the parameters to the DeleteComputeEnvironment operation.
            Deletes an Batch compute environment.
            
             
            <para>
            Before you can delete a compute environment, you must set its state to <c>DISABLED</c>
            with the <a>UpdateComputeEnvironment</a> API operation and disassociate it from any
            job queues with the <a>UpdateJobQueue</a> API operation. Compute environments that
            use Fargate resources must terminate all active jobs on that compute environment before
            deleting the compute environment. If this isn't done, the compute environment enters
            an invalid state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DeleteComputeEnvironmentRequest.ComputeEnvironment">
            <summary>
            Gets and sets the property ComputeEnvironment. 
            <para>
            The name or Amazon Resource Name (ARN) of the compute environment to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DeleteComputeEnvironmentResponse">
            <summary>
            This is the response object from the DeleteComputeEnvironment operation.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DeleteJobQueueRequest">
            <summary>
            Container for the parameters to the DeleteJobQueue operation.
            Deletes the specified job queue. You must first disable submissions for a queue with
            the <a>UpdateJobQueue</a> operation. All jobs in the queue are eventually terminated
            when you delete a job queue. The jobs are terminated at a rate of about 16 jobs each
            second.
            
             
            <para>
            It's not necessary to disassociate compute environments from a queue before submitting
            a <c>DeleteJobQueue</c> request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DeleteJobQueueRequest.JobQueue">
            <summary>
            Gets and sets the property JobQueue. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the queue to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DeleteJobQueueResponse">
            <summary>
            This is the response object from the DeleteJobQueue operation.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DeleteSchedulingPolicyRequest">
            <summary>
            Container for the parameters to the DeleteSchedulingPolicy operation.
            Deletes the specified scheduling policy.
            
             
            <para>
            You can't delete a scheduling policy that's used in any job queues.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DeleteSchedulingPolicyRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the scheduling policy to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DeleteSchedulingPolicyResponse">
            <summary>
            This is the response object from the DeleteSchedulingPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DeregisterJobDefinitionRequest">
            <summary>
            Container for the parameters to the DeregisterJobDefinition operation.
            Deregisters an Batch job definition. Job definitions are permanently deleted after
            180 days.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DeregisterJobDefinitionRequest.JobDefinition">
            <summary>
            Gets and sets the property JobDefinition. 
            <para>
            The name and revision (<c>name:revision</c>) or full Amazon Resource Name (ARN) of
            the job definition to deregister.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DeregisterJobDefinitionResponse">
            <summary>
            This is the response object from the DeregisterJobDefinition operation.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DescribeComputeEnvironmentsRequest">
            <summary>
            Container for the parameters to the DescribeComputeEnvironments operation.
            Describes one or more of your compute environments.
            
             
            <para>
            If you're using an unmanaged compute environment, you can use the <c>DescribeComputeEnvironment</c>
            operation to determine the <c>ecsClusterArn</c> that you launch your Amazon ECS container
            instances into.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeComputeEnvironmentsRequest.ComputeEnvironments">
            <summary>
            Gets and sets the property ComputeEnvironments. 
            <para>
            A list of up to 100 compute environment names or full Amazon Resource Name (ARN) entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeComputeEnvironmentsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of cluster results returned by <c>DescribeComputeEnvironments</c>
            in paginated output. When this parameter is used, <c>DescribeComputeEnvironments</c>
            only returns <c>maxResults</c> results in a single page along with a <c>nextToken</c>
            response element. The remaining results of the initial request can be seen by sending
            another <c>DescribeComputeEnvironments</c> request with the returned <c>nextToken</c>
            value. This value can be between 1 and 100. If this parameter isn't used, then <c>DescribeComputeEnvironments</c>
            returns up to 100 results and a <c>nextToken</c> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeComputeEnvironmentsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value returned from a previous paginated <c>DescribeComputeEnvironments</c>
            request where <c>maxResults</c> was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that returned
            the <c>nextToken</c> value. This value is <c>null</c> when there are no more results
            to return.
            </para>
             <note> 
            <para>
            Treat this token as an opaque identifier that's only used to retrieve the next items
            in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DescribeComputeEnvironmentsResponse">
            <summary>
            This is the response object from the DescribeComputeEnvironments operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeComputeEnvironmentsResponse.ComputeEnvironments">
            <summary>
            Gets and sets the property ComputeEnvironments. 
            <para>
            The list of compute environments.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeComputeEnvironmentsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value to include in a future <c>DescribeComputeEnvironments</c>
            request. When the results of a <c>DescribeComputeEnvironments</c> request exceed <c>maxResults</c>,
            this value can be used to retrieve the next page of results. This value is <c>null</c>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DescribeJobDefinitionsRequest">
            <summary>
            Container for the parameters to the DescribeJobDefinitions operation.
            Describes a list of job definitions. You can specify a <c>status</c> (such as <c>ACTIVE</c>)
            to only return job definitions that match that status.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobDefinitionsRequest.JobDefinitionName">
            <summary>
            Gets and sets the property JobDefinitionName. 
            <para>
            The name of the job definition to describe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobDefinitionsRequest.JobDefinitions">
            <summary>
            Gets and sets the property JobDefinitions. 
            <para>
            A list of up to 100 job definitions. Each entry in the list can either be an ARN in
            the format <c>arn:aws:batch:${Region}:${Account}:job-definition/${JobDefinitionName}:${Revision}</c>
            or a short version using the form <c>${JobDefinitionName}:${Revision}</c>. This parameter
            can't be used with other parameters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobDefinitionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results returned by <c>DescribeJobDefinitions</c> in paginated
            output. When this parameter is used, <c>DescribeJobDefinitions</c> only returns <c>maxResults</c>
            results in a single page and a <c>nextToken</c> response element. The remaining results
            of the initial request can be seen by sending another <c>DescribeJobDefinitions</c>
            request with the returned <c>nextToken</c> value. This value can be between 1 and
            100. If this parameter isn't used, then <c>DescribeJobDefinitions</c> returns up to
            100 results and a <c>nextToken</c> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobDefinitionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value returned from a previous paginated <c>DescribeJobDefinitions</c>
            request where <c>maxResults</c> was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that returned
            the <c>nextToken</c> value. This value is <c>null</c> when there are no more results
            to return.
            </para>
             <note> 
            <para>
            Treat this token as an opaque identifier that's only used to retrieve the next items
            in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobDefinitionsRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status used to filter job definitions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DescribeJobDefinitionsResponse">
            <summary>
            This is the response object from the DescribeJobDefinitions operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobDefinitionsResponse.JobDefinitions">
            <summary>
            Gets and sets the property JobDefinitions. 
            <para>
            The list of job definitions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobDefinitionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value to include in a future <c>DescribeJobDefinitions</c> request.
            When the results of a <c>DescribeJobDefinitions</c> request exceed <c>maxResults</c>,
            this value can be used to retrieve the next page of results. This value is <c>null</c>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DescribeJobQueuesRequest">
            <summary>
            Container for the parameters to the DescribeJobQueues operation.
            Describes one or more of your job queues.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobQueuesRequest.JobQueues">
            <summary>
            Gets and sets the property JobQueues. 
            <para>
            A list of up to 100 queue names or full queue Amazon Resource Name (ARN) entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobQueuesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results returned by <c>DescribeJobQueues</c> in paginated output.
            When this parameter is used, <c>DescribeJobQueues</c> only returns <c>maxResults</c>
            results in a single page and a <c>nextToken</c> response element. The remaining results
            of the initial request can be seen by sending another <c>DescribeJobQueues</c> request
            with the returned <c>nextToken</c> value. This value can be between 1 and 100. If
            this parameter isn't used, then <c>DescribeJobQueues</c> returns up to 100 results
            and a <c>nextToken</c> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobQueuesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value returned from a previous paginated <c>DescribeJobQueues</c>
            request where <c>maxResults</c> was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that returned
            the <c>nextToken</c> value. This value is <c>null</c> when there are no more results
            to return.
            </para>
             <note> 
            <para>
            Treat this token as an opaque identifier that's only used to retrieve the next items
            in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DescribeJobQueuesResponse">
            <summary>
            This is the response object from the DescribeJobQueues operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobQueuesResponse.JobQueues">
            <summary>
            Gets and sets the property JobQueues. 
            <para>
            The list of job queues.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobQueuesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value to include in a future <c>DescribeJobQueues</c> request.
            When the results of a <c>DescribeJobQueues</c> request exceed <c>maxResults</c>, this
            value can be used to retrieve the next page of results. This value is <c>null</c>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DescribeJobsRequest">
            <summary>
            Container for the parameters to the DescribeJobs operation.
            Describes a list of Batch jobs.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobsRequest.Jobs">
            <summary>
            Gets and sets the property Jobs. 
            <para>
            A list of up to 100 job IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DescribeJobsResponse">
            <summary>
            This is the response object from the DescribeJobs operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobsResponse.Jobs">
            <summary>
            Gets and sets the property Jobs. 
            <para>
            The list of jobs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DescribeSchedulingPoliciesRequest">
            <summary>
            Container for the parameters to the DescribeSchedulingPolicies operation.
            Describes one or more of your scheduling policies.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeSchedulingPoliciesRequest.Arns">
            <summary>
            Gets and sets the property Arns. 
            <para>
            A list of up to 100 scheduling policy Amazon Resource Name (ARN) entries.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DescribeSchedulingPoliciesResponse">
            <summary>
            This is the response object from the DescribeSchedulingPolicies operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeSchedulingPoliciesResponse.SchedulingPolicies">
            <summary>
            Gets and sets the property SchedulingPolicies. 
            <para>
            The list of scheduling policies.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Device">
            <summary>
            An object that represents a container instance host device.
            
             <note> 
            <para>
            This object isn't applicable to jobs that are running on Fargate resources and shouldn't
            be provided.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Device.ContainerPath">
            <summary>
            Gets and sets the property ContainerPath. 
            <para>
            The path inside the container that's used to expose the host device. By default, the
            <c>hostPath</c> value is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Device.HostPath">
            <summary>
            Gets and sets the property HostPath. 
            <para>
            The path for the device on the host container instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Device.Permissions">
            <summary>
            Gets and sets the property Permissions. 
            <para>
            The explicit permissions to provide to the container for the device. By default, the
            container has permissions for <c>read</c>, <c>write</c>, and <c>mknod</c> for the
            device.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Ec2Configuration">
            <summary>
            Provides information used to select Amazon Machine Images (AMIs) for instances in
            the compute environment. If <c>Ec2Configuration</c> isn't specified, the default is
            <c>ECS_AL2</c> (<a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html#al2ami">Amazon
            Linux 2</a>).
            
             <note> 
            <para>
            This object isn't applicable to jobs that are running on Fargate resources.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Ec2Configuration.ImageIdOverride">
            <summary>
            Gets and sets the property ImageIdOverride. 
            <para>
            The AMI ID used for instances launched in the compute environment that match the image
            type. This setting overrides the <c>imageId</c> set in the <c>computeResource</c>
            object.
            </para>
             <note> 
            <para>
            The AMI that you choose for a compute environment must match the architecture of the
            instance types that you intend to use for that compute environment. For example, if
            your compute environment uses A1 instance types, the compute resource AMI that you
            choose must support ARM instances. Amazon ECS vends both x86 and ARM versions of the
            Amazon ECS-optimized Amazon Linux 2 AMI. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html#ecs-optimized-ami-linux-variants.html">Amazon
            ECS-optimized Amazon Linux 2 AMI</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Ec2Configuration.ImageKubernetesVersion">
            <summary>
            Gets and sets the property ImageKubernetesVersion. 
            <para>
            The Kubernetes version for the compute environment. If you don't specify a value,
            the latest version that Batch supports is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Ec2Configuration.ImageType">
            <summary>
            Gets and sets the property ImageType. 
            <para>
            The image type to match with the instance type to select an AMI. The supported values
            are different for <c>ECS</c> and <c>EKS</c> resources.
            </para>
             <dl> <dt>ECS</dt> <dd> 
            <para>
            If the <c>imageIdOverride</c> parameter isn't specified, then a recent <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html#al2ami">Amazon
            ECS-optimized Amazon Linux 2 AMI</a> (<c>ECS_AL2</c>) is used. If a new image type
            is specified in an update, but neither an <c>imageId</c> nor a <c>imageIdOverride</c>
            parameter is specified, then the latest Amazon ECS optimized AMI for that image type
            that's supported by Batch is used.
            </para>
             <dl> <dt>ECS_AL2</dt> <dd> 
            <para>
             <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html#al2ami">Amazon
            Linux 2</a>: Default for all non-GPU instance families.
            </para>
             </dd> <dt>ECS_AL2_NVIDIA</dt> <dd> 
            <para>
             <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html#gpuami">Amazon
            Linux 2 (GPU)</a>: Default for all GPU instance families (for example <c>P4</c> and
            <c>G4</c>) and can be used for all non Amazon Web Services Graviton-based instance
            types.
            </para>
             </dd> <dt>ECS_AL2023</dt> <dd> 
            <para>
             <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html">Amazon
            Linux 2023</a>: Batch supports Amazon Linux 2023.
            </para>
             <note> 
            <para>
            Amazon Linux 2023 does not support <c>A1</c> instances.
            </para>
             </note> </dd> <dt>ECS_AL1</dt> <dd> 
            <para>
             <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html#alami">Amazon
            Linux</a>. Amazon Linux has reached the end-of-life of standard support. For more
            information, see <a href="http://aws.amazon.com/amazon-linux-ami/">Amazon Linux AMI</a>.
            </para>
             </dd> </dl> </dd> <dt>EKS</dt> <dd> 
            <para>
            If the <c>imageIdOverride</c> parameter isn't specified, then a recent <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-optimized-ami.html">Amazon
            EKS-optimized Amazon Linux AMI</a> (<c>EKS_AL2</c>) is used. If a new image type is
            specified in an update, but neither an <c>imageId</c> nor a <c>imageIdOverride</c>
            parameter is specified, then the latest Amazon EKS optimized AMI for that image type
            that Batch supports is used.
            </para>
             <dl> <dt>EKS_AL2</dt> <dd> 
            <para>
             <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-optimized-ami.html">Amazon
            Linux 2</a>: Default for all non-GPU instance families.
            </para>
             </dd> <dt>EKS_AL2_NVIDIA</dt> <dd> 
            <para>
             <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-optimized-ami.html">Amazon
            Linux 2 (accelerated)</a>: Default for all GPU instance families (for example, <c>P4</c>
            and <c>G4</c>) and can be used for all non Amazon Web Services Graviton-based instance
            types.
            </para>
             </dd> </dl> </dd> </dl>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EcsProperties">
            <summary>
            An object that contains the properties for the Amazon ECS resources of a job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsProperties.TaskProperties">
            <summary>
            Gets and sets the property TaskProperties. 
            <para>
            An object that contains the properties for the Amazon ECS task definition of a job.
            </para>
             <note> 
            <para>
            This object is currently limited to one task element. However, the task element can
            run up to 10 containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EcsPropertiesDetail">
            <summary>
            An object that contains the details for the Amazon ECS resources of a job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsPropertiesDetail.TaskProperties">
            <summary>
            Gets and sets the property TaskProperties. 
            <para>
            The properties for the Amazon ECS task definition of a job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EcsPropertiesOverride">
            <summary>
            An object that contains overrides for the Amazon ECS task definition of a job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsPropertiesOverride.TaskProperties">
            <summary>
            Gets and sets the property TaskProperties. 
            <para>
            The overrides for the Amazon ECS task definition of a job.
            </para>
             <note> 
            <para>
            This object is currently limited to one element.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EcsTaskDetails">
            <summary>
            The details of a task definition that describes the container and volume definitions
            of an Amazon ECS task.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsTaskDetails.ContainerInstanceArn">
            <summary>
            Gets and sets the property ContainerInstanceArn. 
            <para>
            The Amazon Resource Name (ARN) of the container instance that hosts the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsTaskDetails.Containers">
            <summary>
            Gets and sets the property Containers. 
            <para>
            A list of containers that are included in the <c>taskProperties</c> list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsTaskDetails.EphemeralStorage">
            <summary>
            Gets and sets the property EphemeralStorage. 
            <para>
            The amount of ephemeral storage allocated for the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsTaskDetails.ExecutionRoleArn">
            <summary>
            Gets and sets the property ExecutionRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the execution role that Batch can assume. For more
            information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/execution-IAM-role.html">Batch
            execution IAM role</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsTaskDetails.IpcMode">
            <summary>
            Gets and sets the property IpcMode. 
            <para>
            The IPC resource namespace to use for the containers in the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsTaskDetails.NetworkConfiguration">
            <summary>
            Gets and sets the property NetworkConfiguration. 
            <para>
            The network configuration for jobs that are running on Fargate resources. Jobs that
            are running on Amazon EC2 resources must not specify this parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsTaskDetails.PidMode">
            <summary>
            Gets and sets the property PidMode. 
            <para>
            The process namespace to use for the containers in the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsTaskDetails.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            The Fargate platform version where the jobs are running.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsTaskDetails.RuntimePlatform">
            <summary>
            Gets and sets the property RuntimePlatform. 
            <para>
            An object that represents the compute environment architecture for Batch jobs on Fargate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsTaskDetails.TaskArn">
            <summary>
            Gets and sets the property TaskArn. 
            <para>
            The ARN of the Amazon ECS task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsTaskDetails.TaskRoleArn">
            <summary>
            Gets and sets the property TaskRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role that the container can assume for Amazon
            Web Services permissions. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html">IAM
            roles for tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             <note> 
            <para>
            This is object is comparable to <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_ContainerProperties.html">ContainerProperties:jobRoleArn</a>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsTaskDetails.Volumes">
            <summary>
            Gets and sets the property Volumes. 
            <para>
            A list of data volumes used in a job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EcsTaskProperties">
            <summary>
            The properties for a task definition that describes the container and volume definitions
            of an Amazon ECS task. You can specify which Docker images to use, the required resources,
            and other configurations related to launching the task definition through an Amazon
            ECS service or task.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsTaskProperties.Containers">
            <summary>
            Gets and sets the property Containers. 
            <para>
            This object is a list of containers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsTaskProperties.EphemeralStorage">
            <summary>
            Gets and sets the property EphemeralStorage. 
            <para>
            The amount of ephemeral storage to allocate for the task. This parameter is used to
            expand the total amount of ephemeral storage available, beyond the default amount,
            for tasks hosted on Fargate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsTaskProperties.ExecutionRoleArn">
            <summary>
            Gets and sets the property ExecutionRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the execution role that Batch can assume. For jobs
            that run on Fargate resources, you must provide an execution role. For more information,
            see <a href="https://docs.aws.amazon.com/batch/latest/userguide/execution-IAM-role.html">Batch
            execution IAM role</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsTaskProperties.IpcMode">
            <summary>
            Gets and sets the property IpcMode. 
            <para>
            The IPC resource namespace to use for the containers in the task. The valid values
            are <c>host</c>, <c>task</c>, or <c>none</c>.
            </para>
             
            <para>
            If <c>host</c> is specified, all containers within the tasks that specified the <c>host</c>
            IPC mode on the same container instance share the same IPC resources with the host
            Amazon EC2 instance.
            </para>
             
            <para>
            If <c>task</c> is specified, all containers within the specified <c>task</c> share
            the same IPC resources.
            </para>
             
            <para>
            If <c>none</c> is specified, the IPC resources within the containers of a task are
            private, and are not shared with other containers in a task or on the container instance.
            
            </para>
             
            <para>
            If no value is specified, then the IPC resource namespace sharing depends on the Docker
            daemon setting on the container instance. For more information, see <a href="https://docs.docker.com/engine/reference/run/#ipc-settings---ipc">IPC
            settings</a> in the Docker run reference.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsTaskProperties.NetworkConfiguration">
            <summary>
            Gets and sets the property NetworkConfiguration. 
            <para>
            The network configuration for jobs that are running on Fargate resources. Jobs that
            are running on Amazon EC2 resources must not specify this parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsTaskProperties.PidMode">
            <summary>
            Gets and sets the property PidMode. 
            <para>
            The process namespace to use for the containers in the task. The valid values are
            <c>host</c> or <c>task</c>. For example, monitoring sidecars might need <c>pidMode</c>
            to access information about other containers running in the same task.
            </para>
             
            <para>
            If <c>host</c> is specified, all containers within the tasks that specified the <c>host</c>
            PID mode on the same container instance share the process namespace with the host
            Amazon EC2 instance.
            </para>
             
            <para>
            If <c>task</c> is specified, all containers within the specified task share the same
            process namespace.
            </para>
             
            <para>
            If no value is specified, the default is a private namespace for each container. For
            more information, see <a href="https://docs.docker.com/engine/reference/run/#pid-settings---pid">PID
            settings</a> in the Docker run reference.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsTaskProperties.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            The Fargate platform version where the jobs are running. A platform version is specified
            only for jobs that are running on Fargate resources. If one isn't specified, the <c>LATEST</c>
            platform version is used by default. This uses a recent, approved version of the Fargate
            platform for compute resources. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html">Fargate
            platform versions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsTaskProperties.RuntimePlatform">
            <summary>
            Gets and sets the property RuntimePlatform. 
            <para>
            An object that represents the compute environment architecture for Batch jobs on Fargate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsTaskProperties.TaskRoleArn">
            <summary>
            Gets and sets the property TaskRoleArn. 
            <para>
            The Amazon Resource Name (ARN) that's associated with the Amazon ECS task.
            </para>
             <note> 
            <para>
            This is object is comparable to <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_ContainerProperties.html">ContainerProperties:jobRoleArn</a>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EcsTaskProperties.Volumes">
            <summary>
            Gets and sets the property Volumes. 
            <para>
            A list of volumes that are associated with the job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EFSAuthorizationConfig">
            <summary>
            The authorization configuration details for the Amazon EFS file system.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EFSAuthorizationConfig.AccessPointId">
            <summary>
            Gets and sets the property AccessPointId. 
            <para>
            The Amazon EFS access point ID to use. If an access point is specified, the root directory
            value specified in the <c>EFSVolumeConfiguration</c> must either be omitted or set
            to <c>/</c> which enforces the path set on the EFS access point. If an access point
            is used, transit encryption must be enabled in the <c>EFSVolumeConfiguration</c>.
            For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/efs-access-points.html">Working
            with Amazon EFS access points</a> in the <i>Amazon Elastic File System User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EFSAuthorizationConfig.Iam">
            <summary>
            Gets and sets the property Iam. 
            <para>
            Whether or not to use the Batch job IAM role defined in a job definition when mounting
            the Amazon EFS file system. If enabled, transit encryption must be enabled in the
            <c>EFSVolumeConfiguration</c>. If this parameter is omitted, the default value of
            <c>DISABLED</c> is used. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/efs-volumes.html#efs-volume-accesspoints">Using
            Amazon EFS access points</a> in the <i>Batch User Guide</i>. EFS IAM authorization
            requires that <c>TransitEncryption</c> be <c>ENABLED</c> and that a <c>JobRoleArn</c>
            is specified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EFSVolumeConfiguration">
            <summary>
            This is used when you're using an Amazon Elastic File System file system for job storage.
            For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/efs-volumes.html">Amazon
            EFS Volumes</a> in the <i>Batch User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EFSVolumeConfiguration.AuthorizationConfig">
            <summary>
            Gets and sets the property AuthorizationConfig. 
            <para>
            The authorization configuration details for the Amazon EFS file system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EFSVolumeConfiguration.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The Amazon EFS file system ID to use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EFSVolumeConfiguration.RootDirectory">
            <summary>
            Gets and sets the property RootDirectory. 
            <para>
            The directory within the Amazon EFS file system to mount as the root directory inside
            the host. If this parameter is omitted, the root of the Amazon EFS volume is used
            instead. Specifying <c>/</c> has the same effect as omitting this parameter. The maximum
            length is 4,096 characters.
            </para>
             <important> 
            <para>
            If an EFS access point is specified in the <c>authorizationConfig</c>, the root directory
            parameter must either be omitted or set to <c>/</c>, which enforces the path set on
            the Amazon EFS access point.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EFSVolumeConfiguration.TransitEncryption">
            <summary>
            Gets and sets the property TransitEncryption. 
            <para>
            Determines whether to enable encryption for Amazon EFS data in transit between the
            Amazon ECS host and the Amazon EFS server. Transit encryption must be enabled if Amazon
            EFS IAM authorization is used. If this parameter is omitted, the default value of
            <c>DISABLED</c> is used. For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/encryption-in-transit.html">Encrypting
            data in transit</a> in the <i>Amazon Elastic File System User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EFSVolumeConfiguration.TransitEncryptionPort">
            <summary>
            Gets and sets the property TransitEncryptionPort. 
            <para>
            The port to use when sending encrypted data between the Amazon ECS host and the Amazon
            EFS server. If you don't specify a transit encryption port, it uses the port selection
            strategy that the Amazon EFS mount helper uses. The value must be between 0 and 65,535.
            For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/efs-mount-helper.html">EFS
            mount helper</a> in the <i>Amazon Elastic File System User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EksAttemptContainerDetail">
            <summary>
            An object that represents the details for an attempt for a job attempt that an Amazon
            EKS container runs.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksAttemptContainerDetail.ContainerID">
            <summary>
            Gets and sets the property ContainerID. 
            <para>
            The ID for the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksAttemptContainerDetail.ExitCode">
            <summary>
            Gets and sets the property ExitCode. 
            <para>
            The exit code returned for the job attempt. A non-zero exit code is considered failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksAttemptContainerDetail.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of a container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksAttemptContainerDetail.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            A short (255 max characters) human-readable string to provide additional details for
            a running or stopped container.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EksAttemptDetail">
            <summary>
            An object that represents the details of a job attempt for a job attempt by an Amazon
            EKS container.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksAttemptDetail.Containers">
            <summary>
            Gets and sets the property Containers. 
            <para>
            The details for the final status of the containers for this job attempt.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksAttemptDetail.EksClusterArn">
            <summary>
            Gets and sets the property EksClusterArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon EKS cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksAttemptDetail.InitContainers">
            <summary>
            Gets and sets the property InitContainers. 
            <para>
            The details for the init containers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksAttemptDetail.NodeName">
            <summary>
            Gets and sets the property NodeName. 
            <para>
            The name of the node for this job attempt.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksAttemptDetail.PodName">
            <summary>
            Gets and sets the property PodName. 
            <para>
            The name of the pod for this job attempt.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksAttemptDetail.PodNamespace">
            <summary>
            Gets and sets the property PodNamespace. 
            <para>
            The namespace of the Amazon EKS cluster that the pod exists in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksAttemptDetail.StartedAt">
            <summary>
            Gets and sets the property StartedAt. 
            <para>
            The Unix timestamp (in milliseconds) for when the attempt was started (when the attempt
            transitioned from the <c>STARTING</c> state to the <c>RUNNING</c> state).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksAttemptDetail.StatusReason">
            <summary>
            Gets and sets the property StatusReason. 
            <para>
            A short, human-readable string to provide additional details for the current status
            of the job attempt.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksAttemptDetail.StoppedAt">
            <summary>
            Gets and sets the property StoppedAt. 
            <para>
            The Unix timestamp (in milliseconds) for when the attempt was stopped. This happens
            when the attempt transitioned from the <c>RUNNING</c> state to a terminal state, such
            as <c>SUCCEEDED</c> or <c>FAILED</c>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EksConfiguration">
            <summary>
            Configuration for the Amazon EKS cluster that supports the Batch compute environment.
            The cluster must exist before the compute environment can be created.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksConfiguration.EksClusterArn">
            <summary>
            Gets and sets the property EksClusterArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon EKS cluster. An example is <c>arn:<i>aws</i>:eks:<i>us-east-1</i>:<i>123456789012</i>:cluster/<i>ClusterForBatch</i>
            </c>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksConfiguration.KubernetesNamespace">
            <summary>
            Gets and sets the property KubernetesNamespace. 
            <para>
            The namespace of the Amazon EKS cluster. Batch manages pods in this namespace. The
            value can't left empty or null. It must be fewer than 64 characters long, can't be
            set to <c>default</c>, can't start with "<c>kube-</c>," and must match this regular
            expression: <c>^[a-z0-9]([-a-z0-9]*[a-z0-9])?$</c>. For more information, see <a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/">Namespaces</a>
            in the Kubernetes documentation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EksContainer">
            <summary>
            EKS container properties are used in job definitions for Amazon EKS based job definitions
            to describe the properties for a container node in the pod that's launched as part
            of a job. This can't be specified for Amazon ECS based job definitions.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainer.Args">
            <summary>
            Gets and sets the property Args. 
            <para>
            An array of arguments to the entrypoint. If this isn't specified, the <c>CMD</c> of
            the container image is used. This corresponds to the <c>args</c> member in the <a
            href="https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#entrypoint">Entrypoint</a>
            portion of the <a href="https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/">Pod</a>
            in Kubernetes. Environment variable references are expanded using the container's
            environment.
            </para>
             
            <para>
            If the referenced environment variable doesn't exist, the reference in the command
            isn't changed. For example, if the reference is to "<c>$(NAME1)</c>" and the <c>NAME1</c>
            environment variable doesn't exist, the command string will remain "<c>$(NAME1)</c>."
            <c>$$</c> is replaced with <c>$</c>, and the resulting string isn't expanded. For
            example, <c>$$(VAR_NAME)</c> is passed as <c>$(VAR_NAME)</c> whether or not the <c>VAR_NAME</c>
            environment variable exists. For more information, see <a href="https://docs.docker.com/engine/reference/builder/#cmd">Dockerfile
            reference: CMD</a> and <a href="https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/">Define
            a command and arguments for a pod</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainer.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            The entrypoint for the container. This isn't run within a shell. If this isn't specified,
            the <c>ENTRYPOINT</c> of the container image is used. Environment variable references
            are expanded using the container's environment.
            </para>
             
            <para>
            If the referenced environment variable doesn't exist, the reference in the command
            isn't changed. For example, if the reference is to "<c>$(NAME1)</c>" and the <c>NAME1</c>
            environment variable doesn't exist, the command string will remain "<c>$(NAME1)</c>."
            <c>$$</c> is replaced with <c>$</c> and the resulting string isn't expanded. For example,
            <c>$$(VAR_NAME)</c> will be passed as <c>$(VAR_NAME)</c> whether or not the <c>VAR_NAME</c>
            environment variable exists. The entrypoint can't be updated. For more information,
            see <a href="https://docs.docker.com/engine/reference/builder/#entrypoint">ENTRYPOINT</a>
            in the <i>Dockerfile reference</i> and <a href="https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/">Define
            a command and arguments for a container</a> and <a href="https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#entrypoint">Entrypoint</a>
            in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainer.Env">
            <summary>
            Gets and sets the property Env. 
            <para>
            The environment variables to pass to a container.
            </para>
             <note> 
            <para>
            Environment variables cannot start with "<c>AWS_BATCH</c>". This naming convention
            is reserved for variables that Batch sets.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainer.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The Docker image used to start the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainer.ImagePullPolicy">
            <summary>
            Gets and sets the property ImagePullPolicy. 
            <para>
            The image pull policy for the container. Supported values are <c>Always</c>, <c>IfNotPresent</c>,
            and <c>Never</c>. This parameter defaults to <c>IfNotPresent</c>. However, if the
            <c>:latest</c> tag is specified, it defaults to <c>Always</c>. For more information,
            see <a href="https://kubernetes.io/docs/concepts/containers/images/#updating-images">Updating
            images</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainer.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the container. If the name isn't specified, the default name "<c>Default</c>"
            is used. Each container in a pod must have a unique name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainer.Resources">
            <summary>
            Gets and sets the property Resources. 
            <para>
            The type and amount of resources to assign to a container. The supported resources
            include <c>memory</c>, <c>cpu</c>, and <c>nvidia.com/gpu</c>. For more information,
            see <a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/">Resource
            management for pods and containers</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainer.SecurityContext">
            <summary>
            Gets and sets the property SecurityContext. 
            <para>
            The security context for a job. For more information, see <a href="https://kubernetes.io/docs/tasks/configure-pod-container/security-context/">Configure
            a security context for a pod or container</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainer.VolumeMounts">
            <summary>
            Gets and sets the property VolumeMounts. 
            <para>
            The volume mounts for the container. Batch supports <c>emptyDir</c>, <c>hostPath</c>,
            and <c>secret</c> volume types. For more information about volumes and volume mounts
            in Kubernetes, see <a href="https://kubernetes.io/docs/concepts/storage/volumes/">Volumes</a>
            in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EksContainerDetail">
            <summary>
            The details for container properties that are returned by <c>DescribeJobs</c> for
            jobs that use Amazon EKS.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerDetail.Args">
            <summary>
            Gets and sets the property Args. 
            <para>
            An array of arguments to the entrypoint. If this isn't specified, the <c>CMD</c> of
            the container image is used. This corresponds to the <c>args</c> member in the <a
            href="https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#entrypoint">Entrypoint</a>
            portion of the <a href="https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/">Pod</a>
            in Kubernetes. Environment variable references are expanded using the container's
            environment.
            </para>
             
            <para>
            If the referenced environment variable doesn't exist, the reference in the command
            isn't changed. For example, if the reference is to "<c>$(NAME1)</c>" and the <c>NAME1</c>
            environment variable doesn't exist, the command string will remain "<c>$(NAME1)</c>".
            <c>$$</c> is replaced with <c>$</c> and the resulting string isn't expanded. For example,
            <c>$$(VAR_NAME)</c> is passed as <c>$(VAR_NAME)</c> whether or not the <c>VAR_NAME</c>
            environment variable exists. For more information, see <a href="https://docs.docker.com/engine/reference/builder/#cmd">Dockerfile
            reference: CMD</a> and <a href="https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/">Define
            a command and arguments for a pod</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerDetail.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            The entrypoint for the container. For more information, see <a href="https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#entrypoint">Entrypoint</a>
            in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerDetail.Env">
            <summary>
            Gets and sets the property Env. 
            <para>
            The environment variables to pass to a container.
            </para>
             <note> 
            <para>
            Environment variables cannot start with "<c>AWS_BATCH</c>". This naming convention
            is reserved for variables that Batch sets.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerDetail.ExitCode">
            <summary>
            Gets and sets the property ExitCode. 
            <para>
            The exit code returned for the job attempt. A non-zero exit code is considered failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerDetail.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The Docker image used to start the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerDetail.ImagePullPolicy">
            <summary>
            Gets and sets the property ImagePullPolicy. 
            <para>
            The image pull policy for the container. Supported values are <c>Always</c>, <c>IfNotPresent</c>,
            and <c>Never</c>. This parameter defaults to <c>Always</c> if the <c>:latest</c> tag
            is specified, <c>IfNotPresent</c> otherwise. For more information, see <a href="https://kubernetes.io/docs/concepts/containers/images/#updating-images">Updating
            images</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerDetail.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the container. If the name isn't specified, the default name "<c>Default</c>"
            is used. Each container in a pod must have a unique name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerDetail.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            A short human-readable string to provide additional details for a running or stopped
            container. It can be up to 255 characters long.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerDetail.Resources">
            <summary>
            Gets and sets the property Resources. 
            <para>
            The type and amount of resources to assign to a container. The supported resources
            include <c>memory</c>, <c>cpu</c>, and <c>nvidia.com/gpu</c>. For more information,
            see <a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/">Resource
            management for pods and containers</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerDetail.SecurityContext">
            <summary>
            Gets and sets the property SecurityContext. 
            <para>
            The security context for a job. For more information, see <a href="https://kubernetes.io/docs/tasks/configure-pod-container/security-context/">Configure
            a security context for a pod or container</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerDetail.VolumeMounts">
            <summary>
            Gets and sets the property VolumeMounts. 
            <para>
            The volume mounts for the container. Batch supports <c>emptyDir</c>, <c>hostPath</c>,
            and <c>secret</c> volume types. For more information about volumes and volume mounts
            in Kubernetes, see <a href="https://kubernetes.io/docs/concepts/storage/volumes/">Volumes</a>
            in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EksContainerEnvironmentVariable">
            <summary>
            An environment variable.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerEnvironmentVariable.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the environment variable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerEnvironmentVariable.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the environment variable.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EksContainerOverride">
            <summary>
            Object representing any Kubernetes overrides to a job definition that's used in a
            <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_SubmitJob.html">SubmitJob</a>
            API operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerOverride.Args">
            <summary>
            Gets and sets the property Args. 
            <para>
            The arguments to the entrypoint to send to the container that overrides the default
            arguments from the Docker image or the job definition. For more information, see <a
            href="https://docs.docker.com/engine/reference/builder/#cmd">Dockerfile reference:
            CMD</a> and <a href="https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/">Define
            a command an arguments for a pod</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerOverride.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            The command to send to the container that overrides the default command from the Docker
            image or the job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerOverride.Env">
            <summary>
            Gets and sets the property Env. 
            <para>
            The environment variables to send to the container. You can add new environment variables,
            which are added to the container at launch. Or, you can override the existing environment
            variables from the Docker image or the job definition.
            </para>
             <note> 
            <para>
            Environment variables cannot start with "<c>AWS_BATCH</c>". This naming convention
            is reserved for variables that Batch sets.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerOverride.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The override of the Docker image that's used to start the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerOverride.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A pointer to the container that you want to override. The name must match a unique
            container name that you wish to override.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerOverride.Resources">
            <summary>
            Gets and sets the property Resources. 
            <para>
            The type and amount of resources to assign to a container. These override the settings
            in the job definition. The supported resources include <c>memory</c>, <c>cpu</c>,
            and <c>nvidia.com/gpu</c>. For more information, see <a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/">Resource
            management for pods and containers</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EksContainerResourceRequirements">
            <summary>
            The type and amount of resources to assign to a container. The supported resources
            include <c>memory</c>, <c>cpu</c>, and <c>nvidia.com/gpu</c>. For more information,
            see <a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/">Resource
            management for pods and containers</a> in the <i>Kubernetes documentation</i>.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerResourceRequirements.Limits">
            <summary>
            Gets and sets the property Limits. 
            <para>
            The type and quantity of the resources to reserve for the container. The values vary
            based on the <c>name</c> that's specified. Resources can be requested using either
            the <c>limits</c> or the <c>requests</c> objects.
            </para>
             <dl> <dt>memory</dt> <dd> 
            <para>
            The memory hard limit (in MiB) for the container, using whole integers, with a "Mi"
            suffix. If your container attempts to exceed the memory specified, the container is
            terminated. You must specify at least 4 MiB of memory for a job. <c>memory</c> can
            be specified in <c>limits</c>, <c>requests</c>, or both. If <c>memory</c> is specified
            in both places, then the value that's specified in <c>limits</c> must be equal to
            the value that's specified in <c>requests</c>.
            </para>
             <note> 
            <para>
            To maximize your resource utilization, provide your jobs with as much memory as possible
            for the specific instance type that you are using. To learn how, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/memory-management.html">Memory
            management</a> in the <i>Batch User Guide</i>.
            </para>
             </note> </dd> <dt>cpu</dt> <dd> 
            <para>
            The number of CPUs that's reserved for the container. Values must be an even multiple
            of <c>0.25</c>. <c>cpu</c> can be specified in <c>limits</c>, <c>requests</c>, or
            both. If <c>cpu</c> is specified in both places, then the value that's specified in
            <c>limits</c> must be at least as large as the value that's specified in <c>requests</c>.
            </para>
             </dd> <dt>nvidia.com/gpu</dt> <dd> 
            <para>
            The number of GPUs that's reserved for the container. Values must be a whole integer.
            <c>memory</c> can be specified in <c>limits</c>, <c>requests</c>, or both. If <c>memory</c>
            is specified in both places, then the value that's specified in <c>limits</c> must
            be equal to the value that's specified in <c>requests</c>.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerResourceRequirements.Requests">
            <summary>
            Gets and sets the property Requests. 
            <para>
            The type and quantity of the resources to request for the container. The values vary
            based on the <c>name</c> that's specified. Resources can be requested by using either
            the <c>limits</c> or the <c>requests</c> objects.
            </para>
             <dl> <dt>memory</dt> <dd> 
            <para>
            The memory hard limit (in MiB) for the container, using whole integers, with a "Mi"
            suffix. If your container attempts to exceed the memory specified, the container is
            terminated. You must specify at least 4 MiB of memory for a job. <c>memory</c> can
            be specified in <c>limits</c>, <c>requests</c>, or both. If <c>memory</c> is specified
            in both, then the value that's specified in <c>limits</c> must be equal to the value
            that's specified in <c>requests</c>.
            </para>
             <note> 
            <para>
            If you're trying to maximize your resource utilization by providing your jobs as much
            memory as possible for a particular instance type, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/memory-management.html">Memory
            management</a> in the <i>Batch User Guide</i>.
            </para>
             </note> </dd> <dt>cpu</dt> <dd> 
            <para>
            The number of CPUs that are reserved for the container. Values must be an even multiple
            of <c>0.25</c>. <c>cpu</c> can be specified in <c>limits</c>, <c>requests</c>, or
            both. If <c>cpu</c> is specified in both, then the value that's specified in <c>limits</c>
            must be at least as large as the value that's specified in <c>requests</c>.
            </para>
             </dd> <dt>nvidia.com/gpu</dt> <dd> 
            <para>
            The number of GPUs that are reserved for the container. Values must be a whole integer.
            <c>nvidia.com/gpu</c> can be specified in <c>limits</c>, <c>requests</c>, or both.
            If <c>nvidia.com/gpu</c> is specified in both, then the value that's specified in
            <c>limits</c> must be equal to the value that's specified in <c>requests</c>.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EksContainerSecurityContext">
            <summary>
            The security context for a job. For more information, see <a href="https://kubernetes.io/docs/tasks/configure-pod-container/security-context/">Configure
            a security context for a pod or container</a> in the <i>Kubernetes documentation</i>.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerSecurityContext.AllowPrivilegeEscalation">
            <summary>
            Gets and sets the property AllowPrivilegeEscalation. 
            <para>
            Whether or not a container or a Kubernetes pod is allowed to gain more privileges
            than its parent process. The default value is <c>false</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerSecurityContext.Privileged">
            <summary>
            Gets and sets the property Privileged. 
            <para>
            When this parameter is <c>true</c>, the container is given elevated permissions on
            the host container instance. The level of permissions are similar to the <c>root</c>
            user permissions. The default value is <c>false</c>. This parameter maps to <c>privileged</c>
            policy in the <a href="https://kubernetes.io/docs/concepts/security/pod-security-policy/#privileged">Privileged
            pod security policies</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerSecurityContext.ReadOnlyRootFilesystem">
            <summary>
            Gets and sets the property ReadOnlyRootFilesystem. 
            <para>
            When this parameter is <c>true</c>, the container is given read-only access to its
            root file system. The default value is <c>false</c>. This parameter maps to <c>ReadOnlyRootFilesystem</c>
            policy in the <a href="https://kubernetes.io/docs/concepts/security/pod-security-policy/#volumes-and-file-systems">Volumes
            and file systems pod security policies</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerSecurityContext.RunAsGroup">
            <summary>
            Gets and sets the property RunAsGroup. 
            <para>
            When this parameter is specified, the container is run as the specified group ID (<c>gid</c>).
            If this parameter isn't specified, the default is the group that's specified in the
            image metadata. This parameter maps to <c>RunAsGroup</c> and <c>MustRunAs</c> policy
            in the <a href="https://kubernetes.io/docs/concepts/security/pod-security-policy/#users-and-groups">Users
            and groups pod security policies</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerSecurityContext.RunAsNonRoot">
            <summary>
            Gets and sets the property RunAsNonRoot. 
            <para>
            When this parameter is specified, the container is run as a user with a <c>uid</c>
            other than 0. If this parameter isn't specified, so such rule is enforced. This parameter
            maps to <c>RunAsUser</c> and <c>MustRunAsNonRoot</c> policy in the <a href="https://kubernetes.io/docs/concepts/security/pod-security-policy/#users-and-groups">Users
            and groups pod security policies</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerSecurityContext.RunAsUser">
            <summary>
            Gets and sets the property RunAsUser. 
            <para>
            When this parameter is specified, the container is run as the specified user ID (<c>uid</c>).
            If this parameter isn't specified, the default is the user that's specified in the
            image metadata. This parameter maps to <c>RunAsUser</c> and <c>MustRanAs</c> policy
            in the <a href="https://kubernetes.io/docs/concepts/security/pod-security-policy/#users-and-groups">Users
            and groups pod security policies</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EksContainerVolumeMount">
            <summary>
            The volume mounts for a container for an Amazon EKS job. For more information about
            volumes and volume mounts in Kubernetes, see <a href="https://kubernetes.io/docs/concepts/storage/volumes/">Volumes</a>
            in the <i>Kubernetes documentation</i>.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerVolumeMount.MountPath">
            <summary>
            Gets and sets the property MountPath. 
            <para>
            The path on the container where the volume is mounted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerVolumeMount.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name the volume mount. This must match the name of one of the volumes in the pod.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerVolumeMount.ReadOnly">
            <summary>
            Gets and sets the property ReadOnly. 
            <para>
            If this value is <c>true</c>, the container has read-only access to the volume. Otherwise,
            the container can write to the volume. The default value is <c>false</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksContainerVolumeMount.SubPath">
            <summary>
            Gets and sets the property SubPath. 
            <para>
            A sub-path inside the referenced volume instead of its root.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EksEmptyDir">
            <summary>
            Specifies the configuration of a Kubernetes <c>emptyDir</c> volume. An <c>emptyDir</c>
            volume is first created when a pod is assigned to a node. It exists as long as that
            pod is running on that node. The <c>emptyDir</c> volume is initially empty. All containers
            in the pod can read and write the files in the <c>emptyDir</c> volume. However, the
            <c>emptyDir</c> volume can be mounted at the same or different paths in each container.
            When a pod is removed from a node for any reason, the data in the <c>emptyDir</c>
            is deleted permanently. For more information, see <a href="https://kubernetes.io/docs/concepts/storage/volumes/#emptydir">emptyDir</a>
            in the <i>Kubernetes documentation</i>.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksEmptyDir.Medium">
            <summary>
            Gets and sets the property Medium. 
            <para>
            The medium to store the volume. The default value is an empty string, which uses the
            storage of the node.
            </para>
             <dl> <dt>""</dt> <dd> 
            <para>
             <b>(Default)</b> Use the disk storage of the node.
            </para>
             </dd> <dt>"Memory"</dt> <dd> 
            <para>
            Use the <c>tmpfs</c> volume that's backed by the RAM of the node. Contents of the
            volume are lost when the node reboots, and any storage on the volume counts against
            the container's memory limit.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksEmptyDir.SizeLimit">
            <summary>
            Gets and sets the property SizeLimit. 
            <para>
            The maximum size of the volume. By default, there's no maximum size defined.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EksHostPath">
            <summary>
            Specifies the configuration of a Kubernetes <c>hostPath</c> volume. A <c>hostPath</c>
            volume mounts an existing file or directory from the host node's filesystem into your
            pod. For more information, see <a href="https://kubernetes.io/docs/concepts/storage/volumes/#hostpath">hostPath</a>
            in the <i>Kubernetes documentation</i>.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksHostPath.Path">
            <summary>
            Gets and sets the property Path. 
            <para>
            The path of the file or directory on the host to mount into containers on the pod.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EksMetadata">
            <summary>
            Describes and uniquely identifies Kubernetes resources. For example, the compute environment
            that a pod runs in or the <c>jobID</c> for a job running in the pod. For more information,
            see <a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/">
            Understanding Kubernetes Objects</a> in the <i>Kubernetes documentation</i>.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksMetadata.Annotations">
            <summary>
            Gets and sets the property Annotations. 
            <para>
            Key-value pairs used to attach arbitrary, non-identifying metadata to Kubernetes objects.
            Valid annotation keys have two segments: an optional prefix and a name, separated
            by a slash (/). 
            </para>
             <ul> <li> 
            <para>
            The prefix is optional and must be 253 characters or less. If specified, the prefix
            must be a DNS subdomain− a series of DNS labels separated by dots (.), and it must
            end with a slash (/).
            </para>
             </li> <li> 
            <para>
            The name segment is required and must be 63 characters or less. It can include alphanumeric
            characters ([a-z0-9A-Z]), dashes (-), underscores (_), and dots (.), but must begin
            and end with an alphanumeric character.
            </para>
             </li> </ul> <note> 
            <para>
            Annotation values must be 255 characters or less.
            </para>
             </note> 
            <para>
            Annotations can be added or modified at any time. Each resource can have multiple
            annotations. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksMetadata.Labels">
            <summary>
            Gets and sets the property Labels. 
            <para>
            Key-value pairs used to identify, sort, and organize cube resources. Can contain up
            to 63 uppercase letters, lowercase letters, numbers, hyphens (-), and underscores
            (_). Labels can be added or modified at any time. Each resource can have multiple
            labels, but each key must be unique for a given object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksMetadata.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace of the Amazon EKS cluster. In Kubernetes, namespaces provide a mechanism
            for isolating groups of resources within a single cluster. Names of resources need
            to be unique within a namespace, but not across namespaces. Batch places Batch Job
            pods in this namespace. If this field is provided, the value can't be empty or null.
            It must meet the following requirements:
            </para>
             <ul> <li> 
            <para>
            1-63 characters long
            </para>
             </li> <li> 
            <para>
            Can't be set to default
            </para>
             </li> <li> 
            <para>
            Can't start with <c>kube</c> 
            </para>
             </li> <li> 
            <para>
            Must match the following regular expression: <c>^[a-z0-9]([-a-z0-9]*[a-z0-9])?$</c>
            
            </para>
             </li> </ul> 
            <para>
             For more information, see <a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/">Namespaces</a>
            in the <i>Kubernetes documentation</i>. This namespace can be different from the <c>kubernetesNamespace</c>
            set in the compute environment's <c>EksConfiguration</c>, but must have identical
            role-based access control (RBAC) roles as the compute environment's <c>kubernetesNamespace</c>.
            For multi-node parallel jobs, the same value must be provided across all the node
            ranges.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EksPersistentVolumeClaim">
            <summary>
            A <c>persistentVolumeClaim</c> volume is used to mount a <a href="https://kubernetes.io/docs/concepts/storage/persistent-volumes/">PersistentVolume</a>
            into a Pod. PersistentVolumeClaims are a way for users to "claim" durable storage
            without knowing the details of the particular cloud environment. See the information
            about <a href="https://kubernetes.io/docs/concepts/storage/persistent-volumes/">PersistentVolumes</a>
            in the <i>Kubernetes documentation</i>.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPersistentVolumeClaim.ClaimName">
            <summary>
            Gets and sets the property ClaimName. 
            <para>
            The name of the <c>persistentVolumeClaim</c> bounded to a <c>persistentVolume</c>.
            For more information, see <a href="https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims">
            Persistent Volume Claims</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPersistentVolumeClaim.ReadOnly">
            <summary>
            Gets and sets the property ReadOnly. 
            <para>
            An optional boolean value indicating if the mount is read only. Default is false.
            For more information, see <a href="https://kubernetes.io/docs/concepts/storage/volumes/#read-only-mounts">
            Read Only Mounts</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EksPodProperties">
            <summary>
            The properties for the pod.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodProperties.Containers">
            <summary>
            Gets and sets the property Containers. 
            <para>
            The properties of the container that's used on the Amazon EKS pod.
            </para>
             <note> 
            <para>
            This object is limited to 10 elements.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodProperties.DnsPolicy">
            <summary>
            Gets and sets the property DnsPolicy. 
            <para>
            The DNS policy for the pod. The default value is <c>ClusterFirst</c>. If the <c>hostNetwork</c>
            parameter is not specified, the default is <c>ClusterFirstWithHostNet</c>. <c>ClusterFirst</c>
            indicates that any DNS query that does not match the configured cluster domain suffix
            is forwarded to the upstream nameserver inherited from the node. For more information,
            see <a href="https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy">Pod's
            DNS policy</a> in the <i>Kubernetes documentation</i>.
            </para>
             
            <para>
            Valid values: <c>Default</c> | <c>ClusterFirst</c> | <c>ClusterFirstWithHostNet</c>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodProperties.HostNetwork">
            <summary>
            Gets and sets the property HostNetwork. 
            <para>
            Indicates if the pod uses the hosts' network IP address. The default value is <c>true</c>.
            Setting this to <c>false</c> enables the Kubernetes pod networking model. Most Batch
            workloads are egress-only and don't require the overhead of IP allocation for each
            pod for incoming connections. For more information, see <a href="https://kubernetes.io/docs/concepts/security/pod-security-policy/#host-namespaces">Host
            namespaces</a> and <a href="https://kubernetes.io/docs/concepts/workloads/pods/#pod-networking">Pod
            networking</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodProperties.ImagePullSecrets">
            <summary>
            Gets and sets the property ImagePullSecrets. 
            <para>
            References a Kubernetes secret resource. It holds a list of secrets. These secrets
            help to gain access to pull an images from a private registry.
            </para>
             
            <para>
             <c>ImagePullSecret$name</c> is required when this object is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodProperties.InitContainers">
            <summary>
            Gets and sets the property InitContainers. 
            <para>
            These containers run before application containers, always runs to completion, and
            must complete successfully before the next container starts. These containers are
            registered with the Amazon EKS Connector agent and persists the registration information
            in the Kubernetes backend data store. For more information, see <a href="https://kubernetes.io/docs/concepts/workloads/pods/init-containers/">Init
            Containers</a> in the <i>Kubernetes documentation</i>.
            </para>
             <note> 
            <para>
            This object is limited to 10 elements.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodProperties.Metadata">
            <summary>
            Gets and sets the property Metadata. 
            <para>
            Metadata about the Kubernetes pod. For more information, see <a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/">Understanding
            Kubernetes Objects</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodProperties.ServiceAccountName">
            <summary>
            Gets and sets the property ServiceAccountName. 
            <para>
            The name of the service account that's used to run the pod. For more information,
            see <a href="https://docs.aws.amazon.com/eks/latest/userguide/service-accounts.html">Kubernetes
            service accounts</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/associate-service-account-role.html">Configure
            a Kubernetes service account to assume an IAM role</a> in the <i>Amazon EKS User Guide</i>
            and <a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/">Configure
            service accounts for pods</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodProperties.ShareProcessNamespace">
            <summary>
            Gets and sets the property ShareProcessNamespace. 
            <para>
            Indicates if the processes in a container are shared, or visible, to other containers
            in the same pod. For more information, see <a href="https://kubernetes.io/docs/tasks/configure-pod-container/share-process-namespace/">Share
            Process Namespace between Containers in a Pod</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodProperties.Volumes">
            <summary>
            Gets and sets the property Volumes. 
            <para>
            Specifies the volumes for a job definition that uses Amazon EKS resources.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EksPodPropertiesDetail">
            <summary>
            The details for the pod.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodPropertiesDetail.Containers">
            <summary>
            Gets and sets the property Containers. 
            <para>
            The properties of the container that's used on the Amazon EKS pod.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodPropertiesDetail.DnsPolicy">
            <summary>
            Gets and sets the property DnsPolicy. 
            <para>
            The DNS policy for the pod. The default value is <c>ClusterFirst</c>. If the <c>hostNetwork</c>
            parameter is not specified, the default is <c>ClusterFirstWithHostNet</c>. <c>ClusterFirst</c>
            indicates that any DNS query that does not match the configured cluster domain suffix
            is forwarded to the upstream nameserver inherited from the node. If no value was specified
            for <c>dnsPolicy</c> in the <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_RegisterJobDefinition.html">RegisterJobDefinition</a>
            API operation, then no value will be returned for <c>dnsPolicy</c> by either of <a
            href="https://docs.aws.amazon.com/batch/latest/APIReference/API_DescribeJobDefinitions.html">DescribeJobDefinitions</a>
            or <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_DescribeJobs.html">DescribeJobs</a>
            API operations. The pod spec setting will contain either <c>ClusterFirst</c> or <c>ClusterFirstWithHostNet</c>,
            depending on the value of the <c>hostNetwork</c> parameter. For more information,
            see <a href="https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy">Pod's
            DNS policy</a> in the <i>Kubernetes documentation</i>.
            </para>
             
            <para>
            Valid values: <c>Default</c> | <c>ClusterFirst</c> | <c>ClusterFirstWithHostNet</c>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodPropertiesDetail.HostNetwork">
            <summary>
            Gets and sets the property HostNetwork. 
            <para>
            Indicates if the pod uses the hosts' network IP address. The default value is <c>true</c>.
            Setting this to <c>false</c> enables the Kubernetes pod networking model. Most Batch
            workloads are egress-only and don't require the overhead of IP allocation for each
            pod for incoming connections. For more information, see <a href="https://kubernetes.io/docs/concepts/security/pod-security-policy/#host-namespaces">Host
            namespaces</a> and <a href="https://kubernetes.io/docs/concepts/workloads/pods/#pod-networking">Pod
            networking</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodPropertiesDetail.ImagePullSecrets">
            <summary>
            Gets and sets the property ImagePullSecrets. 
            <para>
            Displays the reference pointer to the Kubernetes secret resource. These secrets help
            to gain access to pull an images from a private registry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodPropertiesDetail.InitContainers">
            <summary>
            Gets and sets the property InitContainers. 
            <para>
            The container registered with the Amazon EKS Connector agent and persists the registration
            information in the Kubernetes backend data store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodPropertiesDetail.Metadata">
            <summary>
            Gets and sets the property Metadata. 
            <para>
            Describes and uniquely identifies Kubernetes resources. For example, the compute environment
            that a pod runs in or the <c>jobID</c> for a job running in the pod. For more information,
            see <a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/">Understanding
            Kubernetes Objects</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodPropertiesDetail.NodeName">
            <summary>
            Gets and sets the property NodeName. 
            <para>
            The name of the node for this job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodPropertiesDetail.PodName">
            <summary>
            Gets and sets the property PodName. 
            <para>
            The name of the pod for this job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodPropertiesDetail.ServiceAccountName">
            <summary>
            Gets and sets the property ServiceAccountName. 
            <para>
            The name of the service account that's used to run the pod. For more information,
            see <a href="https://docs.aws.amazon.com/eks/latest/userguide/service-accounts.html">Kubernetes
            service accounts</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/associate-service-account-role.html">Configure
            a Kubernetes service account to assume an IAM role</a> in the <i>Amazon EKS User Guide</i>
            and <a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/">Configure
            service accounts for pods</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodPropertiesDetail.ShareProcessNamespace">
            <summary>
            Gets and sets the property ShareProcessNamespace. 
            <para>
            Indicates if the processes in a container are shared, or visible, to other containers
            in the same pod. For more information, see <a href="https://kubernetes.io/docs/tasks/configure-pod-container/share-process-namespace/">Share
            Process Namespace between Containers in a Pod</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodPropertiesDetail.Volumes">
            <summary>
            Gets and sets the property Volumes. 
            <para>
            Specifies the volumes for a job definition using Amazon EKS resources.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EksPodPropertiesOverride">
            <summary>
            An object that contains overrides for the Kubernetes pod properties of a job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodPropertiesOverride.Containers">
            <summary>
            Gets and sets the property Containers. 
            <para>
            The overrides for the container that's used on the Amazon EKS pod.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodPropertiesOverride.InitContainers">
            <summary>
            Gets and sets the property InitContainers. 
            <para>
            The overrides for the <c>initContainers</c> defined in the Amazon EKS pod. These containers
            run before application containers, always runs to completion, and must complete successfully
            before the next container starts. These containers are registered with the Amazon
            EKS Connector agent and persists the registration information in the Kubernetes backend
            data store. For more information, see <a href="https://kubernetes.io/docs/concepts/workloads/pods/init-containers/">Init
            Containers</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPodPropertiesOverride.Metadata">
            <summary>
            Gets and sets the property Metadata. 
            <para>
            Metadata about the overrides for the container that's used on the Amazon EKS pod.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EksProperties">
            <summary>
            An object that contains the properties for the Kubernetes resources of a job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksProperties.PodProperties">
            <summary>
            Gets and sets the property PodProperties. 
            <para>
            The properties for the Kubernetes pod resources of a job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EksPropertiesDetail">
            <summary>
            An object that contains the details for the Kubernetes resources of a job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPropertiesDetail.PodProperties">
            <summary>
            Gets and sets the property PodProperties. 
            <para>
            The properties for the Kubernetes pod resources of a job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EksPropertiesOverride">
            <summary>
            An object that contains overrides for the Kubernetes resources of a job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksPropertiesOverride.PodProperties">
            <summary>
            Gets and sets the property PodProperties. 
            <para>
            The overrides for the Kubernetes pod resources of a job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EksSecret">
            <summary>
            Specifies the configuration of a Kubernetes <c>secret</c> volume. For more information,
            see <a href="https://kubernetes.io/docs/concepts/storage/volumes/#secret">secret</a>
            in the <i>Kubernetes documentation</i>.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksSecret.Optional">
            <summary>
            Gets and sets the property Optional. 
            <para>
            Specifies whether the secret or the secret's keys must be defined.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksSecret.SecretName">
            <summary>
            Gets and sets the property SecretName. 
            <para>
            The name of the secret. The name must be allowed as a DNS subdomain name. For more
            information, see <a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#dns-subdomain-names">DNS
            subdomain names</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EksVolume">
            <summary>
            Specifies an Amazon EKS volume for a job definition.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksVolume.EmptyDir">
            <summary>
            Gets and sets the property EmptyDir. 
            <para>
            Specifies the configuration of a Kubernetes <c>emptyDir</c> volume. For more information,
            see <a href="https://kubernetes.io/docs/concepts/storage/volumes/#emptydir">emptyDir</a>
            in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksVolume.HostPath">
            <summary>
            Gets and sets the property HostPath. 
            <para>
            Specifies the configuration of a Kubernetes <c>hostPath</c> volume. For more information,
            see <a href="https://kubernetes.io/docs/concepts/storage/volumes/#hostpath">hostPath</a>
            in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksVolume.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the volume. The name must be allowed as a DNS subdomain name. For more
            information, see <a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#dns-subdomain-names">DNS
            subdomain names</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksVolume.PersistentVolumeClaim">
            <summary>
            Gets and sets the property PersistentVolumeClaim. 
            <para>
            Specifies the configuration of a Kubernetes <c>persistentVolumeClaim</c> bounded to
            a <c>persistentVolume</c>. For more information, see <a href="https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims">
            Persistent Volume Claims</a> in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EksVolume.Secret">
            <summary>
            Gets and sets the property Secret. 
            <para>
            Specifies the configuration of a Kubernetes <c>secret</c> volume. For more information,
            see <a href="https://kubernetes.io/docs/concepts/storage/volumes/#secret">secret</a>
            in the <i>Kubernetes documentation</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EphemeralStorage">
            <summary>
            The amount of ephemeral storage to allocate for the task. This parameter is used to
            expand the total amount of ephemeral storage available, beyond the default amount,
            for tasks hosted on Fargate.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EphemeralStorage.SizeInGiB">
            <summary>
            Gets and sets the property SizeInGiB. 
            <para>
            The total amount, in GiB, of ephemeral storage to set for the task. The minimum supported
            value is <c>21</c> GiB and the maximum supported value is <c>200</c> GiB.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.EvaluateOnExit">
            <summary>
            Specifies an array of up to 5 conditions to be met, and an action to take (<c>RETRY</c>
            or <c>EXIT</c>) if all conditions are met. If none of the <c>EvaluateOnExit</c> conditions
            in a <c>RetryStrategy</c> match, then the job is retried.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EvaluateOnExit.Action">
            <summary>
            Gets and sets the property Action. 
            <para>
            Specifies the action to take if all of the specified conditions (<c>onStatusReason</c>,
            <c>onReason</c>, and <c>onExitCode</c>) are met. The values aren't case sensitive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EvaluateOnExit.OnExitCode">
            <summary>
            Gets and sets the property OnExitCode. 
            <para>
            Contains a glob pattern to match against the decimal representation of the <c>ExitCode</c>
            returned for a job. The pattern can be up to 512 characters long. It can contain only
            numbers, and can end with an asterisk (*) so that only the start of the string needs
            to be an exact match.
            </para>
             
            <para>
            The string can contain up to 512 characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EvaluateOnExit.OnReason">
            <summary>
            Gets and sets the property OnReason. 
            <para>
            Contains a glob pattern to match against the <c>Reason</c> returned for a job. The
            pattern can contain up to 512 characters. It can contain letters, numbers, periods
            (.), colons (:), and white space (including spaces and tabs). It can optionally end
            with an asterisk (*) so that only the start of the string needs to be an exact match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.EvaluateOnExit.OnStatusReason">
            <summary>
            Gets and sets the property OnStatusReason. 
            <para>
            Contains a glob pattern to match against the <c>StatusReason</c> returned for a job.
            The pattern can contain up to 512 characters. It can contain letters, numbers, periods
            (.), colons (:), and white spaces (including spaces or tabs). It can optionally end
            with an asterisk (*) so that only the start of the string needs to be an exact match.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.FairsharePolicy">
            <summary>
            The fair share policy for a scheduling policy.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.FairsharePolicy.ComputeReservation">
            <summary>
            Gets and sets the property ComputeReservation. 
            <para>
            A value used to reserve some of the available maximum vCPU for fair share identifiers
            that aren't already used.
            </para>
             
            <para>
            The reserved ratio is <c>(<i>computeReservation</i>/100)^<i>ActiveFairShares</i> </c>
            where <c> <i>ActiveFairShares</i> </c> is the number of active fair share identifiers.
            </para>
             
            <para>
            For example, a <c>computeReservation</c> value of 50 indicates that Batch reserves
            50% of the maximum available vCPU if there's only one fair share identifier. It reserves
            25% if there are two fair share identifiers. It reserves 12.5% if there are three
            fair share identifiers. A <c>computeReservation</c> value of 25 indicates that Batch
            should reserve 25% of the maximum available vCPU if there's only one fair share identifier,
            6.25% if there are two fair share identifiers, and 1.56% if there are three fair share
            identifiers.
            </para>
             
            <para>
            The minimum value is 0 and the maximum value is 99.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.FairsharePolicy.ShareDecaySeconds">
            <summary>
            Gets and sets the property ShareDecaySeconds. 
            <para>
            The amount of time (in seconds) to use to calculate a fair share percentage for each
            fair share identifier in use. A value of zero (0) indicates that only current usage
            is measured. The decay allows for more recently run jobs to have more weight than
            jobs that ran earlier. The maximum supported value is 604800 (1 week).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.FairsharePolicy.ShareDistribution">
            <summary>
            Gets and sets the property ShareDistribution. 
            <para>
            An array of <c>SharedIdentifier</c> objects that contain the weights for the fair
            share identifiers for the fair share policy. Fair share identifiers that aren't included
            have a default weight of <c>1.0</c>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.FargatePlatformConfiguration">
            <summary>
            The platform configuration for jobs that are running on Fargate resources. Jobs that
            run on Amazon EC2 resources must not specify this parameter.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.FargatePlatformConfiguration.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            The Fargate platform version where the jobs are running. A platform version is specified
            only for jobs that are running on Fargate resources. If one isn't specified, the <c>LATEST</c>
            platform version is used by default. This uses a recent, approved version of the Fargate
            platform for compute resources. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html">Fargate
            platform versions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.FrontOfQueueDetail">
            <summary>
            Contains a list of the first 100 <c>RUNNABLE</c> jobs associated to a single job queue.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.FrontOfQueueDetail.Jobs">
            <summary>
            Gets and sets the property Jobs. 
            <para>
            The Amazon Resource Names (ARNs) of the first 100 <c>RUNNABLE</c> jobs in a named
            job queue. For first-in-first-out (FIFO) job queues, jobs are ordered based on their
            submission time. For fair share scheduling (FSS) job queues, jobs are ordered based
            on their job priority and share usage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.FrontOfQueueDetail.LastUpdatedAt">
            <summary>
            Gets and sets the property LastUpdatedAt. 
            <para>
            The Unix timestamp (in milliseconds) for when each of the first 100 <c>RUNNABLE</c>
            jobs were last updated. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.FrontOfQueueJobSummary">
            <summary>
            An object that represents summary details for the first 100 <c>RUNNABLE</c> jobs in
            a job queue.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.FrontOfQueueJobSummary.EarliestTimeAtPosition">
            <summary>
            Gets and sets the property EarliestTimeAtPosition. 
            <para>
            The Unix timestamp (in milliseconds) for when the job transitioned to its current
            position in the job queue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.FrontOfQueueJobSummary.JobArn">
            <summary>
            Gets and sets the property JobArn. 
            <para>
            The ARN for a job in a named job queue.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.GetJobQueueSnapshotRequest">
            <summary>
            Container for the parameters to the GetJobQueueSnapshot operation.
            Provides a list of the first 100 <c>RUNNABLE</c> jobs associated to a single job queue.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.GetJobQueueSnapshotRequest.JobQueue">
            <summary>
            Gets and sets the property JobQueue. 
            <para>
            The job queue’s name or full queue Amazon Resource Name (ARN).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.GetJobQueueSnapshotResponse">
            <summary>
            This is the response object from the GetJobQueueSnapshot operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.GetJobQueueSnapshotResponse.FrontOfQueue">
            <summary>
            Gets and sets the property FrontOfQueue. 
            <para>
            The list of the first 100 <c>RUNNABLE</c> jobs in each job queue. For first-in-first-out
            (FIFO) job queues, jobs are ordered based on their submission time. For fair share
            scheduling (FSS) job queues, jobs are ordered based on their job priority and share
            usage.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Host">
            <summary>
            Determine whether your data volume persists on the host container instance and where
            it's stored. If this parameter is empty, then the Docker daemon assigns a host path
            for your data volume. However, the data isn't guaranteed to persist after the containers
            that are associated with it stop running.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Host.SourcePath">
            <summary>
            Gets and sets the property SourcePath. 
            <para>
            The path on the host container instance that's presented to the container. If this
            parameter is empty, then the Docker daemon has assigned a host path for you. If this
            parameter contains a file location, then the data volume persists at the specified
            location on the host container instance until you delete it manually. If the source
            path location doesn't exist on the host container instance, the Docker daemon creates
            it. If the location does exist, the contents of the source path folder are exported.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that run on Fargate resources. Don't provide
            this for these jobs.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ImagePullSecret">
            <summary>
            References a Kubernetes secret resource. This name of the secret must start and end
            with an alphanumeric character, is required to be lowercase, can include periods (.)
            and hyphens (-), and can't contain more than 253 characters.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ImagePullSecret.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Provides a unique identifier for the <c>ImagePullSecret</c>. This object is required
            when <c>EksPodProperties$imagePullSecrets</c> is used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ArrayPropertiesDetailUnmarshaller">
            <summary>
            Response Unmarshaller for ArrayPropertiesDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ArrayPropertiesDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#ArrayPropertiesDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ArrayPropertiesDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ArrayPropertiesDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ArrayPropertiesMarshaller">
            <summary>
            ArrayProperties Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ArrayPropertiesMarshaller.Marshall(Amazon.Batch.Model.ArrayProperties,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.ArrayPropertiesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ArrayPropertiesSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for ArrayPropertiesSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ArrayPropertiesSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#ArrayPropertiesSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ArrayPropertiesSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ArrayPropertiesSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptContainerDetailUnmarshaller">
            <summary>
            Response Unmarshaller for AttemptContainerDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptContainerDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#AttemptContainerDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptContainerDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptContainerDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptDetailUnmarshaller">
            <summary>
            Response Unmarshaller for AttemptDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#AttemptDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptEcsTaskDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for AttemptEcsTaskDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptEcsTaskDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#AttemptEcsTaskDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptEcsTaskDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptEcsTaskDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptTaskContainerDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for AttemptTaskContainerDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptTaskContainerDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#AttemptTaskContainerDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptTaskContainerDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptTaskContainerDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.CancelJobRequestMarshaller">
            <summary>
            CancelJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CancelJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CancelJobRequestMarshaller.Marshall(Amazon.Batch.Model.CancelJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.CancelJobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.CancelJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelJob operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CancelJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CancelJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.CancelJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ClientExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ClientException Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ClientExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ClientExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ClientExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeEnvironmentDetailUnmarshaller">
            <summary>
            Response Unmarshaller for ComputeEnvironmentDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeEnvironmentDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#ComputeEnvironmentDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeEnvironmentDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeEnvironmentDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeEnvironmentOrderMarshaller">
            <summary>
            ComputeEnvironmentOrder Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeEnvironmentOrderMarshaller.Marshall(Amazon.Batch.Model.ComputeEnvironmentOrder,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeEnvironmentOrderMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeEnvironmentOrderUnmarshaller">
            <summary>
            Response Unmarshaller for ComputeEnvironmentOrder Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeEnvironmentOrderUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#ComputeEnvironmentOrder,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeEnvironmentOrderUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeEnvironmentOrderUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeResourceMarshaller">
            <summary>
            ComputeResource Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeResourceMarshaller.Marshall(Amazon.Batch.Model.ComputeResource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeResourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeResourceUnmarshaller">
            <summary>
            Response Unmarshaller for ComputeResource Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#ComputeResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeResourceUpdateMarshaller">
            <summary>
            ComputeResourceUpdate Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeResourceUpdateMarshaller.Marshall(Amazon.Batch.Model.ComputeResourceUpdate,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeResourceUpdateMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerDetailUnmarshaller">
            <summary>
            Response Unmarshaller for ContainerDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#ContainerDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerOverridesMarshaller">
            <summary>
            ContainerOverrides Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerOverridesMarshaller.Marshall(Amazon.Batch.Model.ContainerOverrides,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerOverridesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerPropertiesMarshaller">
            <summary>
            ContainerProperties Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerPropertiesMarshaller.Marshall(Amazon.Batch.Model.ContainerProperties,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerPropertiesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerPropertiesUnmarshaller">
            <summary>
            Response Unmarshaller for ContainerProperties Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerPropertiesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#ContainerProperties,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerPropertiesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerPropertiesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for ContainerSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#ContainerSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.CreateComputeEnvironmentRequestMarshaller">
            <summary>
            CreateComputeEnvironment Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CreateComputeEnvironmentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CreateComputeEnvironmentRequestMarshaller.Marshall(Amazon.Batch.Model.CreateComputeEnvironmentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.CreateComputeEnvironmentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.CreateComputeEnvironmentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateComputeEnvironment operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CreateComputeEnvironmentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CreateComputeEnvironmentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.CreateComputeEnvironmentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.CreateJobQueueRequestMarshaller">
            <summary>
            CreateJobQueue Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CreateJobQueueRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CreateJobQueueRequestMarshaller.Marshall(Amazon.Batch.Model.CreateJobQueueRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.CreateJobQueueRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.CreateJobQueueResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateJobQueue operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CreateJobQueueResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CreateJobQueueResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.CreateJobQueueResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.CreateSchedulingPolicyRequestMarshaller">
            <summary>
            CreateSchedulingPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CreateSchedulingPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CreateSchedulingPolicyRequestMarshaller.Marshall(Amazon.Batch.Model.CreateSchedulingPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.CreateSchedulingPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.CreateSchedulingPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSchedulingPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CreateSchedulingPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CreateSchedulingPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.CreateSchedulingPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteComputeEnvironmentRequestMarshaller">
            <summary>
            DeleteComputeEnvironment Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteComputeEnvironmentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteComputeEnvironmentRequestMarshaller.Marshall(Amazon.Batch.Model.DeleteComputeEnvironmentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteComputeEnvironmentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteComputeEnvironmentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteComputeEnvironment operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteComputeEnvironmentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteComputeEnvironmentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteComputeEnvironmentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteJobQueueRequestMarshaller">
            <summary>
            DeleteJobQueue Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteJobQueueRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteJobQueueRequestMarshaller.Marshall(Amazon.Batch.Model.DeleteJobQueueRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteJobQueueRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteJobQueueResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteJobQueue operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteJobQueueResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteJobQueueResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteJobQueueResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteSchedulingPolicyRequestMarshaller">
            <summary>
            DeleteSchedulingPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteSchedulingPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteSchedulingPolicyRequestMarshaller.Marshall(Amazon.Batch.Model.DeleteSchedulingPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteSchedulingPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteSchedulingPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSchedulingPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteSchedulingPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteSchedulingPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteSchedulingPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DeregisterJobDefinitionRequestMarshaller">
            <summary>
            DeregisterJobDefinition Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeregisterJobDefinitionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeregisterJobDefinitionRequestMarshaller.Marshall(Amazon.Batch.Model.DeregisterJobDefinitionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DeregisterJobDefinitionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DeregisterJobDefinitionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeregisterJobDefinition operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeregisterJobDefinitionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeregisterJobDefinitionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DeregisterJobDefinitionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeComputeEnvironmentsRequestMarshaller">
            <summary>
            DescribeComputeEnvironments Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeComputeEnvironmentsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeComputeEnvironmentsRequestMarshaller.Marshall(Amazon.Batch.Model.DescribeComputeEnvironmentsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeComputeEnvironmentsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeComputeEnvironmentsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeComputeEnvironments operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeComputeEnvironmentsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeComputeEnvironmentsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeComputeEnvironmentsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobDefinitionsRequestMarshaller">
            <summary>
            DescribeJobDefinitions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobDefinitionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobDefinitionsRequestMarshaller.Marshall(Amazon.Batch.Model.DescribeJobDefinitionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobDefinitionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobDefinitionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeJobDefinitions operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobDefinitionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobDefinitionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobDefinitionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobQueuesRequestMarshaller">
            <summary>
            DescribeJobQueues Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobQueuesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobQueuesRequestMarshaller.Marshall(Amazon.Batch.Model.DescribeJobQueuesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobQueuesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobQueuesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeJobQueues operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobQueuesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobQueuesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobQueuesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobsRequestMarshaller">
            <summary>
            DescribeJobs Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobsRequestMarshaller.Marshall(Amazon.Batch.Model.DescribeJobsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeJobs operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeSchedulingPoliciesRequestMarshaller">
            <summary>
            DescribeSchedulingPolicies Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeSchedulingPoliciesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeSchedulingPoliciesRequestMarshaller.Marshall(Amazon.Batch.Model.DescribeSchedulingPoliciesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeSchedulingPoliciesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeSchedulingPoliciesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSchedulingPolicies operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeSchedulingPoliciesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeSchedulingPoliciesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeSchedulingPoliciesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DeviceMarshaller">
            <summary>
            Device Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeviceMarshaller.Marshall(Amazon.Batch.Model.Device,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.DeviceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DeviceUnmarshaller">
            <summary>
            Response Unmarshaller for Device Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeviceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#Device,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeviceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DeviceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.Ec2ConfigurationMarshaller">
            <summary>
            Ec2Configuration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.Ec2ConfigurationMarshaller.Marshall(Amazon.Batch.Model.Ec2Configuration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.Ec2ConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.Ec2ConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for Ec2Configuration Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.Ec2ConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#Ec2Configuration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.Ec2ConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.Ec2ConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EcsPropertiesDetailUnmarshaller">
            <summary>
            Response Unmarshaller for EcsPropertiesDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EcsPropertiesDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EcsPropertiesDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EcsPropertiesDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EcsPropertiesDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EcsPropertiesMarshaller">
            <summary>
            EcsProperties Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EcsPropertiesMarshaller.Marshall(Amazon.Batch.Model.EcsProperties,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EcsPropertiesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EcsPropertiesOverrideMarshaller">
            <summary>
            EcsPropertiesOverride Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EcsPropertiesOverrideMarshaller.Marshall(Amazon.Batch.Model.EcsPropertiesOverride,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EcsPropertiesOverrideMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EcsPropertiesUnmarshaller">
            <summary>
            Response Unmarshaller for EcsProperties Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EcsPropertiesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EcsProperties,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EcsPropertiesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EcsPropertiesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EcsTaskDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for EcsTaskDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EcsTaskDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EcsTaskDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EcsTaskDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EcsTaskDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EcsTaskPropertiesMarshaller">
            <summary>
            EcsTaskProperties Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EcsTaskPropertiesMarshaller.Marshall(Amazon.Batch.Model.EcsTaskProperties,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EcsTaskPropertiesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EcsTaskPropertiesUnmarshaller">
            <summary>
            Response Unmarshaller for EcsTaskProperties Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EcsTaskPropertiesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EcsTaskProperties,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EcsTaskPropertiesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EcsTaskPropertiesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EFSAuthorizationConfigMarshaller">
            <summary>
            EFSAuthorizationConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EFSAuthorizationConfigMarshaller.Marshall(Amazon.Batch.Model.EFSAuthorizationConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EFSAuthorizationConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EFSAuthorizationConfigUnmarshaller">
            <summary>
            Response Unmarshaller for EFSAuthorizationConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EFSAuthorizationConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EFSAuthorizationConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EFSAuthorizationConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EFSAuthorizationConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EFSVolumeConfigurationMarshaller">
            <summary>
            EFSVolumeConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EFSVolumeConfigurationMarshaller.Marshall(Amazon.Batch.Model.EFSVolumeConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EFSVolumeConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EFSVolumeConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for EFSVolumeConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EFSVolumeConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EFSVolumeConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EFSVolumeConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EFSVolumeConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksAttemptContainerDetailUnmarshaller">
            <summary>
            Response Unmarshaller for EksAttemptContainerDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksAttemptContainerDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EksAttemptContainerDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksAttemptContainerDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EksAttemptContainerDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksAttemptDetailUnmarshaller">
            <summary>
            Response Unmarshaller for EksAttemptDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksAttemptDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EksAttemptDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksAttemptDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EksAttemptDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksConfigurationMarshaller">
            <summary>
            EksConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksConfigurationMarshaller.Marshall(Amazon.Batch.Model.EksConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EksConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for EksConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EksConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EksConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerDetailUnmarshaller">
            <summary>
            Response Unmarshaller for EksContainerDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EksContainerDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerEnvironmentVariableMarshaller">
            <summary>
            EksContainerEnvironmentVariable Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerEnvironmentVariableMarshaller.Marshall(Amazon.Batch.Model.EksContainerEnvironmentVariable,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerEnvironmentVariableMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerEnvironmentVariableUnmarshaller">
            <summary>
            Response Unmarshaller for EksContainerEnvironmentVariable Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerEnvironmentVariableUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EksContainerEnvironmentVariable,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerEnvironmentVariableUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerEnvironmentVariableUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerMarshaller">
            <summary>
            EksContainer Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerMarshaller.Marshall(Amazon.Batch.Model.EksContainer,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerOverrideMarshaller">
            <summary>
            EksContainerOverride Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerOverrideMarshaller.Marshall(Amazon.Batch.Model.EksContainerOverride,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerOverrideMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerResourceRequirementsMarshaller">
            <summary>
            EksContainerResourceRequirements Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerResourceRequirementsMarshaller.Marshall(Amazon.Batch.Model.EksContainerResourceRequirements,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerResourceRequirementsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerResourceRequirementsUnmarshaller">
            <summary>
            Response Unmarshaller for EksContainerResourceRequirements Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerResourceRequirementsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EksContainerResourceRequirements,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerResourceRequirementsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerResourceRequirementsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerSecurityContextMarshaller">
            <summary>
            EksContainerSecurityContext Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerSecurityContextMarshaller.Marshall(Amazon.Batch.Model.EksContainerSecurityContext,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerSecurityContextMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerSecurityContextUnmarshaller">
            <summary>
            Response Unmarshaller for EksContainerSecurityContext Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerSecurityContextUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EksContainerSecurityContext,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerSecurityContextUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerSecurityContextUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerUnmarshaller">
            <summary>
            Response Unmarshaller for EksContainer Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EksContainer,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerVolumeMountMarshaller">
            <summary>
            EksContainerVolumeMount Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerVolumeMountMarshaller.Marshall(Amazon.Batch.Model.EksContainerVolumeMount,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerVolumeMountMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerVolumeMountUnmarshaller">
            <summary>
            Response Unmarshaller for EksContainerVolumeMount Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerVolumeMountUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EksContainerVolumeMount,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerVolumeMountUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EksContainerVolumeMountUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksEmptyDirMarshaller">
            <summary>
            EksEmptyDir Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksEmptyDirMarshaller.Marshall(Amazon.Batch.Model.EksEmptyDir,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EksEmptyDirMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksEmptyDirUnmarshaller">
            <summary>
            Response Unmarshaller for EksEmptyDir Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksEmptyDirUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EksEmptyDir,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksEmptyDirUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EksEmptyDirUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksHostPathMarshaller">
            <summary>
            EksHostPath Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksHostPathMarshaller.Marshall(Amazon.Batch.Model.EksHostPath,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EksHostPathMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksHostPathUnmarshaller">
            <summary>
            Response Unmarshaller for EksHostPath Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksHostPathUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EksHostPath,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksHostPathUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EksHostPathUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksMetadataMarshaller">
            <summary>
            EksMetadata Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksMetadataMarshaller.Marshall(Amazon.Batch.Model.EksMetadata,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EksMetadataMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for EksMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EksMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EksMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksPersistentVolumeClaimMarshaller">
            <summary>
            EksPersistentVolumeClaim Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksPersistentVolumeClaimMarshaller.Marshall(Amazon.Batch.Model.EksPersistentVolumeClaim,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EksPersistentVolumeClaimMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksPersistentVolumeClaimUnmarshaller">
            <summary>
            Response Unmarshaller for EksPersistentVolumeClaim Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksPersistentVolumeClaimUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EksPersistentVolumeClaim,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksPersistentVolumeClaimUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EksPersistentVolumeClaimUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksPodPropertiesDetailUnmarshaller">
            <summary>
            Response Unmarshaller for EksPodPropertiesDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksPodPropertiesDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EksPodPropertiesDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksPodPropertiesDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EksPodPropertiesDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksPodPropertiesMarshaller">
            <summary>
            EksPodProperties Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksPodPropertiesMarshaller.Marshall(Amazon.Batch.Model.EksPodProperties,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EksPodPropertiesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksPodPropertiesOverrideMarshaller">
            <summary>
            EksPodPropertiesOverride Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksPodPropertiesOverrideMarshaller.Marshall(Amazon.Batch.Model.EksPodPropertiesOverride,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EksPodPropertiesOverrideMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksPodPropertiesUnmarshaller">
            <summary>
            Response Unmarshaller for EksPodProperties Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksPodPropertiesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EksPodProperties,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksPodPropertiesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EksPodPropertiesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksPropertiesDetailUnmarshaller">
            <summary>
            Response Unmarshaller for EksPropertiesDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksPropertiesDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EksPropertiesDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksPropertiesDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EksPropertiesDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksPropertiesMarshaller">
            <summary>
            EksProperties Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksPropertiesMarshaller.Marshall(Amazon.Batch.Model.EksProperties,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EksPropertiesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksPropertiesOverrideMarshaller">
            <summary>
            EksPropertiesOverride Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksPropertiesOverrideMarshaller.Marshall(Amazon.Batch.Model.EksPropertiesOverride,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EksPropertiesOverrideMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksPropertiesUnmarshaller">
            <summary>
            Response Unmarshaller for EksProperties Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksPropertiesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EksProperties,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksPropertiesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EksPropertiesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksSecretMarshaller">
            <summary>
            EksSecret Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksSecretMarshaller.Marshall(Amazon.Batch.Model.EksSecret,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EksSecretMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksSecretUnmarshaller">
            <summary>
            Response Unmarshaller for EksSecret Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksSecretUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EksSecret,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksSecretUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EksSecretUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksVolumeMarshaller">
            <summary>
            EksVolume Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksVolumeMarshaller.Marshall(Amazon.Batch.Model.EksVolume,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EksVolumeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EksVolumeUnmarshaller">
            <summary>
            Response Unmarshaller for EksVolume Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksVolumeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EksVolume,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EksVolumeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EksVolumeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EphemeralStorageMarshaller">
            <summary>
            EphemeralStorage Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EphemeralStorageMarshaller.Marshall(Amazon.Batch.Model.EphemeralStorage,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EphemeralStorageMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EphemeralStorageUnmarshaller">
            <summary>
            Response Unmarshaller for EphemeralStorage Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EphemeralStorageUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EphemeralStorage,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EphemeralStorageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EphemeralStorageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EvaluateOnExitMarshaller">
            <summary>
            EvaluateOnExit Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EvaluateOnExitMarshaller.Marshall(Amazon.Batch.Model.EvaluateOnExit,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.EvaluateOnExitMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.EvaluateOnExitUnmarshaller">
            <summary>
            Response Unmarshaller for EvaluateOnExit Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EvaluateOnExitUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#EvaluateOnExit,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.EvaluateOnExitUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.EvaluateOnExitUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.FairsharePolicyMarshaller">
            <summary>
            FairsharePolicy Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.FairsharePolicyMarshaller.Marshall(Amazon.Batch.Model.FairsharePolicy,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.FairsharePolicyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.FairsharePolicyUnmarshaller">
            <summary>
            Response Unmarshaller for FairsharePolicy Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.FairsharePolicyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#FairsharePolicy,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.FairsharePolicyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.FairsharePolicyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.FargatePlatformConfigurationMarshaller">
            <summary>
            FargatePlatformConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.FargatePlatformConfigurationMarshaller.Marshall(Amazon.Batch.Model.FargatePlatformConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.FargatePlatformConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.FargatePlatformConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for FargatePlatformConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.FargatePlatformConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#FargatePlatformConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.FargatePlatformConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.FargatePlatformConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.FrontOfQueueDetailUnmarshaller">
            <summary>
            Response Unmarshaller for FrontOfQueueDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.FrontOfQueueDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#FrontOfQueueDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.FrontOfQueueDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.FrontOfQueueDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.FrontOfQueueJobSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for FrontOfQueueJobSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.FrontOfQueueJobSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#FrontOfQueueJobSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.FrontOfQueueJobSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.FrontOfQueueJobSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.GetJobQueueSnapshotRequestMarshaller">
            <summary>
            GetJobQueueSnapshot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.GetJobQueueSnapshotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.GetJobQueueSnapshotRequestMarshaller.Marshall(Amazon.Batch.Model.GetJobQueueSnapshotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.GetJobQueueSnapshotRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.GetJobQueueSnapshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetJobQueueSnapshot operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.GetJobQueueSnapshotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.GetJobQueueSnapshotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.GetJobQueueSnapshotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.HostMarshaller">
            <summary>
            Host Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.HostMarshaller.Marshall(Amazon.Batch.Model.Host,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.HostMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.HostUnmarshaller">
            <summary>
            Response Unmarshaller for Host Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.HostUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#Host,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.HostUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.HostUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ImagePullSecretMarshaller">
            <summary>
            ImagePullSecret Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ImagePullSecretMarshaller.Marshall(Amazon.Batch.Model.ImagePullSecret,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.ImagePullSecretMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ImagePullSecretUnmarshaller">
            <summary>
            Response Unmarshaller for ImagePullSecret Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ImagePullSecretUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#ImagePullSecret,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ImagePullSecretUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ImagePullSecretUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.JobDefinitionUnmarshaller">
            <summary>
            Response Unmarshaller for JobDefinition Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobDefinitionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#JobDefinition,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobDefinitionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.JobDefinitionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.JobDependencyMarshaller">
            <summary>
            JobDependency Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobDependencyMarshaller.Marshall(Amazon.Batch.Model.JobDependency,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.JobDependencyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.JobDependencyUnmarshaller">
            <summary>
            Response Unmarshaller for JobDependency Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobDependencyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#JobDependency,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobDependencyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.JobDependencyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.JobDetailUnmarshaller">
            <summary>
            Response Unmarshaller for JobDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#JobDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.JobDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.JobQueueDetailUnmarshaller">
            <summary>
            Response Unmarshaller for JobQueueDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobQueueDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#JobQueueDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobQueueDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.JobQueueDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.JobStateTimeLimitActionMarshaller">
            <summary>
            JobStateTimeLimitAction Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobStateTimeLimitActionMarshaller.Marshall(Amazon.Batch.Model.JobStateTimeLimitAction,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.JobStateTimeLimitActionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.JobStateTimeLimitActionUnmarshaller">
            <summary>
            Response Unmarshaller for JobStateTimeLimitAction Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobStateTimeLimitActionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#JobStateTimeLimitAction,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobStateTimeLimitActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.JobStateTimeLimitActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.JobSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for JobSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#JobSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.JobSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.JobTimeoutMarshaller">
            <summary>
            JobTimeout Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobTimeoutMarshaller.Marshall(Amazon.Batch.Model.JobTimeout,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.JobTimeoutMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.JobTimeoutUnmarshaller">
            <summary>
            Response Unmarshaller for JobTimeout Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobTimeoutUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#JobTimeout,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobTimeoutUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.JobTimeoutUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.KeyValuePairMarshaller">
            <summary>
            KeyValuePair Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.KeyValuePairMarshaller.Marshall(Amazon.Batch.Model.KeyValuePair,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.KeyValuePairMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.KeyValuePairUnmarshaller">
            <summary>
            Response Unmarshaller for KeyValuePair Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.KeyValuePairUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#KeyValuePair,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.KeyValuePairUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.KeyValuePairUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.KeyValuesPairMarshaller">
            <summary>
            KeyValuesPair Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.KeyValuesPairMarshaller.Marshall(Amazon.Batch.Model.KeyValuesPair,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.KeyValuesPairMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationMarshaller">
            <summary>
            LaunchTemplateSpecification Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationMarshaller.Marshall(Amazon.Batch.Model.LaunchTemplateSpecification,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationOverrideMarshaller">
            <summary>
            LaunchTemplateSpecificationOverride Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationOverrideMarshaller.Marshall(Amazon.Batch.Model.LaunchTemplateSpecificationOverride,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationOverrideMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationOverrideUnmarshaller">
            <summary>
            Response Unmarshaller for LaunchTemplateSpecificationOverride Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationOverrideUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#LaunchTemplateSpecificationOverride,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationOverrideUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationOverrideUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationUnmarshaller">
            <summary>
            Response Unmarshaller for LaunchTemplateSpecification Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#LaunchTemplateSpecification,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.LinuxParametersMarshaller">
            <summary>
            LinuxParameters Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.LinuxParametersMarshaller.Marshall(Amazon.Batch.Model.LinuxParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.LinuxParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.LinuxParametersUnmarshaller">
            <summary>
            Response Unmarshaller for LinuxParameters Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.LinuxParametersUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#LinuxParameters,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.LinuxParametersUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.LinuxParametersUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ListJobsRequestMarshaller">
            <summary>
            ListJobs Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ListJobsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ListJobsRequestMarshaller.Marshall(Amazon.Batch.Model.ListJobsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ListJobsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ListJobsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListJobs operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ListJobsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ListJobsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ListJobsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ListSchedulingPoliciesRequestMarshaller">
            <summary>
            ListSchedulingPolicies Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ListSchedulingPoliciesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ListSchedulingPoliciesRequestMarshaller.Marshall(Amazon.Batch.Model.ListSchedulingPoliciesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ListSchedulingPoliciesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ListSchedulingPoliciesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListSchedulingPolicies operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ListSchedulingPoliciesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ListSchedulingPoliciesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ListSchedulingPoliciesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Batch.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.LogConfigurationMarshaller">
            <summary>
            LogConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.LogConfigurationMarshaller.Marshall(Amazon.Batch.Model.LogConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.LogConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.LogConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for LogConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.LogConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#LogConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.LogConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.LogConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.MountPointMarshaller">
            <summary>
            MountPoint Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.MountPointMarshaller.Marshall(Amazon.Batch.Model.MountPoint,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.MountPointMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.MountPointUnmarshaller">
            <summary>
            Response Unmarshaller for MountPoint Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.MountPointUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#MountPoint,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.MountPointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.MountPointUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.NetworkConfigurationMarshaller">
            <summary>
            NetworkConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NetworkConfigurationMarshaller.Marshall(Amazon.Batch.Model.NetworkConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.NetworkConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.NetworkConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NetworkConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#NetworkConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NetworkConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.NetworkConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkInterface Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#NetworkInterface,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.NodeDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for NodeDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodeDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#NodeDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodeDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.NodeDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.NodeOverridesMarshaller">
            <summary>
            NodeOverrides Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodeOverridesMarshaller.Marshall(Amazon.Batch.Model.NodeOverrides,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.NodeOverridesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertiesMarshaller">
            <summary>
            NodeProperties Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertiesMarshaller.Marshall(Amazon.Batch.Model.NodeProperties,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertiesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertiesSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for NodePropertiesSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertiesSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#NodePropertiesSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertiesSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertiesSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertiesUnmarshaller">
            <summary>
            Response Unmarshaller for NodeProperties Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertiesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#NodeProperties,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertiesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertiesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertyOverrideMarshaller">
            <summary>
            NodePropertyOverride Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertyOverrideMarshaller.Marshall(Amazon.Batch.Model.NodePropertyOverride,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertyOverrideMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.NodeRangePropertyMarshaller">
            <summary>
            NodeRangeProperty Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodeRangePropertyMarshaller.Marshall(Amazon.Batch.Model.NodeRangeProperty,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.NodeRangePropertyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.NodeRangePropertyUnmarshaller">
            <summary>
            Response Unmarshaller for NodeRangeProperty Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodeRangePropertyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#NodeRangeProperty,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodeRangePropertyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.NodeRangePropertyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.RegisterJobDefinitionRequestMarshaller">
            <summary>
            RegisterJobDefinition Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.RegisterJobDefinitionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.RegisterJobDefinitionRequestMarshaller.Marshall(Amazon.Batch.Model.RegisterJobDefinitionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.RegisterJobDefinitionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.RegisterJobDefinitionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RegisterJobDefinition operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.RegisterJobDefinitionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.RegisterJobDefinitionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.RegisterJobDefinitionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.RepositoryCredentialsMarshaller">
            <summary>
            RepositoryCredentials Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.RepositoryCredentialsMarshaller.Marshall(Amazon.Batch.Model.RepositoryCredentials,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.RepositoryCredentialsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.RepositoryCredentialsUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryCredentials Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.RepositoryCredentialsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#RepositoryCredentials,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.RepositoryCredentialsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.RepositoryCredentialsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ResourceRequirementMarshaller">
            <summary>
            ResourceRequirement Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ResourceRequirementMarshaller.Marshall(Amazon.Batch.Model.ResourceRequirement,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.ResourceRequirementMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ResourceRequirementUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceRequirement Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ResourceRequirementUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#ResourceRequirement,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ResourceRequirementUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ResourceRequirementUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.RetryStrategyMarshaller">
            <summary>
            RetryStrategy Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.RetryStrategyMarshaller.Marshall(Amazon.Batch.Model.RetryStrategy,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.RetryStrategyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.RetryStrategyUnmarshaller">
            <summary>
            Response Unmarshaller for RetryStrategy Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.RetryStrategyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#RetryStrategy,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.RetryStrategyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.RetryStrategyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.RuntimePlatformMarshaller">
            <summary>
            RuntimePlatform Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.RuntimePlatformMarshaller.Marshall(Amazon.Batch.Model.RuntimePlatform,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.RuntimePlatformMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.RuntimePlatformUnmarshaller">
            <summary>
            Response Unmarshaller for RuntimePlatform Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.RuntimePlatformUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#RuntimePlatform,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.RuntimePlatformUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.RuntimePlatformUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.SchedulingPolicyDetailUnmarshaller">
            <summary>
            Response Unmarshaller for SchedulingPolicyDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.SchedulingPolicyDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#SchedulingPolicyDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.SchedulingPolicyDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.SchedulingPolicyDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.SchedulingPolicyListingDetailUnmarshaller">
            <summary>
            Response Unmarshaller for SchedulingPolicyListingDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.SchedulingPolicyListingDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#SchedulingPolicyListingDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.SchedulingPolicyListingDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.SchedulingPolicyListingDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.SecretMarshaller">
            <summary>
            Secret Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.SecretMarshaller.Marshall(Amazon.Batch.Model.Secret,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.SecretMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.SecretUnmarshaller">
            <summary>
            Response Unmarshaller for Secret Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.SecretUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#Secret,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.SecretUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.SecretUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ShareAttributesMarshaller">
            <summary>
            ShareAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ShareAttributesMarshaller.Marshall(Amazon.Batch.Model.ShareAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.ShareAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ShareAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for ShareAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ShareAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#ShareAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ShareAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ShareAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.SubmitJobRequestMarshaller">
            <summary>
            SubmitJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.SubmitJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.SubmitJobRequestMarshaller.Marshall(Amazon.Batch.Model.SubmitJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.SubmitJobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.SubmitJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SubmitJob operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.SubmitJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.SubmitJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.SubmitJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Batch.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.TaskContainerDependencyMarshaller">
            <summary>
            TaskContainerDependency Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TaskContainerDependencyMarshaller.Marshall(Amazon.Batch.Model.TaskContainerDependency,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.TaskContainerDependencyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.TaskContainerDependencyUnmarshaller">
            <summary>
            Response Unmarshaller for TaskContainerDependency Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TaskContainerDependencyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#TaskContainerDependency,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TaskContainerDependencyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.TaskContainerDependencyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.TaskContainerDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for TaskContainerDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TaskContainerDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#TaskContainerDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TaskContainerDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.TaskContainerDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.TaskContainerOverridesMarshaller">
            <summary>
            TaskContainerOverrides Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TaskContainerOverridesMarshaller.Marshall(Amazon.Batch.Model.TaskContainerOverrides,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.TaskContainerOverridesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.TaskContainerPropertiesMarshaller">
            <summary>
            TaskContainerProperties Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TaskContainerPropertiesMarshaller.Marshall(Amazon.Batch.Model.TaskContainerProperties,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.TaskContainerPropertiesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.TaskContainerPropertiesUnmarshaller">
            <summary>
            Response Unmarshaller for TaskContainerProperties Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TaskContainerPropertiesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#TaskContainerProperties,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TaskContainerPropertiesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.TaskContainerPropertiesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.TaskPropertiesOverrideMarshaller">
            <summary>
            TaskPropertiesOverride Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TaskPropertiesOverrideMarshaller.Marshall(Amazon.Batch.Model.TaskPropertiesOverride,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.TaskPropertiesOverrideMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.TerminateJobRequestMarshaller">
            <summary>
            TerminateJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TerminateJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TerminateJobRequestMarshaller.Marshall(Amazon.Batch.Model.TerminateJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.TerminateJobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.TerminateJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TerminateJob operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TerminateJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TerminateJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.TerminateJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.TmpfsMarshaller">
            <summary>
            Tmpfs Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TmpfsMarshaller.Marshall(Amazon.Batch.Model.Tmpfs,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.TmpfsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.TmpfsUnmarshaller">
            <summary>
            Response Unmarshaller for Tmpfs Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TmpfsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#Tmpfs,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TmpfsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.TmpfsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.UlimitMarshaller">
            <summary>
            Ulimit Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UlimitMarshaller.Marshall(Amazon.Batch.Model.Ulimit,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.UlimitMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.UlimitUnmarshaller">
            <summary>
            Response Unmarshaller for Ulimit Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UlimitUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#Ulimit,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UlimitUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.UlimitUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Batch.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateComputeEnvironmentRequestMarshaller">
            <summary>
            UpdateComputeEnvironment Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateComputeEnvironmentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateComputeEnvironmentRequestMarshaller.Marshall(Amazon.Batch.Model.UpdateComputeEnvironmentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateComputeEnvironmentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateComputeEnvironmentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateComputeEnvironment operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateComputeEnvironmentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateComputeEnvironmentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateComputeEnvironmentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateJobQueueRequestMarshaller">
            <summary>
            UpdateJobQueue Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateJobQueueRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateJobQueueRequestMarshaller.Marshall(Amazon.Batch.Model.UpdateJobQueueRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateJobQueueRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateJobQueueResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateJobQueue operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateJobQueueResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateJobQueueResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateJobQueueResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.UpdatePolicyMarshaller">
            <summary>
            UpdatePolicy Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdatePolicyMarshaller.Marshall(Amazon.Batch.Model.UpdatePolicy,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.UpdatePolicyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.UpdatePolicyUnmarshaller">
            <summary>
            Response Unmarshaller for UpdatePolicy Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdatePolicyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#UpdatePolicy,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdatePolicyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.UpdatePolicyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateSchedulingPolicyRequestMarshaller">
            <summary>
            UpdateSchedulingPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateSchedulingPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateSchedulingPolicyRequestMarshaller.Marshall(Amazon.Batch.Model.UpdateSchedulingPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateSchedulingPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateSchedulingPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateSchedulingPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateSchedulingPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateSchedulingPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateSchedulingPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.VolumeMarshaller">
            <summary>
            Volume Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.VolumeMarshaller.Marshall(Amazon.Batch.Model.Volume,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.VolumeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.VolumeUnmarshaller">
            <summary>
            Response Unmarshaller for Volume Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.VolumeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#Volume,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.VolumeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.VolumeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.JobDefinition">
            <summary>
            An object that represents an Batch job definition.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.ContainerOrchestrationType">
            <summary>
            Gets and sets the property ContainerOrchestrationType. 
            <para>
            The orchestration type of the compute environment. The valid values are <c>ECS</c>
            (default) or <c>EKS</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.ContainerProperties">
            <summary>
            Gets and sets the property ContainerProperties. 
            <para>
            An object with properties specific to Amazon ECS-based jobs. When <c>containerProperties</c>
            is used in the job definition, it can't be used in addition to <c>eksProperties</c>,
            <c>ecsProperties</c>, or <c>nodeProperties</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.EcsProperties">
            <summary>
            Gets and sets the property EcsProperties. 
            <para>
            An object that contains the properties for the Amazon ECS resources of a job.When
            <c>ecsProperties</c> is used in the job definition, it can't be used in addition to
            <c>containerProperties</c>, <c>eksProperties</c>, or <c>nodeProperties</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.EksProperties">
            <summary>
            Gets and sets the property EksProperties. 
            <para>
            An object with properties that are specific to Amazon EKS-based jobs. When <c>eksProperties</c>
            is used in the job definition, it can't be used in addition to <c>containerProperties</c>,
            <c>ecsProperties</c>, or <c>nodeProperties</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.JobDefinitionArn">
            <summary>
            Gets and sets the property JobDefinitionArn. 
            <para>
            The Amazon Resource Name (ARN) for the job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.JobDefinitionName">
            <summary>
            Gets and sets the property JobDefinitionName. 
            <para>
            The name of the job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.NodeProperties">
            <summary>
            Gets and sets the property NodeProperties. 
            <para>
            An object with properties that are specific to multi-node parallel jobs. When <c>nodeProperties</c>
            is used in the job definition, it can't be used in addition to <c>containerProperties</c>,
            <c>ecsProperties</c>, or <c>eksProperties</c>.
            </para>
             <note> 
            <para>
            If the job runs on Fargate resources, don't specify <c>nodeProperties</c>. Use <c>containerProperties</c>
            instead.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            Default parameters or parameter substitution placeholders that are set in the job
            definition. Parameters are specified as a key-value pair mapping. Parameters in a
            <c>SubmitJob</c> request override any corresponding parameter defaults from the job
            definition. For more information about specifying parameters, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/job_definition_parameters.html">Job
            definition parameters</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.PlatformCapabilities">
            <summary>
            Gets and sets the property PlatformCapabilities. 
            <para>
            The platform capabilities required by the job definition. If no value is specified,
            it defaults to <c>EC2</c>. Jobs run on Fargate resources specify <c>FARGATE</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.PropagateTags">
            <summary>
            Gets and sets the property PropagateTags. 
            <para>
            Specifies whether to propagate the tags from the job or job definition to the corresponding
            Amazon ECS task. If no value is specified, the tags aren't propagated. Tags can only
            be propagated to the tasks when the tasks are created. For tags with the same name,
            job tags are given priority over job definitions tags. If the total number of combined
            tags from the job and job definition is over 50, the job is moved to the <c>FAILED</c>
            state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.RetryStrategy">
            <summary>
            Gets and sets the property RetryStrategy. 
            <para>
            The retry strategy to use for failed jobs that are submitted with this job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.Revision">
            <summary>
            Gets and sets the property Revision. 
            <para>
            The revision of the job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.SchedulingPriority">
            <summary>
            Gets and sets the property SchedulingPriority. 
            <para>
            The scheduling priority of the job definition. This only affects jobs in job queues
            with a fair share policy. Jobs with a higher scheduling priority are scheduled before
            jobs with a lower scheduling priority.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags that are applied to the job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.Timeout">
            <summary>
            Gets and sets the property Timeout. 
            <para>
            The timeout time for jobs that are submitted with this job definition. After the amount
            of time you specify passes, Batch terminates your jobs if they aren't finished.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of job definition. It's either <c>container</c> or <c>multinode</c>. If the
            job is run on Fargate resources, then <c>multinode</c> isn't supported. For more information
            about multi-node parallel jobs, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/multi-node-job-def.html">Creating
            a multi-node parallel job definition</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.JobDependency">
            <summary>
            An object that represents an Batch job dependency.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDependency.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The job ID of the Batch job that's associated with this dependency.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDependency.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the job dependency.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.JobDetail">
            <summary>
            An object that represents an Batch job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.ArrayProperties">
            <summary>
            Gets and sets the property ArrayProperties. 
            <para>
            The array properties of the job, if it's an array job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.Attempts">
            <summary>
            Gets and sets the property Attempts. 
            <para>
            A list of job attempts that are associated with this job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.Container">
            <summary>
            Gets and sets the property Container. 
            <para>
            An object that represents the details for the container that's associated with the
            job. If the details are for a multiple-container job, this object will be empty. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix timestamp (in milliseconds) for when the job was created. For non-array jobs
            and parent array jobs, this is when the job entered the <c>SUBMITTED</c> state. This
            is specifically at the time <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_SubmitJob.html">SubmitJob</a>
            was called. For array child jobs, this is when the child job was spawned by its parent
            and entered the <c>PENDING</c> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.DependsOn">
            <summary>
            Gets and sets the property DependsOn. 
            <para>
            A list of job IDs that this job depends on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.EcsProperties">
            <summary>
            Gets and sets the property EcsProperties. 
            <para>
            An object with properties that are specific to Amazon ECS-based jobs. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.EksAttempts">
            <summary>
            Gets and sets the property EksAttempts. 
            <para>
            A list of job attempts that are associated with this job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.EksProperties">
            <summary>
            Gets and sets the property EksProperties. 
            <para>
            An object with various properties that are specific to Amazon EKS based jobs. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.IsCancelled">
            <summary>
            Gets and sets the property IsCancelled. 
            <para>
            Indicates whether the job is canceled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.IsTerminated">
            <summary>
            Gets and sets the property IsTerminated. 
            <para>
            Indicates whether the job is terminated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.JobArn">
            <summary>
            Gets and sets the property JobArn. 
            <para>
            The Amazon Resource Name (ARN) of the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.JobDefinition">
            <summary>
            Gets and sets the property JobDefinition. 
            <para>
            The Amazon Resource Name (ARN) of the job definition that this job uses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The job ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.JobName">
            <summary>
            Gets and sets the property JobName. 
            <para>
            The job name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.JobQueue">
            <summary>
            Gets and sets the property JobQueue. 
            <para>
            The Amazon Resource Name (ARN) of the job queue that the job is associated with.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.NodeDetails">
            <summary>
            Gets and sets the property NodeDetails. 
            <para>
            An object that represents the details of a node that's associated with a multi-node
            parallel job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.NodeProperties">
            <summary>
            Gets and sets the property NodeProperties. 
            <para>
            An object that represents the node properties of a multi-node parallel job.
            </para>
             <note> 
            <para>
            This isn't applicable to jobs that are running on Fargate resources.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            Additional parameters that are passed to the job that replace parameter substitution
            placeholders or override any corresponding parameter defaults from the job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.PlatformCapabilities">
            <summary>
            Gets and sets the property PlatformCapabilities. 
            <para>
            The platform capabilities required by the job definition. If no value is specified,
            it defaults to <c>EC2</c>. Jobs run on Fargate resources specify <c>FARGATE</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.PropagateTags">
            <summary>
            Gets and sets the property PropagateTags. 
            <para>
            Specifies whether to propagate the tags from the job or job definition to the corresponding
            Amazon ECS task. If no value is specified, the tags aren't propagated. Tags can only
            be propagated to the tasks when the tasks are created. For tags with the same name,
            job tags are given priority over job definitions tags. If the total number of combined
            tags from the job and job definition is over 50, the job is moved to the <c>FAILED</c>
            state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.RetryStrategy">
            <summary>
            Gets and sets the property RetryStrategy. 
            <para>
            The retry strategy to use for this job if an attempt fails.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.SchedulingPriority">
            <summary>
            Gets and sets the property SchedulingPriority. 
            <para>
            The scheduling policy of the job definition. This only affects jobs in job queues
            with a fair share policy. Jobs with a higher scheduling priority are scheduled before
            jobs with a lower scheduling priority.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.ShareIdentifier">
            <summary>
            Gets and sets the property ShareIdentifier. 
            <para>
            The share identifier for the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.StartedAt">
            <summary>
            Gets and sets the property StartedAt. 
            <para>
            The Unix timestamp (in milliseconds) for when the job was started. More specifically,
            it's when the job transitioned from the <c>STARTING</c> state to the <c>RUNNING</c>
            state. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status for the job.
            </para>
             <note> 
            <para>
            If your jobs don't progress to <c>STARTING</c>, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/troubleshooting.html#job_stuck_in_runnable">Jobs
            stuck in RUNNABLE status</a> in the troubleshooting section of the <i>Batch User Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.StatusReason">
            <summary>
            Gets and sets the property StatusReason. 
            <para>
            A short, human-readable string to provide more details for the current status of the
            job.
            </para>
             <ul> <li> 
            <para>
             <c>CAPACITY:INSUFFICIENT_INSTANCE_CAPACITY</c> - All compute environments have insufficient
            capacity to service the job.
            </para>
             </li> <li> 
            <para>
             <c>MISCONFIGURATION:COMPUTE_ENVIRONMENT_MAX_RESOURCE</c> - All compute environments
            have a <c>maxVcpu</c> setting that is smaller than the job requirements.
            </para>
             </li> <li> 
            <para>
             <c>MISCONFIGURATION:JOB_RESOURCE_REQUIREMENT</c> - All compute environments have
            no connected instances that meet the job requirements.
            </para>
             </li> <li> 
            <para>
             <c>MISCONFIGURATION:SERVICE_ROLE_PERMISSIONS</c> - All compute environments have
            problems with the service role permissions.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.StoppedAt">
            <summary>
            Gets and sets the property StoppedAt. 
            <para>
            The Unix timestamp (in milliseconds) for when the job was stopped. More specifically,
            it's when the job transitioned from the <c>RUNNING</c> state to a terminal state,
            such as <c>SUCCEEDED</c> or <c>FAILED</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags that are applied to the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.Timeout">
            <summary>
            Gets and sets the property Timeout. 
            <para>
            The timeout configuration for the job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.JobQueueDetail">
            <summary>
            An object that represents the details for an Batch job queue.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobQueueDetail.ComputeEnvironmentOrder">
            <summary>
            Gets and sets the property ComputeEnvironmentOrder. 
            <para>
            The compute environments that are attached to the job queue and the order that job
            placement is preferred. Compute environments are selected for job placement in ascending
            order.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobQueueDetail.JobQueueArn">
            <summary>
            Gets and sets the property JobQueueArn. 
            <para>
            The Amazon Resource Name (ARN) of the job queue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobQueueDetail.JobQueueName">
            <summary>
            Gets and sets the property JobQueueName. 
            <para>
            The job queue name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobQueueDetail.JobStateTimeLimitActions">
            <summary>
            Gets and sets the property JobStateTimeLimitActions. 
            <para>
            The set of actions that Batch perform on jobs that remain at the head of the job queue
            in the specified state longer than specified times. Batch will perform each action
            after <c>maxTimeSeconds</c> has passed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobQueueDetail.Priority">
            <summary>
            Gets and sets the property Priority. 
            <para>
            The priority of the job queue. Job queues with a higher priority (or a higher integer
            value for the <c>priority</c> parameter) are evaluated first when associated with
            the same compute environment. Priority is determined in descending order. For example,
            a job queue with a priority value of <c>10</c> is given scheduling preference over
            a job queue with a priority value of <c>1</c>. All of the compute environments must
            be either Amazon EC2 (<c>EC2</c> or <c>SPOT</c>) or Fargate (<c>FARGATE</c> or <c>FARGATE_SPOT</c>).
            Amazon EC2 and Fargate compute environments can't be mixed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobQueueDetail.SchedulingPolicyArn">
            <summary>
            Gets and sets the property SchedulingPolicyArn. 
            <para>
            The Amazon Resource Name (ARN) of the scheduling policy. The format is <c>aws:<i>Partition</i>:batch:<i>Region</i>:<i>Account</i>:scheduling-policy/<i>Name</i>
            </c>. For example, <c>aws:aws:batch:us-west-2:123456789012:scheduling-policy/MySchedulingPolicy</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobQueueDetail.State">
            <summary>
            Gets and sets the property State. 
            <para>
            Describes the ability of the queue to accept new jobs. If the job queue state is <c>ENABLED</c>,
            it can accept jobs. If the job queue state is <c>DISABLED</c>, new jobs can't be added
            to the queue, but jobs already in the queue can finish.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobQueueDetail.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the job queue (for example, <c>CREATING</c> or <c>VALID</c>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobQueueDetail.StatusReason">
            <summary>
            Gets and sets the property StatusReason. 
            <para>
            A short, human-readable string to provide additional details for the current status
            of the job queue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobQueueDetail.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags that are applied to the job queue. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/using-tags.html">Tagging
            your Batch resources</a> in <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.JobStateTimeLimitAction">
            <summary>
            Specifies an action that Batch will take after the job has remained at the head of
            the queue in the specified state for longer than the specified time.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobStateTimeLimitAction.Action">
            <summary>
            Gets and sets the property Action. 
            <para>
            The action to take when a job is at the head of the job queue in the specified state
            for the specified period of time. The only supported value is <c>CANCEL</c>, which
            will cancel the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobStateTimeLimitAction.MaxTimeSeconds">
            <summary>
            Gets and sets the property MaxTimeSeconds. 
            <para>
            The approximate amount of time, in seconds, that must pass with the job in the specified
            state before the action is taken. The minimum value is 600 (10 minutes) and the maximum
            value is 86,400 (24 hours).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobStateTimeLimitAction.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            The reason to log for the action being taken.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobStateTimeLimitAction.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the job needed to trigger the action. The only supported value is <c>RUNNABLE</c>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.JobSummary">
            <summary>
            An object that represents summary details of a job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobSummary.ArrayProperties">
            <summary>
            Gets and sets the property ArrayProperties. 
            <para>
            The array properties of the job, if it's an array job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobSummary.Container">
            <summary>
            Gets and sets the property Container. 
            <para>
            An object that represents the details of the container that's associated with the
            job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobSummary.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix timestamp (in milliseconds) for when the job was created. For non-array jobs
            and parent array jobs, this is when the job entered the <c>SUBMITTED</c> state (at
            the time <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_SubmitJob.html">SubmitJob</a>
            was called). For array child jobs, this is when the child job was spawned by its parent
            and entered the <c>PENDING</c> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobSummary.JobArn">
            <summary>
            Gets and sets the property JobArn. 
            <para>
            The Amazon Resource Name (ARN) of the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobSummary.JobDefinition">
            <summary>
            Gets and sets the property JobDefinition. 
            <para>
            The Amazon Resource Name (ARN) of the job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobSummary.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The job ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobSummary.JobName">
            <summary>
            Gets and sets the property JobName. 
            <para>
            The job name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobSummary.NodeProperties">
            <summary>
            Gets and sets the property NodeProperties. 
            <para>
            The node properties for a single node in a job summary list.
            </para>
             <note> 
            <para>
            This isn't applicable to jobs that are running on Fargate resources.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobSummary.StartedAt">
            <summary>
            Gets and sets the property StartedAt. 
            <para>
            The Unix timestamp for when the job was started. More specifically, it's when the
            job transitioned from the <c>STARTING</c> state to the <c>RUNNING</c> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status for the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobSummary.StatusReason">
            <summary>
            Gets and sets the property StatusReason. 
            <para>
            A short, human-readable string to provide more details for the current status of the
            job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobSummary.StoppedAt">
            <summary>
            Gets and sets the property StoppedAt. 
            <para>
            The Unix timestamp for when the job was stopped. More specifically, it's when the
            job transitioned from the <c>RUNNING</c> state to a terminal state, such as <c>SUCCEEDED</c>
            or <c>FAILED</c>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.JobTimeout">
            <summary>
            An object that represents a job timeout configuration.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobTimeout.AttemptDurationSeconds">
            <summary>
            Gets and sets the property AttemptDurationSeconds. 
            <para>
            The job timeout time (in seconds) that's measured from the job attempt's <c>startedAt</c>
            timestamp. After this time passes, Batch terminates your jobs if they aren't finished.
            The minimum value for the timeout is 60 seconds.
            </para>
             
            <para>
            For array jobs, the timeout applies to the child jobs, not to the parent array job.
            </para>
             
            <para>
            For multi-node parallel (MNP) jobs, the timeout applies to the whole job, not to the
            individual nodes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.KeyValuePair">
            <summary>
            A key-value pair object.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.KeyValuePair.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the key-value pair. For environment variables, this is the name of the
            environment variable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.KeyValuePair.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the key-value pair. For environment variables, this is the value of the
            environment variable.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.KeyValuesPair">
            <summary>
            A filter name and value pair that's used to return a more specific list of results
            from a <c>ListJobs</c> API operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.KeyValuesPair.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the filter. Filter names are case sensitive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.KeyValuesPair.Values">
            <summary>
            Gets and sets the property Values. 
            <para>
            The filter values.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.LaunchTemplateSpecification">
            <summary>
            An object that represents a launch template that's associated with a compute resource.
            You must specify either the launch template ID or launch template name in the request,
            but not both.
            
             
            <para>
            If security groups are specified using both the <c>securityGroupIds</c> parameter
            of <c>CreateComputeEnvironment</c> and the launch template, the values in the <c>securityGroupIds</c>
            parameter of <c>CreateComputeEnvironment</c> will be used.
            </para>
             <note> 
            <para>
            This object isn't applicable to jobs that are running on Fargate resources.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.LaunchTemplateSpecification.LaunchTemplateId">
            <summary>
            Gets and sets the property LaunchTemplateId. 
            <para>
            The ID of the launch template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.LaunchTemplateSpecification.LaunchTemplateName">
            <summary>
            Gets and sets the property LaunchTemplateName. 
            <para>
            The name of the launch template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.LaunchTemplateSpecification.Overrides">
            <summary>
            Gets and sets the property Overrides. 
            <para>
            A launch template to use in place of the default launch template. You must specify
            either the launch template ID or launch template name in the request, but not both.
            </para>
             
            <para>
            You can specify up to ten (10) launch template overrides that are associated to unique
            instance types or families for each compute environment.
            </para>
             <note> 
            <para>
            To unset all override templates for a compute environment, you can pass an empty array
            to the <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_UpdateComputeEnvironment.html">UpdateComputeEnvironment.overrides</a>
            parameter, or not include the <c>overrides</c> parameter when submitting the <c>UpdateComputeEnvironment</c>
            API operation.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.LaunchTemplateSpecification.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version number of the launch template, <c>$Default</c>, or <c>$Latest</c>.
            </para>
             
            <para>
            If the value is <c>$Default</c>, the default version of the launch template is used.
            If the value is <c>$Latest</c>, the latest version of the launch template is used.
            
            </para>
             <important> 
            <para>
            If the AMI ID that's used in a compute environment is from the launch template, the
            AMI isn't changed when the compute environment is updated. It's only changed if the
            <c>updateToLatestImageVersion</c> parameter for the compute environment is set to
            <c>true</c>. During an infrastructure update, if either <c>$Default</c> or <c>$Latest</c>
            is specified, Batch re-evaluates the launch template version, and it might use a different
            version of the launch template. This is the case even if the launch template isn't
            specified in the update. When updating a compute environment, changing the launch
            template requires an infrastructure update of the compute environment. For more information,
            see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>.
            </para>
             </important> 
            <para>
            Default: <c>$Default</c> 
            </para>
             
            <para>
            Latest: <c>$Latest</c> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.LaunchTemplateSpecificationOverride">
            <summary>
            An object that represents a launch template to use in place of the default launch
            template. You must specify either the launch template ID or launch template name in
            the request, but not both.
            
             
            <para>
            If security groups are specified using both the <c>securityGroupIds</c> parameter
            of <c>CreateComputeEnvironment</c> and the launch template, the values in the <c>securityGroupIds</c>
            parameter of <c>CreateComputeEnvironment</c> will be used.
            </para>
             
            <para>
            You can define up to ten (10) overrides for each compute environment.
            </para>
             <note> 
            <para>
            This object isn't applicable to jobs that are running on Fargate resources.
            </para>
             </note> <note> 
            <para>
            To unset all override templates for a compute environment, you can pass an empty array
            to the <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_UpdateComputeEnvironment.html">UpdateComputeEnvironment.overrides</a>
            parameter, or not include the <c>overrides</c> parameter when submitting the <c>UpdateComputeEnvironment</c>
            API operation.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.LaunchTemplateSpecificationOverride.LaunchTemplateId">
            <summary>
            Gets and sets the property LaunchTemplateId. 
            <para>
            The ID of the launch template.
            </para>
             
            <para>
             <b>Note:</b> If you specify the <c>launchTemplateId</c> you can't specify the <c>launchTemplateName</c>
            as well.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.LaunchTemplateSpecificationOverride.LaunchTemplateName">
            <summary>
            Gets and sets the property LaunchTemplateName. 
            <para>
            The name of the launch template.
            </para>
             
            <para>
             <b>Note:</b> If you specify the <c>launchTemplateName</c> you can't specify the <c>launchTemplateId</c>
            as well.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.LaunchTemplateSpecificationOverride.TargetInstanceTypes">
            <summary>
            Gets and sets the property TargetInstanceTypes. 
            <para>
            The instance type or family that this this override launch template should be applied
            to.
            </para>
             
            <para>
            This parameter is required when defining a launch template override.
            </para>
             
            <para>
            Information included in this parameter must meet the following requirements:
            </para>
             <ul> <li> 
            <para>
            Must be a valid Amazon EC2 instance type or family.
            </para>
             </li> <li> 
            <para>
             <c>optimal</c> isn't allowed.
            </para>
             </li> <li> 
            <para>
             <c>targetInstanceTypes</c> can target only instance types and families that are included
            within the <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_ComputeResource.html#Batch-Type-ComputeResource-instanceTypes">
            <c>ComputeResource.instanceTypes</c> </a> set. <c>targetInstanceTypes</c> doesn't
            need to include all of the instances from the <c>instanceType</c> set, but at least
            a subset. For example, if <c>ComputeResource.instanceTypes</c> includes <c>[m5, g5]</c>,
            <c>targetInstanceTypes</c> can include <c>[m5.2xlarge]</c> and <c>[m5.large]</c> but
            not <c>[c5.large]</c>.
            </para>
             </li> <li> 
            <para>
             <c>targetInstanceTypes</c> included within the same launch template override or across
            launch template overrides can't overlap for the same compute environment. For example,
            you can't define one launch template override to target an instance family and another
            define an instance type within this same family.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.LaunchTemplateSpecificationOverride.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version number of the launch template, <c>$Default</c>, or <c>$Latest</c>.
            </para>
             
            <para>
            If the value is <c>$Default</c>, the default version of the launch template is used.
            If the value is <c>$Latest</c>, the latest version of the launch template is used.
            
            </para>
             <important> 
            <para>
            If the AMI ID that's used in a compute environment is from the launch template, the
            AMI isn't changed when the compute environment is updated. It's only changed if the
            <c>updateToLatestImageVersion</c> parameter for the compute environment is set to
            <c>true</c>. During an infrastructure update, if either <c>$Default</c> or <c>$Latest</c>
            is specified, Batch re-evaluates the launch template version, and it might use a different
            version of the launch template. This is the case even if the launch template isn't
            specified in the update. When updating a compute environment, changing the launch
            template requires an infrastructure update of the compute environment. For more information,
            see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>.
            </para>
             </important> 
            <para>
            Default: <c>$Default</c> 
            </para>
             
            <para>
            Latest: <c>$Latest</c> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.LinuxParameters">
            <summary>
            Linux-specific modifications that are applied to the container, such as details for
            device mappings.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.LinuxParameters.Devices">
            <summary>
            Gets and sets the property Devices. 
            <para>
            Any of the host devices to expose to the container. This parameter maps to <c>Devices</c>
            in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <c>--device</c> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            provide it for these jobs.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.LinuxParameters.InitProcessEnabled">
            <summary>
            Gets and sets the property InitProcessEnabled. 
            <para>
            If true, run an <c>init</c> process inside the container that forwards signals and
            reaps processes. This parameter maps to the <c>--init</c> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>. This parameter requires version 1.25 of the Docker Remote API or greater
            on your container instance. To check the Docker Remote API version on your container
            instance, log in to your container instance and run the following command: <c>sudo
            docker version | grep "Server API version"</c> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.LinuxParameters.MaxSwap">
            <summary>
            Gets and sets the property MaxSwap. 
            <para>
            The total amount of swap memory (in MiB) a container can use. This parameter is translated
            to the <c>--memory-swap</c> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a> where the value is the sum of the container memory plus the <c>maxSwap</c>
            value. For more information, see <a href="https://docs.docker.com/config/containers/resource_constraints/#--memory-swap-details">
            <c>--memory-swap</c> details</a> in the Docker documentation.
            </para>
             
            <para>
            If a <c>maxSwap</c> value of <c>0</c> is specified, the container doesn't use swap.
            Accepted values are <c>0</c> or any positive integer. If the <c>maxSwap</c> parameter
            is omitted, the container doesn't use the swap configuration for the container instance
            that it's running on. A <c>maxSwap</c> value must be set for the <c>swappiness</c>
            parameter to be used.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            provide it for these jobs.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.LinuxParameters.SharedMemorySize">
            <summary>
            Gets and sets the property SharedMemorySize. 
            <para>
            The value for the size (in MiB) of the <c>/dev/shm</c> volume. This parameter maps
            to the <c>--shm-size</c> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            provide it for these jobs.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.LinuxParameters.Swappiness">
            <summary>
            Gets and sets the property Swappiness. 
            <para>
            You can use this parameter to tune a container's memory swappiness behavior. A <c>swappiness</c>
            value of <c>0</c> causes swapping to not occur unless absolutely necessary. A <c>swappiness</c>
            value of <c>100</c> causes pages to be swapped aggressively. Valid values are whole
            numbers between <c>0</c> and <c>100</c>. If the <c>swappiness</c> parameter isn't
            specified, a default value of <c>60</c> is used. If a value isn't specified for <c>maxSwap</c>,
            then this parameter is ignored. If <c>maxSwap</c> is set to 0, the container doesn't
            use swap. This parameter maps to the <c>--memory-swappiness</c> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
             
            <para>
            Consider the following when you use a per-container swap configuration.
            </para>
             <ul> <li> 
            <para>
            Swap space must be enabled and allocated on the container instance for the containers
            to use.
            </para>
             <note> 
            <para>
            By default, the Amazon ECS optimized AMIs don't have swap enabled. You must enable
            swap on the instance to use this feature. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-store-swap-volumes.html">Instance
            store swap volumes</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> or
            <a href="http://aws.amazon.com/premiumsupport/knowledge-center/ec2-memory-swap-file/">How
            do I allocate memory to work as swap space in an Amazon EC2 instance by using a swap
            file?</a> 
            </para>
             </note> </li> <li> 
            <para>
            The swap space parameters are only supported for job definitions using EC2 resources.
            </para>
             </li> <li> 
            <para>
            If the <c>maxSwap</c> and <c>swappiness</c> parameters are omitted from a job definition,
            each container has a default <c>swappiness</c> value of 60. Moreover, the total swap
            usage is limited to two times the memory reservation of the container.
            </para>
             </li> </ul> <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            provide it for these jobs.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.LinuxParameters.Tmpfs">
            <summary>
            Gets and sets the property Tmpfs. 
            <para>
            The container path, mount options, and size (in MiB) of the <c>tmpfs</c> mount. This
            parameter maps to the <c>--tmpfs</c> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            provide this parameter for this resource type.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ListJobsRequest">
            <summary>
            Container for the parameters to the ListJobs operation.
            Returns a list of Batch jobs.
            
             
            <para>
            You must specify only one of the following items:
            </para>
             <ul> <li> 
            <para>
            A job queue ID to return a list of jobs in that job queue
            </para>
             </li> <li> 
            <para>
            A multi-node parallel job ID to return a list of nodes for that job
            </para>
             </li> <li> 
            <para>
            An array job ID to return a list of the children for that job
            </para>
             </li> </ul> 
            <para>
            You can filter the results by job status with the <c>jobStatus</c> parameter. If you
            don't specify a status, only <c>RUNNING</c> jobs are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListJobsRequest.ArrayJobId">
            <summary>
            Gets and sets the property ArrayJobId. 
            <para>
            The job ID for an array job. Specifying an array job ID with this parameter lists
            all child jobs from within the specified array.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListJobsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            The filter to apply to the query. Only one filter can be used at a time. When the
            filter is used, <c>jobStatus</c> is ignored. The filter doesn't apply to child jobs
            in an array or multi-node parallel (MNP) jobs. The results are sorted by the <c>createdAt</c>
            field, with the most recent jobs being first.
            </para>
             <dl> <dt>JOB_NAME</dt> <dd> 
            <para>
            The value of the filter is a case-insensitive match for the job name. If the value
            ends with an asterisk (*), the filter matches any job name that begins with the string
            before the '*'. This corresponds to the <c>jobName</c> value. For example, <c>test1</c>
            matches both <c>Test1</c> and <c>test1</c>, and <c>test1*</c> matches both <c>test1</c>
            and <c>Test10</c>. When the <c>JOB_NAME</c> filter is used, the results are grouped
            by the job name and version.
            </para>
             </dd> <dt>JOB_DEFINITION</dt> <dd> 
            <para>
            The value for the filter is the name or Amazon Resource Name (ARN) of the job definition.
            This corresponds to the <c>jobDefinition</c> value. The value is case sensitive. When
            the value for the filter is the job definition name, the results include all the jobs
            that used any revision of that job definition name. If the value ends with an asterisk
            (*), the filter matches any job definition name that begins with the string before
            the '*'. For example, <c>jd1</c> matches only <c>jd1</c>, and <c>jd1*</c> matches
            both <c>jd1</c> and <c>jd1A</c>. The version of the job definition that's used doesn't
            affect the sort order. When the <c>JOB_DEFINITION</c> filter is used and the ARN is
            used (which is in the form <c>arn:${Partition}:batch:${Region}:${Account}:job-definition/${JobDefinitionName}:${Revision}</c>),
            the results include jobs that used the specified revision of the job definition. Asterisk
            (*) isn't supported when the ARN is used.
            </para>
             </dd> <dt>BEFORE_CREATED_AT</dt> <dd> 
            <para>
            The value for the filter is the time that's before the job was created. This corresponds
            to the <c>createdAt</c> value. The value is a string representation of the number
            of milliseconds since 00:00:00 UTC (midnight) on January 1, 1970.
            </para>
             </dd> <dt>AFTER_CREATED_AT</dt> <dd> 
            <para>
            The value for the filter is the time that's after the job was created. This corresponds
            to the <c>createdAt</c> value. The value is a string representation of the number
            of milliseconds since 00:00:00 UTC (midnight) on January 1, 1970.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListJobsRequest.JobQueue">
            <summary>
            Gets and sets the property JobQueue. 
            <para>
            The name or full Amazon Resource Name (ARN) of the job queue used to list jobs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListJobsRequest.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
            The job status used to filter jobs in the specified queue. If the <c>filters</c> parameter
            is specified, the <c>jobStatus</c> parameter is ignored and jobs with any status are
            returned. If you don't specify a status, only <c>RUNNING</c> jobs are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListJobsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results returned by <c>ListJobs</c> in a paginated output. When
            this parameter is used, <c>ListJobs</c> returns up to <c>maxResults</c> results in
            a single page and a <c>nextToken</c> response element, if applicable. The remaining
            results of the initial request can be seen by sending another <c>ListJobs</c> request
            with the returned <c>nextToken</c> value.
            </para>
             
            <para>
            The following outlines key parameters and limitations:
            </para>
             <ul> <li> 
            <para>
            The minimum value is 1. 
            </para>
             </li> <li> 
            <para>
            When <c>--job-status</c> is used, Batch returns up to 1000 values. 
            </para>
             </li> <li> 
            <para>
            When <c>--filters</c> is used, Batch returns up to 100 values.
            </para>
             </li> <li> 
            <para>
            If neither parameter is used, then <c>ListJobs</c> returns up to 1000 results (jobs
            that are in the <c>RUNNING</c> status) and a <c>nextToken</c> value, if applicable.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListJobsRequest.MultiNodeJobId">
            <summary>
            Gets and sets the property MultiNodeJobId. 
            <para>
            The job ID for a multi-node parallel job. Specifying a multi-node parallel job ID
            with this parameter lists all nodes that are associated with the specified job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListJobsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value returned from a previous paginated <c>ListJobs</c> request
            where <c>maxResults</c> was used and the results exceeded the value of that parameter.
            Pagination continues from the end of the previous results that returned the <c>nextToken</c>
            value. This value is <c>null</c> when there are no more results to return.
            </para>
             <note> 
            <para>
            Treat this token as an opaque identifier that's only used to retrieve the next items
            in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ListJobsResponse">
            <summary>
            This is the response object from the ListJobs operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListJobsResponse.JobSummaryList">
            <summary>
            Gets and sets the property JobSummaryList. 
            <para>
            A list of job summaries that match the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListJobsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value to include in a future <c>ListJobs</c> request. When the
            results of a <c>ListJobs</c> request exceed <c>maxResults</c>, this value can be used
            to retrieve the next page of results. This value is <c>null</c> when there are no
            more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ListSchedulingPoliciesRequest">
            <summary>
            Container for the parameters to the ListSchedulingPolicies operation.
            Returns a list of Batch scheduling policies.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListSchedulingPoliciesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results that's returned by <c>ListSchedulingPolicies</c> in
            paginated output. When this parameter is used, <c>ListSchedulingPolicies</c> only
            returns <c>maxResults</c> results in a single page and a <c>nextToken</c> response
            element. You can see the remaining results of the initial request by sending another
            <c>ListSchedulingPolicies</c> request with the returned <c>nextToken</c> value. This
            value can be between 1 and 100. If this parameter isn't used, <c>ListSchedulingPolicies</c>
            returns up to 100 results and a <c>nextToken</c> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListSchedulingPoliciesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value that's returned from a previous paginated <c>ListSchedulingPolicies</c>
            request where <c>maxResults</c> was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that returned
            the <c>nextToken</c> value. This value is <c>null</c> when there are no more results
            to return.
            </para>
             <note> 
            <para>
            Treat this token as an opaque identifier that's only used to retrieve the next items
            in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ListSchedulingPoliciesResponse">
            <summary>
            This is the response object from the ListSchedulingPolicies operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListSchedulingPoliciesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <c>nextToken</c> value to include in a future <c>ListSchedulingPolicies</c> request.
            When the results of a <c>ListSchedulingPolicies</c> request exceed <c>maxResults</c>,
            this value can be used to retrieve the next page of results. This value is <c>null</c>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListSchedulingPoliciesResponse.SchedulingPolicies">
            <summary>
            Gets and sets the property SchedulingPolicies. 
            <para>
            A list of scheduling policies that match the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Lists the tags for an Batch resource. Batch resources that support tags are compute
            environments, jobs, job definitions, job queues, and scheduling policies. ARNs for
            child jobs of array and multi-node parallel (MNP) jobs aren't supported.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) that identifies the resource that tags are listed for.
            Batch resources that support tags are compute environments, jobs, job definitions,
            job queues, and scheduling policies. ARNs for child jobs of array and multi-node parallel
            (MNP) jobs aren't supported.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags for the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.LogConfiguration">
            <summary>
            Log configuration options to send to a custom log driver for the container.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.LogConfiguration.LogDriver">
            <summary>
            Gets and sets the property LogDriver. 
            <para>
            The log driver to use for the container. The valid values that are listed for this
            parameter are log drivers that the Amazon ECS container agent can communicate with
            by default.
            </para>
             
            <para>
            The supported log drivers are <c>awslogs</c>, <c>fluentd</c>, <c>gelf</c>, <c>json-file</c>,
            <c>journald</c>, <c>logentries</c>, <c>syslog</c>, and <c>splunk</c>.
            </para>
             <note> 
            <para>
            Jobs that are running on Fargate resources are restricted to the <c>awslogs</c> and
            <c>splunk</c> log drivers.
            </para>
             </note> <dl> <dt>awslogs</dt> <dd> 
            <para>
            Specifies the Amazon CloudWatch Logs logging driver. For more information, see <a
            href="https://docs.aws.amazon.com/batch/latest/userguide/using_awslogs.html">Using
            the awslogs log driver</a> in the <i>Batch User Guide</i> and <a href="https://docs.docker.com/config/containers/logging/awslogs/">Amazon
            CloudWatch Logs logging driver</a> in the Docker documentation.
            </para>
             </dd> <dt>fluentd</dt> <dd> 
            <para>
            Specifies the Fluentd logging driver. For more information including usage and options,
            see <a href="https://docs.docker.com/config/containers/logging/fluentd/">Fluentd logging
            driver</a> in the <i>Docker documentation</i>.
            </para>
             </dd> <dt>gelf</dt> <dd> 
            <para>
            Specifies the Graylog Extended Format (GELF) logging driver. For more information
            including usage and options, see <a href="https://docs.docker.com/config/containers/logging/gelf/">Graylog
            Extended Format logging driver</a> in the <i>Docker documentation</i>.
            </para>
             </dd> <dt>journald</dt> <dd> 
            <para>
            Specifies the journald logging driver. For more information including usage and options,
            see <a href="https://docs.docker.com/config/containers/logging/journald/">Journald
            logging driver</a> in the <i>Docker documentation</i>.
            </para>
             </dd> <dt>json-file</dt> <dd> 
            <para>
            Specifies the JSON file logging driver. For more information including usage and options,
            see <a href="https://docs.docker.com/config/containers/logging/json-file/">JSON File
            logging driver</a> in the <i>Docker documentation</i>.
            </para>
             </dd> <dt>splunk</dt> <dd> 
            <para>
            Specifies the Splunk logging driver. For more information including usage and options,
            see <a href="https://docs.docker.com/config/containers/logging/splunk/">Splunk logging
            driver</a> in the <i>Docker documentation</i>.
            </para>
             </dd> <dt>syslog</dt> <dd> 
            <para>
            Specifies the syslog logging driver. For more information including usage and options,
            see <a href="https://docs.docker.com/config/containers/logging/syslog/">Syslog logging
            driver</a> in the <i>Docker documentation</i>.
            </para>
             </dd> </dl> <note> 
            <para>
            If you have a custom driver that's not listed earlier that you want to work with the
            Amazon ECS container agent, you can fork the Amazon ECS container agent project that's
            <a href="https://github.com/aws/amazon-ecs-agent">available on GitHub</a> and customize
            it to work with that driver. We encourage you to submit pull requests for changes
            that you want to have included. However, Amazon Web Services doesn't currently support
            running modified copies of this software.
            </para>
             </note> 
            <para>
            This parameter requires version 1.18 of the Docker Remote API or greater on your container
            instance. To check the Docker Remote API version on your container instance, log in
            to your container instance and run the following command: <c>sudo docker version |
            grep "Server API version"</c> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.LogConfiguration.Options">
            <summary>
            Gets and sets the property Options. 
            <para>
            The configuration options to send to the log driver. This parameter requires version
            1.19 of the Docker Remote API or greater on your container instance. To check the
            Docker Remote API version on your container instance, log in to your container instance
            and run the following command: <c>sudo docker version | grep "Server API version"</c>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.LogConfiguration.SecretOptions">
            <summary>
            Gets and sets the property SecretOptions. 
            <para>
            The secrets to pass to the log configuration. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/specifying-sensitive-data.html">Specifying
            sensitive data</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.MountPoint">
            <summary>
            Details for a Docker volume mount point that's used in a job's container properties.
            This parameter maps to <c>Volumes</c> in the <a href="https://docs.docker.com/engine/api/v1.43/#tag/Container/operation/ContainerCreate">Create
            a container</a> section of the <i>Docker Remote API</i> and the <c>--volume</c> option
            to docker run.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.MountPoint.ContainerPath">
            <summary>
            Gets and sets the property ContainerPath. 
            <para>
            The path on the container where the host volume is mounted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.MountPoint.ReadOnly">
            <summary>
            Gets and sets the property ReadOnly. 
            <para>
            If this value is <c>true</c>, the container has read-only access to the volume. Otherwise,
            the container can write to the volume. The default value is <c>false</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.MountPoint.SourceVolume">
            <summary>
            Gets and sets the property SourceVolume. 
            <para>
            The name of the volume to mount.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.NetworkConfiguration">
            <summary>
            The network configuration for jobs that are running on Fargate resources. Jobs that
            are running on Amazon EC2 resources must not specify this parameter.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NetworkConfiguration.AssignPublicIp">
            <summary>
            Gets and sets the property AssignPublicIp. 
            <para>
            Indicates whether the job has a public IP address. For a job that's running on Fargate
            resources in a private subnet to send outbound traffic to the internet (for example,
            to pull container images), the private subnet requires a NAT gateway be attached to
            route requests to the internet. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html">Amazon
            ECS task networking</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            The default value is "<c>DISABLED</c>".
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.NetworkInterface">
            <summary>
            An object that represents the elastic network interface for a multi-node parallel
            job node.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NetworkInterface.AttachmentId">
            <summary>
            Gets and sets the property AttachmentId. 
            <para>
            The attachment ID for the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NetworkInterface.Ipv6Address">
            <summary>
            Gets and sets the property Ipv6Address. 
            <para>
            The private IPv6 address for the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NetworkInterface.PrivateIpv4Address">
            <summary>
            Gets and sets the property PrivateIpv4Address. 
            <para>
            The private IPv4 address for the network interface.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.NodeDetails">
            <summary>
            An object that represents the details of a multi-node parallel job node.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodeDetails.IsMainNode">
            <summary>
            Gets and sets the property IsMainNode. 
            <para>
            Specifies whether the current node is the main node for a multi-node parallel job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodeDetails.NodeIndex">
            <summary>
            Gets and sets the property NodeIndex. 
            <para>
            The node index for the node. Node index numbering starts at zero. This index is also
            available on the node with the <c>AWS_BATCH_JOB_NODE_INDEX</c> environment variable.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.NodeOverrides">
            <summary>
            An object that represents any node overrides to a job definition that's used in a
            <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_SubmitJob.html">SubmitJob</a>
            API operation.
            
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources. Don't
            provide it for these jobs. Rather, use <c>containerOverrides</c> instead.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodeOverrides.NodePropertyOverrides">
            <summary>
            Gets and sets the property NodePropertyOverrides. 
            <para>
            The node property overrides for the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodeOverrides.NumNodes">
            <summary>
            Gets and sets the property NumNodes. 
            <para>
            The number of nodes to use with a multi-node parallel job. This value overrides the
            number of nodes that are specified in the job definition. To use this override, you
            must meet the following conditions:
            </para>
             <ul> <li> 
            <para>
            There must be at least one node range in your job definition that has an open upper
            boundary, such as <c>:</c> or <c>n:</c>.
            </para>
             </li> <li> 
            <para>
            The lower boundary of the node range that's specified in the job definition must be
            fewer than the number of nodes specified in the override.
            </para>
             </li> <li> 
            <para>
            The main node index that's specified in the job definition must be fewer than the
            number of nodes specified in the override.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.NodeProperties">
            <summary>
            An object that represents the node properties of a multi-node parallel job.
            
             <note> 
            <para>
            Node properties can't be specified for Amazon EKS based job definitions.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodeProperties.MainNode">
            <summary>
            Gets and sets the property MainNode. 
            <para>
            Specifies the node index for the main node of a multi-node parallel job. This node
            index value must be fewer than the number of nodes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodeProperties.NodeRangeProperties">
            <summary>
            Gets and sets the property NodeRangeProperties. 
            <para>
            A list of node ranges and their properties that are associated with a multi-node parallel
            job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodeProperties.NumNodes">
            <summary>
            Gets and sets the property NumNodes. 
            <para>
            The number of nodes that are associated with a multi-node parallel job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.NodePropertiesSummary">
            <summary>
            An object that represents the properties of a node that's associated with a multi-node
            parallel job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodePropertiesSummary.IsMainNode">
            <summary>
            Gets and sets the property IsMainNode. 
            <para>
            Specifies whether the current node is the main node for a multi-node parallel job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodePropertiesSummary.NodeIndex">
            <summary>
            Gets and sets the property NodeIndex. 
            <para>
            The node index for the node. Node index numbering begins at zero. This index is also
            available on the node with the <c>AWS_BATCH_JOB_NODE_INDEX</c> environment variable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodePropertiesSummary.NumNodes">
            <summary>
            Gets and sets the property NumNodes. 
            <para>
            The number of nodes that are associated with a multi-node parallel job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.NodePropertyOverride">
            <summary>
            The object that represents any node overrides to a job definition that's used in a
            <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_SubmitJob.html">SubmitJob</a>
            API operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodePropertyOverride.ContainerOverrides">
            <summary>
            Gets and sets the property ContainerOverrides. 
            <para>
            The overrides that are sent to a node range.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodePropertyOverride.EcsPropertiesOverride">
            <summary>
            Gets and sets the property EcsPropertiesOverride. 
            <para>
            An object that contains the properties that you want to replace for the existing Amazon
            ECS resources of a job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodePropertyOverride.EksPropertiesOverride">
            <summary>
            Gets and sets the property EksPropertiesOverride. 
            <para>
            An object that contains the properties that you want to replace for the existing Amazon
            EKS resources of a job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodePropertyOverride.InstanceTypes">
            <summary>
            Gets and sets the property InstanceTypes. 
            <para>
            An object that contains the instance types that you want to replace for the existing
            resources of a job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodePropertyOverride.TargetNodes">
            <summary>
            Gets and sets the property TargetNodes. 
            <para>
            The range of nodes, using node index values, that's used to override. A range of <c>0:3</c>
            indicates nodes with index values of <c>0</c> through <c>3</c>. If the starting range
            value is omitted (<c>:n</c>), then <c>0</c> is used to start the range. If the ending
            range value is omitted (<c>n:</c>), then the highest possible node index is used to
            end the range.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.NodeRangeProperty">
            <summary>
            This is an object that represents the properties of the node range for a multi-node
            parallel job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodeRangeProperty.Container">
            <summary>
            Gets and sets the property Container. 
            <para>
            The container details for the node range.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodeRangeProperty.EcsProperties">
            <summary>
            Gets and sets the property EcsProperties. 
            <para>
            This is an object that represents the properties of the node range for a multi-node
            parallel job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodeRangeProperty.EksProperties">
            <summary>
            Gets and sets the property EksProperties. 
            <para>
            This is an object that represents the properties of the node range for a multi-node
            parallel job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodeRangeProperty.InstanceTypes">
            <summary>
            Gets and sets the property InstanceTypes. 
            <para>
            The instance types of the underlying host infrastructure of a multi-node parallel
            job.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources.
            </para>
             
            <para>
            In addition, this list object is currently limited to one element.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodeRangeProperty.TargetNodes">
            <summary>
            Gets and sets the property TargetNodes. 
            <para>
            The range of nodes, using node index values. A range of <c>0:3</c> indicates nodes
            with index values of <c>0</c> through <c>3</c>. If the starting range value is omitted
            (<c>:n</c>), then <c>0</c> is used to start the range. If the ending range value is
            omitted (<c>n:</c>), then the highest possible node index is used to end the range.
            Your accumulative node ranges must account for all nodes (<c>0:n</c>). You can nest
            node ranges (for example, <c>0:10</c> and <c>4:5</c>). In this case, the <c>4:5</c>
            range properties override the <c>0:10</c> properties.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.RegisterJobDefinitionRequest">
            <summary>
            Container for the parameters to the RegisterJobDefinition operation.
            Registers an Batch job definition.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionRequest.ContainerProperties">
            <summary>
            Gets and sets the property ContainerProperties. 
            <para>
            An object with properties specific to Amazon ECS-based single-node container-based
            jobs. If the job definition's <c>type</c> parameter is <c>container</c>, then you
            must specify either <c>containerProperties</c> or <c>nodeProperties</c>. This must
            not be specified for Amazon EKS-based job definitions.
            </para>
             <note> 
            <para>
            If the job runs on Fargate resources, then you must not specify <c>nodeProperties</c>;
            use only <c>containerProperties</c>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionRequest.EcsProperties">
            <summary>
            Gets and sets the property EcsProperties. 
            <para>
            An object with properties that are specific to Amazon ECS-based jobs. This must not
            be specified for Amazon EKS-based job definitions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionRequest.EksProperties">
            <summary>
            Gets and sets the property EksProperties. 
            <para>
            An object with properties that are specific to Amazon EKS-based jobs. This must not
            be specified for Amazon ECS based job definitions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionRequest.JobDefinitionName">
            <summary>
            Gets and sets the property JobDefinitionName. 
            <para>
            The name of the job definition to register. It can be up to 128 letters long. It can
            contain uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionRequest.NodeProperties">
            <summary>
            Gets and sets the property NodeProperties. 
            <para>
            An object with properties specific to multi-node parallel jobs. If you specify node
            properties for a job, it becomes a multi-node parallel job. For more information,
            see <a href="https://docs.aws.amazon.com/batch/latest/userguide/multi-node-parallel-jobs.html">Multi-node
            Parallel Jobs</a> in the <i>Batch User Guide</i>.
            </para>
             <note> 
            <para>
            If the job runs on Fargate resources, then you must not specify <c>nodeProperties</c>;
            use <c>containerProperties</c> instead.
            </para>
             </note> <note> 
            <para>
            If the job runs on Amazon EKS resources, then you must not specify <c>nodeProperties</c>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionRequest.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            Default parameter substitution placeholders to set in the job definition. Parameters
            are specified as a key-value pair mapping. Parameters in a <c>SubmitJob</c> request
            override any corresponding parameter defaults from the job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionRequest.PlatformCapabilities">
            <summary>
            Gets and sets the property PlatformCapabilities. 
            <para>
            The platform capabilities required by the job definition. If no value is specified,
            it defaults to <c>EC2</c>. To run the job on Fargate resources, specify <c>FARGATE</c>.
            </para>
             <note> 
            <para>
            If the job runs on Amazon EKS resources, then you must not specify <c>platformCapabilities</c>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionRequest.PropagateTags">
            <summary>
            Gets and sets the property PropagateTags. 
            <para>
            Specifies whether to propagate the tags from the job or job definition to the corresponding
            Amazon ECS task. If no value is specified, the tags are not propagated. Tags can only
            be propagated to the tasks during task creation. For tags with the same name, job
            tags are given priority over job definitions tags. If the total number of combined
            tags from the job and job definition is over 50, the job is moved to the <c>FAILED</c>
            state.
            </para>
             <note> 
            <para>
            If the job runs on Amazon EKS resources, then you must not specify <c>propagateTags</c>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionRequest.RetryStrategy">
            <summary>
            Gets and sets the property RetryStrategy. 
            <para>
            The retry strategy to use for failed jobs that are submitted with this job definition.
            Any retry strategy that's specified during a <a>SubmitJob</a> operation overrides
            the retry strategy defined here. If a job is terminated due to a timeout, it isn't
            retried.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionRequest.SchedulingPriority">
            <summary>
            Gets and sets the property SchedulingPriority. 
            <para>
            The scheduling priority for jobs that are submitted with this job definition. This
            only affects jobs in job queues with a fair share policy. Jobs with a higher scheduling
            priority are scheduled before jobs with a lower scheduling priority.
            </para>
             
            <para>
            The minimum supported value is 0 and the maximum supported value is 9999.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags that you apply to the job definition to help you categorize and organize
            your resources. Each tag consists of a key and an optional value. For more information,
            see <a href="https://docs.aws.amazon.com/batch/latest/userguide/using-tags.html">Tagging
            Amazon Web Services Resources</a> in <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionRequest.Timeout">
            <summary>
            Gets and sets the property Timeout. 
            <para>
            The timeout configuration for jobs that are submitted with this job definition, after
            which Batch terminates your jobs if they have not finished. If a job is terminated
            due to a timeout, it isn't retried. The minimum value for the timeout is 60 seconds.
            Any timeout configuration that's specified during a <a>SubmitJob</a> operation overrides
            the timeout configuration defined here. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/job_timeouts.html">Job
            Timeouts</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionRequest.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of job definition. For more information about multi-node parallel jobs, see
            <a href="https://docs.aws.amazon.com/batch/latest/userguide/multi-node-job-def.html">Creating
            a multi-node parallel job definition</a> in the <i>Batch User Guide</i>.
            </para>
             <ul> <li> 
            <para>
            If the value is <c>container</c>, then one of the following is required: <c>containerProperties</c>,
            <c>ecsProperties</c>, or <c>eksProperties</c>.
            </para>
             </li> <li> 
            <para>
            If the value is <c>multinode</c>, then <c>nodeProperties</c> is required.
            </para>
             </li> </ul> <note> 
            <para>
            If the job is run on Fargate resources, then <c>multinode</c> isn't supported.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.RegisterJobDefinitionResponse">
            <summary>
            This is the response object from the RegisterJobDefinition operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionResponse.JobDefinitionArn">
            <summary>
            Gets and sets the property JobDefinitionArn. 
            <para>
            The Amazon Resource Name (ARN) of the job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionResponse.JobDefinitionName">
            <summary>
            Gets and sets the property JobDefinitionName. 
            <para>
            The name of the job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionResponse.Revision">
            <summary>
            Gets and sets the property Revision. 
            <para>
            The revision of the job definition.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.RepositoryCredentials">
            <summary>
            The repository credentials for private registry authentication.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RepositoryCredentials.CredentialsParameter">
            <summary>
            Gets and sets the property CredentialsParameter. 
            <para>
            The Amazon Resource Name (ARN) of the secret containing the private repository credentials.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ResourceRequirement">
            <summary>
            The type and amount of a resource to assign to a container. The supported resources
            include <c>GPU</c>, <c>MEMORY</c>, and <c>VCPU</c>.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ResourceRequirement.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of resource to assign to a container. The supported resources include <c>GPU</c>,
            <c>MEMORY</c>, and <c>VCPU</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ResourceRequirement.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The quantity of the specified resource to reserve for the container. The values vary
            based on the <c>type</c> specified.
            </para>
             <dl> <dt>type="GPU"</dt> <dd> 
            <para>
            The number of physical GPUs to reserve for the container. Make sure that the number
            of GPUs reserved for all containers in a job doesn't exceed the number of available
            GPUs on the compute resource that the job is launched on.
            </para>
             <note> 
            <para>
            GPUs aren't available for jobs that are running on Fargate resources.
            </para>
             </note> </dd> <dt>type="MEMORY"</dt> <dd> 
            <para>
            The memory hard limit (in MiB) present to the container. This parameter is supported
            for jobs that are running on Amazon EC2 resources. If your container attempts to exceed
            the memory specified, the container is terminated. This parameter maps to <c>Memory</c>
            in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <c>--memory</c> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>. You must specify at least 4 MiB of memory for a job. This is required but
            can be specified in several places for multi-node parallel (MNP) jobs. It must be
            specified for each node at least once. This parameter maps to <c>Memory</c> in the
            <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create a container</a>
            section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker Remote API</a>
            and the <c>--memory</c> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
             <note> 
            <para>
            If you're trying to maximize your resource utilization by providing your jobs as much
            memory as possible for a particular instance type, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/memory-management.html">Memory
            management</a> in the <i>Batch User Guide</i>.
            </para>
             </note> 
            <para>
            For jobs that are running on Fargate resources, then <c>value</c> is the hard limit
            (in MiB), and must match one of the supported values and the <c>VCPU</c> values must
            be one of the values supported for that memory value.
            </para>
             <dl> <dt>value = 512</dt> <dd> 
            <para>
             <c>VCPU</c> = 0.25
            </para>
             </dd> <dt>value = 1024</dt> <dd> 
            <para>
             <c>VCPU</c> = 0.25 or 0.5
            </para>
             </dd> <dt>value = 2048</dt> <dd> 
            <para>
             <c>VCPU</c> = 0.25, 0.5, or 1
            </para>
             </dd> <dt>value = 3072</dt> <dd> 
            <para>
             <c>VCPU</c> = 0.5, or 1
            </para>
             </dd> <dt>value = 4096</dt> <dd> 
            <para>
             <c>VCPU</c> = 0.5, 1, or 2
            </para>
             </dd> <dt>value = 5120, 6144, or 7168</dt> <dd> 
            <para>
             <c>VCPU</c> = 1 or 2
            </para>
             </dd> <dt>value = 8192</dt> <dd> 
            <para>
             <c>VCPU</c> = 1, 2, or 4
            </para>
             </dd> <dt>value = 9216, 10240, 11264, 12288, 13312, 14336, or 15360</dt> <dd> 
            <para>
             <c>VCPU</c> = 2 or 4
            </para>
             </dd> <dt>value = 16384</dt> <dd> 
            <para>
             <c>VCPU</c> = 2, 4, or 8
            </para>
             </dd> <dt>value = 17408, 18432, 19456, 21504, 22528, 23552, 25600, 26624, 27648,
            29696, or 30720</dt> <dd> 
            <para>
             <c>VCPU</c> = 4
            </para>
             </dd> <dt>value = 20480, 24576, or 28672</dt> <dd> 
            <para>
             <c>VCPU</c> = 4 or 8
            </para>
             </dd> <dt>value = 36864, 45056, 53248, or 61440</dt> <dd> 
            <para>
             <c>VCPU</c> = 8
            </para>
             </dd> <dt>value = 32768, 40960, 49152, or 57344</dt> <dd> 
            <para>
             <c>VCPU</c> = 8 or 16
            </para>
             </dd> <dt>value = 65536, 73728, 81920, 90112, 98304, 106496, 114688, or 122880</dt>
            <dd> 
            <para>
             <c>VCPU</c> = 16
            </para>
             </dd> </dl> </dd> <dt>type="VCPU"</dt> <dd> 
            <para>
            The number of vCPUs reserved for the container. This parameter maps to <c>CpuShares</c>
            in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <c>--cpu-shares</c> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>. Each vCPU is equivalent to 1,024 CPU shares. For Amazon EC2 resources, you
            must specify at least one vCPU. This is required but can be specified in several places;
            it must be specified for each node at least once.
            </para>
             
            <para>
            The default for the Fargate On-Demand vCPU resource count quota is 6 vCPUs. For more
            information about Fargate quotas, see <a href="https://docs.aws.amazon.com/general/latest/gr/ecs-service.html#service-quotas-fargate">Fargate
            quotas</a> in the <i>Amazon Web Services General Reference</i>.
            </para>
             
            <para>
            For jobs that are running on Fargate resources, then <c>value</c> must match one of
            the supported values and the <c>MEMORY</c> values must be one of the values supported
            for that <c>VCPU</c> value. The supported values are 0.25, 0.5, 1, 2, 4, 8, and 16
            </para>
             <dl> <dt>value = 0.25</dt> <dd> 
            <para>
             <c>MEMORY</c> = 512, 1024, or 2048
            </para>
             </dd> <dt>value = 0.5</dt> <dd> 
            <para>
             <c>MEMORY</c> = 1024, 2048, 3072, or 4096
            </para>
             </dd> <dt>value = 1</dt> <dd> 
            <para>
             <c>MEMORY</c> = 2048, 3072, 4096, 5120, 6144, 7168, or 8192
            </para>
             </dd> <dt>value = 2</dt> <dd> 
            <para>
             <c>MEMORY</c> = 4096, 5120, 6144, 7168, 8192, 9216, 10240, 11264, 12288, 13312, 14336,
            15360, or 16384
            </para>
             </dd> <dt>value = 4</dt> <dd> 
            <para>
             <c>MEMORY</c> = 8192, 9216, 10240, 11264, 12288, 13312, 14336, 15360, 16384, 17408,
            18432, 19456, 20480, 21504, 22528, 23552, 24576, 25600, 26624, 27648, 28672, 29696,
            or 30720
            </para>
             </dd> <dt>value = 8</dt> <dd> 
            <para>
             <c>MEMORY</c> = 16384, 20480, 24576, 28672, 32768, 36864, 40960, 45056, 49152, 53248,
            57344, or 61440 
            </para>
             </dd> <dt>value = 16</dt> <dd> 
            <para>
             <c>MEMORY</c> = 32768, 40960, 49152, 57344, 65536, 73728, 81920, 90112, 98304, 106496,
            114688, or 122880 
            </para>
             </dd> </dl> </dd> </dl>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.RetryStrategy">
            <summary>
            The retry strategy that's associated with a job. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/job_retries.html">Automated
            job retries</a> in the <i>Batch User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RetryStrategy.Attempts">
            <summary>
            Gets and sets the property Attempts. 
            <para>
            The number of times to move a job to the <c>RUNNABLE</c> status. You can specify between
            1 and 10 attempts. If the value of <c>attempts</c> is greater than one, the job is
            retried on failure the same number of attempts as the value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RetryStrategy.EvaluateOnExit">
            <summary>
            Gets and sets the property EvaluateOnExit. 
            <para>
            Array of up to 5 objects that specify the conditions where jobs are retried or failed.
            If this parameter is specified, then the <c>attempts</c> parameter must also be specified.
            If none of the listed conditions match, then the job is retried.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.RuntimePlatform">
            <summary>
            An object that represents the compute environment architecture for Batch jobs on
            Fargate.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RuntimePlatform.CpuArchitecture">
            <summary>
            Gets and sets the property CpuArchitecture. 
            <para>
             The vCPU architecture. The default value is <c>X86_64</c>. Valid values are <c>X86_64</c>
            and <c>ARM64</c>.
            </para>
             <note> 
            <para>
            This parameter must be set to <c>X86_64</c> for Windows containers.
            </para>
             </note> <note> 
            <para>
            Fargate Spot is not supported for <c>ARM64</c> and Windows-based containers on Fargate.
            A job queue will be blocked if a Fargate <c>ARM64</c> or Windows job is submitted
            to a job queue with only Fargate Spot compute environments. However, you can attach
            both <c>FARGATE</c> and <c>FARGATE_SPOT</c> compute environments to the same job queue.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RuntimePlatform.OperatingSystemFamily">
            <summary>
            Gets and sets the property OperatingSystemFamily. 
            <para>
            The operating system for the compute environment. Valid values are: <c>LINUX</c> (default),
            <c>WINDOWS_SERVER_2019_CORE</c>, <c>WINDOWS_SERVER_2019_FULL</c>, <c>WINDOWS_SERVER_2022_CORE</c>,
            and <c>WINDOWS_SERVER_2022_FULL</c>.
            </para>
             <note> 
            <para>
            The following parameters can’t be set for Windows containers: <c>linuxParameters</c>,
            <c>privileged</c>, <c>user</c>, <c>ulimits</c>, <c>readonlyRootFilesystem</c>, and
            <c>efsVolumeConfiguration</c>.
            </para>
             </note> <note> 
            <para>
            The Batch Scheduler checks the compute environments that are attached to the job queue
            before registering a task definition with Fargate. In this scenario, the job queue
            is where the job is submitted. If the job requires a Windows container and the first
            compute environment is <c>LINUX</c>, the compute environment is skipped and the next
            compute environment is checked until a Windows-based compute environment is found.
            </para>
             </note> <note> 
            <para>
            Fargate Spot is not supported for <c>ARM64</c> and Windows-based containers on Fargate.
            A job queue will be blocked if a Fargate <c>ARM64</c> or Windows job is submitted
            to a job queue with only Fargate Spot compute environments. However, you can attach
            both <c>FARGATE</c> and <c>FARGATE_SPOT</c> compute environments to the same job queue.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.SchedulingPolicyDetail">
            <summary>
            An object that represents a scheduling policy.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SchedulingPolicyDetail.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the scheduling policy. An example is <c>arn:<i>aws</i>:batch:<i>us-east-1</i>:<i>123456789012</i>:scheduling-policy/<i>HighPriority</i>
            </c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SchedulingPolicyDetail.FairsharePolicy">
            <summary>
            Gets and sets the property FairsharePolicy. 
            <para>
            The fair share policy for the scheduling policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SchedulingPolicyDetail.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the scheduling policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SchedulingPolicyDetail.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags that you apply to the scheduling policy to categorize and organize your resources.
            Each tag consists of a key and an optional value. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            Amazon Web Services resources</a> in <i>Amazon Web Services General Reference</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.SchedulingPolicyListingDetail">
            <summary>
            An object that contains the details of a scheduling policy that's returned in a <c>ListSchedulingPolicy</c>
            action.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SchedulingPolicyListingDetail.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Amazon Resource Name (ARN) of the scheduling policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Secret">
            <summary>
            An object that represents the secret to expose to your container. Secrets can be exposed
            to a container in the following ways:
            
             <ul> <li> 
            <para>
            To inject sensitive data into your containers as environment variables, use the <c>secrets</c>
            container definition parameter.
            </para>
             </li> <li> 
            <para>
            To reference sensitive information in the log configuration of a container, use the
            <c>secretOptions</c> container definition parameter.
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/specifying-sensitive-data.html">Specifying
            sensitive data</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Secret.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Secret.ValueFrom">
            <summary>
            Gets and sets the property ValueFrom. 
            <para>
            The secret to expose to the container. The supported values are either the full Amazon
            Resource Name (ARN) of the Secrets Manager secret or the full ARN of the parameter
            in the Amazon Web Services Systems Manager Parameter Store.
            </para>
             <note> 
            <para>
            If the Amazon Web Services Systems Manager Parameter Store parameter exists in the
            same Region as the job you're launching, then you can use either the full Amazon Resource
            Name (ARN) or name of the parameter. If the parameter exists in a different Region,
            then the full ARN must be specified.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ServerException">
            <summary>
            These errors are usually caused by a server issue.
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.ServerException.#ctor(System.String)">
            <summary>
            Constructs a new ServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Batch.Model.ServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Batch.Model.ServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Batch.Model.ServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Batch.Model.ServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Batch.Model.ShareAttributes">
            <summary>
            Specifies the weights for the fair share identifiers for the fair share policy. Fair
            share identifiers that aren't included have a default weight of <c>1.0</c>.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ShareAttributes.ShareIdentifier">
            <summary>
            Gets and sets the property ShareIdentifier. 
            <para>
            A fair share identifier or fair share identifier prefix. If the string ends with an
            asterisk (*), this entry specifies the weight factor to use for fair share identifiers
            that start with that prefix. The list of fair share identifiers in a fair share policy
            can't overlap. For example, you can't have one that specifies a <c>shareIdentifier</c>
            of <c>UserA*</c> and another that specifies a <c>shareIdentifier</c> of <c>UserA-1</c>.
            </para>
             
            <para>
            There can be no more than 500 fair share identifiers active in a job queue.
            </para>
             
            <para>
            The string is limited to 255 alphanumeric characters, and can be followed by an asterisk
            (*).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ShareAttributes.WeightFactor">
            <summary>
            Gets and sets the property WeightFactor. 
            <para>
            The weight factor for the fair share identifier. The default value is 1.0. A lower
            value has a higher priority for compute resources. For example, jobs that use a share
            identifier with a weight factor of 0.125 (1/8) get 8 times the compute resources of
            jobs that use a share identifier with a weight factor of 1.
            </para>
             
            <para>
            The smallest supported value is 0.0001, and the largest supported value is 999.9999.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.SubmitJobRequest">
            <summary>
            Container for the parameters to the SubmitJob operation.
            Submits an Batch job from a job definition. Parameters that are specified during <a>SubmitJob</a>
            override parameters defined in the job definition. vCPU and memory requirements that
            are specified in the <c>resourceRequirements</c> objects in the job definition are
            the exception. They can't be overridden this way using the <c>memory</c> and <c>vcpus</c>
            parameters. Rather, you must specify updates to job definition parameters in a <c>resourceRequirements</c>
            object that's included in the <c>containerOverrides</c> parameter.
            
             <note> 
            <para>
            Job queues with a scheduling policy are limited to 500 active fair share identifiers
            at a time. 
            </para>
             </note> <important> 
            <para>
            Jobs that run on Fargate resources can't be guaranteed to run for more than 14 days.
            This is because, after 14 days, Fargate resources might become unavailable and job
            might be terminated.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.ArrayProperties">
            <summary>
            Gets and sets the property ArrayProperties. 
            <para>
            The array properties for the submitted job, such as the size of the array. The array
            size can be between 2 and 10,000. If you specify array properties for a job, it becomes
            an array job. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/array_jobs.html">Array
            Jobs</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.ContainerOverrides">
            <summary>
            Gets and sets the property ContainerOverrides. 
            <para>
            An object with properties that override the defaults for the job definition that specify
            the name of a container in the specified job definition and the overrides it should
            receive. You can override the default command for a container, which is specified
            in the job definition or the Docker image, with a <c>command</c> override. You can
            also override existing environment variables on a container or add new environment
            variables to it with an <c>environment</c> override.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.DependsOn">
            <summary>
            Gets and sets the property DependsOn. 
            <para>
            A list of dependencies for the job. A job can depend upon a maximum of 20 jobs. You
            can specify a <c>SEQUENTIAL</c> type dependency without specifying a job ID for array
            jobs so that each child array job completes sequentially, starting at index 0. You
            can also specify an <c>N_TO_N</c> type dependency with a job ID for array jobs. In
            that case, each index child of this job must wait for the corresponding index child
            of each dependency to complete before it can begin.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.EcsPropertiesOverride">
            <summary>
            Gets and sets the property EcsPropertiesOverride. 
            <para>
            An object, with properties that override defaults for the job definition, can only
            be specified for jobs that are run on Amazon ECS resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.EksPropertiesOverride">
            <summary>
            Gets and sets the property EksPropertiesOverride. 
            <para>
            An object, with properties that override defaults for the job definition, can only
            be specified for jobs that are run on Amazon EKS resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.JobDefinition">
            <summary>
            Gets and sets the property JobDefinition. 
            <para>
            The job definition used by this job. This value can be one of <c>definition-name</c>,
            <c>definition-name:revision</c>, or the Amazon Resource Name (ARN) for the job definition,
            with or without the revision (<c>arn:aws:batch:<i>region</i>:<i>account</i>:job-definition/<i>definition-name</i>:<i>revision</i>
            </c>, or <c>arn:aws:batch:<i>region</i>:<i>account</i>:job-definition/<i>definition-name</i>
            </c>).
            </para>
             
            <para>
            If the revision is not specified, then the latest active revision is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.JobName">
            <summary>
            Gets and sets the property JobName. 
            <para>
            The name of the job. It can be up to 128 letters long. The first character must be
            alphanumeric, can contain uppercase and lowercase letters, numbers, hyphens (-), and
            underscores (_).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.JobQueue">
            <summary>
            Gets and sets the property JobQueue. 
            <para>
            The job queue where the job is submitted. You can specify either the name or the Amazon
            Resource Name (ARN) of the queue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.NodeOverrides">
            <summary>
            Gets and sets the property NodeOverrides. 
            <para>
            A list of node overrides in JSON format that specify the node range to target and
            the container overrides for that node range.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources; use
            <c>containerOverrides</c> instead.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            Additional parameters passed to the job that replace parameter substitution placeholders
            that are set in the job definition. Parameters are specified as a key and value pair
            mapping. Parameters in a <c>SubmitJob</c> request override any corresponding parameter
            defaults from the job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.PropagateTags">
            <summary>
            Gets and sets the property PropagateTags. 
            <para>
            Specifies whether to propagate the tags from the job or job definition to the corresponding
            Amazon ECS task. If no value is specified, the tags aren't propagated. Tags can only
            be propagated to the tasks during task creation. For tags with the same name, job
            tags are given priority over job definitions tags. If the total number of combined
            tags from the job and job definition is over 50, the job is moved to the <c>FAILED</c>
            state. When specified, this overrides the tag propagation setting in the job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.RetryStrategy">
            <summary>
            Gets and sets the property RetryStrategy. 
            <para>
            The retry strategy to use for failed jobs from this <a>SubmitJob</a> operation. When
            a retry strategy is specified here, it overrides the retry strategy defined in the
            job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.SchedulingPriorityOverride">
            <summary>
            Gets and sets the property SchedulingPriorityOverride. 
            <para>
            The scheduling priority for the job. This only affects jobs in job queues with a fair
            share policy. Jobs with a higher scheduling priority are scheduled before jobs with
            a lower scheduling priority. This overrides any scheduling priority in the job definition
            and works only within a single share identifier.
            </para>
             
            <para>
            The minimum supported value is 0 and the maximum supported value is 9999.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.ShareIdentifier">
            <summary>
            Gets and sets the property ShareIdentifier. 
            <para>
            The share identifier for the job. Don't specify this parameter if the job queue doesn't
            have a scheduling policy. If the job queue has a scheduling policy, then this parameter
            must be specified.
            </para>
             
            <para>
            This string is limited to 255 alphanumeric characters, and can be followed by an asterisk
            (*).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags that you apply to the job request to help you categorize and organize your
            resources. Each tag consists of a key and an optional value. For more information,
            see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            Amazon Web Services Resources</a> in <i>Amazon Web Services General Reference</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.Timeout">
            <summary>
            Gets and sets the property Timeout. 
            <para>
            The timeout configuration for this <a>SubmitJob</a> operation. You can specify a timeout
            duration after which Batch terminates your jobs if they haven't finished. If a job
            is terminated due to a timeout, it isn't retried. The minimum value for the timeout
            is 60 seconds. This configuration overrides any timeout configuration specified in
            the job definition. For array jobs, child jobs have the same timeout configuration
            as the parent job. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/job_timeouts.html">Job
            Timeouts</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.SubmitJobResponse">
            <summary>
            This is the response object from the SubmitJob operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobResponse.JobArn">
            <summary>
            Gets and sets the property JobArn. 
            <para>
            The Amazon Resource Name (ARN) for the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The unique identifier for the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobResponse.JobName">
            <summary>
            Gets and sets the property JobName. 
            <para>
            The name of the job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Associates the specified tags to a resource with the specified <c>resourceArn</c>.
            If existing tags on a resource aren't specified in the request parameters, they aren't
            changed. When a resource is deleted, the tags that are associated with that resource
            are deleted as well. Batch resources that support tags are compute environments, jobs,
            job definitions, job queues, and scheduling policies. ARNs for child jobs of array
            and multi-node parallel (MNP) jobs aren't supported.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource that tags are added to. Batch resources
            that support tags are compute environments, jobs, job definitions, job queues, and
            scheduling policies. ARNs for child jobs of array and multi-node parallel (MNP) jobs
            aren't supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags that you apply to the resource to help you categorize and organize your resources.
            Each tag consists of a key and an optional value. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            Amazon Web Services Resources</a> in <i>Amazon Web Services General Reference</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.TaskContainerDependency">
            <summary>
            A list of containers that this task depends on.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerDependency.Condition">
            <summary>
            Gets and sets the property Condition. 
            <para>
            The dependency condition of the container. The following are the available conditions
            and their behavior:
            </para>
             <ul> <li> 
            <para>
             <c>START</c> - This condition emulates the behavior of links and volumes today. It
            validates that a dependent container is started before permitting other containers
            to start. 
            </para>
             </li> <li> 
            <para>
             <c>COMPLETE</c> - This condition validates that a dependent container runs to completion
            (exits) before permitting other containers to start. This can be useful for nonessential
            containers that run a script and then exit. This condition can't be set on an essential
            container. 
            </para>
             </li> <li> 
            <para>
             <c>SUCCESS</c> - This condition is the same as <c>COMPLETE</c>, but it also requires
            that the container exits with a zero status. This condition can't be set on an essential
            container. 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerDependency.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            A unique identifier for the container.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.TaskContainerDetails">
            <summary>
            The details for the container in this task attempt.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerDetails.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            The command that's passed to the container. This parameter maps to <c>Cmd</c> in the
            <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create a container</a>
            section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker Remote API</a>
            and the <c>COMMAND</c> parameter to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>. For more information, see <a href="https://docs.docker.com/engine/reference/builder/#cmd">https://docs.docker.com/engine/reference/builder/#cmd</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerDetails.DependsOn">
            <summary>
            Gets and sets the property DependsOn. 
            <para>
            A list of containers that this container depends on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerDetails.Environment">
            <summary>
            Gets and sets the property Environment. 
            <para>
            The environment variables to pass to a container. This parameter maps to <c>Env</c>
            in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <c>--env</c> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
             <important> 
            <para>
            We don't recommend using plaintext environment variables for sensitive information,
            such as credential data.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerDetails.Essential">
            <summary>
            Gets and sets the property Essential. 
            <para>
            If the essential parameter of a container is marked as <c>true</c>, and that container
            fails or stops for any reason, all other containers that are part of the task are
            stopped. If the <c>essential</c> parameter of a container is marked as false, its
            failure doesn't affect the rest of the containers in a task. If this parameter is
            omitted, a container is assumed to be essential.
            </para>
             
            <para>
            All jobs must have at least one essential container. If you have an application that's
            composed of multiple containers, group containers that are used for a common purpose
            into components, and separate the different components into multiple task definitions.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/application_architecture.html">Application
            Architecture</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerDetails.ExitCode">
            <summary>
            Gets and sets the property ExitCode. 
            <para>
            The exit code returned upon completion.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerDetails.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The image used to start a container. This string is passed directly to the Docker
            daemon. By default, images in the Docker Hub registry are available. Other repositories
            are specified with either <c>repository-url/image:tag</c> or <c>repository-url/image@digest</c>.
            Up to 255 letters (uppercase and lowercase), numbers, hyphens, underscores, colons,
            periods, forward slashes, and number signs are allowed. This parameter maps to <c>Image</c>
            in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <c>IMAGE</c> parameter of the <a href="https://docs.docker.com/engine/reference/run/#security-configuration">
            <i>docker run</i> </a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerDetails.LinuxParameters">
            <summary>
            Gets and sets the property LinuxParameters. 
            <para>
            Linux-specific modifications that are applied to the container, such as Linux kernel
            capabilities. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_KernelCapabilities.html">KernelCapabilities</a>.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerDetails.LogConfiguration">
            <summary>
            Gets and sets the property LogConfiguration. 
            <para>
            The log configuration specification for the container.
            </para>
             
            <para>
            This parameter maps to <c>LogConfig</c> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <c>--log-driver</c> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             
            <para>
            By default, containers use the same logging driver that the Docker daemon uses. However
            the container can use a different logging driver than the Docker daemon by specifying
            a log driver with this parameter in the container definition. To use a different logging
            driver for a container, the log system must be configured properly on the container
            instance (or on a different log server for remote logging options). For more information
            about the options for different supported log drivers, see <a href="https://docs.docker.com/engine/admin/logging/overview/">Configure
            logging drivers </a> in the <i>Docker documentation</i>.
            </para>
             <note> 
            <para>
            Amazon ECS currently supports a subset of the logging drivers available to the Docker
            daemon (shown in the <c>LogConfiguration</c> data type). Additional log drivers may
            be available in future releases of the Amazon ECS container agent.
            </para>
             </note> 
            <para>
            This parameter requires version 1.18 of the Docker Remote API or greater on your container
            instance. To check the Docker Remote API version on your container instance, log in
            to your container instance and run the following command: sudo docker version <c>--format
            '{{.Server.APIVersion}}'</c> 
            </para>
             <note> 
            <para>
            The Amazon ECS container agent running on a container instance must register the logging
            drivers available on that instance with the <c>ECS_AVAILABLE_LOGGING_DRIVERS</c> environment
            variable before containers placed on that instance can use these log configuration
            options. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS container agent configuration</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerDetails.LogStreamName">
            <summary>
            Gets and sets the property LogStreamName. 
            <para>
            The name of the CloudWatch Logs log stream that's associated with the container. The
            log group for Batch jobs is /aws/batch/job. Each container attempt receives a log
            stream name when they reach the <c>RUNNING</c> status. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerDetails.MountPoints">
            <summary>
            Gets and sets the property MountPoints. 
            <para>
            The mount points for data volumes in your container.
            </para>
             
            <para>
            This parameter maps to <c>Volumes</c> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <a href="">--volume</a> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             
            <para>
            Windows containers can mount whole directories on the same drive as <c>$env:ProgramData</c>.
            Windows containers can't mount directories on a different drive, and mount point can't
            be across drives.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerDetails.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of a container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerDetails.NetworkInterfaces">
            <summary>
            Gets and sets the property NetworkInterfaces. 
            <para>
            The network interfaces that are associated with the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerDetails.Privileged">
            <summary>
            Gets and sets the property Privileged. 
            <para>
            When this parameter is <c>true</c>, the container is given elevated privileges on
            the host container instance (similar to the <c>root</c> user). This parameter maps
            to <c>Privileged</c> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <c>--privileged</c> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers or tasks run on Fargate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerDetails.ReadonlyRootFilesystem">
            <summary>
            Gets and sets the property ReadonlyRootFilesystem. 
            <para>
            When this parameter is true, the container is given read-only access to its root file
            system. This parameter maps to <c>ReadonlyRootfs</c> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <c>--read-only</c> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerDetails.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            A short (255 max characters) human-readable string to provide additional details for
            a running or stopped container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerDetails.RepositoryCredentials">
            <summary>
            Gets and sets the property RepositoryCredentials. 
            <para>
            The private repository authentication credentials to use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerDetails.ResourceRequirements">
            <summary>
            Gets and sets the property ResourceRequirements. 
            <para>
            The type and amount of a resource to assign to a container. The only supported resource
            is a GPU.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerDetails.Secrets">
            <summary>
            Gets and sets the property Secrets. 
            <para>
            The secrets to pass to the container. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html">Specifying
            Sensitive Data</a> in the Amazon Elastic Container Service Developer Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerDetails.Ulimits">
            <summary>
            Gets and sets the property Ulimits. 
            <para>
            A list of <c>ulimits</c> to set in the container. If a <c>ulimit</c> value is specified
            in a task definition, it overrides the default values set by Docker. This parameter
            maps to <c>Ulimits</c> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <c>--ulimit</c> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             
            <para>
            Amazon ECS tasks hosted on Fargate use the default resource limit values set by the
            operating system with the exception of the nofile resource limit parameter which Fargate
            overrides. The <c>nofile</c> resource limit sets a restriction on the number of open
            files that a container can use. The default <c>nofile</c> soft limit is <c>1024</c>
            and the default hard limit is <c>65535</c>.
            </para>
             
            <para>
            This parameter requires version 1.18 of the Docker Remote API or greater on your container
            instance. To check the Docker Remote API version on your container instance, log in
            to your container instance and run the following command: sudo docker version <c>--format
            '{{.Server.APIVersion}}'</c> 
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerDetails.User">
            <summary>
            Gets and sets the property User. 
            <para>
            The user to use inside the container. This parameter maps to User in the Create a
            container section of the Docker Remote API and the --user option to docker run.
            </para>
             <note> 
            <para>
            When running tasks using the <c>host</c> network mode, don't run containers using
            the <c>root user (UID 0)</c>. We recommend using a non-root user for better security.
            </para>
             </note> 
            <para>
            You can specify the <c>user</c> using the following formats. If specifying a UID or
            GID, you must specify it as a positive integer.
            </para>
             <ul> <li> 
            <para>
             <c>user</c> 
            </para>
             </li> <li> 
            <para>
             <c>user:group</c> 
            </para>
             </li> <li> 
            <para>
             <c>uid</c> 
            </para>
             </li> <li> 
            <para>
             <c>uid:gid</c> 
            </para>
             </li> <li> 
            <para>
             <c>user:gi</c> 
            </para>
             </li> <li> 
            <para>
             <c>uid:group</c> 
            </para>
             </li> <li> 
            <para>
             <code/> 
            </para>
             </li> </ul> <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.TaskContainerOverrides">
            <summary>
            The overrides that should be sent to a container.
            
             
            <para>
            For information about using Batch overrides when you connect event sources to targets,
            see <a href="https://docs.aws.amazon.com/eventbridge/latest/pipes-reference/API_BatchContainerOverrides.html">BatchContainerOverrides</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerOverrides.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            The command to send to the container that overrides the default command from the Docker
            image or the job definition.
            </para>
             <note> 
            <para>
            This parameter can't contain an empty string.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerOverrides.Environment">
            <summary>
            Gets and sets the property Environment. 
            <para>
            The environment variables to send to the container. You can add new environment variables,
            which are added to the container at launch, or you can override the existing environment
            variables from the Docker image or the job definition.
            </para>
             <note> 
            <para>
            Environment variables cannot start with <c>AWS_BATCH</c>. This naming convention is
            reserved for variables that Batch sets.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerOverrides.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A pointer to the container that you want to override. The container's name provides
            a unique identifier for the container being used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerOverrides.ResourceRequirements">
            <summary>
            Gets and sets the property ResourceRequirements. 
            <para>
            The type and amount of resources to assign to a container. This overrides the settings
            in the job definition. The supported resources include <c>GPU</c>, <c>MEMORY</c>,
            and <c>VCPU</c>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.TaskContainerProperties">
            <summary>
            Container properties are used for Amazon ECS-based job definitions. These properties
            to describe the container that's launched as part of a job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerProperties.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            The command that's passed to the container. This parameter maps to <c>Cmd</c> in the
            <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create a container</a>
            section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker Remote API</a>
            and the <c>COMMAND</c> parameter to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>. For more information, see <a href="https://docs.docker.com/engine/reference/builder/#cmd">Dockerfile
            reference: CMD</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerProperties.DependsOn">
            <summary>
            Gets and sets the property DependsOn. 
            <para>
            A list of containers that this container depends on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerProperties.Environment">
            <summary>
            Gets and sets the property Environment. 
            <para>
            The environment variables to pass to a container. This parameter maps to Env inthe
            <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create a container</a>
            section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker Remote API</a>
            and the <c>--env</c> parameter to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>. 
            </para>
             <important> 
            <para>
            We don't recommend using plaintext environment variables for sensitive information,
            such as credential data.
            </para>
             </important> <note> 
            <para>
            Environment variables cannot start with <c>AWS_BATCH</c>. This naming convention is
            reserved for variables that Batch sets.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerProperties.Essential">
            <summary>
            Gets and sets the property Essential. 
            <para>
            If the essential parameter of a container is marked as <c>true</c>, and that container
            fails or stops for any reason, all other containers that are part of the task are
            stopped. If the <c>essential</c> parameter of a container is marked as false, its
            failure doesn't affect the rest of the containers in a task. If this parameter is
            omitted, a container is assumed to be essential.
            </para>
             
            <para>
            All jobs must have at least one essential container. If you have an application that's
            composed of multiple containers, group containers that are used for a common purpose
            into components, and separate the different components into multiple task definitions.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/application_architecture.html">Application
            Architecture</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerProperties.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The image used to start a container. This string is passed directly to the Docker
            daemon. By default, images in the Docker Hub registry are available. Other repositories
            are specified with either <c>repository-url/image:tag</c> or <c>repository-url/image@digest</c>.
            Up to 255 letters (uppercase and lowercase), numbers, hyphens, underscores, colons,
            periods, forward slashes, and number signs are allowed. This parameter maps to <c>Image</c>
            in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <c>IMAGE</c> parameter of the <a href="https://docs.docker.com/engine/reference/run/#security-configuration">
            <i>docker run</i> </a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerProperties.LinuxParameters">
            <summary>
            Gets and sets the property LinuxParameters. 
            <para>
            Linux-specific modifications that are applied to the container, such as Linux kernel
            capabilities. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_KernelCapabilities.html">KernelCapabilities</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerProperties.LogConfiguration">
            <summary>
            Gets and sets the property LogConfiguration. 
            <para>
            The log configuration specification for the container.
            </para>
             
            <para>
            This parameter maps to <c>LogConfig</c> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <c>--log-driver</c> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             
            <para>
            By default, containers use the same logging driver that the Docker daemon uses. However
            the container can use a different logging driver than the Docker daemon by specifying
            a log driver with this parameter in the container definition. To use a different logging
            driver for a container, the log system must be configured properly on the container
            instance (or on a different log server for remote logging options). For more information
            about the options for different supported log drivers, see <a href="https://docs.docker.com/engine/admin/logging/overview/">Configure
            logging drivers </a> in the <i>Docker documentation</i>.
            </para>
             <note> 
            <para>
            Amazon ECS currently supports a subset of the logging drivers available to the Docker
            daemon (shown in the <c>LogConfiguration</c> data type). Additional log drivers may
            be available in future releases of the Amazon ECS container agent.
            </para>
             </note> 
            <para>
            This parameter requires version 1.18 of the Docker Remote API or greater on your container
            instance. To check the Docker Remote API version on your container instance, log in
            to your container instance and run the following command: sudo docker version <c>--format
            '{{.Server.APIVersion}}'</c> 
            </para>
             <note> 
            <para>
            The Amazon ECS container agent running on a container instance must register the logging
            drivers available on that instance with the <c>ECS_AVAILABLE_LOGGING_DRIVERS</c> environment
            variable before containers placed on that instance can use these log configuration
            options. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS container agent configuration</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerProperties.MountPoints">
            <summary>
            Gets and sets the property MountPoints. 
            <para>
            The mount points for data volumes in your container.
            </para>
             
            <para>
            This parameter maps to <c>Volumes</c> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <a href="">--volume</a> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             
            <para>
            Windows containers can mount whole directories on the same drive as <c>$env:ProgramData</c>.
            Windows containers can't mount directories on a different drive, and mount point can't
            be across drives.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerProperties.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of a container. The name can be used as a unique identifier to target your
            <c>dependsOn</c> and <c>Overrides</c> objects. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerProperties.Privileged">
            <summary>
            Gets and sets the property Privileged. 
            <para>
            When this parameter is <c>true</c>, the container is given elevated privileges on
            the host container instance (similar to the <c>root</c> user). This parameter maps
            to <c>Privileged</c> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <c>--privileged</c> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers or tasks run on Fargate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerProperties.ReadonlyRootFilesystem">
            <summary>
            Gets and sets the property ReadonlyRootFilesystem. 
            <para>
            When this parameter is true, the container is given read-only access to its root file
            system. This parameter maps to <c>ReadonlyRootfs</c> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <c>--read-only</c> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerProperties.RepositoryCredentials">
            <summary>
            Gets and sets the property RepositoryCredentials. 
            <para>
            The private repository authentication credentials to use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerProperties.ResourceRequirements">
            <summary>
            Gets and sets the property ResourceRequirements. 
            <para>
            The type and amount of a resource to assign to a container. The only supported resource
            is a GPU.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerProperties.Secrets">
            <summary>
            Gets and sets the property Secrets. 
            <para>
            The secrets to pass to the container. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html">Specifying
            Sensitive Data</a> in the Amazon Elastic Container Service Developer Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerProperties.Ulimits">
            <summary>
            Gets and sets the property Ulimits. 
            <para>
            A list of <c>ulimits</c> to set in the container. If a <c>ulimit</c> value is specified
            in a task definition, it overrides the default values set by Docker. This parameter
            maps to <c>Ulimits</c> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <c>--ulimit</c> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             
            <para>
            Amazon ECS tasks hosted on Fargate use the default resource limit values set by the
            operating system with the exception of the nofile resource limit parameter which Fargate
            overrides. The <c>nofile</c> resource limit sets a restriction on the number of open
            files that a container can use. The default <c>nofile</c> soft limit is <c>1024</c>
            and the default hard limit is <c>65535</c>.
            </para>
             
            <para>
            This parameter requires version 1.18 of the Docker Remote API or greater on your container
            instance. To check the Docker Remote API version on your container instance, log in
            to your container instance and run the following command: sudo docker version <c>--format
            '{{.Server.APIVersion}}'</c> 
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskContainerProperties.User">
            <summary>
            Gets and sets the property User. 
            <para>
            The user to use inside the container. This parameter maps to User in the Create a
            container section of the Docker Remote API and the --user option to docker run.
            </para>
             <note> 
            <para>
            When running tasks using the <c>host</c> network mode, don't run containers using
            the <c>root user (UID 0)</c>. We recommend using a non-root user for better security.
            </para>
             </note> 
            <para>
            You can specify the <c>user</c> using the following formats. If specifying a UID or
            GID, you must specify it as a positive integer.
            </para>
             <ul> <li> 
            <para>
             <c>user</c> 
            </para>
             </li> <li> 
            <para>
             <c>user:group</c> 
            </para>
             </li> <li> 
            <para>
             <c>uid</c> 
            </para>
             </li> <li> 
            <para>
             <c>uid:gid</c> 
            </para>
             </li> <li> 
            <para>
             <c>user:gi</c> 
            </para>
             </li> <li> 
            <para>
             <c>uid:group</c> 
            </para>
             </li> </ul> <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.TaskPropertiesOverride">
            <summary>
            An object that contains overrides for the task definition of a job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TaskPropertiesOverride.Containers">
            <summary>
            Gets and sets the property Containers. 
            <para>
            The overrides for the container definition of a job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.TerminateJobRequest">
            <summary>
            Container for the parameters to the TerminateJob operation.
            Terminates a job in a job queue. Jobs that are in the <c>STARTING</c> or <c>RUNNING</c>
            state are terminated, which causes them to transition to <c>FAILED</c>. Jobs that
            have not progressed to the <c>STARTING</c> state are cancelled.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TerminateJobRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The Batch job ID of the job to terminate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TerminateJobRequest.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            A message to attach to the job that explains the reason for canceling it. This message
            is returned by future <a>DescribeJobs</a> operations on the job. It is also recorded
            in the Batch activity logs.
            </para>
             
            <para>
            This parameter has as limit of 1024 characters.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.TerminateJobResponse">
            <summary>
            This is the response object from the TerminateJob operation.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Tmpfs">
            <summary>
            The container path, mount options, and size of the <c>tmpfs</c> mount.
            
             <note> 
            <para>
            This object isn't applicable to jobs that are running on Fargate resources.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Tmpfs.ContainerPath">
            <summary>
            Gets and sets the property ContainerPath. 
            <para>
            The absolute file path in the container where the <c>tmpfs</c> volume is mounted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Tmpfs.MountOptions">
            <summary>
            Gets and sets the property MountOptions. 
            <para>
            The list of <c>tmpfs</c> volume mount options.
            </para>
             
            <para>
            Valid values: "<c>defaults</c>" | "<c>ro</c>" | "<c>rw</c>" | "<c>suid</c>" | "<c>nosuid</c>"
            | "<c>dev</c>" | "<c>nodev</c>" | "<c>exec</c>" | "<c>noexec</c>" | "<c>sync</c>"
            | "<c>async</c>" | "<c>dirsync</c>" | "<c>remount</c>" | "<c>mand</c>" | "<c>nomand</c>"
            | "<c>atime</c>" | "<c>noatime</c>" | "<c>diratime</c>" | "<c>nodiratime</c>" | "<c>bind</c>"
            | "<c>rbind" | "unbindable" | "runbindable" | "private" | "rprivate" | "shared" |
            "rshared" | "slave" | "rslave" | "relatime</c>" | "<c>norelatime</c>" | "<c>strictatime</c>"
            | "<c>nostrictatime</c>" | "<c>mode</c>" | "<c>uid</c>" | "<c>gid</c>" | "<c>nr_inodes</c>"
            | "<c>nr_blocks</c>" | "<c>mpol</c>"
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Tmpfs.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size (in MiB) of the <c>tmpfs</c> volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Ulimit">
            <summary>
            The <c>ulimit</c> settings to pass to the container. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_Ulimit.html">Ulimit</a>.
            
             <note> 
            <para>
            This object isn't applicable to jobs that are running on Fargate resources.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Ulimit.HardLimit">
            <summary>
            Gets and sets the property HardLimit. 
            <para>
            The hard limit for the <c>ulimit</c> type. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Ulimit.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The <c>type</c> of the <c>ulimit</c>. Valid values are: <c>core</c> | <c>cpu</c> |
            <c>data</c> | <c>fsize</c> | <c>locks</c> | <c>memlock</c> | <c>msgqueue</c> | <c>nice</c>
            | <c>nofile</c> | <c>nproc</c> | <c>rss</c> | <c>rtprio</c> | <c>rttime</c> | <c>sigpending</c>
            | <c>stack</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Ulimit.SoftLimit">
            <summary>
            Gets and sets the property SoftLimit. 
            <para>
            The soft limit for the <c>ulimit</c> type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Deletes specified tags from an Batch resource.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource from which to delete tags. Batch resources
            that support tags are compute environments, jobs, job definitions, job queues, and
            scheduling policies. ARNs for child jobs of array and multi-node parallel (MNP) jobs
            aren't supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            The keys of the tags to be removed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.UpdateComputeEnvironmentRequest">
            <summary>
            Container for the parameters to the UpdateComputeEnvironment operation.
            Updates an Batch compute environment.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateComputeEnvironmentRequest.ComputeEnvironment">
            <summary>
            Gets and sets the property ComputeEnvironment. 
            <para>
            The name or full Amazon Resource Name (ARN) of the compute environment to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateComputeEnvironmentRequest.ComputeResources">
            <summary>
            Gets and sets the property ComputeResources. 
            <para>
            Details of the compute resources managed by the compute environment. Required for
            a managed compute environment. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html">Compute
            Environments</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateComputeEnvironmentRequest.Context">
            <summary>
            Gets and sets the property Context. 
            <para>
            Reserved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateComputeEnvironmentRequest.ServiceRole">
            <summary>
            Gets and sets the property ServiceRole. 
            <para>
            The full Amazon Resource Name (ARN) of the IAM role that allows Batch to make calls
            to other Amazon Web Services services on your behalf. For more information, see <a
            href="https://docs.aws.amazon.com/batch/latest/userguide/service_IAM_role.html">Batch
            service IAM role</a> in the <i>Batch User Guide</i>.
            </para>
             <important> 
            <para>
            If the compute environment has a service-linked role, it can't be changed to use a
            regular IAM role. Likewise, if the compute environment has a regular IAM role, it
            can't be changed to use a service-linked role. To update the parameters for the compute
            environment that require an infrastructure update to change, the <b>AWSServiceRoleForBatch</b>
            service-linked role must be used. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>.
            </para>
             </important> 
            <para>
            If your specified role has a path other than <c>/</c>, then you must either specify
            the full role ARN (recommended) or prefix the role name with the path.
            </para>
             <note> 
            <para>
            Depending on how you created your Batch service role, its ARN might contain the <c>service-role</c>
            path prefix. When you only specify the name of the service role, Batch assumes that
            your ARN doesn't use the <c>service-role</c> path prefix. Because of this, we recommend
            that you specify the full ARN of your service role when you create compute environments.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateComputeEnvironmentRequest.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the compute environment. Compute environments in the <c>ENABLED</c> state
            can accept jobs from a queue and scale in or out automatically based on the workload
            demand of its associated queues.
            </para>
             
            <para>
            If the state is <c>ENABLED</c>, then the Batch scheduler can attempt to place jobs
            from an associated job queue on the compute resources within the environment. If the
            compute environment is managed, then it can scale its instances out or in automatically,
            based on the job queue demand.
            </para>
             
            <para>
            If the state is <c>DISABLED</c>, then the Batch scheduler doesn't attempt to place
            jobs within the environment. Jobs in a <c>STARTING</c> or <c>RUNNING</c> state continue
            to progress normally. Managed compute environments in the <c>DISABLED</c> state don't
            scale out. 
            </para>
             <note> 
            <para>
            Compute environments in a <c>DISABLED</c> state may continue to incur billing charges.
            To prevent additional charges, turn off and then delete the compute environment. For
            more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/compute_environment_parameters.html#compute_environment_state">State</a>
            in the <i>Batch User Guide</i>.
            </para>
             </note> 
            <para>
            When an instance is idle, the instance scales down to the <c>minvCpus</c> value. However,
            the instance size doesn't change. For example, consider a <c>c5.8xlarge</c> instance
            with a <c>minvCpus</c> value of <c>4</c> and a <c>desiredvCpus</c> value of <c>36</c>.
            This instance doesn't scale down to a <c>c5.large</c> instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateComputeEnvironmentRequest.UnmanagedvCpus">
            <summary>
            Gets and sets the property UnmanagedvCpus. 
            <para>
            The maximum number of vCPUs expected to be used for an unmanaged compute environment.
            Don't specify this parameter for a managed compute environment. This parameter is
            only used for fair share scheduling to reserve vCPU capacity for new share identifiers.
            If this parameter isn't provided for a fair share job queue, no vCPU capacity is reserved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateComputeEnvironmentRequest.UpdatePolicy">
            <summary>
            Gets and sets the property UpdatePolicy. 
            <para>
            Specifies the updated infrastructure update policy for the compute environment. For
            more information about infrastructure updates, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.UpdateComputeEnvironmentResponse">
            <summary>
            This is the response object from the UpdateComputeEnvironment operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateComputeEnvironmentResponse.ComputeEnvironmentArn">
            <summary>
            Gets and sets the property ComputeEnvironmentArn. 
            <para>
            The Amazon Resource Name (ARN) of the compute environment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateComputeEnvironmentResponse.ComputeEnvironmentName">
            <summary>
            Gets and sets the property ComputeEnvironmentName. 
            <para>
            The name of the compute environment. It can be up to 128 characters long. It can contain
            uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.UpdateJobQueueRequest">
            <summary>
            Container for the parameters to the UpdateJobQueue operation.
            Updates a job queue.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateJobQueueRequest.ComputeEnvironmentOrder">
            <summary>
            Gets and sets the property ComputeEnvironmentOrder. 
            <para>
            Details the set of compute environments mapped to a job queue and their order relative
            to each other. This is one of the parameters used by the job scheduler to determine
            which compute environment runs a given job. Compute environments must be in the <c>VALID</c>
            state before you can associate them with a job queue. All of the compute environments
            must be either EC2 (<c>EC2</c> or <c>SPOT</c>) or Fargate (<c>FARGATE</c> or <c>FARGATE_SPOT</c>).
            EC2 and Fargate compute environments can't be mixed.
            </para>
             <note> 
            <para>
            All compute environments that are associated with a job queue must share the same
            architecture. Batch doesn't support mixing compute environment architecture types
            in a single job queue.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateJobQueueRequest.JobQueue">
            <summary>
            Gets and sets the property JobQueue. 
            <para>
            The name or the Amazon Resource Name (ARN) of the job queue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateJobQueueRequest.JobStateTimeLimitActions">
            <summary>
            Gets and sets the property JobStateTimeLimitActions. 
            <para>
            The set of actions that Batch perform on jobs that remain at the head of the job queue
            in the specified state longer than specified times. Batch will perform each action
            after <c>maxTimeSeconds</c> has passed. (<b>Note</b>: The minimum value for maxTimeSeconds
            is 600 (10 minutes) and its maximum value is 86,400 (24 hours).)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateJobQueueRequest.Priority">
            <summary>
            Gets and sets the property Priority. 
            <para>
            The priority of the job queue. Job queues with a higher priority (or a higher integer
            value for the <c>priority</c> parameter) are evaluated first when associated with
            the same compute environment. Priority is determined in descending order. For example,
            a job queue with a priority value of <c>10</c> is given scheduling preference over
            a job queue with a priority value of <c>1</c>. All of the compute environments must
            be either EC2 (<c>EC2</c> or <c>SPOT</c>) or Fargate (<c>FARGATE</c> or <c>FARGATE_SPOT</c>).
            EC2 and Fargate compute environments can't be mixed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateJobQueueRequest.SchedulingPolicyArn">
            <summary>
            Gets and sets the property SchedulingPolicyArn. 
            <para>
            Amazon Resource Name (ARN) of the fair share scheduling policy. Once a job queue is
            created, the fair share scheduling policy can be replaced but not removed. The format
            is <c>aws:<i>Partition</i>:batch:<i>Region</i>:<i>Account</i>:scheduling-policy/<i>Name</i>
            </c>. For example, <c>aws:aws:batch:us-west-2:123456789012:scheduling-policy/MySchedulingPolicy</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateJobQueueRequest.State">
            <summary>
            Gets and sets the property State. 
            <para>
            Describes the queue's ability to accept new jobs. If the job queue state is <c>ENABLED</c>,
            it can accept jobs. If the job queue state is <c>DISABLED</c>, new jobs can't be added
            to the queue, but jobs already in the queue can finish.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.UpdateJobQueueResponse">
            <summary>
            This is the response object from the UpdateJobQueue operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateJobQueueResponse.JobQueueArn">
            <summary>
            Gets and sets the property JobQueueArn. 
            <para>
            The Amazon Resource Name (ARN) of the job queue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateJobQueueResponse.JobQueueName">
            <summary>
            Gets and sets the property JobQueueName. 
            <para>
            The name of the job queue.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.UpdatePolicy">
            <summary>
            Specifies the infrastructure update policy for the compute environment. For more information
            about infrastructure updates, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a> in the <i>Batch User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdatePolicy.JobExecutionTimeoutMinutes">
            <summary>
            Gets and sets the property JobExecutionTimeoutMinutes. 
            <para>
            Specifies the job timeout (in minutes) when the compute environment infrastructure
            is updated. The default value is 30.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdatePolicy.TerminateJobsOnUpdate">
            <summary>
            Gets and sets the property TerminateJobsOnUpdate. 
            <para>
            Specifies whether jobs are automatically terminated when the computer environment
            infrastructure is updated. The default value is <c>false</c>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.UpdateSchedulingPolicyRequest">
            <summary>
            Container for the parameters to the UpdateSchedulingPolicy operation.
            Updates a scheduling policy.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateSchedulingPolicyRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the scheduling policy to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateSchedulingPolicyRequest.FairsharePolicy">
            <summary>
            Gets and sets the property FairsharePolicy. 
            <para>
            The fair share policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.UpdateSchedulingPolicyResponse">
            <summary>
            This is the response object from the UpdateSchedulingPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Volume">
            <summary>
            A data volume that's used in a job's container properties.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Volume.EfsVolumeConfiguration">
            <summary>
            Gets and sets the property EfsVolumeConfiguration. 
            <para>
            This parameter is specified when you're using an Amazon Elastic File System file system
            for job storage. Jobs that are running on Fargate resources must specify a <c>platformVersion</c>
            of at least <c>1.4.0</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Volume.Host">
            <summary>
            Gets and sets the property Host. 
            <para>
            The contents of the <c>host</c> parameter determine whether your data volume persists
            on the host container instance and where it's stored. If the host parameter is empty,
            then the Docker daemon assigns a host path for your data volume. However, the data
            isn't guaranteed to persist after the containers that are associated with it stop
            running.
            </para>
             <note> 
            <para>
            This parameter isn't applicable to jobs that are running on Fargate resources and
            shouldn't be provided.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Volume.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the volume. It can be up to 255 characters long. It can contain uppercase
            and lowercase letters, numbers, hyphens (-), and underscores (_). This name is referenced
            in the <c>sourceVolume</c> parameter of container definition <c>mountPoints</c>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.BatchPaginatorFactory">
             <summary>
             Paginators for the Batch service
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.BatchPaginatorFactory.DescribeComputeEnvironments(Amazon.Batch.Model.DescribeComputeEnvironmentsRequest)">
             <summary>
             Paginator for DescribeComputeEnvironments operation
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.BatchPaginatorFactory.DescribeJobDefinitions(Amazon.Batch.Model.DescribeJobDefinitionsRequest)">
             <summary>
             Paginator for DescribeJobDefinitions operation
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.BatchPaginatorFactory.DescribeJobQueues(Amazon.Batch.Model.DescribeJobQueuesRequest)">
             <summary>
             Paginator for DescribeJobQueues operation
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.BatchPaginatorFactory.ListJobs(Amazon.Batch.Model.ListJobsRequest)">
             <summary>
             Paginator for ListJobs operation
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.BatchPaginatorFactory.ListSchedulingPolicies(Amazon.Batch.Model.ListSchedulingPoliciesRequest)">
             <summary>
             Paginator for ListSchedulingPolicies operation
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DescribeComputeEnvironmentsPaginator">
            <summary>
            Base class for DescribeComputeEnvironments paginators.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeComputeEnvironmentsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeComputeEnvironmentsPaginator.ComputeEnvironments">
            <summary>
            Enumerable containing all of the ComputeEnvironments
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DescribeJobDefinitionsPaginator">
            <summary>
            Base class for DescribeJobDefinitions paginators.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobDefinitionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobDefinitionsPaginator.JobDefinitions">
            <summary>
            Enumerable containing all of the JobDefinitions
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DescribeJobQueuesPaginator">
            <summary>
            Base class for DescribeJobQueues paginators.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobQueuesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobQueuesPaginator.JobQueues">
            <summary>
            Enumerable containing all of the JobQueues
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.IBatchPaginatorFactory">
             <summary>
             Paginators for the Batch service
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.IBatchPaginatorFactory.DescribeComputeEnvironments(Amazon.Batch.Model.DescribeComputeEnvironmentsRequest)">
             <summary>
             Paginator for DescribeComputeEnvironments operation
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.IBatchPaginatorFactory.DescribeJobDefinitions(Amazon.Batch.Model.DescribeJobDefinitionsRequest)">
             <summary>
             Paginator for DescribeJobDefinitions operation
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.IBatchPaginatorFactory.DescribeJobQueues(Amazon.Batch.Model.DescribeJobQueuesRequest)">
             <summary>
             Paginator for DescribeJobQueues operation
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.IBatchPaginatorFactory.ListJobs(Amazon.Batch.Model.ListJobsRequest)">
             <summary>
             Paginator for ListJobs operation
            </summary>
        </member>
        <member name="M:Amazon.Batch.Model.IBatchPaginatorFactory.ListSchedulingPolicies(Amazon.Batch.Model.ListSchedulingPoliciesRequest)">
             <summary>
             Paginator for ListSchedulingPolicies operation
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.IDescribeComputeEnvironmentsPaginator">
             <summary>
             Paginator for the DescribeComputeEnvironments operation
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.IDescribeComputeEnvironmentsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.IDescribeComputeEnvironmentsPaginator.ComputeEnvironments">
            <summary>
            Enumerable containing all of the ComputeEnvironments
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.IDescribeJobDefinitionsPaginator">
             <summary>
             Paginator for the DescribeJobDefinitions operation
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.IDescribeJobDefinitionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.IDescribeJobDefinitionsPaginator.JobDefinitions">
            <summary>
            Enumerable containing all of the JobDefinitions
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.IDescribeJobQueuesPaginator">
             <summary>
             Paginator for the DescribeJobQueues operation
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.IDescribeJobQueuesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.IDescribeJobQueuesPaginator.JobQueues">
            <summary>
            Enumerable containing all of the JobQueues
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.IListJobsPaginator">
             <summary>
             Paginator for the ListJobs operation
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.IListJobsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.IListJobsPaginator.JobSummaryList">
            <summary>
            Enumerable containing all of the JobSummaryList
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.IListSchedulingPoliciesPaginator">
             <summary>
             Paginator for the ListSchedulingPolicies operation
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.IListSchedulingPoliciesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.IListSchedulingPoliciesPaginator.SchedulingPolicies">
            <summary>
            Enumerable containing all of the SchedulingPolicies
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ListJobsPaginator">
            <summary>
            Base class for ListJobs paginators.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListJobsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListJobsPaginator.JobSummaryList">
            <summary>
            Enumerable containing all of the JobSummaryList
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ListSchedulingPoliciesPaginator">
            <summary>
            Base class for ListSchedulingPolicies paginators.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListSchedulingPoliciesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListSchedulingPoliciesPaginator.SchedulingPolicies">
            <summary>
            Enumerable containing all of the SchedulingPolicies
            </summary>
        </member>
        <member name="T:Amazon.Batch.ArrayJobDependency">
            <summary>
            Constants used for properties of type ArrayJobDependency.
            </summary>
        </member>
        <member name="F:Amazon.Batch.ArrayJobDependency.N_TO_N">
            <summary>
            Constant N_TO_N for ArrayJobDependency
            </summary>
        </member>
        <member name="F:Amazon.Batch.ArrayJobDependency.SEQUENTIAL">
            <summary>
            Constant SEQUENTIAL for ArrayJobDependency
            </summary>
        </member>
        <member name="M:Amazon.Batch.ArrayJobDependency.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.ArrayJobDependency.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.ArrayJobDependency.op_Implicit(System.String)~Amazon.Batch.ArrayJobDependency">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.AssignPublicIp">
            <summary>
            Constants used for properties of type AssignPublicIp.
            </summary>
        </member>
        <member name="F:Amazon.Batch.AssignPublicIp.DISABLED">
            <summary>
            Constant DISABLED for AssignPublicIp
            </summary>
        </member>
        <member name="F:Amazon.Batch.AssignPublicIp.ENABLED">
            <summary>
            Constant ENABLED for AssignPublicIp
            </summary>
        </member>
        <member name="M:Amazon.Batch.AssignPublicIp.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.AssignPublicIp.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.AssignPublicIp.op_Implicit(System.String)~Amazon.Batch.AssignPublicIp">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.CEState">
            <summary>
            Constants used for properties of type CEState.
            </summary>
        </member>
        <member name="F:Amazon.Batch.CEState.DISABLED">
            <summary>
            Constant DISABLED for CEState
            </summary>
        </member>
        <member name="F:Amazon.Batch.CEState.ENABLED">
            <summary>
            Constant ENABLED for CEState
            </summary>
        </member>
        <member name="M:Amazon.Batch.CEState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.CEState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.CEState.op_Implicit(System.String)~Amazon.Batch.CEState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.CEStatus">
            <summary>
            Constants used for properties of type CEStatus.
            </summary>
        </member>
        <member name="F:Amazon.Batch.CEStatus.CREATING">
            <summary>
            Constant CREATING for CEStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.CEStatus.DELETED">
            <summary>
            Constant DELETED for CEStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.CEStatus.DELETING">
            <summary>
            Constant DELETING for CEStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.CEStatus.INVALID">
            <summary>
            Constant INVALID for CEStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.CEStatus.UPDATING">
            <summary>
            Constant UPDATING for CEStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.CEStatus.VALID">
            <summary>
            Constant VALID for CEStatus
            </summary>
        </member>
        <member name="M:Amazon.Batch.CEStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.CEStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.CEStatus.op_Implicit(System.String)~Amazon.Batch.CEStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.CEType">
            <summary>
            Constants used for properties of type CEType.
            </summary>
        </member>
        <member name="F:Amazon.Batch.CEType.MANAGED">
            <summary>
            Constant MANAGED for CEType
            </summary>
        </member>
        <member name="F:Amazon.Batch.CEType.UNMANAGED">
            <summary>
            Constant UNMANAGED for CEType
            </summary>
        </member>
        <member name="M:Amazon.Batch.CEType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.CEType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.CEType.op_Implicit(System.String)~Amazon.Batch.CEType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.CRAllocationStrategy">
            <summary>
            Constants used for properties of type CRAllocationStrategy.
            </summary>
        </member>
        <member name="F:Amazon.Batch.CRAllocationStrategy.BEST_FIT">
            <summary>
            Constant BEST_FIT for CRAllocationStrategy
            </summary>
        </member>
        <member name="F:Amazon.Batch.CRAllocationStrategy.BEST_FIT_PROGRESSIVE">
            <summary>
            Constant BEST_FIT_PROGRESSIVE for CRAllocationStrategy
            </summary>
        </member>
        <member name="F:Amazon.Batch.CRAllocationStrategy.SPOT_CAPACITY_OPTIMIZED">
            <summary>
            Constant SPOT_CAPACITY_OPTIMIZED for CRAllocationStrategy
            </summary>
        </member>
        <member name="F:Amazon.Batch.CRAllocationStrategy.SPOT_PRICE_CAPACITY_OPTIMIZED">
            <summary>
            Constant SPOT_PRICE_CAPACITY_OPTIMIZED for CRAllocationStrategy
            </summary>
        </member>
        <member name="M:Amazon.Batch.CRAllocationStrategy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.CRAllocationStrategy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.CRAllocationStrategy.op_Implicit(System.String)~Amazon.Batch.CRAllocationStrategy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.CRType">
            <summary>
            Constants used for properties of type CRType.
            </summary>
        </member>
        <member name="F:Amazon.Batch.CRType.EC2">
            <summary>
            Constant EC2 for CRType
            </summary>
        </member>
        <member name="F:Amazon.Batch.CRType.FARGATE">
            <summary>
            Constant FARGATE for CRType
            </summary>
        </member>
        <member name="F:Amazon.Batch.CRType.FARGATE_SPOT">
            <summary>
            Constant FARGATE_SPOT for CRType
            </summary>
        </member>
        <member name="F:Amazon.Batch.CRType.SPOT">
            <summary>
            Constant SPOT for CRType
            </summary>
        </member>
        <member name="M:Amazon.Batch.CRType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.CRType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.CRType.op_Implicit(System.String)~Amazon.Batch.CRType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.CRUpdateAllocationStrategy">
            <summary>
            Constants used for properties of type CRUpdateAllocationStrategy.
            </summary>
        </member>
        <member name="F:Amazon.Batch.CRUpdateAllocationStrategy.BEST_FIT_PROGRESSIVE">
            <summary>
            Constant BEST_FIT_PROGRESSIVE for CRUpdateAllocationStrategy
            </summary>
        </member>
        <member name="F:Amazon.Batch.CRUpdateAllocationStrategy.SPOT_CAPACITY_OPTIMIZED">
            <summary>
            Constant SPOT_CAPACITY_OPTIMIZED for CRUpdateAllocationStrategy
            </summary>
        </member>
        <member name="F:Amazon.Batch.CRUpdateAllocationStrategy.SPOT_PRICE_CAPACITY_OPTIMIZED">
            <summary>
            Constant SPOT_PRICE_CAPACITY_OPTIMIZED for CRUpdateAllocationStrategy
            </summary>
        </member>
        <member name="M:Amazon.Batch.CRUpdateAllocationStrategy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.CRUpdateAllocationStrategy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.CRUpdateAllocationStrategy.op_Implicit(System.String)~Amazon.Batch.CRUpdateAllocationStrategy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.DeviceCgroupPermission">
            <summary>
            Constants used for properties of type DeviceCgroupPermission.
            </summary>
        </member>
        <member name="F:Amazon.Batch.DeviceCgroupPermission.MKNOD">
            <summary>
            Constant MKNOD for DeviceCgroupPermission
            </summary>
        </member>
        <member name="F:Amazon.Batch.DeviceCgroupPermission.READ">
            <summary>
            Constant READ for DeviceCgroupPermission
            </summary>
        </member>
        <member name="F:Amazon.Batch.DeviceCgroupPermission.WRITE">
            <summary>
            Constant WRITE for DeviceCgroupPermission
            </summary>
        </member>
        <member name="M:Amazon.Batch.DeviceCgroupPermission.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.DeviceCgroupPermission.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.DeviceCgroupPermission.op_Implicit(System.String)~Amazon.Batch.DeviceCgroupPermission">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.EFSAuthorizationConfigIAM">
            <summary>
            Constants used for properties of type EFSAuthorizationConfigIAM.
            </summary>
        </member>
        <member name="F:Amazon.Batch.EFSAuthorizationConfigIAM.DISABLED">
            <summary>
            Constant DISABLED for EFSAuthorizationConfigIAM
            </summary>
        </member>
        <member name="F:Amazon.Batch.EFSAuthorizationConfigIAM.ENABLED">
            <summary>
            Constant ENABLED for EFSAuthorizationConfigIAM
            </summary>
        </member>
        <member name="M:Amazon.Batch.EFSAuthorizationConfigIAM.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.EFSAuthorizationConfigIAM.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.EFSAuthorizationConfigIAM.op_Implicit(System.String)~Amazon.Batch.EFSAuthorizationConfigIAM">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.EFSTransitEncryption">
            <summary>
            Constants used for properties of type EFSTransitEncryption.
            </summary>
        </member>
        <member name="F:Amazon.Batch.EFSTransitEncryption.DISABLED">
            <summary>
            Constant DISABLED for EFSTransitEncryption
            </summary>
        </member>
        <member name="F:Amazon.Batch.EFSTransitEncryption.ENABLED">
            <summary>
            Constant ENABLED for EFSTransitEncryption
            </summary>
        </member>
        <member name="M:Amazon.Batch.EFSTransitEncryption.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.EFSTransitEncryption.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.EFSTransitEncryption.op_Implicit(System.String)~Amazon.Batch.EFSTransitEncryption">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.JobDefinitionType">
            <summary>
            Constants used for properties of type JobDefinitionType.
            </summary>
        </member>
        <member name="F:Amazon.Batch.JobDefinitionType.Container">
            <summary>
            Constant Container for JobDefinitionType
            </summary>
        </member>
        <member name="F:Amazon.Batch.JobDefinitionType.Multinode">
            <summary>
            Constant Multinode for JobDefinitionType
            </summary>
        </member>
        <member name="M:Amazon.Batch.JobDefinitionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.JobDefinitionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.JobDefinitionType.op_Implicit(System.String)~Amazon.Batch.JobDefinitionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.JobStateTimeLimitActionsAction">
            <summary>
            Constants used for properties of type JobStateTimeLimitActionsAction.
            </summary>
        </member>
        <member name="F:Amazon.Batch.JobStateTimeLimitActionsAction.CANCEL">
            <summary>
            Constant CANCEL for JobStateTimeLimitActionsAction
            </summary>
        </member>
        <member name="M:Amazon.Batch.JobStateTimeLimitActionsAction.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.JobStateTimeLimitActionsAction.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.JobStateTimeLimitActionsAction.op_Implicit(System.String)~Amazon.Batch.JobStateTimeLimitActionsAction">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.JobStateTimeLimitActionsState">
            <summary>
            Constants used for properties of type JobStateTimeLimitActionsState.
            </summary>
        </member>
        <member name="F:Amazon.Batch.JobStateTimeLimitActionsState.RUNNABLE">
            <summary>
            Constant RUNNABLE for JobStateTimeLimitActionsState
            </summary>
        </member>
        <member name="M:Amazon.Batch.JobStateTimeLimitActionsState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.JobStateTimeLimitActionsState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.JobStateTimeLimitActionsState.op_Implicit(System.String)~Amazon.Batch.JobStateTimeLimitActionsState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.JobStatus">
            <summary>
            Constants used for properties of type JobStatus.
            </summary>
        </member>
        <member name="F:Amazon.Batch.JobStatus.FAILED">
            <summary>
            Constant FAILED for JobStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.JobStatus.PENDING">
            <summary>
            Constant PENDING for JobStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.JobStatus.RUNNABLE">
            <summary>
            Constant RUNNABLE for JobStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.JobStatus.RUNNING">
            <summary>
            Constant RUNNING for JobStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.JobStatus.STARTING">
            <summary>
            Constant STARTING for JobStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.JobStatus.SUBMITTED">
            <summary>
            Constant SUBMITTED for JobStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.JobStatus.SUCCEEDED">
            <summary>
            Constant SUCCEEDED for JobStatus
            </summary>
        </member>
        <member name="M:Amazon.Batch.JobStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.JobStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.JobStatus.op_Implicit(System.String)~Amazon.Batch.JobStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.JQState">
            <summary>
            Constants used for properties of type JQState.
            </summary>
        </member>
        <member name="F:Amazon.Batch.JQState.DISABLED">
            <summary>
            Constant DISABLED for JQState
            </summary>
        </member>
        <member name="F:Amazon.Batch.JQState.ENABLED">
            <summary>
            Constant ENABLED for JQState
            </summary>
        </member>
        <member name="M:Amazon.Batch.JQState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.JQState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.JQState.op_Implicit(System.String)~Amazon.Batch.JQState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.JQStatus">
            <summary>
            Constants used for properties of type JQStatus.
            </summary>
        </member>
        <member name="F:Amazon.Batch.JQStatus.CREATING">
            <summary>
            Constant CREATING for JQStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.JQStatus.DELETED">
            <summary>
            Constant DELETED for JQStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.JQStatus.DELETING">
            <summary>
            Constant DELETING for JQStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.JQStatus.INVALID">
            <summary>
            Constant INVALID for JQStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.JQStatus.UPDATING">
            <summary>
            Constant UPDATING for JQStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.JQStatus.VALID">
            <summary>
            Constant VALID for JQStatus
            </summary>
        </member>
        <member name="M:Amazon.Batch.JQStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.JQStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.JQStatus.op_Implicit(System.String)~Amazon.Batch.JQStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.LogDriver">
            <summary>
            Constants used for properties of type LogDriver.
            </summary>
        </member>
        <member name="F:Amazon.Batch.LogDriver.Awslogs">
            <summary>
            Constant Awslogs for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.Batch.LogDriver.Fluentd">
            <summary>
            Constant Fluentd for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.Batch.LogDriver.Gelf">
            <summary>
            Constant Gelf for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.Batch.LogDriver.Journald">
            <summary>
            Constant Journald for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.Batch.LogDriver.JsonFile">
            <summary>
            Constant JsonFile for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.Batch.LogDriver.Splunk">
            <summary>
            Constant Splunk for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.Batch.LogDriver.Syslog">
            <summary>
            Constant Syslog for LogDriver
            </summary>
        </member>
        <member name="M:Amazon.Batch.LogDriver.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.LogDriver.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.LogDriver.op_Implicit(System.String)~Amazon.Batch.LogDriver">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.OrchestrationType">
            <summary>
            Constants used for properties of type OrchestrationType.
            </summary>
        </member>
        <member name="F:Amazon.Batch.OrchestrationType.ECS">
            <summary>
            Constant ECS for OrchestrationType
            </summary>
        </member>
        <member name="F:Amazon.Batch.OrchestrationType.EKS">
            <summary>
            Constant EKS for OrchestrationType
            </summary>
        </member>
        <member name="M:Amazon.Batch.OrchestrationType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.OrchestrationType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.OrchestrationType.op_Implicit(System.String)~Amazon.Batch.OrchestrationType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.PlatformCapability">
            <summary>
            Constants used for properties of type PlatformCapability.
            </summary>
        </member>
        <member name="F:Amazon.Batch.PlatformCapability.EC2">
            <summary>
            Constant EC2 for PlatformCapability
            </summary>
        </member>
        <member name="F:Amazon.Batch.PlatformCapability.FARGATE">
            <summary>
            Constant FARGATE for PlatformCapability
            </summary>
        </member>
        <member name="M:Amazon.Batch.PlatformCapability.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.PlatformCapability.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.PlatformCapability.op_Implicit(System.String)~Amazon.Batch.PlatformCapability">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.ResourceType">
            <summary>
            Constants used for properties of type ResourceType.
            </summary>
        </member>
        <member name="F:Amazon.Batch.ResourceType.GPU">
            <summary>
            Constant GPU for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.Batch.ResourceType.MEMORY">
            <summary>
            Constant MEMORY for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.Batch.ResourceType.VCPU">
            <summary>
            Constant VCPU for ResourceType
            </summary>
        </member>
        <member name="M:Amazon.Batch.ResourceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.ResourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.ResourceType.op_Implicit(System.String)~Amazon.Batch.ResourceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.RetryAction">
            <summary>
            Constants used for properties of type RetryAction.
            </summary>
        </member>
        <member name="F:Amazon.Batch.RetryAction.EXIT">
            <summary>
            Constant EXIT for RetryAction
            </summary>
        </member>
        <member name="F:Amazon.Batch.RetryAction.RETRY">
            <summary>
            Constant RETRY for RetryAction
            </summary>
        </member>
        <member name="M:Amazon.Batch.RetryAction.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.RetryAction.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.RetryAction.op_Implicit(System.String)~Amazon.Batch.RetryAction">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.AmazonBatchClient">
             <summary>
             <para>Implementation for accessing Batch</para>
            
             Batch 
             <para>
             Using Batch, you can run batch computing workloads on the Amazon Web Services Cloud.
             Batch computing is a common means for developers, scientists, and engineers to access
             large amounts of compute resources. Batch uses the advantages of the batch computing
             to remove the undifferentiated heavy lifting of configuring and managing required
             infrastructure. At the same time, it also adopts a familiar batch computing software
             approach. You can use Batch to efficiently provision resources, and work toward eliminating
             capacity constraints, reducing your overall compute costs, and delivering results
             more quickly.
             </para>
              
             <para>
             As a fully managed service, Batch can run batch computing workloads of any scale.
             Batch automatically provisions compute resources and optimizes workload distribution
             based on the quantity and scale of your specific workloads. With Batch, there's no
             need to install or manage batch computing software. This means that you can focus
             on analyzing results and solving your specific problems instead.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor">
             <summary>
             Constructs AmazonBatchClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonBatchClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor(Amazon.Batch.AmazonBatchConfig)">
             <summary>
             Constructs AmazonBatchClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonBatchClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonBatchClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonBatchClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.Batch.AmazonBatchConfig)">
            <summary>
            Constructs AmazonBatchClient with AWS Credentials and an
            AmazonBatchClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonBatchClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonBatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonBatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor(System.String,System.String,Amazon.Batch.AmazonBatchConfig)">
            <summary>
            Constructs AmazonBatchClient with AWS Access Key ID, AWS Secret Key and an
            AmazonBatchClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonBatchClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonBatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonBatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor(System.String,System.String,System.String,Amazon.Batch.AmazonBatchConfig)">
            <summary>
            Constructs AmazonBatchClient with AWS Access Key ID, AWS Secret Key and an
            AmazonBatchClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonBatchClient Configuration Object</param>
        </member>
        <member name="P:Amazon.Batch.AmazonBatchClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.Batch.AmazonBatchClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.CancelJobAsync(Amazon.Batch.Model.CancelJobRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels a job in an Batch job queue. Jobs that are in a <c>SUBMITTED</c>, <c>PENDING</c>,
            or <c>RUNNABLE</c> state are cancelled and the job status is updated to <c>FAILED</c>.
            
             <note> 
            <para>
            A <c>PENDING</c> job is canceled after all dependency jobs are completed. Therefore,
            it may take longer than expected to cancel a job in <c>PENDING</c> status.
            </para>
             
            <para>
            When you try to cancel an array parent job in <c>PENDING</c>, Batch attempts to cancel
            all child jobs. The array parent job is canceled when all child jobs are completed.
            </para>
             </note> 
            <para>
            Jobs that progressed to the <c>STARTING</c> or <c>RUNNING</c> state aren't canceled.
            However, the API operation still succeeds, even if no job is canceled. These jobs
            must be terminated with the <a>TerminateJob</a> operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CancelJob service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/CancelJob">REST API Reference for CancelJob Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.CreateComputeEnvironmentAsync(Amazon.Batch.Model.CreateComputeEnvironmentRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Batch compute environment. You can create <c>MANAGED</c> or <c>UNMANAGED</c>
            compute environments. <c>MANAGED</c> compute environments can use Amazon EC2 or Fargate
            resources. <c>UNMANAGED</c> compute environments can only use EC2 resources.
            
             
            <para>
            In a managed compute environment, Batch manages the capacity and instance types of
            the compute resources within the environment. This is based on the compute resource
            specification that you define or the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html">launch
            template</a> that you specify when you create the compute environment. Either, you
            can choose to use EC2 On-Demand Instances and EC2 Spot Instances. Or, you can use
            Fargate and Fargate Spot capacity in your managed compute environment. You can optionally
            set a maximum price so that Spot Instances only launch when the Spot Instance price
            is less than a specified percentage of the On-Demand price.
            </para>
             <note> 
            <para>
            Multi-node parallel jobs aren't supported on Spot Instances.
            </para>
             </note> 
            <para>
            In an unmanaged compute environment, you can manage your own EC2 compute resources
            and have flexibility with how you configure your compute resources. For example, you
            can use custom AMIs. However, you must verify that each of your AMIs meet the Amazon
            ECS container instance AMI specification. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container_instance_AMIs.html">container
            instance AMIs</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            After you created your unmanaged compute environment, you can use the <a>DescribeComputeEnvironments</a>
            operation to find the Amazon ECS cluster that's associated with it. Then, launch your
            container instances into that Amazon ECS cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_container_instance.html">Launching
            an Amazon ECS container instance</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             <note> 
            <para>
            To create a compute environment that uses EKS resources, the caller must have permissions
            to call <c>eks:DescribeCluster</c>.
            </para>
             </note> <note> 
            <para>
            Batch doesn't automatically upgrade the AMIs in a compute environment after it's created.
            For example, it also doesn't update the AMIs in your compute environment when a newer
            version of the Amazon ECS optimized AMI is available. You're responsible for the management
            of the guest operating system. This includes any updates and security patches. You're
            also responsible for any additional application software or utilities that you install
            on the compute resources. There are two ways to use a new AMI for your Batch jobs.
            The original method is to complete these steps:
            </para>
             <ol> <li> 
            <para>
            Create a new compute environment with the new AMI.
            </para>
             </li> <li> 
            <para>
            Add the compute environment to an existing job queue.
            </para>
             </li> <li> 
            <para>
            Remove the earlier compute environment from your job queue.
            </para>
             </li> <li> 
            <para>
            Delete the earlier compute environment.
            </para>
             </li> </ol> 
            <para>
            In April 2022, Batch added enhanced support for updating compute environments. For
            more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a>. To use the enhanced updating of compute environments to
            update AMIs, follow these rules:
            </para>
             <ul> <li> 
            <para>
            Either don't set the service role (<c>serviceRole</c>) parameter or set it to the
            <b>AWSBatchServiceRole</b> service-linked role.
            </para>
             </li> <li> 
            <para>
            Set the allocation strategy (<c>allocationStrategy</c>) parameter to <c>BEST_FIT_PROGRESSIVE</c>,
            <c>SPOT_CAPACITY_OPTIMIZED</c>, or <c>SPOT_PRICE_CAPACITY_OPTIMIZED</c>.
            </para>
             </li> <li> 
            <para>
            Set the update to latest image version (<c>updateToLatestImageVersion</c>) parameter
            to <c>true</c>. The <c>updateToLatestImageVersion</c> parameter is used when you update
            a compute environment. This parameter is ignored when you create a compute environment.
            </para>
             </li> <li> 
            <para>
            Don't specify an AMI ID in <c>imageId</c>, <c>imageIdOverride</c> (in <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_Ec2Configuration.html">
            <c>ec2Configuration</c> </a>), or in the launch template (<c>launchTemplate</c>).
            In that case, Batch selects the latest Amazon ECS optimized AMI that's supported by
            Batch at the time the infrastructure update is initiated. Alternatively, you can specify
            the AMI ID in the <c>imageId</c> or <c>imageIdOverride</c> parameters, or the launch
            template identified by the <c>LaunchTemplate</c> properties. Changing any of these
            properties starts an infrastructure update. If the AMI ID is specified in the launch
            template, it can't be replaced by specifying an AMI ID in either the <c>imageId</c>
            or <c>imageIdOverride</c> parameters. It can only be replaced by specifying a different
            launch template, or if the launch template version is set to <c>$Default</c> or <c>$Latest</c>,
            by setting either a new default version for the launch template (if <c>$Default</c>)
            or by adding a new version to the launch template (if <c>$Latest</c>).
            </para>
             </li> </ul> 
            <para>
            If these rules are followed, any update that starts an infrastructure update causes
            the AMI ID to be re-selected. If the <c>version</c> setting in the launch template
            (<c>launchTemplate</c>) is set to <c>$Latest</c> or <c>$Default</c>, the latest or
            default version of the launch template is evaluated up at the time of the infrastructure
            update, even if the <c>launchTemplate</c> wasn't updated.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateComputeEnvironment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateComputeEnvironment service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/CreateComputeEnvironment">REST API Reference for CreateComputeEnvironment Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.CreateJobQueueAsync(Amazon.Batch.Model.CreateJobQueueRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Batch job queue. When you create a job queue, you associate one or more
            compute environments to the queue and assign an order of preference for the compute
            environments.
            
             
            <para>
            You also set a priority to the job queue that determines the order that the Batch
            scheduler places jobs onto its associated compute environments. For example, if a
            compute environment is associated with more than one job queue, the job queue with
            a higher priority is given preference for scheduling jobs to that compute environment.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateJobQueue service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateJobQueue service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/CreateJobQueue">REST API Reference for CreateJobQueue Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.CreateSchedulingPolicyAsync(Amazon.Batch.Model.CreateSchedulingPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Batch scheduling policy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSchedulingPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSchedulingPolicy service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/CreateSchedulingPolicy">REST API Reference for CreateSchedulingPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.DeleteComputeEnvironmentAsync(Amazon.Batch.Model.DeleteComputeEnvironmentRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an Batch compute environment.
            
             
            <para>
            Before you can delete a compute environment, you must set its state to <c>DISABLED</c>
            with the <a>UpdateComputeEnvironment</a> API operation and disassociate it from any
            job queues with the <a>UpdateJobQueue</a> API operation. Compute environments that
            use Fargate resources must terminate all active jobs on that compute environment before
            deleting the compute environment. If this isn't done, the compute environment enters
            an invalid state.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteComputeEnvironment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteComputeEnvironment service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DeleteComputeEnvironment">REST API Reference for DeleteComputeEnvironment Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.DeleteJobQueueAsync(Amazon.Batch.Model.DeleteJobQueueRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified job queue. You must first disable submissions for a queue with
            the <a>UpdateJobQueue</a> operation. All jobs in the queue are eventually terminated
            when you delete a job queue. The jobs are terminated at a rate of about 16 jobs each
            second.
            
             
            <para>
            It's not necessary to disassociate compute environments from a queue before submitting
            a <c>DeleteJobQueue</c> request.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteJobQueue service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteJobQueue service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DeleteJobQueue">REST API Reference for DeleteJobQueue Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.DeleteSchedulingPolicyAsync(Amazon.Batch.Model.DeleteSchedulingPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified scheduling policy.
            
             
            <para>
            You can't delete a scheduling policy that's used in any job queues.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSchedulingPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSchedulingPolicy service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DeleteSchedulingPolicy">REST API Reference for DeleteSchedulingPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.DeregisterJobDefinitionAsync(Amazon.Batch.Model.DeregisterJobDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters an Batch job definition. Job definitions are permanently deleted after
            180 days.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterJobDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterJobDefinition service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DeregisterJobDefinition">REST API Reference for DeregisterJobDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.DescribeComputeEnvironmentsAsync(Amazon.Batch.Model.DescribeComputeEnvironmentsRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your compute environments.
            
             
            <para>
            If you're using an unmanaged compute environment, you can use the <c>DescribeComputeEnvironment</c>
            operation to determine the <c>ecsClusterArn</c> that you launch your Amazon ECS container
            instances into.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeComputeEnvironments service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeComputeEnvironments service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DescribeComputeEnvironments">REST API Reference for DescribeComputeEnvironments Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.DescribeJobDefinitionsAsync(Amazon.Batch.Model.DescribeJobDefinitionsRequest,System.Threading.CancellationToken)">
            <summary>
            Describes a list of job definitions. You can specify a <c>status</c> (such as <c>ACTIVE</c>)
            to only return job definitions that match that status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeJobDefinitions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeJobDefinitions service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DescribeJobDefinitions">REST API Reference for DescribeJobDefinitions Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.DescribeJobQueuesAsync(Amazon.Batch.Model.DescribeJobQueuesRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your job queues.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeJobQueues service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeJobQueues service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DescribeJobQueues">REST API Reference for DescribeJobQueues Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.DescribeJobsAsync(Amazon.Batch.Model.DescribeJobsRequest,System.Threading.CancellationToken)">
            <summary>
            Describes a list of Batch jobs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeJobs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeJobs service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DescribeJobs">REST API Reference for DescribeJobs Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.DescribeSchedulingPoliciesAsync(Amazon.Batch.Model.DescribeSchedulingPoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your scheduling policies.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSchedulingPolicies service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSchedulingPolicies service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DescribeSchedulingPolicies">REST API Reference for DescribeSchedulingPolicies Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.GetJobQueueSnapshotAsync(Amazon.Batch.Model.GetJobQueueSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Provides a list of the first 100 <c>RUNNABLE</c> jobs associated to a single job queue.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetJobQueueSnapshot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetJobQueueSnapshot service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/GetJobQueueSnapshot">REST API Reference for GetJobQueueSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.ListJobsAsync(Amazon.Batch.Model.ListJobsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of Batch jobs.
            
             
            <para>
            You must specify only one of the following items:
            </para>
             <ul> <li> 
            <para>
            A job queue ID to return a list of jobs in that job queue
            </para>
             </li> <li> 
            <para>
            A multi-node parallel job ID to return a list of nodes for that job
            </para>
             </li> <li> 
            <para>
            An array job ID to return a list of the children for that job
            </para>
             </li> </ul> 
            <para>
            You can filter the results by job status with the <c>jobStatus</c> parameter. If you
            don't specify a status, only <c>RUNNING</c> jobs are returned.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListJobs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListJobs service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/ListJobs">REST API Reference for ListJobs Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.ListSchedulingPoliciesAsync(Amazon.Batch.Model.ListSchedulingPoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of Batch scheduling policies.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSchedulingPolicies service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSchedulingPolicies service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/ListSchedulingPolicies">REST API Reference for ListSchedulingPolicies Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.ListTagsForResourceAsync(Amazon.Batch.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the tags for an Batch resource. Batch resources that support tags are compute
            environments, jobs, job definitions, job queues, and scheduling policies. ARNs for
            child jobs of array and multi-node parallel (MNP) jobs aren't supported.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.RegisterJobDefinitionAsync(Amazon.Batch.Model.RegisterJobDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Registers an Batch job definition.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterJobDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterJobDefinition service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/RegisterJobDefinition">REST API Reference for RegisterJobDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.SubmitJobAsync(Amazon.Batch.Model.SubmitJobRequest,System.Threading.CancellationToken)">
            <summary>
            Submits an Batch job from a job definition. Parameters that are specified during <a>SubmitJob</a>
            override parameters defined in the job definition. vCPU and memory requirements that
            are specified in the <c>resourceRequirements</c> objects in the job definition are
            the exception. They can't be overridden this way using the <c>memory</c> and <c>vcpus</c>
            parameters. Rather, you must specify updates to job definition parameters in a <c>resourceRequirements</c>
            object that's included in the <c>containerOverrides</c> parameter.
            
             <note> 
            <para>
            Job queues with a scheduling policy are limited to 500 active fair share identifiers
            at a time. 
            </para>
             </note> <important> 
            <para>
            Jobs that run on Fargate resources can't be guaranteed to run for more than 14 days.
            This is because, after 14 days, Fargate resources might become unavailable and job
            might be terminated.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SubmitJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SubmitJob service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/SubmitJob">REST API Reference for SubmitJob Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.TagResourceAsync(Amazon.Batch.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Associates the specified tags to a resource with the specified <c>resourceArn</c>.
            If existing tags on a resource aren't specified in the request parameters, they aren't
            changed. When a resource is deleted, the tags that are associated with that resource
            are deleted as well. Batch resources that support tags are compute environments, jobs,
            job definitions, job queues, and scheduling policies. ARNs for child jobs of array
            and multi-node parallel (MNP) jobs aren't supported.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.TerminateJobAsync(Amazon.Batch.Model.TerminateJobRequest,System.Threading.CancellationToken)">
            <summary>
            Terminates a job in a job queue. Jobs that are in the <c>STARTING</c> or <c>RUNNING</c>
            state are terminated, which causes them to transition to <c>FAILED</c>. Jobs that
            have not progressed to the <c>STARTING</c> state are cancelled.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TerminateJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TerminateJob service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/TerminateJob">REST API Reference for TerminateJob Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.UntagResourceAsync(Amazon.Batch.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes specified tags from an Batch resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.UpdateComputeEnvironmentAsync(Amazon.Batch.Model.UpdateComputeEnvironmentRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an Batch compute environment.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateComputeEnvironment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateComputeEnvironment service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/UpdateComputeEnvironment">REST API Reference for UpdateComputeEnvironment Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.UpdateJobQueueAsync(Amazon.Batch.Model.UpdateJobQueueRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a job queue.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateJobQueue service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateJobQueue service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/UpdateJobQueue">REST API Reference for UpdateJobQueue Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.UpdateSchedulingPolicyAsync(Amazon.Batch.Model.UpdateSchedulingPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a scheduling policy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSchedulingPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSchedulingPolicy service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/UpdateSchedulingPolicy">REST API Reference for UpdateSchedulingPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.Batch.IAmazonBatch">
             <summary>
             <para>Interface for accessing Batch</para>
            
             Batch 
             <para>
             Using Batch, you can run batch computing workloads on the Amazon Web Services Cloud.
             Batch computing is a common means for developers, scientists, and engineers to access
             large amounts of compute resources. Batch uses the advantages of the batch computing
             to remove the undifferentiated heavy lifting of configuring and managing required
             infrastructure. At the same time, it also adopts a familiar batch computing software
             approach. You can use Batch to efficiently provision resources, and work toward eliminating
             capacity constraints, reducing your overall compute costs, and delivering results
             more quickly.
             </para>
              
             <para>
             As a fully managed service, Batch can run batch computing workloads of any scale.
             Batch automatically provisions compute resources and optimizes workload distribution
             based on the quantity and scale of your specific workloads. With Batch, there's no
             need to install or manage batch computing software. This means that you can focus
             on analyzing results and solving your specific problems instead.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.Batch.IAmazonBatch.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.CancelJobAsync(Amazon.Batch.Model.CancelJobRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels a job in an Batch job queue. Jobs that are in a <c>SUBMITTED</c>, <c>PENDING</c>,
            or <c>RUNNABLE</c> state are cancelled and the job status is updated to <c>FAILED</c>.
            
             <note> 
            <para>
            A <c>PENDING</c> job is canceled after all dependency jobs are completed. Therefore,
            it may take longer than expected to cancel a job in <c>PENDING</c> status.
            </para>
             
            <para>
            When you try to cancel an array parent job in <c>PENDING</c>, Batch attempts to cancel
            all child jobs. The array parent job is canceled when all child jobs are completed.
            </para>
             </note> 
            <para>
            Jobs that progressed to the <c>STARTING</c> or <c>RUNNING</c> state aren't canceled.
            However, the API operation still succeeds, even if no job is canceled. These jobs
            must be terminated with the <a>TerminateJob</a> operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CancelJob service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/CancelJob">REST API Reference for CancelJob Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.CreateComputeEnvironmentAsync(Amazon.Batch.Model.CreateComputeEnvironmentRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Batch compute environment. You can create <c>MANAGED</c> or <c>UNMANAGED</c>
            compute environments. <c>MANAGED</c> compute environments can use Amazon EC2 or Fargate
            resources. <c>UNMANAGED</c> compute environments can only use EC2 resources.
            
             
            <para>
            In a managed compute environment, Batch manages the capacity and instance types of
            the compute resources within the environment. This is based on the compute resource
            specification that you define or the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html">launch
            template</a> that you specify when you create the compute environment. Either, you
            can choose to use EC2 On-Demand Instances and EC2 Spot Instances. Or, you can use
            Fargate and Fargate Spot capacity in your managed compute environment. You can optionally
            set a maximum price so that Spot Instances only launch when the Spot Instance price
            is less than a specified percentage of the On-Demand price.
            </para>
             <note> 
            <para>
            Multi-node parallel jobs aren't supported on Spot Instances.
            </para>
             </note> 
            <para>
            In an unmanaged compute environment, you can manage your own EC2 compute resources
            and have flexibility with how you configure your compute resources. For example, you
            can use custom AMIs. However, you must verify that each of your AMIs meet the Amazon
            ECS container instance AMI specification. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container_instance_AMIs.html">container
            instance AMIs</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            After you created your unmanaged compute environment, you can use the <a>DescribeComputeEnvironments</a>
            operation to find the Amazon ECS cluster that's associated with it. Then, launch your
            container instances into that Amazon ECS cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_container_instance.html">Launching
            an Amazon ECS container instance</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             <note> 
            <para>
            To create a compute environment that uses EKS resources, the caller must have permissions
            to call <c>eks:DescribeCluster</c>.
            </para>
             </note> <note> 
            <para>
            Batch doesn't automatically upgrade the AMIs in a compute environment after it's created.
            For example, it also doesn't update the AMIs in your compute environment when a newer
            version of the Amazon ECS optimized AMI is available. You're responsible for the management
            of the guest operating system. This includes any updates and security patches. You're
            also responsible for any additional application software or utilities that you install
            on the compute resources. There are two ways to use a new AMI for your Batch jobs.
            The original method is to complete these steps:
            </para>
             <ol> <li> 
            <para>
            Create a new compute environment with the new AMI.
            </para>
             </li> <li> 
            <para>
            Add the compute environment to an existing job queue.
            </para>
             </li> <li> 
            <para>
            Remove the earlier compute environment from your job queue.
            </para>
             </li> <li> 
            <para>
            Delete the earlier compute environment.
            </para>
             </li> </ol> 
            <para>
            In April 2022, Batch added enhanced support for updating compute environments. For
            more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating
            compute environments</a>. To use the enhanced updating of compute environments to
            update AMIs, follow these rules:
            </para>
             <ul> <li> 
            <para>
            Either don't set the service role (<c>serviceRole</c>) parameter or set it to the
            <b>AWSBatchServiceRole</b> service-linked role.
            </para>
             </li> <li> 
            <para>
            Set the allocation strategy (<c>allocationStrategy</c>) parameter to <c>BEST_FIT_PROGRESSIVE</c>,
            <c>SPOT_CAPACITY_OPTIMIZED</c>, or <c>SPOT_PRICE_CAPACITY_OPTIMIZED</c>.
            </para>
             </li> <li> 
            <para>
            Set the update to latest image version (<c>updateToLatestImageVersion</c>) parameter
            to <c>true</c>. The <c>updateToLatestImageVersion</c> parameter is used when you update
            a compute environment. This parameter is ignored when you create a compute environment.
            </para>
             </li> <li> 
            <para>
            Don't specify an AMI ID in <c>imageId</c>, <c>imageIdOverride</c> (in <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_Ec2Configuration.html">
            <c>ec2Configuration</c> </a>), or in the launch template (<c>launchTemplate</c>).
            In that case, Batch selects the latest Amazon ECS optimized AMI that's supported by
            Batch at the time the infrastructure update is initiated. Alternatively, you can specify
            the AMI ID in the <c>imageId</c> or <c>imageIdOverride</c> parameters, or the launch
            template identified by the <c>LaunchTemplate</c> properties. Changing any of these
            properties starts an infrastructure update. If the AMI ID is specified in the launch
            template, it can't be replaced by specifying an AMI ID in either the <c>imageId</c>
            or <c>imageIdOverride</c> parameters. It can only be replaced by specifying a different
            launch template, or if the launch template version is set to <c>$Default</c> or <c>$Latest</c>,
            by setting either a new default version for the launch template (if <c>$Default</c>)
            or by adding a new version to the launch template (if <c>$Latest</c>).
            </para>
             </li> </ul> 
            <para>
            If these rules are followed, any update that starts an infrastructure update causes
            the AMI ID to be re-selected. If the <c>version</c> setting in the launch template
            (<c>launchTemplate</c>) is set to <c>$Latest</c> or <c>$Default</c>, the latest or
            default version of the launch template is evaluated up at the time of the infrastructure
            update, even if the <c>launchTemplate</c> wasn't updated.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateComputeEnvironment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateComputeEnvironment service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/CreateComputeEnvironment">REST API Reference for CreateComputeEnvironment Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.CreateJobQueueAsync(Amazon.Batch.Model.CreateJobQueueRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Batch job queue. When you create a job queue, you associate one or more
            compute environments to the queue and assign an order of preference for the compute
            environments.
            
             
            <para>
            You also set a priority to the job queue that determines the order that the Batch
            scheduler places jobs onto its associated compute environments. For example, if a
            compute environment is associated with more than one job queue, the job queue with
            a higher priority is given preference for scheduling jobs to that compute environment.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateJobQueue service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateJobQueue service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/CreateJobQueue">REST API Reference for CreateJobQueue Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.CreateSchedulingPolicyAsync(Amazon.Batch.Model.CreateSchedulingPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Batch scheduling policy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSchedulingPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSchedulingPolicy service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/CreateSchedulingPolicy">REST API Reference for CreateSchedulingPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.DeleteComputeEnvironmentAsync(Amazon.Batch.Model.DeleteComputeEnvironmentRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an Batch compute environment.
            
             
            <para>
            Before you can delete a compute environment, you must set its state to <c>DISABLED</c>
            with the <a>UpdateComputeEnvironment</a> API operation and disassociate it from any
            job queues with the <a>UpdateJobQueue</a> API operation. Compute environments that
            use Fargate resources must terminate all active jobs on that compute environment before
            deleting the compute environment. If this isn't done, the compute environment enters
            an invalid state.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteComputeEnvironment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteComputeEnvironment service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DeleteComputeEnvironment">REST API Reference for DeleteComputeEnvironment Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.DeleteJobQueueAsync(Amazon.Batch.Model.DeleteJobQueueRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified job queue. You must first disable submissions for a queue with
            the <a>UpdateJobQueue</a> operation. All jobs in the queue are eventually terminated
            when you delete a job queue. The jobs are terminated at a rate of about 16 jobs each
            second.
            
             
            <para>
            It's not necessary to disassociate compute environments from a queue before submitting
            a <c>DeleteJobQueue</c> request.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteJobQueue service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteJobQueue service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DeleteJobQueue">REST API Reference for DeleteJobQueue Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.DeleteSchedulingPolicyAsync(Amazon.Batch.Model.DeleteSchedulingPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified scheduling policy.
            
             
            <para>
            You can't delete a scheduling policy that's used in any job queues.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSchedulingPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSchedulingPolicy service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DeleteSchedulingPolicy">REST API Reference for DeleteSchedulingPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.DeregisterJobDefinitionAsync(Amazon.Batch.Model.DeregisterJobDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters an Batch job definition. Job definitions are permanently deleted after
            180 days.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterJobDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterJobDefinition service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DeregisterJobDefinition">REST API Reference for DeregisterJobDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.DescribeComputeEnvironmentsAsync(Amazon.Batch.Model.DescribeComputeEnvironmentsRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your compute environments.
            
             
            <para>
            If you're using an unmanaged compute environment, you can use the <c>DescribeComputeEnvironment</c>
            operation to determine the <c>ecsClusterArn</c> that you launch your Amazon ECS container
            instances into.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeComputeEnvironments service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeComputeEnvironments service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DescribeComputeEnvironments">REST API Reference for DescribeComputeEnvironments Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.DescribeJobDefinitionsAsync(Amazon.Batch.Model.DescribeJobDefinitionsRequest,System.Threading.CancellationToken)">
            <summary>
            Describes a list of job definitions. You can specify a <c>status</c> (such as <c>ACTIVE</c>)
            to only return job definitions that match that status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeJobDefinitions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeJobDefinitions service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DescribeJobDefinitions">REST API Reference for DescribeJobDefinitions Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.DescribeJobQueuesAsync(Amazon.Batch.Model.DescribeJobQueuesRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your job queues.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeJobQueues service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeJobQueues service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DescribeJobQueues">REST API Reference for DescribeJobQueues Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.DescribeJobsAsync(Amazon.Batch.Model.DescribeJobsRequest,System.Threading.CancellationToken)">
            <summary>
            Describes a list of Batch jobs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeJobs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeJobs service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DescribeJobs">REST API Reference for DescribeJobs Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.DescribeSchedulingPoliciesAsync(Amazon.Batch.Model.DescribeSchedulingPoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your scheduling policies.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSchedulingPolicies service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSchedulingPolicies service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DescribeSchedulingPolicies">REST API Reference for DescribeSchedulingPolicies Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.GetJobQueueSnapshotAsync(Amazon.Batch.Model.GetJobQueueSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Provides a list of the first 100 <c>RUNNABLE</c> jobs associated to a single job queue.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetJobQueueSnapshot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetJobQueueSnapshot service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/GetJobQueueSnapshot">REST API Reference for GetJobQueueSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.ListJobsAsync(Amazon.Batch.Model.ListJobsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of Batch jobs.
            
             
            <para>
            You must specify only one of the following items:
            </para>
             <ul> <li> 
            <para>
            A job queue ID to return a list of jobs in that job queue
            </para>
             </li> <li> 
            <para>
            A multi-node parallel job ID to return a list of nodes for that job
            </para>
             </li> <li> 
            <para>
            An array job ID to return a list of the children for that job
            </para>
             </li> </ul> 
            <para>
            You can filter the results by job status with the <c>jobStatus</c> parameter. If you
            don't specify a status, only <c>RUNNING</c> jobs are returned.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListJobs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListJobs service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/ListJobs">REST API Reference for ListJobs Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.ListSchedulingPoliciesAsync(Amazon.Batch.Model.ListSchedulingPoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of Batch scheduling policies.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSchedulingPolicies service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSchedulingPolicies service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/ListSchedulingPolicies">REST API Reference for ListSchedulingPolicies Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.ListTagsForResourceAsync(Amazon.Batch.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the tags for an Batch resource. Batch resources that support tags are compute
            environments, jobs, job definitions, job queues, and scheduling policies. ARNs for
            child jobs of array and multi-node parallel (MNP) jobs aren't supported.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.RegisterJobDefinitionAsync(Amazon.Batch.Model.RegisterJobDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Registers an Batch job definition.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterJobDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterJobDefinition service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/RegisterJobDefinition">REST API Reference for RegisterJobDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.SubmitJobAsync(Amazon.Batch.Model.SubmitJobRequest,System.Threading.CancellationToken)">
            <summary>
            Submits an Batch job from a job definition. Parameters that are specified during <a>SubmitJob</a>
            override parameters defined in the job definition. vCPU and memory requirements that
            are specified in the <c>resourceRequirements</c> objects in the job definition are
            the exception. They can't be overridden this way using the <c>memory</c> and <c>vcpus</c>
            parameters. Rather, you must specify updates to job definition parameters in a <c>resourceRequirements</c>
            object that's included in the <c>containerOverrides</c> parameter.
            
             <note> 
            <para>
            Job queues with a scheduling policy are limited to 500 active fair share identifiers
            at a time. 
            </para>
             </note> <important> 
            <para>
            Jobs that run on Fargate resources can't be guaranteed to run for more than 14 days.
            This is because, after 14 days, Fargate resources might become unavailable and job
            might be terminated.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SubmitJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SubmitJob service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/SubmitJob">REST API Reference for SubmitJob Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.TagResourceAsync(Amazon.Batch.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Associates the specified tags to a resource with the specified <c>resourceArn</c>.
            If existing tags on a resource aren't specified in the request parameters, they aren't
            changed. When a resource is deleted, the tags that are associated with that resource
            are deleted as well. Batch resources that support tags are compute environments, jobs,
            job definitions, job queues, and scheduling policies. ARNs for child jobs of array
            and multi-node parallel (MNP) jobs aren't supported.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.TerminateJobAsync(Amazon.Batch.Model.TerminateJobRequest,System.Threading.CancellationToken)">
            <summary>
            Terminates a job in a job queue. Jobs that are in the <c>STARTING</c> or <c>RUNNING</c>
            state are terminated, which causes them to transition to <c>FAILED</c>. Jobs that
            have not progressed to the <c>STARTING</c> state are cancelled.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TerminateJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TerminateJob service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/TerminateJob">REST API Reference for TerminateJob Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.UntagResourceAsync(Amazon.Batch.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes specified tags from an Batch resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.UpdateComputeEnvironmentAsync(Amazon.Batch.Model.UpdateComputeEnvironmentRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an Batch compute environment.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateComputeEnvironment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateComputeEnvironment service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/UpdateComputeEnvironment">REST API Reference for UpdateComputeEnvironment Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.UpdateJobQueueAsync(Amazon.Batch.Model.UpdateJobQueueRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a job queue.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateJobQueue service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateJobQueue service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/UpdateJobQueue">REST API Reference for UpdateJobQueue Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.UpdateSchedulingPolicyAsync(Amazon.Batch.Model.UpdateSchedulingPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a scheduling policy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSchedulingPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSchedulingPolicy service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action. One example cause is using an
            action or resource on behalf of a user that doesn't have permissions to use the action
            or resource. Another cause is specifying an identifier that's not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/UpdateSchedulingPolicy">REST API Reference for UpdateSchedulingPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
