<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.Notifications</name>
    </assembly>
    <members>
        <member name="T:Amazon.Notifications.AmazonNotificationsConfig">
            <summary>
            Configuration for accessing Amazon Notifications service
            </summary>
        </member>
        <member name="P:Amazon.Notifications.AmazonNotificationsConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.Notifications.AmazonNotificationsConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.AmazonNotificationsConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.AmazonNotificationsConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.Notifications.AmazonNotificationsDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon Notifications service
            </summary>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            Notifications
            </summary>
        </member>
        <member name="P:Amazon.Notifications.AmazonNotificationsDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.AmazonNotificationsDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.AmazonNotificationsDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.AmazonNotificationsDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.AmazonNotificationsDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.AmazonNotificationsDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Endpoints.NotificationsEndpointParameters">
            <summary>
            Contains parameters used for resolving Notifications endpoints
            Parameters can be sourced from client config and service operations
            Used by internal NotificationsEndpointProvider and NotificationsEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.Notifications.Endpoints.NotificationsEndpointParameters.#ctor">
            <summary>
            NotificationsEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Endpoints.NotificationsEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Endpoints.NotificationsEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Endpoints.NotificationsEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="T:Amazon.Notifications.AmazonNotificationsException">
            <summary>
             Common exception for the Notifications service.
             </summary>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonNotificationsException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonNotificationsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonNotificationsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonNotificationsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonNotificationsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Notifications.Internal.AmazonNotificationsEndpointProvider">
            <summary>
            Amazon Notifications endpoint provider.
            Resolves endpoint for given set of NotificationsEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.Internal.AmazonNotificationsEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for NotificationsEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Internal.AmazonNotificationsEndpointResolver">
            <summary>
            Amazon Notifications endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for Notifications service requests.
            Collects values for NotificationsEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses NotificationsEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Internal.AmazonNotificationsMetadata">
            <summary>
            Service metadata for  Amazon Notifications service
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Internal.AmazonNotificationsMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Internal.AmazonNotificationsMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.AccessDeniedException">
            <summary>
            User does not have sufficient access to perform this action.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Notifications.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Notifications.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Notifications.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Notifications.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Notifications.Model.AssociateChannelRequest">
            <summary>
            Container for the parameters to the AssociateChannel operation.
            Associates a delivery <a href="https://docs.aws.amazon.com/notifications/latest/userguide/managing-delivery-channels.html">Channel</a>
            with a particular NotificationConfiguration. Supported Channels include AWS Chatbot,
            the AWS Console Mobile Application, and emails (notifications-contacts).
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.AssociateChannelRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the Channel to associate with the NotificationConfiguration.
            </para>
             
            <para>
            Supported ARNs include AWS Chatbot, the Console Mobile Application, and notifications-contacts.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.AssociateChannelRequest.NotificationConfigurationArn">
            <summary>
            Gets and sets the property NotificationConfigurationArn. 
            <para>
            The ARN of the NotificationConfiguration to associate with the Channel.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.AssociateChannelResponse">
            <summary>
            This is the response object from the AssociateChannel operation.
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.ConflictException">
            <summary>
            Updating or deleting a resource can cause an inconsistent state.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Notifications.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Notifications.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Notifications.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Notifications.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Notifications.Model.ConflictException.ResourceId">
            <summary>
            Gets and sets the property ResourceId. 
            <para>
            The resource ID that prompted the conflict error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.CreateEventRuleRequest">
            <summary>
            Container for the parameters to the CreateEventRule operation.
            Creates an <a href="https://docs.aws.amazon.com/notifications/latest/userguide/glossary.html">EventRule</a>
            that is associated with a specified Notification Configuration.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.CreateEventRuleRequest.EventPattern">
            <summary>
            Gets and sets the property EventPattern. 
            <para>
            An additional event pattern used to further filter the events this EventRule receives.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns.html">Amazon
            EventBridge event patterns</a> in the <i>Amazon EventBridge User Guide.</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.CreateEventRuleRequest.EventType">
            <summary>
            Gets and sets the property EventType. 
            <para>
            The event type to match.
            </para>
             
            <para>
            Must match one of the valid Amazon EventBridge event types. For example, EC2 Instance
            State-change Notification and AWS CloudWatch Alarm State Change. For more information,
            see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-service-event.html#eb-service-event-delivery-level">Event
            delivery from AWS services</a> in the <i>Amazon EventBridge User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.CreateEventRuleRequest.NotificationConfigurationArn">
            <summary>
            Gets and sets the property NotificationConfigurationArn. 
            <para>
            The Amazon Resource Name (ARN) of the NotificationConfiguration associated with this
            EventRule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.CreateEventRuleRequest.Regions">
            <summary>
            Gets and sets the property Regions. 
            <para>
            A list of AWS Regions that send events to this EventRule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.CreateEventRuleRequest.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The matched event source.
            </para>
             
            <para>
            Must match one of the valid EventBridge sources. Only AWS service sourced events are
            supported. For example, <c>aws.ec2</c> and <c>aws.cloudwatch</c>. For more information,
            see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-service-event.html#eb-service-event-delivery-level">Event
            delivery from AWS services</a> in the <i>Amazon EventBridge User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.CreateEventRuleResponse">
            <summary>
            This is the response object from the CreateEventRule operation.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.CreateEventRuleResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The ARN of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.CreateEventRuleResponse.NotificationConfigurationArn">
            <summary>
            Gets and sets the property NotificationConfigurationArn. 
            <para>
            The ARN of a NotificationConfiguration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.CreateEventRuleResponse.StatusSummaryByRegion">
            <summary>
            Gets and sets the property StatusSummaryByRegion. 
            <para>
            A list of an EventRule's status by Region. Regions are mapped to EventRuleStatusSummary.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.CreateNotificationConfigurationRequest">
            <summary>
            Container for the parameters to the CreateNotificationConfiguration operation.
            Creates a new NotificationConfiguration.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.CreateNotificationConfigurationRequest.AggregationDuration">
            <summary>
            Gets and sets the property AggregationDuration. 
            <para>
            The aggregation preference of the NotificationConfiguration.
            </para>
             <ul> <li> 
            <para>
            Values:
            </para>
             <ul> <li> 
            <para>
             <c>LONG</c> 
            </para>
             <ul> <li> 
            <para>
            Aggregate notifications for long periods of time (12 hours).
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>SHORT</c> 
            </para>
             <ul> <li> 
            <para>
            Aggregate notifications for short periods of time (5 minutes).
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>NONE</c> 
            </para>
             <ul> <li> 
            <para>
            Don't aggregate notifications.
            </para>
             
            <para>
            No delay in delivery.
            </para>
             </li> </ul> </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.CreateNotificationConfigurationRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the NotificationConfiguration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.CreateNotificationConfigurationRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the NotificationConfiguration. Supports RFC 3986's unreserved characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.CreateNotificationConfigurationRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A map of tags assigned to a resource. A tag is a string-to-string map of key-value
            pairs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.CreateNotificationConfigurationResponse">
            <summary>
            This is the response object from the CreateNotificationConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.CreateNotificationConfigurationResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.CreateNotificationConfigurationResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of this NotificationConfiguration.
            </para>
             
            <para>
            The status should always be <c>INACTIVE</c> when part of the CreateNotificationConfiguration
            response.
            </para>
             <ul> <li> 
            <para>
            Values:
            </para>
             <ul> <li> 
            <para>
             <c>ACTIVE</c> 
            </para>
             <ul> <li> 
            <para>
            All EventRules are <c>ACTIVE</c> and any call can be run.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>PARTIALLY_ACTIVE</c> 
            </para>
             <ul> <li> 
            <para>
            Some EventRules are <c>ACTIVE</c> and some are <c>INACTIVE</c>.
            </para>
             </li> <li> 
            <para>
            Any call can be run.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>INACTIVE</c> 
            </para>
             <ul> <li> 
            <para>
            All EventRules are <c>INACTIVE</c> and any call can be run.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>DELETING</c> 
            </para>
             <ul> <li> 
            <para>
            This NotificationConfiguration is being deleted.
            </para>
             </li> <li> 
            <para>
            Only <c>GET</c> and <c>LIST</c> calls can be run.
            </para>
             </li> </ul> </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.DeleteEventRuleRequest">
            <summary>
            Container for the parameters to the DeleteEventRule operation.
            Deletes an EventRule.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.DeleteEventRuleRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the EventRule to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.DeleteEventRuleResponse">
            <summary>
            This is the response object from the DeleteEventRule operation.
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.DeleteNotificationConfigurationRequest">
            <summary>
            Container for the parameters to the DeleteNotificationConfiguration operation.
            Deletes a NotificationConfiguration.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.DeleteNotificationConfigurationRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the NotificationConfiguration to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.DeleteNotificationConfigurationResponse">
            <summary>
            This is the response object from the DeleteNotificationConfiguration operation.
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.DeregisterNotificationHubRequest">
            <summary>
            Container for the parameters to the DeregisterNotificationHub operation.
            Deregisters a NotificationHub in the specified Region.
            
             <note> 
            <para>
            You can't deregister the last NotificationHub in the account. NotificationEvents stored
            in the deregistered NotificationHub are no longer be visible. Recreating a new NotificationHub
            in the same Region restores access to those NotificationEvents.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.DeregisterNotificationHubRequest.NotificationHubRegion">
            <summary>
            Gets and sets the property NotificationHubRegion. 
            <para>
            The NotificationHub Region.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.DeregisterNotificationHubResponse">
            <summary>
            This is the response object from the DeregisterNotificationHub operation.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.DeregisterNotificationHubResponse.NotificationHubRegion">
            <summary>
            Gets and sets the property NotificationHubRegion. 
            <para>
            The NotificationHub Region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.DeregisterNotificationHubResponse.StatusSummary">
            <summary>
            Gets and sets the property StatusSummary. 
            <para>
            NotificationHub status information.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.Dimension">
            <summary>
            The key-value pair of properties for an event.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.Dimension.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the dimension
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.Dimension.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the dimension.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.DisassociateChannelRequest">
            <summary>
            Container for the parameters to the DisassociateChannel operation.
            Disassociates a Channel from a specified NotificationConfiguration. Supported Channels
            include AWS Chatbot, the AWS Console Mobile Application, and emails (notifications-contacts).
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.DisassociateChannelRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the Channel to disassociate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.DisassociateChannelRequest.NotificationConfigurationArn">
            <summary>
            Gets and sets the property NotificationConfigurationArn. 
            <para>
            The ARN of the NotificationConfiguration to disassociate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.DisassociateChannelResponse">
            <summary>
            This is the response object from the DisassociateChannel operation.
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.EventRuleStatusSummary">
            <summary>
            Describes EventRule status information.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.EventRuleStatusSummary.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            A human-readable reason for EventRuleStatus.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.EventRuleStatusSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the EventRule.
            </para>
             <ul> <li> 
            <para>
            Values:
            </para>
             <ul> <li> 
            <para>
             <c>ACTIVE</c> 
            </para>
             <ul> <li> 
            <para>
            The EventRule can process events.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>INACTIVE</c> 
            </para>
             <ul> <li> 
            <para>
            The EventRule may be unable to process events.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>CREATING</c> 
            </para>
             <ul> <li> 
            <para>
            The EventRule is being created.
            </para>
             
            <para>
            Only <c>GET</c> and <c>LIST</c> calls can be run.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>UPDATING</c> 
            </para>
             <ul> <li> 
            <para>
            The EventRule is being updated.
            </para>
             
            <para>
            Only <c>GET</c> and <c>LIST</c> calls can be run.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>DELETING</c> 
            </para>
             <ul> <li> 
            <para>
            The EventRule is being deleted.
            </para>
             
            <para>
            Only <c>GET</c> and <c>LIST</c> calls can be run.
            </para>
             </li> </ul> </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.EventRuleStructure">
            <summary>
            Contains a complete list of fields related to an EventRule.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.EventRuleStructure.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.EventRuleStructure.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The creation time of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.EventRuleStructure.EventPattern">
            <summary>
            Gets and sets the property EventPattern. 
            <para>
            An additional event pattern used to further filter the events this EventRule receives.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns.html">Amazon
            EventBridge event patterns</a> in the <i>Amazon EventBridge User Guide.</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.EventRuleStructure.EventType">
            <summary>
            Gets and sets the property EventType. 
            <para>
            The event type to match.
            </para>
             
            <para>
            Must match one of the valid Amazon EventBridge event types. For example, EC2 Instance
            State-change Notification and AWS CloudWatch Alarm State Change. For more information,
            see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-service-event.html#eb-service-event-delivery-level">Event
            delivery from AWS services</a> in the <i>Amazon EventBridge User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.EventRuleStructure.ManagedRules">
            <summary>
            Gets and sets the property ManagedRules. 
            <para>
            A list of Amazon EventBridge Managed Rule ARNs associated with this EventRule.
            </para>
             <note> 
            <para>
            These are created by AWS User Notifications within your account so your EventRules
            can function.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.EventRuleStructure.NotificationConfigurationArn">
            <summary>
            Gets and sets the property NotificationConfigurationArn. 
            <para>
            The ARN for the NotificationConfiguration associated with this EventRule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.EventRuleStructure.Regions">
            <summary>
            Gets and sets the property Regions. 
            <para>
            A list of AWS Regions that send events to this EventRule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.EventRuleStructure.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The matched event source.
            </para>
             
            <para>
            Must match one of the valid EventBridge sources. Only AWS service sourced events are
            supported. For example, <c>aws.ec2</c> and <c>aws.cloudwatch</c>. For more information,
            see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-service-event.html#eb-service-event-delivery-level">Event
            delivery from AWS services</a> in the <i>Amazon EventBridge User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.EventRuleStructure.StatusSummaryByRegion">
            <summary>
            Gets and sets the property StatusSummaryByRegion. 
            <para>
            A list of an EventRule's status by Region. Regions are mapped to EventRuleStatusSummary.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.GetEventRuleRequest">
            <summary>
            Container for the parameters to the GetEventRule operation.
            Returns a specified EventRule.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetEventRuleRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the EventRule to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.GetEventRuleResponse">
            <summary>
            This is the response object from the GetEventRule operation.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetEventRuleResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The ARN of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetEventRuleResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The date when the EventRule was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetEventRuleResponse.EventPattern">
            <summary>
            Gets and sets the property EventPattern. 
            <para>
            An additional event pattern used to further filter the events this EventRule receives.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns.html">Amazon
            EventBridge event patterns</a> in the <i>Amazon EventBridge User Guide.</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetEventRuleResponse.EventType">
            <summary>
            Gets and sets the property EventType. 
            <para>
            The event type to match.
            </para>
             
            <para>
            Must match one of the valid Amazon EventBridge event types. For example, EC2 Instance
            State-change Notification and AWS CloudWatch Alarm State Change. For more information,
            see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-service-event.html#eb-service-event-delivery-level">Event
            delivery from AWS services</a> in the <i>Amazon EventBridge User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetEventRuleResponse.ManagedRules">
            <summary>
            Gets and sets the property ManagedRules. 
            <para>
            A list of managed rules from EventBridge that are are associated with this EventRule.
            </para>
             <note> 
            <para>
            These are created by AWS User Notifications within your account so this EventRule
            functions.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetEventRuleResponse.NotificationConfigurationArn">
            <summary>
            Gets and sets the property NotificationConfigurationArn. 
            <para>
            The ARN of a NotificationConfiguration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetEventRuleResponse.Regions">
            <summary>
            Gets and sets the property Regions. 
            <para>
            A list of AWS Regions that send events to this EventRule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetEventRuleResponse.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The matched event source.
            </para>
             
            <para>
            Must match one of the valid EventBridge sources. Only AWS service sourced events are
            supported. For example, <c>aws.ec2</c> and <c>aws.cloudwatch</c>. For more information,
            see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-service-event.html#eb-service-event-delivery-level">Event
            delivery from AWS services</a> in the <i>Amazon EventBridge User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetEventRuleResponse.StatusSummaryByRegion">
            <summary>
            Gets and sets the property StatusSummaryByRegion. 
            <para>
            A list of an EventRule's status by Region. Regions are mapped to EventRuleStatusSummary.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.GetNotificationConfigurationRequest">
            <summary>
            Container for the parameters to the GetNotificationConfiguration operation.
            Returns a specified NotificationConfiguration.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetNotificationConfigurationRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the NotificationConfiguration to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.GetNotificationConfigurationResponse">
            <summary>
            This is the response object from the GetNotificationConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetNotificationConfigurationResponse.AggregationDuration">
            <summary>
            Gets and sets the property AggregationDuration. 
            <para>
            The aggregation preference of the NotificationConfiguration.
            </para>
             <ul> <li> 
            <para>
            Values:
            </para>
             <ul> <li> 
            <para>
             <c>LONG</c> 
            </para>
             <ul> <li> 
            <para>
            Aggregate notifications for long periods of time (12 hours).
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>SHORT</c> 
            </para>
             <ul> <li> 
            <para>
            Aggregate notifications for short periods of time (5 minutes).
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>NONE</c> 
            </para>
             <ul> <li> 
            <para>
            Don't aggregate notifications.
            </para>
             
            <para>
            No delay in delivery.
            </para>
             </li> </ul> </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetNotificationConfigurationResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The ARN of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetNotificationConfigurationResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The creation time of the NotificationConfiguration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetNotificationConfigurationResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the NotificationConfiguration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetNotificationConfigurationResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the NotificationConfiguration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetNotificationConfigurationResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of this NotificationConfiguration.
            </para>
             
            <para>
            The status should always be <c>INACTIVE</c> when part of the CreateNotificationConfiguration
            response.
            </para>
             <ul> <li> 
            <para>
            Values:
            </para>
             <ul> <li> 
            <para>
             <c>ACTIVE</c> 
            </para>
             <ul> <li> 
            <para>
            All EventRules are <c>ACTIVE</c> and any call can be run.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>PARTIALLY_ACTIVE</c> 
            </para>
             <ul> <li> 
            <para>
            Some EventRules are <c>ACTIVE</c> and some are <c>INACTIVE</c>.
            </para>
             </li> <li> 
            <para>
            Any call can be run.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>INACTIVE</c> 
            </para>
             <ul> <li> 
            <para>
            All EventRules are <c>INACTIVE</c> and any call can be run.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>DELETING</c> 
            </para>
             <ul> <li> 
            <para>
            This NotificationConfiguration is being deleted. Only <c>GET</c> and <c>LIST</c> calls
            can be run.
            </para>
             </li> <li> 
            <para>
            Only <c>GET</c> and <c>LIST</c> calls can be run.
            </para>
             </li> </ul> </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.GetNotificationEventRequest">
            <summary>
            Container for the parameters to the GetNotificationEvent operation.
            Returns a specified NotificationEvent.
            
             <important> 
            <para>
            User Notifications stores notifications in the individual Regions you register as
            notification hubs and the Region of the source event rule. GetNotificationEvent only
            returns notifications stored in the same Region in which the action is called. User
            Notifications doesn't backfill notifications to new Regions selected as notification
            hubs. For this reason, we recommend that you make calls in your oldest registered
            notification hub. For more information, see <a href="https://docs.aws.amazon.com/notifications/latest/userguide/notification-hubs.html">Notification
            hubs</a> in the <i>AWS User Notifications User Guide</i>.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetNotificationEventRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the NotificationEvent to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetNotificationEventRequest.Locale">
            <summary>
            Gets and sets the property Locale. 
            <para>
            The locale code of the language used for the retrieved NotificationEvent. The default
            locale is English <c>en_US</c>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.GetNotificationEventResponse">
            <summary>
            This is the response object from the GetNotificationEvent operation.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetNotificationEventResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The ARN of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetNotificationEventResponse.Content">
            <summary>
            Gets and sets the property Content. 
            <para>
            The content of the NotificationEvent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetNotificationEventResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The creation time of the NotificationEvent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.GetNotificationEventResponse.NotificationConfigurationArn">
            <summary>
            Gets and sets the property NotificationConfigurationArn. 
            <para>
            The ARN of the NotificationConfiguration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.InternalServerException">
            <summary>
            Unexpected error during processing of request.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.Model.InternalServerException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Notifications.Model.InternalServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Notifications.Model.InternalServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Notifications.Model.InternalServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Notifications.Model.InternalServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Notifications.Model.InternalServerException.Retryable">
            <summary>
            Flag indicating if the exception is retryable and the associated retry
            details. A null value indicates that the exception is not retryable.
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.AssociateChannelRequestMarshaller">
            <summary>
            AssociateChannel Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.AssociateChannelRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.AssociateChannelRequestMarshaller.Marshall(Amazon.Notifications.Model.AssociateChannelRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.AssociateChannelRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.AssociateChannelResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AssociateChannel operation
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.AssociateChannelResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.AssociateChannelResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.AssociateChannelResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.CreateEventRuleRequestMarshaller">
            <summary>
            CreateEventRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.CreateEventRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.CreateEventRuleRequestMarshaller.Marshall(Amazon.Notifications.Model.CreateEventRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.CreateEventRuleRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.CreateEventRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateEventRule operation
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.CreateEventRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.CreateEventRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.CreateEventRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.CreateNotificationConfigurationRequestMarshaller">
            <summary>
            CreateNotificationConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.CreateNotificationConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.CreateNotificationConfigurationRequestMarshaller.Marshall(Amazon.Notifications.Model.CreateNotificationConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.CreateNotificationConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.CreateNotificationConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateNotificationConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.CreateNotificationConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.CreateNotificationConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.CreateNotificationConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.DeleteEventRuleRequestMarshaller">
            <summary>
            DeleteEventRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.DeleteEventRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.DeleteEventRuleRequestMarshaller.Marshall(Amazon.Notifications.Model.DeleteEventRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.DeleteEventRuleRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.DeleteEventRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteEventRule operation
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.DeleteEventRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.DeleteEventRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.DeleteEventRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.DeleteNotificationConfigurationRequestMarshaller">
            <summary>
            DeleteNotificationConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.DeleteNotificationConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.DeleteNotificationConfigurationRequestMarshaller.Marshall(Amazon.Notifications.Model.DeleteNotificationConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.DeleteNotificationConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.DeleteNotificationConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteNotificationConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.DeleteNotificationConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.DeleteNotificationConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.DeleteNotificationConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.DeregisterNotificationHubRequestMarshaller">
            <summary>
            DeregisterNotificationHub Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.DeregisterNotificationHubRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.DeregisterNotificationHubRequestMarshaller.Marshall(Amazon.Notifications.Model.DeregisterNotificationHubRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.DeregisterNotificationHubRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.DeregisterNotificationHubResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeregisterNotificationHub operation
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.DeregisterNotificationHubResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.DeregisterNotificationHubResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.DeregisterNotificationHubResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.DimensionUnmarshaller">
            <summary>
            Response Unmarshaller for Dimension Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.DimensionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Notifications#Model#Dimension,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.DimensionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.DimensionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.DisassociateChannelRequestMarshaller">
            <summary>
            DisassociateChannel Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.DisassociateChannelRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.DisassociateChannelRequestMarshaller.Marshall(Amazon.Notifications.Model.DisassociateChannelRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.DisassociateChannelRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.DisassociateChannelResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisassociateChannel operation
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.DisassociateChannelResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.DisassociateChannelResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.DisassociateChannelResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.EventRuleStatusSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for EventRuleStatusSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.EventRuleStatusSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Notifications#Model#EventRuleStatusSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.EventRuleStatusSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.EventRuleStatusSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.EventRuleStructureUnmarshaller">
            <summary>
            Response Unmarshaller for EventRuleStructure Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.EventRuleStructureUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Notifications#Model#EventRuleStructure,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.EventRuleStructureUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.EventRuleStructureUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.GetEventRuleRequestMarshaller">
            <summary>
            GetEventRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.GetEventRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.GetEventRuleRequestMarshaller.Marshall(Amazon.Notifications.Model.GetEventRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.GetEventRuleRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.GetEventRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetEventRule operation
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.GetEventRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.GetEventRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.GetEventRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.GetNotificationConfigurationRequestMarshaller">
            <summary>
            GetNotificationConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.GetNotificationConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.GetNotificationConfigurationRequestMarshaller.Marshall(Amazon.Notifications.Model.GetNotificationConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.GetNotificationConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.GetNotificationConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetNotificationConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.GetNotificationConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.GetNotificationConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.GetNotificationConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.GetNotificationEventRequestMarshaller">
            <summary>
            GetNotificationEvent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.GetNotificationEventRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.GetNotificationEventRequestMarshaller.Marshall(Amazon.Notifications.Model.GetNotificationEventRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.GetNotificationEventRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.GetNotificationEventResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetNotificationEvent operation
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.GetNotificationEventResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.GetNotificationEventResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.GetNotificationEventResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.ListChannelsRequestMarshaller">
            <summary>
            ListChannels Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListChannelsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListChannelsRequestMarshaller.Marshall(Amazon.Notifications.Model.ListChannelsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.ListChannelsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.ListChannelsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListChannels operation
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListChannelsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListChannelsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.ListChannelsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.ListEventRulesRequestMarshaller">
            <summary>
            ListEventRules Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListEventRulesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListEventRulesRequestMarshaller.Marshall(Amazon.Notifications.Model.ListEventRulesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.ListEventRulesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.ListEventRulesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListEventRules operation
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListEventRulesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListEventRulesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.ListEventRulesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationConfigurationsRequestMarshaller">
            <summary>
            ListNotificationConfigurations Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationConfigurationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationConfigurationsRequestMarshaller.Marshall(Amazon.Notifications.Model.ListNotificationConfigurationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationConfigurationsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationConfigurationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListNotificationConfigurations operation
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationConfigurationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationConfigurationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationConfigurationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationEventsRequestMarshaller">
            <summary>
            ListNotificationEvents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationEventsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationEventsRequestMarshaller.Marshall(Amazon.Notifications.Model.ListNotificationEventsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationEventsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationEventsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListNotificationEvents operation
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationEventsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationEventsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationEventsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationHubsRequestMarshaller">
            <summary>
            ListNotificationHubs Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationHubsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationHubsRequestMarshaller.Marshall(Amazon.Notifications.Model.ListNotificationHubsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationHubsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationHubsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListNotificationHubs operation
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationHubsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationHubsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.ListNotificationHubsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Notifications.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.MediaElementUnmarshaller">
            <summary>
            Response Unmarshaller for MediaElement Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.MediaElementUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Notifications#Model#MediaElement,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.MediaElementUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.MediaElementUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.MessageComponentsSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for MessageComponentsSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.MessageComponentsSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Notifications#Model#MessageComponentsSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.MessageComponentsSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.MessageComponentsSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.MessageComponentsUnmarshaller">
            <summary>
            Response Unmarshaller for MessageComponents Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.MessageComponentsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Notifications#Model#MessageComponents,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.MessageComponentsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.MessageComponentsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationConfigurationStructureUnmarshaller">
            <summary>
            Response Unmarshaller for NotificationConfigurationStructure Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationConfigurationStructureUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Notifications#Model#NotificationConfigurationStructure,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationConfigurationStructureUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationConfigurationStructureUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationEventOverviewUnmarshaller">
            <summary>
            Response Unmarshaller for NotificationEventOverview Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationEventOverviewUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Notifications#Model#NotificationEventOverview,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationEventOverviewUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationEventOverviewUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationEventSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for NotificationEventSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationEventSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Notifications#Model#NotificationEventSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationEventSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationEventSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationEventUnmarshaller">
            <summary>
            Response Unmarshaller for NotificationEvent Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationEventUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Notifications#Model#NotificationEvent,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationEventUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationEventUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationHubOverviewUnmarshaller">
            <summary>
            Response Unmarshaller for NotificationHubOverview Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationHubOverviewUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Notifications#Model#NotificationHubOverview,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationHubOverviewUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationHubOverviewUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationHubStatusSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for NotificationHubStatusSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationHubStatusSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Notifications#Model#NotificationHubStatusSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationHubStatusSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.NotificationHubStatusSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.RegisterNotificationHubRequestMarshaller">
            <summary>
            RegisterNotificationHub Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.RegisterNotificationHubRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.RegisterNotificationHubRequestMarshaller.Marshall(Amazon.Notifications.Model.RegisterNotificationHubRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.RegisterNotificationHubRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.RegisterNotificationHubResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RegisterNotificationHub operation
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.RegisterNotificationHubResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.RegisterNotificationHubResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.RegisterNotificationHubResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.ResourceUnmarshaller">
            <summary>
            Response Unmarshaller for Resource Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Notifications#Model#Resource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.ResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.SourceEventMetadataSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for SourceEventMetadataSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.SourceEventMetadataSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Notifications#Model#SourceEventMetadataSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.SourceEventMetadataSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.SourceEventMetadataSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.SourceEventMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for SourceEventMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.SourceEventMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Notifications#Model#SourceEventMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.SourceEventMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.SourceEventMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Notifications.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.TextPartValueUnmarshaller">
            <summary>
            Response Unmarshaller for TextPartValue Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.TextPartValueUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Notifications#Model#TextPartValue,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.TextPartValueUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.TextPartValueUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Notifications.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.UpdateEventRuleRequestMarshaller">
            <summary>
            UpdateEventRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.UpdateEventRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.UpdateEventRuleRequestMarshaller.Marshall(Amazon.Notifications.Model.UpdateEventRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.UpdateEventRuleRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.UpdateEventRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateEventRule operation
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.UpdateEventRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.UpdateEventRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.UpdateEventRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.UpdateNotificationConfigurationRequestMarshaller">
            <summary>
            UpdateNotificationConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.UpdateNotificationConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.UpdateNotificationConfigurationRequestMarshaller.Marshall(Amazon.Notifications.Model.UpdateNotificationConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.UpdateNotificationConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.UpdateNotificationConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateNotificationConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.UpdateNotificationConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.UpdateNotificationConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.UpdateNotificationConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.ValidationExceptionFieldUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationExceptionField Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ValidationExceptionFieldUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Notifications#Model#ValidationExceptionField,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ValidationExceptionFieldUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.ValidationExceptionFieldUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Notifications.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Notifications.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Notifications.Model.ListChannelsRequest">
            <summary>
            Container for the parameters to the ListChannels operation.
            Returns a list of Channels for a NotificationConfiguration.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListChannelsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to be returned in this call. The default value is 20.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListChannelsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The start token for paginated calls. Retrieved from the response of a previous ListNotificationEvents
            call. NextToken uses Base64 encoding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListChannelsRequest.NotificationConfigurationArn">
            <summary>
            Gets and sets the property NotificationConfigurationArn. 
            <para>
            The Amazon Resource Name (ARN) of the NotificationConfiguration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.ListChannelsResponse">
            <summary>
            This is the response object from the ListChannels operation.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListChannelsResponse.Channels">
            <summary>
            Gets and sets the property Channels. 
            <para>
            A list of Channels.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListChannelsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token. If a non-null pagination token is returned in a result, pass its
            value in another request to retrieve more entries.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.ListEventRulesRequest">
            <summary>
            Container for the parameters to the ListEventRules operation.
            Returns a list of EventRules according to specified filters, in reverse chronological
            order (newest first).
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListEventRulesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to be returned in this call. The default value is 20.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListEventRulesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The start token for paginated calls. Retrieved from the response of a previous ListEventRules
            call. Next token uses Base64 encoding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListEventRulesRequest.NotificationConfigurationArn">
            <summary>
            Gets and sets the property NotificationConfigurationArn. 
            <para>
            The Amazon Resource Name (ARN) of the NotificationConfiguration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.ListEventRulesResponse">
            <summary>
            This is the response object from the ListEventRules operation.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListEventRulesResponse.EventRules">
            <summary>
            Gets and sets the property EventRules. 
            <para>
            A list of EventRules.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListEventRulesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token. If a non-null pagination token is returned in a result, pass its
            value in another request to retrieve more entries.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.ListNotificationConfigurationsRequest">
            <summary>
            Container for the parameters to the ListNotificationConfigurations operation.
            Returns a list of abbreviated NotificationConfigurations according to specified filters,
            in reverse chronological order (newest first).
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationConfigurationsRequest.ChannelArn">
            <summary>
            Gets and sets the property ChannelArn. 
            <para>
            The Amazon Resource Name (ARN) of the Channel to match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationConfigurationsRequest.EventRuleSource">
            <summary>
            Gets and sets the property EventRuleSource. 
            <para>
            The matched event source.
            </para>
             
            <para>
            Must match one of the valid EventBridge sources. Only AWS service sourced events are
            supported. For example, <c>aws.ec2</c> and <c>aws.cloudwatch</c>. For more information,
            see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-service-event.html#eb-service-event-delivery-level">Event
            delivery from AWS services</a> in the <i>Amazon EventBridge User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationConfigurationsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to be returned in this call. Defaults to 20.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationConfigurationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The start token for paginated calls. Retrieved from the response of a previous ListEventRules
            call. Next token uses Base64 encoding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationConfigurationsRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The NotificationConfiguration status to match.
            </para>
             <ul> <li> 
            <para>
            Values:
            </para>
             <ul> <li> 
            <para>
             <c>ACTIVE</c> 
            </para>
             <ul> <li> 
            <para>
            All EventRules are <c>ACTIVE</c> and any call can be run.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>PARTIALLY_ACTIVE</c> 
            </para>
             <ul> <li> 
            <para>
            Some EventRules are <c>ACTIVE</c> and some are <c>INACTIVE</c>. Any call can be run.
            </para>
             </li> <li> 
            <para>
            Any call can be run.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>INACTIVE</c> 
            </para>
             <ul> <li> 
            <para>
            All EventRules are <c>INACTIVE</c> and any call can be run.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>DELETING</c> 
            </para>
             <ul> <li> 
            <para>
            This NotificationConfiguration is being deleted.
            </para>
             </li> <li> 
            <para>
            Only <c>GET</c> and <c>LIST</c> calls can be run.
            </para>
             </li> </ul> </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.ListNotificationConfigurationsResponse">
            <summary>
            This is the response object from the ListNotificationConfigurations operation.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationConfigurationsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token. If a non-null pagination token is returned in a result, pass its
            value in another request to retrieve more entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationConfigurationsResponse.NotificationConfigurations">
            <summary>
            Gets and sets the property NotificationConfigurations. 
            <para>
            The NotificationConfigurations in the account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.ListNotificationEventsRequest">
            <summary>
            Container for the parameters to the ListNotificationEvents operation.
            Returns a list of NotificationEvents according to specified filters, in reverse chronological
            order (newest first).
            
             <important> 
            <para>
            User Notifications stores notifications in the individual Regions you register as
            notification hubs and the Region of the source event rule. ListNotificationEvents
            only returns notifications stored in the same Region in which the action is called.
            User Notifications doesn't backfill notifications to new Regions selected as notification
            hubs. For this reason, we recommend that you make calls in your oldest registered
            notification hub. For more information, see <a href="https://docs.aws.amazon.com/notifications/latest/userguide/notification-hubs.html">Notification
            hubs</a> in the <i>AWS User Notifications User Guide</i>.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationEventsRequest.AggregateNotificationEventArn">
            <summary>
            Gets and sets the property AggregateNotificationEventArn. 
            <para>
            The Amazon Resource Name (ARN) of the aggregatedNotificationEventArn to match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationEventsRequest.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            Latest time of events to return from this call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationEventsRequest.IncludeChildEvents">
            <summary>
            Gets and sets the property IncludeChildEvents. 
            <para>
            Include aggregated child events in the result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationEventsRequest.Locale">
            <summary>
            Gets and sets the property Locale. 
            <para>
            The locale code of the language used for the retrieved NotificationEvent. The default
            locale is English <c>(en_US)</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationEventsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to be returned in this call. Defaults to 20.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationEventsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The start token for paginated calls. Retrieved from the response of a previous ListEventRules
            call. Next token uses Base64 encoding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationEventsRequest.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The matched event source.
            </para>
             
            <para>
            Must match one of the valid EventBridge sources. Only AWS service sourced events are
            supported. For example, <c>aws.ec2</c> and <c>aws.cloudwatch</c>. For more information,
            see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-service-event.html#eb-service-event-delivery-level">Event
            delivery from AWS services</a> in the <i>Amazon EventBridge User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationEventsRequest.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The earliest time of events to return from this call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.ListNotificationEventsResponse">
            <summary>
            This is the response object from the ListNotificationEvents operation.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationEventsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token. If a non-null pagination token is returned in a result, pass its
            value in another request to retrieve more entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationEventsResponse.NotificationEvents">
            <summary>
            Gets and sets the property NotificationEvents. 
            <para>
            The list of notification events.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.ListNotificationHubsRequest">
            <summary>
            Container for the parameters to the ListNotificationHubs operation.
            Returns a list of NotificationHubs.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationHubsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of records to list in a single response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationHubsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token. Set to null to start listing notification hubs from the start.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.ListNotificationHubsResponse">
            <summary>
            This is the response object from the ListNotificationHubs operation.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationHubsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token. If a non-null pagination token is returned in a result, pass its
            value in another request to retrieve more entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationHubsResponse.NotificationHubs">
            <summary>
            Gets and sets the property NotificationHubs. 
            <para>
            The NotificationHubs in the account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Returns a list of tags for a specified Amazon Resource Name (ARN).
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html">Tagging
            your AWS resources</a> in the <i>Tagging AWS Resources User Guide</i>.
            </para>
             <note> 
            <para>
            This is only supported for NotificationConfigurations.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListTagsForResourceRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) to use to list tags.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tags for the specified ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.MediaElement">
            <summary>
            Describes a media element.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.MediaElement.Caption">
            <summary>
            Gets and sets the property Caption. 
            <para>
            The caption of the media.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.MediaElement.MediaId">
            <summary>
            Gets and sets the property MediaId. 
            <para>
            The unique ID for the media.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.MediaElement.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of media.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.MediaElement.Url">
            <summary>
            Gets and sets the property Url. 
            <para>
            The url of the media.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.MessageComponents">
            <summary>
            Describes the components of a notification message.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.MessageComponents.CompleteDescription">
            <summary>
            Gets and sets the property CompleteDescription. 
            <para>
            A complete summary with all possible relevant information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.MessageComponents.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            A list of properties in key-value pairs. Pairs are shown in order of importance from
            most important to least important. Channels may limit the number of dimensions shown
            to the notification viewer.
            </para>
             <note> 
            <para>
            Included dimensions, keys, and values are subject to change.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.MessageComponents.Headline">
            <summary>
            Gets and sets the property Headline. 
            <para>
            A sentence long summary. For example, titles or an email subject line.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.MessageComponents.ParagraphSummary">
            <summary>
            Gets and sets the property ParagraphSummary. 
            <para>
            A paragraph long or multiple sentence summary. For example, AWS Chatbot notifications.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.MessageComponentsSummary">
            <summary>
            Contains the headline message component.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.MessageComponentsSummary.Headline">
            <summary>
            Gets and sets the property Headline. 
            <para>
            A sentence long summary. For example, titles or an email subject line.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.NotificationConfigurationStructure">
            <summary>
            Contains the complete list of fields for a NotificationConfiguration.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationConfigurationStructure.AggregationDuration">
            <summary>
            Gets and sets the property AggregationDuration. 
            <para>
            The aggregation preference of the NotificationConfiguration.
            </para>
             <ul> <li> 
            <para>
            Values:
            </para>
             <ul> <li> 
            <para>
             <c>LONG</c> 
            </para>
             <ul> <li> 
            <para>
            Aggregate notifications for long periods of time (12 hours).
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>SHORT</c> 
            </para>
             <ul> <li> 
            <para>
            Aggregate notifications for short periods of time (5 minutes).
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>NONE</c> 
            </para>
             <ul> <li> 
            <para>
            Don't aggregate notifications.
            </para>
             
            <para>
            No delay in delivery.
            </para>
             </li> </ul> </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationConfigurationStructure.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationConfigurationStructure.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The creation time of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationConfigurationStructure.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the NotificationConfiguration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationConfigurationStructure.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the NotificationConfiguration. Supports RFC 3986's unreserved characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationConfigurationStructure.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of this NotificationConfiguration.
            </para>
             
            <para>
            The status should always be INACTIVE when part of the CreateNotificationConfiguration
            response.
            </para>
             <ul> <li> 
            <para>
            Values:
            </para>
             <ul> <li> 
            <para>
             <c>ACTIVE</c> 
            </para>
             <ul> <li> 
            <para>
            All EventRules are <c>ACTIVE</c> and any call can be run.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>PARTIALLY_ACTIVE</c> 
            </para>
             <ul> <li> 
            <para>
            Some EventRules are <c>ACTIVE</c> and some are <c>INACTIVE</c>.
            </para>
             </li> <li> 
            <para>
            Any call can be run.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>INACTIVE</c> 
            </para>
             <ul> <li> 
            <para>
            All EventRules are <c>INACTIVE</c> and any call can be run.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>DELETING</c> 
            </para>
             <ul> <li> 
            <para>
            This NotificationConfiguration is being deleted. Only <c>GET</c> and <c>LIST</c> calls
            can be run.
            </para>
             </li> <li> 
            <para>
            Only <c>GET</c> and <c>LIST</c> calls can be run.
            </para>
             </li> </ul> </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.NotificationEvent">
            <summary>
            A NotificationEvent is a notification-focused representation of an event. They contain
            semantic information used by Channels to create end-user notifications.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEvent.AggregateNotificationEventArn">
            <summary>
            Gets and sets the property AggregateNotificationEventArn. 
            <para>
            If the value of aggregationEventType is not <c>NONE</c>, this is the Amazon Resource
            Event (ARN) of the parent aggregate notification.
            </para>
             
            <para>
            This is omitted if notification isn't aggregated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEvent.AggregationEventType">
            <summary>
            Gets and sets the property AggregationEventType. 
            <para>
            The NotificationConfiguration's aggregation type.
            </para>
             <ul> <li> 
            <para>
            Values:
            </para>
             <ul> <li> 
            <para>
             <c>AGGREGATE</c> 
            </para>
             <ul> <li> 
            <para>
            The notification event is an aggregate notification. Aggregate notifications summarize
            grouped events over a specified time period.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>CHILD</c> 
            </para>
             <ul> <li> 
            <para>
            Some EventRules are <c>ACTIVE</c> and some are <c>INACTIVE</c>. Any call can be run.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>NONE</c> 
            </para>
             <ul> <li> 
            <para>
            The notification isn't aggregated.
            </para>
             </li> </ul> </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEvent.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            The end time of the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEvent.EventStatus">
            <summary>
            Gets and sets the property EventStatus. 
            <para>
            The assesed nature of the event.
            </para>
             <ul> <li> 
            <para>
            Values:
            </para>
             <ul> <li> 
            <para>
             <c>HEALTHY</c> 
            </para>
             <ul> <li> 
            <para>
            All EventRules are <c>ACTIVE</c> and any call can be run.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>UNHEALTHY</c> 
            </para>
             <ul> <li> 
            <para>
            Some EventRules are <c>ACTIVE</c> and some are <c>INACTIVE</c>. Any call can be run.
            </para>
             </li> </ul> </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEvent.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The unique identifier for a NotificationEvent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEvent.Media">
            <summary>
            Gets and sets the property Media. 
            <para>
            A list of media elements.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEvent.MessageComponents">
            <summary>
            Gets and sets the property MessageComponents.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEvent.NotificationType">
            <summary>
            Gets and sets the property NotificationType. 
            <para>
            The type of event causing the notification.
            </para>
             <ul> <li> 
            <para>
            Values:
            </para>
             <ul> <li> 
            <para>
             <c>ALERT</c> 
            </para>
             <ul> <li> 
            <para>
            A notification about an event where something was triggered, initiated, reopened,
            deployed, or a threshold was breached.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>WARNING</c> 
            </para>
             <ul> <li> 
            <para>
            A notification about an event where an issue is about to arise. For example, something
            is approaching a threshold.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>ANNOUNCEMENT</c> 
            </para>
             <ul> <li> 
            <para>
            A notification about an important event. For example, a step in a workflow or escalation
            path or that a workflow was updated.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>INFORMATIONAL</c> 
            </para>
             <ul> <li> 
            <para>
            A notification about informational messages. For example, recommendations, service
            announcements, or reminders.
            </para>
             </li> </ul> </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEvent.SchemaVersion">
            <summary>
            Gets and sets the property SchemaVersion. 
            <para>
            The schema version of the Notification Event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEvent.SourceEventDetailUrl">
            <summary>
            Gets and sets the property SourceEventDetailUrl. 
            <para>
            The source event URL.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEvent.SourceEventDetailUrlDisplayText">
            <summary>
            Gets and sets the property SourceEventDetailUrlDisplayText. 
            <para>
            The detailed URL for the source event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEvent.SourceEventMetadata">
            <summary>
            Gets and sets the property SourceEventMetadata. 
            <para>
            The source event metadata.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEvent.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The notification event start time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEvent.TextParts">
            <summary>
            Gets and sets the property TextParts. 
            <para>
            A list of text values.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.NotificationEventOverview">
            <summary>
            Describes a short summary of a NotificationEvent. This is only used when listing notification
            events.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEventOverview.AggregateNotificationEventArn">
            <summary>
            Gets and sets the property AggregateNotificationEventArn. 
            <para>
            The ARN of the aggregatedNotificationEventArn to match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEventOverview.AggregationEventType">
            <summary>
            Gets and sets the property AggregationEventType. 
            <para>
            The NotificationConfiguration's aggregation type.
            </para>
             <ul> <li> 
            <para>
            Values:
            </para>
             <ul> <li> 
            <para>
             <c>AGGREGATE</c> 
            </para>
             <ul> <li> 
            <para>
            The notification event is an aggregate notification. Aggregate notifications summarize
            grouped events over a specified time period.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>CHILD</c> 
            </para>
             <ul> <li> 
            <para>
            Some EventRules are <c>ACTIVE</c> and some are <c>INACTIVE</c>. Any call can be run.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>NONE</c> 
            </para>
             <ul> <li> 
            <para>
            The notification isn't aggregated.
            </para>
             </li> </ul> </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEventOverview.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEventOverview.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The creation time of the NotificationEvent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEventOverview.NotificationConfigurationArn">
            <summary>
            Gets and sets the property NotificationConfigurationArn. 
            <para>
            The ARN of the NotificationConfiguration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEventOverview.NotificationEvent">
            <summary>
            Gets and sets the property NotificationEvent. 
            <para>
            Refers to a NotificationEventSummary object.
            </para>
             
            <para>
            Similar in structure to <c>content</c> in the GetNotificationEvent response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEventOverview.RelatedAccount">
            <summary>
            Gets and sets the property RelatedAccount. 
            <para>
            The account name containing the NotificationHub.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.NotificationEventSummary">
            <summary>
            Describes a short summary and metadata for a notification event.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEventSummary.EventStatus">
            <summary>
            Gets and sets the property EventStatus. 
            <para>
            The notification event status.
            </para>
             <ul> <li> 
            <para>
            Values:
            </para>
             <ul> <li> 
            <para>
             <c>HEALTHY</c> 
            </para>
             <ul> <li> 
            <para>
            All EventRules are <c>ACTIVE</c> and any call can be run.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>UNHEALTHY</c> 
            </para>
             <ul> <li> 
            <para>
            Some EventRules are <c>ACTIVE</c> and some are <c>INACTIVE</c>. Any call can be run.
            </para>
             </li> </ul> </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEventSummary.MessageComponents">
            <summary>
            Gets and sets the property MessageComponents. 
            <para>
            The message components of a notification event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEventSummary.NotificationType">
            <summary>
            Gets and sets the property NotificationType. 
            <para>
            The type of event causing the notification.
            </para>
             <ul> <li> 
            <para>
            Values:
            </para>
             <ul> <li> 
            <para>
             <c>ALERT</c> 
            </para>
             <ul> <li> 
            <para>
            A notification about an event where something was triggered, initiated, reopened,
            deployed, or a threshold was breached.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>WARNING</c> 
            </para>
             <ul> <li> 
            <para>
            A notification about an event where an issue is about to arise. For example, something
            is approaching a threshold.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>ANNOUNCEMENT</c> 
            </para>
             <ul> <li> 
            <para>
            A notification about an important event. For example, a step in a workflow or escalation
            path or that a workflow was updated.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>INFORMATIONAL</c> 
            </para>
             <ul> <li> 
            <para>
            A notification about informational messages. For example, recommendations, service
            announcements, or reminders.
            </para>
             </li> </ul> </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEventSummary.SchemaVersion">
            <summary>
            Gets and sets the property SchemaVersion. 
            <para>
            The schema version of the Notification Event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationEventSummary.SourceEventMetadata">
            <summary>
            Gets and sets the property SourceEventMetadata. 
            <para>
            The source event metadata.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.NotificationHubOverview">
            <summary>
            Describes an overview of a NotificationHub.
            
             
            <para>
            A NotificationHub is an account-level setting used to select the Regions where you
            want to store, process and replicate your notifications.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationHubOverview.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The date and time the resource was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationHubOverview.LastActivationTime">
            <summary>
            Gets and sets the property LastActivationTime. 
            <para>
            The most recent time this NotificationHub had an ACTIVE status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationHubOverview.NotificationHubRegion">
            <summary>
            Gets and sets the property NotificationHubRegion. 
            <para>
            The Region of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationHubOverview.StatusSummary">
            <summary>
            Gets and sets the property StatusSummary. 
            <para>
            The status summary of the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.NotificationHubStatusSummary">
            <summary>
            NotificationHub status information.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationHubStatusSummary.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            An Explanation for the current status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.NotificationHubStatusSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Status information about the NotificationHub.
            </para>
             <ul> <li> 
            <para>
            Values:
            </para>
             <ul> <li> 
            <para>
             <c>ACTIVE</c> 
            </para>
             <ul> <li> 
            <para>
            Incoming NotificationEvents are replicated to this NotificationHub.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>REGISTERING</c> 
            </para>
             <ul> <li> 
            <para>
            The NotificationHub is initializing. A NotificationHub with this status can't be deregistered.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>DEREGISTERING</c> 
            </para>
             <ul> <li> 
            <para>
            The NotificationHub is being deleted. You can't register additional NotificationHubs
            in the same Region as a NotificationHub with this status.
            </para>
             </li> </ul> </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.RegisterNotificationHubRequest">
            <summary>
            Container for the parameters to the RegisterNotificationHub operation.
            Registers a NotificationHub in the specified Region.
            
             
            <para>
            There is a maximum of one NotificationHub per Region. You can have a maximum of 3
            NotificationHubs at a time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.RegisterNotificationHubRequest.NotificationHubRegion">
            <summary>
            Gets and sets the property NotificationHubRegion. 
            <para>
            The Region of the NotificationHub.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.RegisterNotificationHubResponse">
            <summary>
            This is the response object from the RegisterNotificationHub operation.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.RegisterNotificationHubResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The date the resource was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.RegisterNotificationHubResponse.LastActivationTime">
            <summary>
            Gets and sets the property LastActivationTime. 
            <para>
            The date the resource was last activated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.RegisterNotificationHubResponse.NotificationHubRegion">
            <summary>
            Gets and sets the property NotificationHubRegion. 
            <para>
            The Region of the NotificationHub.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.RegisterNotificationHubResponse.StatusSummary">
            <summary>
            Gets and sets the property StatusSummary. 
            <para>
            NotificationHub status information.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.Resource">
            <summary>
            A resource affected by or closely linked to an event.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.Resource.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the resource. At least one id or ARN is required.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.Resource.DetailUrl">
            <summary>
            Gets and sets the property DetailUrl. 
            <para>
            The URL to the resource's detail page. If a detail page URL is unavailable, it is
            the URL to an informational page that describes the resource's type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.Resource.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The unique identifier for the resource.
            </para>
             
            <para>
            At least one id or ARN is required.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.Resource.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A map of tags assigned to a resource. A tag is a string-to-string map of key-value
            pairs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.ResourceNotFoundException">
            <summary>
            Request references a resource which does not exist.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Notifications.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Notifications.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Notifications.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Notifications.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Notifications.Model.ResourceNotFoundException.ResourceId">
            <summary>
            Gets and sets the property ResourceId. 
            <para>
            The ID of the resource that wasn't found.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.ServiceQuotaExceededException">
            <summary>
            Request would cause a service quota to be exceeded.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.Model.ServiceQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Notifications.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Notifications.Model.ServiceQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Notifications.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Notifications.Model.ServiceQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Notifications.Model.ServiceQuotaExceededException.QuotaCode">
            <summary>
            Gets and sets the property QuotaCode. 
            <para>
            The code for the service quota in <a href="https://docs.aws.amazon.com/servicequotas/latest/userguide/intro.html">Service
            Quotas</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ServiceQuotaExceededException.ResourceId">
            <summary>
            Gets and sets the property ResourceId. 
            <para>
            The ID of the resource that exceeds the service quota.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ServiceQuotaExceededException.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The type of the resource that exceeds the service quota.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ServiceQuotaExceededException.ServiceCode">
            <summary>
            Gets and sets the property ServiceCode. 
            <para>
            The code for the service quota exceeded in <a href="https://docs.aws.amazon.com/servicequotas/latest/userguide/intro.html">Service
            Quotas</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.SourceEventMetadata">
            <summary>
            Describes the metadata for a source event.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-events-structure.html">Event
            structure reference</a> in the <i>Amazon EventBridge User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.SourceEventMetadata.EventOccurrenceTime">
            <summary>
            Gets and sets the property EventOccurrenceTime. 
            <para>
            The date and time the source event occurred. This is based on the Source Event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.SourceEventMetadata.EventOriginRegion">
            <summary>
            Gets and sets the property EventOriginRegion. 
            <para>
            The Region the event originated from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.SourceEventMetadata.EventType">
            <summary>
            Gets and sets the property EventType. 
            <para>
            The type of event. For example, an AWS CloudWatch state change.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.SourceEventMetadata.EventTypeVersion">
            <summary>
            Gets and sets the property EventTypeVersion. 
            <para>
            The version of the type of event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.SourceEventMetadata.RelatedAccount">
            <summary>
            Gets and sets the property RelatedAccount. 
            <para>
            The Primary AWS account of Source Event
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.SourceEventMetadata.RelatedResources">
            <summary>
            Gets and sets the property RelatedResources. 
            <para>
            A list of resources related to this NotificationEvent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.SourceEventMetadata.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The AWS servvice the event originates from. For example <c>aws.cloudwatch</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.SourceEventMetadata.SourceEventId">
            <summary>
            Gets and sets the property SourceEventId. 
            <para>
            The source event id.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.SourceEventMetadataSummary">
            <summary>
            Contains metadata about the event that caused the NotificationEvent. For other specific
            values, see sourceEventMetadata.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.SourceEventMetadataSummary.EventOriginRegion">
            <summary>
            Gets and sets the property EventOriginRegion. 
            <para>
            The Region where the notification originated.
            </para>
             
            <para>
            Unavailable for aggregated notifications.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.SourceEventMetadataSummary.EventType">
            <summary>
            Gets and sets the property EventType. 
            <para>
            The event type to match.
            </para>
             
            <para>
            Must match one of the valid Amazon EventBridge event types. For example, EC2 Instance
            State-change Notification and AWS CloudWatch Alarm State Change. For more information,
            see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-service-event.html#eb-service-event-delivery-level">Event
            delivery from AWS services</a> in the <i>Amazon EventBridge User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.SourceEventMetadataSummary.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The matched event source.
            </para>
             
            <para>
            Must match one of the valid EventBridge sources. Only AWS service sourced events are
            supported. For example, <c>aws.ec2</c> and <c>aws.cloudwatch</c>. For more information,
            see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-service-event.html#eb-service-event-delivery-level">Event
            delivery from AWS services</a> in the <i>Amazon EventBridge User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Tags the resource with a tag key and value.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html">Tagging
            your AWS resources</a> in the <i>Tagging AWS Resources User Guide</i>.
            </para>
             <note> 
            <para>
            This is only supported for NotificationConfigurations.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.TagResourceRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) to use to tag a resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A map of tags assigned to a resource. A tag is a string-to-string map of key-value
            pairs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.TextPartValue">
            <summary>
            Describes text information objects containing fields that determine how text part
            objects are composed.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.TextPartValue.DisplayText">
            <summary>
            Gets and sets the property DisplayText. 
            <para>
            A short single line description of the link. Must be hyperlinked with the URL itself.
            
            </para>
             
            <para>
            Used for text parts with the type <c>URL</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.TextPartValue.TextByLocale">
            <summary>
            Gets and sets the property TextByLocale. 
            <para>
            A map of locales to the text in that locale.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.TextPartValue.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of text part. Determines the usage of all other fields and whether or not
            they're required.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.TextPartValue.Url">
            <summary>
            Gets and sets the property Url. 
            <para>
            The URL itself.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.ThrottlingException">
            <summary>
            Request was denied due to request throttling.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Notifications.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Notifications.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Notifications.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Notifications.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Notifications.Model.ThrottlingException.QuotaCode">
            <summary>
            Gets and sets the property QuotaCode. 
            <para>
            Identifies the quota that is being throttled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ThrottlingException.RetryAfterSeconds">
            <summary>
            Gets and sets the property RetryAfterSeconds. 
            <para>
            The number of seconds a client should wait before retrying the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ThrottlingException.ServiceCode">
            <summary>
            Gets and sets the property ServiceCode. 
            <para>
            Identifies the service being throttled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ThrottlingException.Retryable">
            <summary>
            Flag indicating if the exception is retryable and the associated retry
            details. A null value indicates that the exception is not retryable.
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Untags a resource with a specified Amazon Resource Name (ARN).
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html">Tagging
            your AWS resources</a> in the <i>Tagging AWS Resources User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.UntagResourceRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) to use to untag a resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            The tag keys to use to untag a resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.UpdateEventRuleRequest">
            <summary>
            Container for the parameters to the UpdateEventRule operation.
            Updates an existing EventRule.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.UpdateEventRuleRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) to use to update the EventRule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.UpdateEventRuleRequest.EventPattern">
            <summary>
            Gets and sets the property EventPattern. 
            <para>
            An additional event pattern used to further filter the events this EventRule receives.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns.html">Amazon
            EventBridge event patterns</a> in the <i>Amazon EventBridge User Guide.</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.UpdateEventRuleRequest.Regions">
            <summary>
            Gets and sets the property Regions. 
            <para>
            A list of AWS Regions that sends events to this EventRule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.UpdateEventRuleResponse">
            <summary>
            This is the response object from the UpdateEventRule operation.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.UpdateEventRuleResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) to use to update the EventRule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.UpdateEventRuleResponse.NotificationConfigurationArn">
            <summary>
            Gets and sets the property NotificationConfigurationArn. 
            <para>
            The ARN of the NotificationConfiguration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.UpdateEventRuleResponse.StatusSummaryByRegion">
            <summary>
            Gets and sets the property StatusSummaryByRegion. 
            <para>
            The status of the action by Region.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.UpdateNotificationConfigurationRequest">
            <summary>
            Container for the parameters to the UpdateNotificationConfiguration operation.
            Updates a NotificationConfiguration.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.UpdateNotificationConfigurationRequest.AggregationDuration">
            <summary>
            Gets and sets the property AggregationDuration. 
            <para>
            The status of this NotificationConfiguration.
            </para>
             
            <para>
            The status should always be <c>INACTIVE</c> when part of the CreateNotificationConfiguration
            response.
            </para>
             <ul> <li> 
            <para>
            Values:
            </para>
             <ul> <li> 
            <para>
             <c>ACTIVE</c> 
            </para>
             <ul> <li> 
            <para>
            All EventRules are <c>ACTIVE</c> and any call can be run.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>PARTIALLY_ACTIVE</c> 
            </para>
             <ul> <li> 
            <para>
            Some EventRules are <c>ACTIVE</c> and some are <c>INACTIVE</c>. Any call can be run.
            </para>
             </li> <li> 
            <para>
            Any call can be run.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>INACTIVE</c> 
            </para>
             <ul> <li> 
            <para>
            All EventRules are <c>INACTIVE</c> and any call can be run.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <c>DELETING</c> 
            </para>
             <ul> <li> 
            <para>
            This NotificationConfiguration is being deleted.
            </para>
             </li> <li> 
            <para>
            Only <c>GET</c> and <c>LIST</c> calls can be run.
            </para>
             </li> </ul> </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.UpdateNotificationConfigurationRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) used to update the NotificationConfiguration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.UpdateNotificationConfigurationRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the NotificationConfiguration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.UpdateNotificationConfigurationRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the NotificationConfiguration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.UpdateNotificationConfigurationResponse">
            <summary>
            This is the response object from the UpdateNotificationConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.UpdateNotificationConfigurationResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The ARN used to update the NotificationConfiguration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.ValidationException">
            <summary>
            This exception is thrown when the notification event fails validation.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Notifications.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Notifications.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Notifications.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Notifications.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Notifications.Model.ValidationException.FieldList">
            <summary>
            Gets and sets the property FieldList. 
            <para>
            The list of input fields that are invalid.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ValidationException.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            The reason why your input is considered invalid.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.ValidationExceptionField">
            <summary>
            Stores information about a field passed inside a request that resulted in an exception.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ValidationExceptionField.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message with the reason for the validation exception error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ValidationExceptionField.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The field name where the invalid entry was detected.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.IListChannelsPaginator">
             <summary>
             Paginator for the ListChannels operation
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.IListChannelsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.IListChannelsPaginator.Channels">
            <summary>
            Enumerable containing all of the Channels
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.IListEventRulesPaginator">
             <summary>
             Paginator for the ListEventRules operation
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.IListEventRulesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.IListEventRulesPaginator.EventRules">
            <summary>
            Enumerable containing all of the EventRules
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.IListNotificationConfigurationsPaginator">
             <summary>
             Paginator for the ListNotificationConfigurations operation
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.IListNotificationConfigurationsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.IListNotificationConfigurationsPaginator.NotificationConfigurations">
            <summary>
            Enumerable containing all of the NotificationConfigurations
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.IListNotificationEventsPaginator">
             <summary>
             Paginator for the ListNotificationEvents operation
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.IListNotificationEventsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.IListNotificationEventsPaginator.NotificationEvents">
            <summary>
            Enumerable containing all of the NotificationEvents
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.IListNotificationHubsPaginator">
             <summary>
             Paginator for the ListNotificationHubs operation
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.IListNotificationHubsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.IListNotificationHubsPaginator.NotificationHubs">
            <summary>
            Enumerable containing all of the NotificationHubs
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.INotificationsPaginatorFactory">
             <summary>
             Paginators for the Notifications service
            </summary>
        </member>
        <member name="M:Amazon.Notifications.Model.INotificationsPaginatorFactory.ListChannels(Amazon.Notifications.Model.ListChannelsRequest)">
             <summary>
             Paginator for ListChannels operation
            </summary>
        </member>
        <member name="M:Amazon.Notifications.Model.INotificationsPaginatorFactory.ListEventRules(Amazon.Notifications.Model.ListEventRulesRequest)">
             <summary>
             Paginator for ListEventRules operation
            </summary>
        </member>
        <member name="M:Amazon.Notifications.Model.INotificationsPaginatorFactory.ListNotificationConfigurations(Amazon.Notifications.Model.ListNotificationConfigurationsRequest)">
             <summary>
             Paginator for ListNotificationConfigurations operation
            </summary>
        </member>
        <member name="M:Amazon.Notifications.Model.INotificationsPaginatorFactory.ListNotificationEvents(Amazon.Notifications.Model.ListNotificationEventsRequest)">
             <summary>
             Paginator for ListNotificationEvents operation
            </summary>
        </member>
        <member name="M:Amazon.Notifications.Model.INotificationsPaginatorFactory.ListNotificationHubs(Amazon.Notifications.Model.ListNotificationHubsRequest)">
             <summary>
             Paginator for ListNotificationHubs operation
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.ListChannelsPaginator">
            <summary>
            Base class for ListChannels paginators.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListChannelsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListChannelsPaginator.Channels">
            <summary>
            Enumerable containing all of the Channels
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.ListEventRulesPaginator">
            <summary>
            Base class for ListEventRules paginators.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListEventRulesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListEventRulesPaginator.EventRules">
            <summary>
            Enumerable containing all of the EventRules
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.ListNotificationConfigurationsPaginator">
            <summary>
            Base class for ListNotificationConfigurations paginators.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationConfigurationsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationConfigurationsPaginator.NotificationConfigurations">
            <summary>
            Enumerable containing all of the NotificationConfigurations
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.ListNotificationEventsPaginator">
            <summary>
            Base class for ListNotificationEvents paginators.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationEventsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationEventsPaginator.NotificationEvents">
            <summary>
            Enumerable containing all of the NotificationEvents
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.ListNotificationHubsPaginator">
            <summary>
            Base class for ListNotificationHubs paginators.
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationHubsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Notifications.Model.ListNotificationHubsPaginator.NotificationHubs">
            <summary>
            Enumerable containing all of the NotificationHubs
            </summary>
        </member>
        <member name="T:Amazon.Notifications.Model.NotificationsPaginatorFactory">
             <summary>
             Paginators for the Notifications service
            </summary>
        </member>
        <member name="M:Amazon.Notifications.Model.NotificationsPaginatorFactory.ListChannels(Amazon.Notifications.Model.ListChannelsRequest)">
             <summary>
             Paginator for ListChannels operation
            </summary>
        </member>
        <member name="M:Amazon.Notifications.Model.NotificationsPaginatorFactory.ListEventRules(Amazon.Notifications.Model.ListEventRulesRequest)">
             <summary>
             Paginator for ListEventRules operation
            </summary>
        </member>
        <member name="M:Amazon.Notifications.Model.NotificationsPaginatorFactory.ListNotificationConfigurations(Amazon.Notifications.Model.ListNotificationConfigurationsRequest)">
             <summary>
             Paginator for ListNotificationConfigurations operation
            </summary>
        </member>
        <member name="M:Amazon.Notifications.Model.NotificationsPaginatorFactory.ListNotificationEvents(Amazon.Notifications.Model.ListNotificationEventsRequest)">
             <summary>
             Paginator for ListNotificationEvents operation
            </summary>
        </member>
        <member name="M:Amazon.Notifications.Model.NotificationsPaginatorFactory.ListNotificationHubs(Amazon.Notifications.Model.ListNotificationHubsRequest)">
             <summary>
             Paginator for ListNotificationHubs operation
            </summary>
        </member>
        <member name="T:Amazon.Notifications.AmazonNotificationsRequest">
            <summary>
            Base class for Notifications operation requests.
            </summary>
        </member>
        <member name="T:Amazon.Notifications.AggregationDuration">
            <summary>
            Constants used for properties of type AggregationDuration.
            </summary>
        </member>
        <member name="F:Amazon.Notifications.AggregationDuration.LONG">
            <summary>
            Constant LONG for AggregationDuration
            </summary>
        </member>
        <member name="F:Amazon.Notifications.AggregationDuration.NONE">
            <summary>
            Constant NONE for AggregationDuration
            </summary>
        </member>
        <member name="F:Amazon.Notifications.AggregationDuration.SHORT">
            <summary>
            Constant SHORT for AggregationDuration
            </summary>
        </member>
        <member name="M:Amazon.Notifications.AggregationDuration.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.AggregationDuration.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Notifications.AggregationDuration.op_Implicit(System.String)~Amazon.Notifications.AggregationDuration">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Notifications.AggregationEventType">
            <summary>
            Constants used for properties of type AggregationEventType.
            </summary>
        </member>
        <member name="F:Amazon.Notifications.AggregationEventType.AGGREGATE">
            <summary>
            Constant AGGREGATE for AggregationEventType
            </summary>
        </member>
        <member name="F:Amazon.Notifications.AggregationEventType.CHILD">
            <summary>
            Constant CHILD for AggregationEventType
            </summary>
        </member>
        <member name="F:Amazon.Notifications.AggregationEventType.NONE">
            <summary>
            Constant NONE for AggregationEventType
            </summary>
        </member>
        <member name="M:Amazon.Notifications.AggregationEventType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.AggregationEventType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Notifications.AggregationEventType.op_Implicit(System.String)~Amazon.Notifications.AggregationEventType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Notifications.EventRuleStatus">
            <summary>
            Constants used for properties of type EventRuleStatus.
            </summary>
        </member>
        <member name="F:Amazon.Notifications.EventRuleStatus.ACTIVE">
            <summary>
            Constant ACTIVE for EventRuleStatus
            </summary>
        </member>
        <member name="F:Amazon.Notifications.EventRuleStatus.CREATING">
            <summary>
            Constant CREATING for EventRuleStatus
            </summary>
        </member>
        <member name="F:Amazon.Notifications.EventRuleStatus.DELETING">
            <summary>
            Constant DELETING for EventRuleStatus
            </summary>
        </member>
        <member name="F:Amazon.Notifications.EventRuleStatus.INACTIVE">
            <summary>
            Constant INACTIVE for EventRuleStatus
            </summary>
        </member>
        <member name="F:Amazon.Notifications.EventRuleStatus.UPDATING">
            <summary>
            Constant UPDATING for EventRuleStatus
            </summary>
        </member>
        <member name="M:Amazon.Notifications.EventRuleStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.EventRuleStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Notifications.EventRuleStatus.op_Implicit(System.String)~Amazon.Notifications.EventRuleStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Notifications.EventStatus">
            <summary>
            Constants used for properties of type EventStatus.
            </summary>
        </member>
        <member name="F:Amazon.Notifications.EventStatus.HEALTHY">
            <summary>
            Constant HEALTHY for EventStatus
            </summary>
        </member>
        <member name="F:Amazon.Notifications.EventStatus.UNHEALTHY">
            <summary>
            Constant UNHEALTHY for EventStatus
            </summary>
        </member>
        <member name="M:Amazon.Notifications.EventStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.EventStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Notifications.EventStatus.op_Implicit(System.String)~Amazon.Notifications.EventStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Notifications.LocaleCode">
            <summary>
            Constants used for properties of type LocaleCode.
            </summary>
        </member>
        <member name="F:Amazon.Notifications.LocaleCode.De_DE">
            <summary>
            Constant De_DE for LocaleCode
            </summary>
        </member>
        <member name="F:Amazon.Notifications.LocaleCode.En_CA">
            <summary>
            Constant En_CA for LocaleCode
            </summary>
        </member>
        <member name="F:Amazon.Notifications.LocaleCode.En_UK">
            <summary>
            Constant En_UK for LocaleCode
            </summary>
        </member>
        <member name="F:Amazon.Notifications.LocaleCode.En_US">
            <summary>
            Constant En_US for LocaleCode
            </summary>
        </member>
        <member name="F:Amazon.Notifications.LocaleCode.Es_ES">
            <summary>
            Constant Es_ES for LocaleCode
            </summary>
        </member>
        <member name="F:Amazon.Notifications.LocaleCode.Fr_CA">
            <summary>
            Constant Fr_CA for LocaleCode
            </summary>
        </member>
        <member name="F:Amazon.Notifications.LocaleCode.Fr_FR">
            <summary>
            Constant Fr_FR for LocaleCode
            </summary>
        </member>
        <member name="F:Amazon.Notifications.LocaleCode.Id_ID">
            <summary>
            Constant Id_ID for LocaleCode
            </summary>
        </member>
        <member name="F:Amazon.Notifications.LocaleCode.It_IT">
            <summary>
            Constant It_IT for LocaleCode
            </summary>
        </member>
        <member name="F:Amazon.Notifications.LocaleCode.Ja_JP">
            <summary>
            Constant Ja_JP for LocaleCode
            </summary>
        </member>
        <member name="F:Amazon.Notifications.LocaleCode.Ko_KR">
            <summary>
            Constant Ko_KR for LocaleCode
            </summary>
        </member>
        <member name="F:Amazon.Notifications.LocaleCode.Pt_BR">
            <summary>
            Constant Pt_BR for LocaleCode
            </summary>
        </member>
        <member name="F:Amazon.Notifications.LocaleCode.Tr_TR">
            <summary>
            Constant Tr_TR for LocaleCode
            </summary>
        </member>
        <member name="F:Amazon.Notifications.LocaleCode.Zh_CN">
            <summary>
            Constant Zh_CN for LocaleCode
            </summary>
        </member>
        <member name="F:Amazon.Notifications.LocaleCode.Zh_TW">
            <summary>
            Constant Zh_TW for LocaleCode
            </summary>
        </member>
        <member name="M:Amazon.Notifications.LocaleCode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.LocaleCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Notifications.LocaleCode.op_Implicit(System.String)~Amazon.Notifications.LocaleCode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Notifications.MediaElementType">
            <summary>
            Constants used for properties of type MediaElementType.
            </summary>
        </member>
        <member name="F:Amazon.Notifications.MediaElementType.IMAGE">
            <summary>
            Constant IMAGE for MediaElementType
            </summary>
        </member>
        <member name="M:Amazon.Notifications.MediaElementType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.MediaElementType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Notifications.MediaElementType.op_Implicit(System.String)~Amazon.Notifications.MediaElementType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Notifications.NotificationConfigurationStatus">
            <summary>
            Constants used for properties of type NotificationConfigurationStatus.
            </summary>
        </member>
        <member name="F:Amazon.Notifications.NotificationConfigurationStatus.ACTIVE">
            <summary>
            Constant ACTIVE for NotificationConfigurationStatus
            </summary>
        </member>
        <member name="F:Amazon.Notifications.NotificationConfigurationStatus.DELETING">
            <summary>
            Constant DELETING for NotificationConfigurationStatus
            </summary>
        </member>
        <member name="F:Amazon.Notifications.NotificationConfigurationStatus.INACTIVE">
            <summary>
            Constant INACTIVE for NotificationConfigurationStatus
            </summary>
        </member>
        <member name="F:Amazon.Notifications.NotificationConfigurationStatus.PARTIALLY_ACTIVE">
            <summary>
            Constant PARTIALLY_ACTIVE for NotificationConfigurationStatus
            </summary>
        </member>
        <member name="M:Amazon.Notifications.NotificationConfigurationStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.NotificationConfigurationStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Notifications.NotificationConfigurationStatus.op_Implicit(System.String)~Amazon.Notifications.NotificationConfigurationStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Notifications.NotificationHubStatus">
            <summary>
            Constants used for properties of type NotificationHubStatus.
            </summary>
        </member>
        <member name="F:Amazon.Notifications.NotificationHubStatus.ACTIVE">
            <summary>
            Constant ACTIVE for NotificationHubStatus
            </summary>
        </member>
        <member name="F:Amazon.Notifications.NotificationHubStatus.DEREGISTERING">
            <summary>
            Constant DEREGISTERING for NotificationHubStatus
            </summary>
        </member>
        <member name="F:Amazon.Notifications.NotificationHubStatus.INACTIVE">
            <summary>
            Constant INACTIVE for NotificationHubStatus
            </summary>
        </member>
        <member name="F:Amazon.Notifications.NotificationHubStatus.REGISTERING">
            <summary>
            Constant REGISTERING for NotificationHubStatus
            </summary>
        </member>
        <member name="M:Amazon.Notifications.NotificationHubStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.NotificationHubStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Notifications.NotificationHubStatus.op_Implicit(System.String)~Amazon.Notifications.NotificationHubStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Notifications.NotificationType">
            <summary>
            Constants used for properties of type NotificationType.
            </summary>
        </member>
        <member name="F:Amazon.Notifications.NotificationType.ALERT">
            <summary>
            Constant ALERT for NotificationType
            </summary>
        </member>
        <member name="F:Amazon.Notifications.NotificationType.ANNOUNCEMENT">
            <summary>
            Constant ANNOUNCEMENT for NotificationType
            </summary>
        </member>
        <member name="F:Amazon.Notifications.NotificationType.INFORMATIONAL">
            <summary>
            Constant INFORMATIONAL for NotificationType
            </summary>
        </member>
        <member name="F:Amazon.Notifications.NotificationType.WARNING">
            <summary>
            Constant WARNING for NotificationType
            </summary>
        </member>
        <member name="M:Amazon.Notifications.NotificationType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.NotificationType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Notifications.NotificationType.op_Implicit(System.String)~Amazon.Notifications.NotificationType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Notifications.SchemaVersion">
            <summary>
            Constants used for properties of type SchemaVersion.
            </summary>
        </member>
        <member name="F:Amazon.Notifications.SchemaVersion.V10">
            <summary>
            Constant V10 for SchemaVersion
            </summary>
        </member>
        <member name="M:Amazon.Notifications.SchemaVersion.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.SchemaVersion.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Notifications.SchemaVersion.op_Implicit(System.String)~Amazon.Notifications.SchemaVersion">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Notifications.TextPartType">
            <summary>
            Constants used for properties of type TextPartType.
            </summary>
        </member>
        <member name="F:Amazon.Notifications.TextPartType.LOCALIZED_TEXT">
            <summary>
            Constant LOCALIZED_TEXT for TextPartType
            </summary>
        </member>
        <member name="F:Amazon.Notifications.TextPartType.PLAIN_TEXT">
            <summary>
            Constant PLAIN_TEXT for TextPartType
            </summary>
        </member>
        <member name="F:Amazon.Notifications.TextPartType.URL">
            <summary>
            Constant URL for TextPartType
            </summary>
        </member>
        <member name="M:Amazon.Notifications.TextPartType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.TextPartType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Notifications.TextPartType.op_Implicit(System.String)~Amazon.Notifications.TextPartType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Notifications.ValidationExceptionReason">
            <summary>
            Constants used for properties of type ValidationExceptionReason.
            </summary>
        </member>
        <member name="F:Amazon.Notifications.ValidationExceptionReason.FieldValidationFailed">
            <summary>
            Constant FieldValidationFailed for ValidationExceptionReason
            </summary>
        </member>
        <member name="F:Amazon.Notifications.ValidationExceptionReason.Other">
            <summary>
            Constant Other for ValidationExceptionReason
            </summary>
        </member>
        <member name="M:Amazon.Notifications.ValidationExceptionReason.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.ValidationExceptionReason.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Notifications.ValidationExceptionReason.op_Implicit(System.String)~Amazon.Notifications.ValidationExceptionReason">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Notifications.AmazonNotificationsClient">
             <summary>
             <para>Implementation for accessing Notifications</para>
            
             The <i>AWS User Notifications API Reference</i> provides descriptions, API request
             parameters, and the JSON response for each of the User Notification API actions.
             
              
             <para>
             User Notification control APIs are currently available in US East (Virginia) - <c>us-east-1</c>.
             </para>
              
             <para>
              <a href="https://docs.aws.amazon.com/notifications/latest/APIReference/API_GetNotificationEvent.html">GetNotificationEvent</a>
             and <a href="https://docs.aws.amazon.com/notifications/latest/APIReference/API_ListNotificationEvents.html">ListNotificationEvents</a>
             APIs are currently available in <a href="https://docs.aws.amazon.com/notifications/latest/userguide/supported-regions.html">commercial
             partition Regions</a> and only return notifications stored in the same Region in which
             they're called.
             </para>
              
             <para>
             The User Notifications console can only be used in US East (Virginia). Your data however,
             is stored in each Region chosen as a <a href="https://docs.aws.amazon.com/notifications/latest/userguide/notification-hubs.html&gt;">notification
             hub</a> in addition to US East (Virginia).
             </para>
             </summary>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.#ctor">
             <summary>
             Constructs AmazonNotificationsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonNotificationsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.#ctor(Amazon.Notifications.AmazonNotificationsConfig)">
             <summary>
             Constructs AmazonNotificationsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonNotificationsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonNotificationsClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonNotificationsClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.Notifications.AmazonNotificationsConfig)">
            <summary>
            Constructs AmazonNotificationsClient with AWS Credentials and an
            AmazonNotificationsClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonNotificationsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonNotificationsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonNotificationsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.#ctor(System.String,System.String,Amazon.Notifications.AmazonNotificationsConfig)">
            <summary>
            Constructs AmazonNotificationsClient with AWS Access Key ID, AWS Secret Key and an
            AmazonNotificationsClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonNotificationsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonNotificationsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonNotificationsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.#ctor(System.String,System.String,System.String,Amazon.Notifications.AmazonNotificationsConfig)">
            <summary>
            Constructs AmazonNotificationsClient with AWS Access Key ID, AWS Secret Key and an
            AmazonNotificationsClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonNotificationsClient Configuration Object</param>
        </member>
        <member name="P:Amazon.Notifications.AmazonNotificationsClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.Notifications.AmazonNotificationsClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.AssociateChannelAsync(Amazon.Notifications.Model.AssociateChannelRequest,System.Threading.CancellationToken)">
            <summary>
            Associates a delivery <a href="https://docs.aws.amazon.com/notifications/latest/userguide/managing-delivery-channels.html">Channel</a>
            with a particular NotificationConfiguration. Supported Channels include AWS Chatbot,
            the AWS Console Mobile Application, and emails (notifications-contacts).
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateChannel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AssociateChannel service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ServiceQuotaExceededException">
            Request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/AssociateChannel">REST API Reference for AssociateChannel Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.CreateEventRuleAsync(Amazon.Notifications.Model.CreateEventRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an <a href="https://docs.aws.amazon.com/notifications/latest/userguide/glossary.html">EventRule</a>
            that is associated with a specified Notification Configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateEventRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateEventRule service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ServiceQuotaExceededException">
            Request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/CreateEventRule">REST API Reference for CreateEventRule Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.CreateNotificationConfigurationAsync(Amazon.Notifications.Model.CreateNotificationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new NotificationConfiguration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateNotificationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateNotificationConfiguration service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ServiceQuotaExceededException">
            Request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/CreateNotificationConfiguration">REST API Reference for CreateNotificationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.DeleteEventRuleAsync(Amazon.Notifications.Model.DeleteEventRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an EventRule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteEventRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteEventRule service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/DeleteEventRule">REST API Reference for DeleteEventRule Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.DeleteNotificationConfigurationAsync(Amazon.Notifications.Model.DeleteNotificationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a NotificationConfiguration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteNotificationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteNotificationConfiguration service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/DeleteNotificationConfiguration">REST API Reference for DeleteNotificationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.DeregisterNotificationHubAsync(Amazon.Notifications.Model.DeregisterNotificationHubRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters a NotificationHub in the specified Region.
            
             <note> 
            <para>
            You can't deregister the last NotificationHub in the account. NotificationEvents stored
            in the deregistered NotificationHub are no longer be visible. Recreating a new NotificationHub
            in the same Region restores access to those NotificationEvents.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterNotificationHub service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterNotificationHub service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/DeregisterNotificationHub">REST API Reference for DeregisterNotificationHub Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.DisassociateChannelAsync(Amazon.Notifications.Model.DisassociateChannelRequest,System.Threading.CancellationToken)">
            <summary>
            Disassociates a Channel from a specified NotificationConfiguration. Supported Channels
            include AWS Chatbot, the AWS Console Mobile Application, and emails (notifications-contacts).
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisassociateChannel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DisassociateChannel service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/DisassociateChannel">REST API Reference for DisassociateChannel Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.GetEventRuleAsync(Amazon.Notifications.Model.GetEventRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a specified EventRule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetEventRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetEventRule service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/GetEventRule">REST API Reference for GetEventRule Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.GetNotificationConfigurationAsync(Amazon.Notifications.Model.GetNotificationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a specified NotificationConfiguration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetNotificationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetNotificationConfiguration service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/GetNotificationConfiguration">REST API Reference for GetNotificationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.GetNotificationEventAsync(Amazon.Notifications.Model.GetNotificationEventRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a specified NotificationEvent.
            
             <important> 
            <para>
            User Notifications stores notifications in the individual Regions you register as
            notification hubs and the Region of the source event rule. GetNotificationEvent only
            returns notifications stored in the same Region in which the action is called. User
            Notifications doesn't backfill notifications to new Regions selected as notification
            hubs. For this reason, we recommend that you make calls in your oldest registered
            notification hub. For more information, see <a href="https://docs.aws.amazon.com/notifications/latest/userguide/notification-hubs.html">Notification
            hubs</a> in the <i>AWS User Notifications User Guide</i>.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetNotificationEvent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetNotificationEvent service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/GetNotificationEvent">REST API Reference for GetNotificationEvent Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.ListChannelsAsync(Amazon.Notifications.Model.ListChannelsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of Channels for a NotificationConfiguration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListChannels service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListChannels service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/ListChannels">REST API Reference for ListChannels Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.ListEventRulesAsync(Amazon.Notifications.Model.ListEventRulesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of EventRules according to specified filters, in reverse chronological
            order (newest first).
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListEventRules service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListEventRules service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/ListEventRules">REST API Reference for ListEventRules Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.ListNotificationConfigurationsAsync(Amazon.Notifications.Model.ListNotificationConfigurationsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of abbreviated NotificationConfigurations according to specified filters,
            in reverse chronological order (newest first).
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListNotificationConfigurations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListNotificationConfigurations service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/ListNotificationConfigurations">REST API Reference for ListNotificationConfigurations Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.ListNotificationEventsAsync(Amazon.Notifications.Model.ListNotificationEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of NotificationEvents according to specified filters, in reverse chronological
            order (newest first).
            
             <important> 
            <para>
            User Notifications stores notifications in the individual Regions you register as
            notification hubs and the Region of the source event rule. ListNotificationEvents
            only returns notifications stored in the same Region in which the action is called.
            User Notifications doesn't backfill notifications to new Regions selected as notification
            hubs. For this reason, we recommend that you make calls in your oldest registered
            notification hub. For more information, see <a href="https://docs.aws.amazon.com/notifications/latest/userguide/notification-hubs.html">Notification
            hubs</a> in the <i>AWS User Notifications User Guide</i>.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListNotificationEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListNotificationEvents service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/ListNotificationEvents">REST API Reference for ListNotificationEvents Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.ListNotificationHubsAsync(Amazon.Notifications.Model.ListNotificationHubsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of NotificationHubs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListNotificationHubs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListNotificationHubs service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/ListNotificationHubs">REST API Reference for ListNotificationHubs Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.ListTagsForResourceAsync(Amazon.Notifications.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of tags for a specified Amazon Resource Name (ARN).
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html">Tagging
            your AWS resources</a> in the <i>Tagging AWS Resources User Guide</i>.
            </para>
             <note> 
            <para>
            This is only supported for NotificationConfigurations.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.RegisterNotificationHubAsync(Amazon.Notifications.Model.RegisterNotificationHubRequest,System.Threading.CancellationToken)">
            <summary>
            Registers a NotificationHub in the specified Region.
            
             
            <para>
            There is a maximum of one NotificationHub per Region. You can have a maximum of 3
            NotificationHubs at a time.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterNotificationHub service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterNotificationHub service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ServiceQuotaExceededException">
            Request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/RegisterNotificationHub">REST API Reference for RegisterNotificationHub Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.TagResourceAsync(Amazon.Notifications.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Tags the resource with a tag key and value.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html">Tagging
            your AWS resources</a> in the <i>Tagging AWS Resources User Guide</i>.
            </para>
             <note> 
            <para>
            This is only supported for NotificationConfigurations.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.UntagResourceAsync(Amazon.Notifications.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Untags a resource with a specified Amazon Resource Name (ARN).
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html">Tagging
            your AWS resources</a> in the <i>Tagging AWS Resources User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.UpdateEventRuleAsync(Amazon.Notifications.Model.UpdateEventRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an existing EventRule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateEventRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateEventRule service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/UpdateEventRule">REST API Reference for UpdateEventRule Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.UpdateNotificationConfigurationAsync(Amazon.Notifications.Model.UpdateNotificationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a NotificationConfiguration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateNotificationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateNotificationConfiguration service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/UpdateNotificationConfiguration">REST API Reference for UpdateNotificationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.AmazonNotificationsClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.Notifications.IAmazonNotifications">
             <summary>
             <para>Interface for accessing Notifications</para>
            
             The <i>AWS User Notifications API Reference</i> provides descriptions, API request
             parameters, and the JSON response for each of the User Notification API actions.
             
              
             <para>
             User Notification control APIs are currently available in US East (Virginia) - <c>us-east-1</c>.
             </para>
              
             <para>
              <a href="https://docs.aws.amazon.com/notifications/latest/APIReference/API_GetNotificationEvent.html">GetNotificationEvent</a>
             and <a href="https://docs.aws.amazon.com/notifications/latest/APIReference/API_ListNotificationEvents.html">ListNotificationEvents</a>
             APIs are currently available in <a href="https://docs.aws.amazon.com/notifications/latest/userguide/supported-regions.html">commercial
             partition Regions</a> and only return notifications stored in the same Region in which
             they're called.
             </para>
              
             <para>
             The User Notifications console can only be used in US East (Virginia). Your data however,
             is stored in each Region chosen as a <a href="https://docs.aws.amazon.com/notifications/latest/userguide/notification-hubs.html&gt;">notification
             hub</a> in addition to US East (Virginia).
             </para>
             </summary>
        </member>
        <member name="P:Amazon.Notifications.IAmazonNotifications.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.Notifications.IAmazonNotifications.AssociateChannelAsync(Amazon.Notifications.Model.AssociateChannelRequest,System.Threading.CancellationToken)">
            <summary>
            Associates a delivery <a href="https://docs.aws.amazon.com/notifications/latest/userguide/managing-delivery-channels.html">Channel</a>
            with a particular NotificationConfiguration. Supported Channels include AWS Chatbot,
            the AWS Console Mobile Application, and emails (notifications-contacts).
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateChannel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AssociateChannel service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ServiceQuotaExceededException">
            Request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/AssociateChannel">REST API Reference for AssociateChannel Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.IAmazonNotifications.CreateEventRuleAsync(Amazon.Notifications.Model.CreateEventRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an <a href="https://docs.aws.amazon.com/notifications/latest/userguide/glossary.html">EventRule</a>
            that is associated with a specified Notification Configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateEventRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateEventRule service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ServiceQuotaExceededException">
            Request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/CreateEventRule">REST API Reference for CreateEventRule Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.IAmazonNotifications.CreateNotificationConfigurationAsync(Amazon.Notifications.Model.CreateNotificationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new NotificationConfiguration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateNotificationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateNotificationConfiguration service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ServiceQuotaExceededException">
            Request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/CreateNotificationConfiguration">REST API Reference for CreateNotificationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.IAmazonNotifications.DeleteEventRuleAsync(Amazon.Notifications.Model.DeleteEventRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an EventRule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteEventRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteEventRule service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/DeleteEventRule">REST API Reference for DeleteEventRule Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.IAmazonNotifications.DeleteNotificationConfigurationAsync(Amazon.Notifications.Model.DeleteNotificationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a NotificationConfiguration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteNotificationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteNotificationConfiguration service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/DeleteNotificationConfiguration">REST API Reference for DeleteNotificationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.IAmazonNotifications.DeregisterNotificationHubAsync(Amazon.Notifications.Model.DeregisterNotificationHubRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters a NotificationHub in the specified Region.
            
             <note> 
            <para>
            You can't deregister the last NotificationHub in the account. NotificationEvents stored
            in the deregistered NotificationHub are no longer be visible. Recreating a new NotificationHub
            in the same Region restores access to those NotificationEvents.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterNotificationHub service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterNotificationHub service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/DeregisterNotificationHub">REST API Reference for DeregisterNotificationHub Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.IAmazonNotifications.DisassociateChannelAsync(Amazon.Notifications.Model.DisassociateChannelRequest,System.Threading.CancellationToken)">
            <summary>
            Disassociates a Channel from a specified NotificationConfiguration. Supported Channels
            include AWS Chatbot, the AWS Console Mobile Application, and emails (notifications-contacts).
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisassociateChannel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DisassociateChannel service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/DisassociateChannel">REST API Reference for DisassociateChannel Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.IAmazonNotifications.GetEventRuleAsync(Amazon.Notifications.Model.GetEventRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a specified EventRule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetEventRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetEventRule service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/GetEventRule">REST API Reference for GetEventRule Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.IAmazonNotifications.GetNotificationConfigurationAsync(Amazon.Notifications.Model.GetNotificationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a specified NotificationConfiguration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetNotificationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetNotificationConfiguration service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/GetNotificationConfiguration">REST API Reference for GetNotificationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.IAmazonNotifications.GetNotificationEventAsync(Amazon.Notifications.Model.GetNotificationEventRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a specified NotificationEvent.
            
             <important> 
            <para>
            User Notifications stores notifications in the individual Regions you register as
            notification hubs and the Region of the source event rule. GetNotificationEvent only
            returns notifications stored in the same Region in which the action is called. User
            Notifications doesn't backfill notifications to new Regions selected as notification
            hubs. For this reason, we recommend that you make calls in your oldest registered
            notification hub. For more information, see <a href="https://docs.aws.amazon.com/notifications/latest/userguide/notification-hubs.html">Notification
            hubs</a> in the <i>AWS User Notifications User Guide</i>.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetNotificationEvent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetNotificationEvent service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/GetNotificationEvent">REST API Reference for GetNotificationEvent Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.IAmazonNotifications.ListChannelsAsync(Amazon.Notifications.Model.ListChannelsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of Channels for a NotificationConfiguration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListChannels service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListChannels service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/ListChannels">REST API Reference for ListChannels Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.IAmazonNotifications.ListEventRulesAsync(Amazon.Notifications.Model.ListEventRulesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of EventRules according to specified filters, in reverse chronological
            order (newest first).
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListEventRules service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListEventRules service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/ListEventRules">REST API Reference for ListEventRules Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.IAmazonNotifications.ListNotificationConfigurationsAsync(Amazon.Notifications.Model.ListNotificationConfigurationsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of abbreviated NotificationConfigurations according to specified filters,
            in reverse chronological order (newest first).
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListNotificationConfigurations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListNotificationConfigurations service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/ListNotificationConfigurations">REST API Reference for ListNotificationConfigurations Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.IAmazonNotifications.ListNotificationEventsAsync(Amazon.Notifications.Model.ListNotificationEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of NotificationEvents according to specified filters, in reverse chronological
            order (newest first).
            
             <important> 
            <para>
            User Notifications stores notifications in the individual Regions you register as
            notification hubs and the Region of the source event rule. ListNotificationEvents
            only returns notifications stored in the same Region in which the action is called.
            User Notifications doesn't backfill notifications to new Regions selected as notification
            hubs. For this reason, we recommend that you make calls in your oldest registered
            notification hub. For more information, see <a href="https://docs.aws.amazon.com/notifications/latest/userguide/notification-hubs.html">Notification
            hubs</a> in the <i>AWS User Notifications User Guide</i>.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListNotificationEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListNotificationEvents service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/ListNotificationEvents">REST API Reference for ListNotificationEvents Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.IAmazonNotifications.ListNotificationHubsAsync(Amazon.Notifications.Model.ListNotificationHubsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of NotificationHubs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListNotificationHubs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListNotificationHubs service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/ListNotificationHubs">REST API Reference for ListNotificationHubs Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.IAmazonNotifications.ListTagsForResourceAsync(Amazon.Notifications.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of tags for a specified Amazon Resource Name (ARN).
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html">Tagging
            your AWS resources</a> in the <i>Tagging AWS Resources User Guide</i>.
            </para>
             <note> 
            <para>
            This is only supported for NotificationConfigurations.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.IAmazonNotifications.RegisterNotificationHubAsync(Amazon.Notifications.Model.RegisterNotificationHubRequest,System.Threading.CancellationToken)">
            <summary>
            Registers a NotificationHub in the specified Region.
            
             
            <para>
            There is a maximum of one NotificationHub per Region. You can have a maximum of 3
            NotificationHubs at a time.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterNotificationHub service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterNotificationHub service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ServiceQuotaExceededException">
            Request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/RegisterNotificationHub">REST API Reference for RegisterNotificationHub Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.IAmazonNotifications.TagResourceAsync(Amazon.Notifications.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Tags the resource with a tag key and value.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html">Tagging
            your AWS resources</a> in the <i>Tagging AWS Resources User Guide</i>.
            </para>
             <note> 
            <para>
            This is only supported for NotificationConfigurations.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.IAmazonNotifications.UntagResourceAsync(Amazon.Notifications.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Untags a resource with a specified Amazon Resource Name (ARN).
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html">Tagging
            your AWS resources</a> in the <i>Tagging AWS Resources User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.IAmazonNotifications.UpdateEventRuleAsync(Amazon.Notifications.Model.UpdateEventRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an existing EventRule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateEventRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateEventRule service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/UpdateEventRule">REST API Reference for UpdateEventRule Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.IAmazonNotifications.UpdateNotificationConfigurationAsync(Amazon.Notifications.Model.UpdateNotificationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a NotificationConfiguration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateNotificationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateNotificationConfiguration service method, as returned by Notifications.</returns>
            <exception cref="T:Amazon.Notifications.Model.AccessDeniedException">
            User does not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.InternalServerException">
            Unexpected error during processing of request.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ResourceNotFoundException">
            Request references a resource which does not exist.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ThrottlingException">
            Request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.Notifications.Model.ValidationException">
            This exception is thrown when the notification event fails validation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/notifications-2018-05-10/UpdateNotificationConfiguration">REST API Reference for UpdateNotificationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.Notifications.IAmazonNotifications.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
