<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.LicenseManagerUserSubscriptions</name>
    </assembly>
    <members>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsConfig">
            <summary>
            Configuration for accessing Amazon LicenseManagerUserSubscriptions service
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon LicenseManagerUserSubscriptions service
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            LicenseManagerUserSubscriptions
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Endpoints.LicenseManagerUserSubscriptionsEndpointParameters">
            <summary>
            Contains parameters used for resolving LicenseManagerUserSubscriptions endpoints
            Parameters can be sourced from client config and service operations
            Used by internal LicenseManagerUserSubscriptionsEndpointProvider and LicenseManagerUserSubscriptionsEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Endpoints.LicenseManagerUserSubscriptionsEndpointParameters.#ctor">
            <summary>
            LicenseManagerUserSubscriptionsEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Endpoints.LicenseManagerUserSubscriptionsEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Endpoints.LicenseManagerUserSubscriptionsEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Endpoints.LicenseManagerUserSubscriptionsEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Endpoints.LicenseManagerUserSubscriptionsEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsException">
            <summary>
             Common exception for the LicenseManagerUserSubscriptions service.
             </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonLicenseManagerUserSubscriptionsException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonLicenseManagerUserSubscriptionsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonLicenseManagerUserSubscriptionsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonLicenseManagerUserSubscriptionsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonLicenseManagerUserSubscriptionsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Internal.AmazonLicenseManagerUserSubscriptionsEndpointProvider">
            <summary>
            Amazon LicenseManagerUserSubscriptions endpoint provider.
            Resolves endpoint for given set of LicenseManagerUserSubscriptionsEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Internal.AmazonLicenseManagerUserSubscriptionsEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for LicenseManagerUserSubscriptionsEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Internal.AmazonLicenseManagerUserSubscriptionsEndpointResolver">
            <summary>
            Amazon LicenseManagerUserSubscriptions endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for LicenseManagerUserSubscriptions service requests.
            Collects values for LicenseManagerUserSubscriptionsEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses LicenseManagerUserSubscriptionsEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Internal.AmazonLicenseManagerUserSubscriptionsMetadata">
            <summary>
            Service metadata for  Amazon LicenseManagerUserSubscriptions service
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Internal.AmazonLicenseManagerUserSubscriptionsMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Internal.AmazonLicenseManagerUserSubscriptionsMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            <summary>
            You don't have sufficient access to perform this action.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ActiveDirectoryIdentityProvider">
            <summary>
            Details about an Active Directory identity provider.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ActiveDirectoryIdentityProvider.ActiveDirectorySettings">
            <summary>
            Gets and sets the property ActiveDirectorySettings. 
            <para>
            The <c>ActiveDirectorySettings</c> resource contains details about the Active Directory,
            including network access details such as domain name and IP addresses, and the credential
            provider for user administration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ActiveDirectoryIdentityProvider.ActiveDirectoryType">
            <summary>
            Gets and sets the property ActiveDirectoryType. 
            <para>
            The type of Active Directory – either a self-managed Active Directory or an Amazon
            Web Services Managed Active Directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ActiveDirectoryIdentityProvider.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The directory ID for an Active Directory identity provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ActiveDirectorySettings">
            <summary>
            Contains network access and credential details that are needed for user administration
            in the Active Directory.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ActiveDirectorySettings.DomainCredentialsProvider">
            <summary>
            Gets and sets the property DomainCredentialsProvider. 
            <para>
            Points to the <c>CredentialsProvider</c> resource that contains information about
            the credential provider for user administration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ActiveDirectorySettings.DomainIpv4List">
            <summary>
            Gets and sets the property DomainIpv4List. 
            <para>
            A list of domain IPv4 addresses that are used for the Active Directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ActiveDirectorySettings.DomainName">
            <summary>
            Gets and sets the property DomainName. 
            <para>
            The domain name for the Active Directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ActiveDirectorySettings.DomainNetworkSettings">
            <summary>
            Gets and sets the property DomainNetworkSettings. 
            <para>
            The <c>DomainNetworkSettings</c> resource contains an array of subnets that apply
            for the Active Directory.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.AssociateUserRequest">
            <summary>
            Container for the parameters to the AssociateUser operation.
            Associates the user to an EC2 instance to utilize user-based subscriptions.
            
             <note> 
            <para>
            Your estimated bill for charges on the number of users and related costs will take
            48 hours to appear for billing periods that haven't closed (marked as <b>Pending</b>
            billing status) in Amazon Web Services Billing. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/invoice.html">Viewing
            your monthly charges</a> in the <i>Amazon Web Services Billing User Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.AssociateUserRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The domain name of the Active Directory that contains information for the user to
            associate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.AssociateUserRequest.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            The identity provider for the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.AssociateUserRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the EC2 instance that provides the user-based subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.AssociateUserRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags that apply for the user association.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.AssociateUserRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name from the identity provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.AssociateUserResponse">
            <summary>
            This is the response object from the AssociateUser operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.AssociateUserResponse.InstanceUserSummary">
            <summary>
            Gets and sets the property InstanceUserSummary. 
            <para>
            Metadata that describes the associate user operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            <summary>
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.CreateLicenseServerEndpointRequest">
            <summary>
            Container for the parameters to the CreateLicenseServerEndpoint operation.
            Creates a network endpoint for the Remote Desktop Services (RDS) license server.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.CreateLicenseServerEndpointRequest.IdentityProviderArn">
            <summary>
            Gets and sets the property IdentityProviderArn. 
            <para>
            The Amazon Resource Name (ARN) that identifies the <c>IdentityProvider</c> resource
            that contains details about a registered identity provider. In the case of Active
            Directory, that can be a self-managed Active Directory or an Amazon Web Services Managed
            Active Directory that contains user identity details.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.CreateLicenseServerEndpointRequest.LicenseServerSettings">
            <summary>
            Gets and sets the property LicenseServerSettings. 
            <para>
            The <c>LicenseServerSettings</c> resource to create for the endpoint. The settings
            include the type of license server and the Secrets Manager secret that enables administrators
            to add or remove users associated with the license server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.CreateLicenseServerEndpointRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags that apply for the license server endpoint.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.CreateLicenseServerEndpointResponse">
            <summary>
            This is the response object from the CreateLicenseServerEndpoint operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.CreateLicenseServerEndpointResponse.IdentityProviderArn">
            <summary>
            Gets and sets the property IdentityProviderArn. 
            <para>
            The Amazon Resource Name (ARN) of the identity provider specified in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.CreateLicenseServerEndpointResponse.LicenseServerEndpointArn">
            <summary>
            Gets and sets the property LicenseServerEndpointArn. 
            <para>
            The ARN of the <c>LicenseServerEndpoint</c> resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.CredentialsProvider">
            <summary>
            Contains information about the credential provider for user administration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.CredentialsProvider.SecretsManagerCredentialsProvider">
            <summary>
            Gets and sets the property SecretsManagerCredentialsProvider. 
            <para>
            Identifies the Secrets Manager secret that contains credentials needed for user administration
            in the Active Directory.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.DeleteLicenseServerEndpointRequest">
            <summary>
            Container for the parameters to the DeleteLicenseServerEndpoint operation.
            Deletes a <c>LicenseServerEndpoint</c> resource.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.DeleteLicenseServerEndpointRequest.LicenseServerEndpointArn">
            <summary>
            Gets and sets the property LicenseServerEndpointArn. 
            <para>
            The Amazon Resource Name (ARN) that identifies the <c>LicenseServerEndpoint</c> resource
            to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.DeleteLicenseServerEndpointRequest.ServerType">
            <summary>
            Gets and sets the property ServerType. 
            <para>
            The type of License Server that the delete request refers to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.DeleteLicenseServerEndpointResponse">
            <summary>
            This is the response object from the DeleteLicenseServerEndpoint operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.DeleteLicenseServerEndpointResponse.LicenseServerEndpoint">
            <summary>
            Gets and sets the property LicenseServerEndpoint. 
            <para>
            Shows details from the <c>LicenseServerEndpoint</c> resource that was deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.DeregisterIdentityProviderRequest">
            <summary>
            Container for the parameters to the DeregisterIdentityProvider operation.
            Deregisters the Active Directory identity provider from License Manager user-based
            subscriptions.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.DeregisterIdentityProviderRequest.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            An object that specifies details for the Active Directory identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.DeregisterIdentityProviderRequest.IdentityProviderArn">
            <summary>
            Gets and sets the property IdentityProviderArn. 
            <para>
            The Amazon Resource Name (ARN) that identifies the identity provider to deregister.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.DeregisterIdentityProviderRequest.Product">
            <summary>
            Gets and sets the property Product. 
            <para>
            The name of the user-based subscription product.
            </para>
             
            <para>
            Valid values: <c>VISUAL_STUDIO_ENTERPRISE</c> | <c>VISUAL_STUDIO_PROFESSIONAL</c>
            | <c>OFFICE_PROFESSIONAL_PLUS</c> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.DeregisterIdentityProviderResponse">
            <summary>
            This is the response object from the DeregisterIdentityProvider operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.DeregisterIdentityProviderResponse.IdentityProviderSummary">
            <summary>
            Gets and sets the property IdentityProviderSummary. 
            <para>
            Metadata that describes the results of an identity provider operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.DisassociateUserRequest">
            <summary>
            Container for the parameters to the DisassociateUser operation.
            Disassociates the user from an EC2 instance providing user-based subscriptions.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.DisassociateUserRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The domain name of the Active Directory that contains information for the user to
            disassociate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.DisassociateUserRequest.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            An object that specifies details for the Active Directory identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.DisassociateUserRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the EC2 instance which provides user-based subscriptions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.DisassociateUserRequest.InstanceUserArn">
            <summary>
            Gets and sets the property InstanceUserArn. 
            <para>
            The Amazon Resource Name (ARN) of the user to disassociate from the EC2 instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.DisassociateUserRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name from the Active Directory identity provider for the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.DisassociateUserResponse">
            <summary>
            This is the response object from the DisassociateUser operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.DisassociateUserResponse.InstanceUserSummary">
            <summary>
            Gets and sets the property InstanceUserSummary. 
            <para>
            Metadata that describes the associate user operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.DomainNetworkSettings">
            <summary>
            Contains network settings for the Active Directory domain.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.DomainNetworkSettings.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
            Contains a list of subnets that apply for the Active Directory domain.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Filter">
            <summary>
            A filter name and value pair that is used to return more specific results from a describe
            or list operation. You can use filters can be used to match a set of resources by
            specific criteria, such as tags, attributes, or IDs.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Filter.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The name of an attribute to use as a filter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Filter.Operation">
            <summary>
            Gets and sets the property Operation. 
            <para>
            The type of search (For example, eq, geq, leq)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Filter.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Value of the filter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.IdentityProvider">
            <summary>
            Refers to an identity provider.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IdentityProvider.ActiveDirectoryIdentityProvider">
            <summary>
            Gets and sets the property ActiveDirectoryIdentityProvider. 
            <para>
            The <c>ActiveDirectoryIdentityProvider</c> resource contains settings and other details
            about a specific Active Directory identity provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.IdentityProviderSummary">
            <summary>
            Describes an identity provider.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IdentityProviderSummary.FailureMessage">
            <summary>
            Gets and sets the property FailureMessage. 
            <para>
            The failure message associated with an identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IdentityProviderSummary.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            The <c>IdentityProvider</c> resource contains information about an identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IdentityProviderSummary.IdentityProviderArn">
            <summary>
            Gets and sets the property IdentityProviderArn. 
            <para>
            The Amazon Resource Name (ARN) of the identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IdentityProviderSummary.Product">
            <summary>
            Gets and sets the property Product. 
            <para>
            The name of the user-based subscription product.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IdentityProviderSummary.Settings">
            <summary>
            Gets and sets the property Settings. 
            <para>
            The <c>Settings</c> resource contains details about the registered identity provider’s
            product related configuration settings, such as the subnets to provision VPC endpoints.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IdentityProviderSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the identity provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.InstanceSummary">
            <summary>
            Describes an EC2 instance providing user-based subscriptions.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceSummary.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the EC2 instance, which provides user-based subscriptions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceSummary.LastStatusCheckDate">
            <summary>
            Gets and sets the property LastStatusCheckDate. 
            <para>
            The date of the last status check.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceSummary.Products">
            <summary>
            Gets and sets the property Products. 
            <para>
            A list of provided user-based subscription products.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of an EC2 instance resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceSummary.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            The status message for an EC2 instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.InstanceUserSummary">
            <summary>
            Describes users of an EC2 instance providing user-based subscriptions.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceUserSummary.AssociationDate">
            <summary>
            Gets and sets the property AssociationDate. 
            <para>
            The date a user was associated with an EC2 instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceUserSummary.DisassociationDate">
            <summary>
            Gets and sets the property DisassociationDate. 
            <para>
            The date a user was disassociated from an EC2 instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceUserSummary.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The domain name of the Active Directory that contains the user information for the
            product subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceUserSummary.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            The <c>IdentityProvider</c> resource specifies details about the identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceUserSummary.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the EC2 instance that provides user-based subscriptions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceUserSummary.InstanceUserArn">
            <summary>
            Gets and sets the property InstanceUserArn. 
            <para>
            The Amazon Resource Name (ARN) that identifies the instance user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceUserSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of a user associated with an EC2 instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceUserSummary.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            The status message for users of an EC2 instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceUserSummary.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name from the identity provider for the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            <summary>
            An exception occurred with the service.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ActiveDirectoryIdentityProviderMarshaller">
            <summary>
            ActiveDirectoryIdentityProvider Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ActiveDirectoryIdentityProviderMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.ActiveDirectoryIdentityProvider,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ActiveDirectoryIdentityProviderMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ActiveDirectoryIdentityProviderUnmarshaller">
            <summary>
            Response Unmarshaller for ActiveDirectoryIdentityProvider Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ActiveDirectoryIdentityProviderUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManagerUserSubscriptions#Model#ActiveDirectoryIdentityProvider,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ActiveDirectoryIdentityProviderUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ActiveDirectoryIdentityProviderUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ActiveDirectorySettingsMarshaller">
            <summary>
            ActiveDirectorySettings Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ActiveDirectorySettingsMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.ActiveDirectorySettings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ActiveDirectorySettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ActiveDirectorySettingsUnmarshaller">
            <summary>
            Response Unmarshaller for ActiveDirectorySettings Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ActiveDirectorySettingsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManagerUserSubscriptions#Model#ActiveDirectorySettings,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ActiveDirectorySettingsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ActiveDirectorySettingsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AssociateUserRequestMarshaller">
            <summary>
            AssociateUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AssociateUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AssociateUserRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.AssociateUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AssociateUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AssociateUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AssociateUser operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AssociateUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AssociateUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AssociateUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.CreateLicenseServerEndpointRequestMarshaller">
            <summary>
            CreateLicenseServerEndpoint Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.CreateLicenseServerEndpointRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.CreateLicenseServerEndpointRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.CreateLicenseServerEndpointRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.CreateLicenseServerEndpointRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.CreateLicenseServerEndpointResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLicenseServerEndpoint operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.CreateLicenseServerEndpointResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.CreateLicenseServerEndpointResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.CreateLicenseServerEndpointResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.CredentialsProviderMarshaller">
            <summary>
            CredentialsProvider Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.CredentialsProviderMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.CredentialsProvider,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.CredentialsProviderMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.CredentialsProviderUnmarshaller">
            <summary>
            Response Unmarshaller for CredentialsProvider Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.CredentialsProviderUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManagerUserSubscriptions#Model#CredentialsProvider,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.CredentialsProviderUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.CredentialsProviderUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeleteLicenseServerEndpointRequestMarshaller">
            <summary>
            DeleteLicenseServerEndpoint Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeleteLicenseServerEndpointRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeleteLicenseServerEndpointRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.DeleteLicenseServerEndpointRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeleteLicenseServerEndpointRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeleteLicenseServerEndpointResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLicenseServerEndpoint operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeleteLicenseServerEndpointResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeleteLicenseServerEndpointResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeleteLicenseServerEndpointResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeregisterIdentityProviderRequestMarshaller">
            <summary>
            DeregisterIdentityProvider Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeregisterIdentityProviderRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeregisterIdentityProviderRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.DeregisterIdentityProviderRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeregisterIdentityProviderRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeregisterIdentityProviderResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeregisterIdentityProvider operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeregisterIdentityProviderResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeregisterIdentityProviderResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeregisterIdentityProviderResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DisassociateUserRequestMarshaller">
            <summary>
            DisassociateUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DisassociateUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DisassociateUserRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.DisassociateUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DisassociateUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DisassociateUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisassociateUser operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DisassociateUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DisassociateUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DisassociateUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DomainNetworkSettingsMarshaller">
            <summary>
            DomainNetworkSettings Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DomainNetworkSettingsMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.DomainNetworkSettings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DomainNetworkSettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DomainNetworkSettingsUnmarshaller">
            <summary>
            Response Unmarshaller for DomainNetworkSettings Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DomainNetworkSettingsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManagerUserSubscriptions#Model#DomainNetworkSettings,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DomainNetworkSettingsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DomainNetworkSettingsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.FilterMarshaller">
            <summary>
            Filter Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.FilterMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.Filter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.FilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.IdentityProviderMarshaller">
            <summary>
            IdentityProvider Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.IdentityProviderMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.IdentityProvider,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.IdentityProviderMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.IdentityProviderSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for IdentityProviderSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.IdentityProviderSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManagerUserSubscriptions#Model#IdentityProviderSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.IdentityProviderSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.IdentityProviderSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.IdentityProviderUnmarshaller">
            <summary>
            Response Unmarshaller for IdentityProvider Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.IdentityProviderUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManagerUserSubscriptions#Model#IdentityProvider,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.IdentityProviderUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.IdentityProviderUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InstanceSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InstanceSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManagerUserSubscriptions#Model#InstanceSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InstanceSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InstanceSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InstanceUserSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceUserSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InstanceUserSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManagerUserSubscriptions#Model#InstanceUserSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InstanceUserSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InstanceUserSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.LicenseServerEndpointUnmarshaller">
            <summary>
            Response Unmarshaller for LicenseServerEndpoint Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.LicenseServerEndpointUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManagerUserSubscriptions#Model#LicenseServerEndpoint,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.LicenseServerEndpointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.LicenseServerEndpointUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.LicenseServerSettingsMarshaller">
            <summary>
            LicenseServerSettings Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.LicenseServerSettingsMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.LicenseServerSettings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.LicenseServerSettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.LicenseServerUnmarshaller">
            <summary>
            Response Unmarshaller for LicenseServer Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.LicenseServerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManagerUserSubscriptions#Model#LicenseServer,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.LicenseServerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.LicenseServerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListIdentityProvidersRequestMarshaller">
            <summary>
            ListIdentityProviders Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListIdentityProvidersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListIdentityProvidersRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListIdentityProvidersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListIdentityProvidersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListIdentityProviders operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListIdentityProvidersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListIdentityProvidersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListIdentityProvidersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListInstancesRequestMarshaller">
            <summary>
            ListInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListInstancesRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListInstancesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListLicenseServerEndpointsRequestMarshaller">
            <summary>
            ListLicenseServerEndpoints Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListLicenseServerEndpointsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListLicenseServerEndpointsRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.ListLicenseServerEndpointsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListLicenseServerEndpointsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListLicenseServerEndpointsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListLicenseServerEndpoints operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListLicenseServerEndpointsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListLicenseServerEndpointsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListLicenseServerEndpointsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListProductSubscriptionsRequestMarshaller">
            <summary>
            ListProductSubscriptions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListProductSubscriptionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListProductSubscriptionsRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListProductSubscriptionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListProductSubscriptionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListProductSubscriptions operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListProductSubscriptionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListProductSubscriptionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListProductSubscriptionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListUserAssociationsRequestMarshaller">
            <summary>
            ListUserAssociations Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListUserAssociationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListUserAssociationsRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListUserAssociationsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListUserAssociationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListUserAssociations operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListUserAssociationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListUserAssociationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListUserAssociationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ProductUserSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for ProductUserSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ProductUserSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManagerUserSubscriptions#Model#ProductUserSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ProductUserSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ProductUserSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.RdsSalSettingsMarshaller">
            <summary>
            RdsSalSettings Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.RdsSalSettingsMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.RdsSalSettings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.RdsSalSettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.RegisterIdentityProviderRequestMarshaller">
            <summary>
            RegisterIdentityProvider Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.RegisterIdentityProviderRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.RegisterIdentityProviderRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.RegisterIdentityProviderRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.RegisterIdentityProviderRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.RegisterIdentityProviderResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RegisterIdentityProvider operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.RegisterIdentityProviderResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.RegisterIdentityProviderResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.RegisterIdentityProviderResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.SecretsManagerCredentialsProviderMarshaller">
            <summary>
            SecretsManagerCredentialsProvider Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.SecretsManagerCredentialsProviderMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.SecretsManagerCredentialsProvider,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.SecretsManagerCredentialsProviderMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.SecretsManagerCredentialsProviderUnmarshaller">
            <summary>
            Response Unmarshaller for SecretsManagerCredentialsProvider Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.SecretsManagerCredentialsProviderUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManagerUserSubscriptions#Model#SecretsManagerCredentialsProvider,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.SecretsManagerCredentialsProviderUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.SecretsManagerCredentialsProviderUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ServerEndpointUnmarshaller">
            <summary>
            Response Unmarshaller for ServerEndpoint Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ServerEndpointUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManagerUserSubscriptions#Model#ServerEndpoint,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ServerEndpointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ServerEndpointUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ServerSettingsMarshaller">
            <summary>
            ServerSettings Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ServerSettingsMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.ServerSettings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ServerSettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.SettingsMarshaller">
            <summary>
            Settings Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.SettingsMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.Settings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.SettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.SettingsUnmarshaller">
            <summary>
            Response Unmarshaller for Settings Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.SettingsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManagerUserSubscriptions#Model#Settings,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.SettingsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.SettingsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StartProductSubscriptionRequestMarshaller">
            <summary>
            StartProductSubscription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StartProductSubscriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StartProductSubscriptionRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.StartProductSubscriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StartProductSubscriptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StartProductSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartProductSubscription operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StartProductSubscriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StartProductSubscriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StartProductSubscriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StopProductSubscriptionRequestMarshaller">
            <summary>
            StopProductSubscription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StopProductSubscriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StopProductSubscriptionRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.StopProductSubscriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StopProductSubscriptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StopProductSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopProductSubscription operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StopProductSubscriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StopProductSubscriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StopProductSubscriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UpdateIdentityProviderSettingsRequestMarshaller">
            <summary>
            UpdateIdentityProviderSettings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UpdateIdentityProviderSettingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UpdateIdentityProviderSettingsRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.UpdateIdentityProviderSettingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UpdateIdentityProviderSettingsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UpdateIdentityProviderSettingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateIdentityProviderSettings operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UpdateIdentityProviderSettingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UpdateIdentityProviderSettingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UpdateIdentityProviderSettingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UpdateSettingsMarshaller">
            <summary>
            UpdateSettings Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UpdateSettingsMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.UpdateSettings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UpdateSettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.LicenseServer">
            <summary>
            Information about a Remote Desktop Services (RDS) license server.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.LicenseServer.HealthStatus">
            <summary>
            Gets and sets the property HealthStatus. 
            <para>
            The health status of the RDS license server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.LicenseServer.Ipv4Address">
            <summary>
            Gets and sets the property Ipv4Address. 
            <para>
            A list of domain IPv4 addresses that are used for the RDS license server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.LicenseServer.ProvisioningStatus">
            <summary>
            Gets and sets the property ProvisioningStatus. 
            <para>
            The current state of the provisioning process for the RDS license server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.LicenseServerEndpoint">
            <summary>
            Contains details about a network endpoint for a Remote Desktop Services (RDS) license
            server.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.LicenseServerEndpoint.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The timestamp when License Manager created the license server endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.LicenseServerEndpoint.IdentityProviderArn">
            <summary>
            Gets and sets the property IdentityProviderArn. 
            <para>
            The Amazon Resource Name (ARN) of the identity provider that's associated with the
            RDS license server endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.LicenseServerEndpoint.LicenseServerEndpointArn">
            <summary>
            Gets and sets the property LicenseServerEndpointArn. 
            <para>
            The ARN of the <c>ServerEndpoint</c> resource for the RDS license server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.LicenseServerEndpoint.LicenseServerEndpointId">
            <summary>
            Gets and sets the property LicenseServerEndpointId. 
            <para>
            The ID of the license server endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.LicenseServerEndpoint.LicenseServerEndpointProvisioningStatus">
            <summary>
            Gets and sets the property LicenseServerEndpointProvisioningStatus. 
            <para>
            The current state of the provisioning process for the RDS license server endpoint
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.LicenseServerEndpoint.LicenseServers">
            <summary>
            Gets and sets the property LicenseServers. 
            <para>
            An array of <c>LicenseServer</c> resources that represent the license servers that
            are accessed through this endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.LicenseServerEndpoint.ServerEndpoint">
            <summary>
            Gets and sets the property ServerEndpoint. 
            <para>
            The <c>ServerEndpoint</c> resource contains the network address of the RDS license
            server endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.LicenseServerEndpoint.ServerType">
            <summary>
            Gets and sets the property ServerType. 
            <para>
            The type of license server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.LicenseServerEndpoint.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            The message associated with the provisioning status, if there is one.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.LicenseServerSettings">
            <summary>
            The settings to configure your license server.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.LicenseServerSettings.ServerSettings">
            <summary>
            Gets and sets the property ServerSettings. 
            <para>
            The <c>ServerSettings</c> resource contains the settings for your server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.LicenseServerSettings.ServerType">
            <summary>
            Gets and sets the property ServerType. 
            <para>
            The type of license server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersRequest">
            <summary>
            Container for the parameters to the ListIdentityProviders operation.
            Lists the Active Directory identity providers for user-based subscriptions.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            You can use the following filters to streamline results:
            </para>
             <ul> <li> 
            <para>
            Product
            </para>
             </li> <li> 
            <para>
            DirectoryId
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return from a single request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A token to specify where to start paginating. This is the nextToken from a previously
            truncated response.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersResponse">
            <summary>
            This is the response object from the ListIdentityProviders operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersResponse.IdentityProviderSummaries">
            <summary>
            Gets and sets the property IdentityProviderSummaries. 
            <para>
            An array of <c>IdentityProviderSummary</c> resources that contain details about the
            Active Directory identity providers that meet the request criteria.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The next token used for paginated responses. When this field isn't empty, there are
            additional elements that the service hasn't included in this request. Use this token
            with the next request to retrieve additional objects.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesRequest">
            <summary>
            Container for the parameters to the ListInstances operation.
            Lists the EC2 instances providing user-based subscriptions.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            You can use the following filters to streamline results:
            </para>
             <ul> <li> 
            <para>
            Status
            </para>
             </li> <li> 
            <para>
            InstanceId
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return from a single request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A token to specify where to start paginating. This is the nextToken from a previously
            truncated response.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesResponse">
            <summary>
            This is the response object from the ListInstances operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesResponse.InstanceSummaries">
            <summary>
            Gets and sets the property InstanceSummaries. 
            <para>
            An array of <c>InstanceSummary</c> resources that contain details about the instances
            that provide user-based subscriptions and also meet the request criteria.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The next token used for paginated responses. When this field isn't empty, there are
            additional elements that the service hasn't included in this request. Use this token
            with the next request to retrieve additional objects.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListLicenseServerEndpointsRequest">
            <summary>
            Container for the parameters to the ListLicenseServerEndpoints operation.
            List the Remote Desktop Services (RDS) License Server endpoints
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListLicenseServerEndpointsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            You can use the following filters to streamline results:
            </para>
             <ul> <li> 
            <para>
            IdentityProviderArn
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListLicenseServerEndpointsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return from a single request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListLicenseServerEndpointsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A token to specify where to start paginating. This is the nextToken from a previously
            truncated response.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListLicenseServerEndpointsResponse">
            <summary>
            This is the response object from the ListLicenseServerEndpoints operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListLicenseServerEndpointsResponse.LicenseServerEndpoints">
            <summary>
            Gets and sets the property LicenseServerEndpoints. 
            <para>
            An array of <c>LicenseServerEndpoint</c> resources that contain detailed information
            about the RDS License Servers that meet the request criteria.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListLicenseServerEndpointsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The next token used for paginated responses. When this field isn't empty, there are
            additional elements that the service hasn't included in this request. Use this token
            with the next request to retrieve additional objects.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsRequest">
            <summary>
            Container for the parameters to the ListProductSubscriptions operation.
            Lists the user-based subscription products available from an identity provider.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            You can use the following filters to streamline results:
            </para>
             <ul> <li> 
            <para>
            Status
            </para>
             </li> <li> 
            <para>
            Username
            </para>
             </li> <li> 
            <para>
            Domain
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsRequest.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            An object that specifies details for the identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return from a single request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A token to specify where to start paginating. This is the nextToken from a previously
            truncated response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsRequest.Product">
            <summary>
            Gets and sets the property Product. 
            <para>
            The name of the user-based subscription product.
            </para>
             
            <para>
            Valid values: <c>VISUAL_STUDIO_ENTERPRISE</c> | <c>VISUAL_STUDIO_PROFESSIONAL</c>
            | <c>OFFICE_PROFESSIONAL_PLUS</c> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsResponse">
            <summary>
            This is the response object from the ListProductSubscriptions operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The next token used for paginated responses. When this field isn't empty, there are
            additional elements that the service hasn't included in this request. Use this token
            with the next request to retrieve additional objects.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsResponse.ProductUserSummaries">
            <summary>
            Gets and sets the property ProductUserSummaries. 
            <para>
            Metadata that describes the list product subscriptions operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Returns the list of tags for the specified resource.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource whose tags you want to retrieve.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags for the specified resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsRequest">
            <summary>
            Container for the parameters to the ListUserAssociations operation.
            Lists user associations for an identity provider.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            You can use the following filters to streamline results:
            </para>
             <ul> <li> 
            <para>
            Status
            </para>
             </li> <li> 
            <para>
            Username
            </para>
             </li> <li> 
            <para>
            Domain
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsRequest.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            An object that specifies details for the identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the EC2 instance, which provides user-based subscriptions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return from a single request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A token to specify where to start paginating. This is the nextToken from a previously
            truncated response.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsResponse">
            <summary>
            This is the response object from the ListUserAssociations operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsResponse.InstanceUserSummaries">
            <summary>
            Gets and sets the property InstanceUserSummaries. 
            <para>
            Metadata that describes the list user association operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The next token used for paginated responses. When this field isn't empty, there are
            additional elements that the service hasn't included in this request. Use this token
            with the next request to retrieve additional objects.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ProductUserSummary">
            <summary>
            A summary of the user-based subscription products for a specific user.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ProductUserSummary.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The domain name of the Active Directory that contains the user information for the
            product subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ProductUserSummary.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            An object that specifies details for the identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ProductUserSummary.Product">
            <summary>
            Gets and sets the property Product. 
            <para>
            The name of the user-based subscription product.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ProductUserSummary.ProductUserArn">
            <summary>
            Gets and sets the property ProductUserArn. 
            <para>
            The Amazon Resource Name (ARN) for this product user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ProductUserSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of a product for this user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ProductUserSummary.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            The status message for a product for this user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ProductUserSummary.SubscriptionEndDate">
            <summary>
            Gets and sets the property SubscriptionEndDate. 
            <para>
            The end date of a subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ProductUserSummary.SubscriptionStartDate">
            <summary>
            Gets and sets the property SubscriptionStartDate. 
            <para>
            The start date of a subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ProductUserSummary.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name from the identity provider for this product user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.RdsSalSettings">
            <summary>
            Server settings that are specific to a Remote Desktop Services (RDS) license server.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.RdsSalSettings.RdsSalCredentialsProvider">
            <summary>
            Gets and sets the property RdsSalCredentialsProvider. 
            <para>
            The <c>CredentialsProvider</c> resource contains a reference to the credentials provider
            that's used for RDS license server user administration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.RegisterIdentityProviderRequest">
            <summary>
            Container for the parameters to the RegisterIdentityProvider operation.
            Registers an identity provider for user-based subscriptions.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.RegisterIdentityProviderRequest.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            An object that specifies details for the identity provider to register.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.RegisterIdentityProviderRequest.Product">
            <summary>
            Gets and sets the property Product. 
            <para>
            The name of the user-based subscription product.
            </para>
             
            <para>
            Valid values: <c>VISUAL_STUDIO_ENTERPRISE</c> | <c>VISUAL_STUDIO_PROFESSIONAL</c>
            | <c>OFFICE_PROFESSIONAL_PLUS</c> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.RegisterIdentityProviderRequest.Settings">
            <summary>
            Gets and sets the property Settings. 
            <para>
            The registered identity provider’s product related configuration settings such as
            the subnets to provision VPC endpoints.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.RegisterIdentityProviderRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags that apply to the identity provider's registration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.RegisterIdentityProviderResponse">
            <summary>
            This is the response object from the RegisterIdentityProvider operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.RegisterIdentityProviderResponse.IdentityProviderSummary">
            <summary>
            Gets and sets the property IdentityProviderSummary. 
            <para>
            Metadata that describes the results of an identity provider operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            <summary>
            The resource couldn't be found.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.SecretsManagerCredentialsProvider">
            <summary>
            Contains a credentials secret that's stored in Secrets Manager.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.SecretsManagerCredentialsProvider.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The ID of the Secrets Manager secret that contains credentials.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ServerEndpoint">
            <summary>
            A network endpoint through which you can access one or more servers.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ServerEndpoint.Endpoint">
            <summary>
            Gets and sets the property Endpoint. 
            <para>
            The network address of the endpoint.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ServerSettings">
            <summary>
            Contains settings for a specific server.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ServerSettings.RdsSalSettings">
            <summary>
            Gets and sets the property RdsSalSettings. 
            <para>
            The <c>RdsSalSettings</c> resource contains settings to configure a specific Remote
            Desktop Services (RDS) license server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            <summary>
            The request failed because a service quota is exceeded.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Settings">
            <summary>
            The registered identity provider’s product related configuration settings such as
            the subnets to provision VPC endpoints, and the security group ID that is associated
            with the VPC endpoints. The security group should permit inbound TCP port 1688 communication
            from resources in the VPC.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Settings.SecurityGroupId">
            <summary>
            Gets and sets the property SecurityGroupId. 
            <para>
            A security group ID that allows inbound TCP port 1688 communication between resources
            in your VPC and the VPC endpoint for activation servers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Settings.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
            The subnets defined for the registered identity provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.StartProductSubscriptionRequest">
            <summary>
            Container for the parameters to the StartProductSubscription operation.
            Starts a product subscription for a user with the specified identity provider.
            
             <note> 
            <para>
            Your estimated bill for charges on the number of users and related costs will take
            48 hours to appear for billing periods that haven't closed (marked as <b>Pending</b>
            billing status) in Amazon Web Services Billing. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/invoice.html">Viewing
            your monthly charges</a> in the <i>Amazon Web Services Billing User Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.StartProductSubscriptionRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The domain name of the Active Directory that contains the user for whom to start the
            product subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.StartProductSubscriptionRequest.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            An object that specifies details for the identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.StartProductSubscriptionRequest.Product">
            <summary>
            Gets and sets the property Product. 
            <para>
            The name of the user-based subscription product.
            </para>
             
            <para>
            Valid values: <c>VISUAL_STUDIO_ENTERPRISE</c> | <c>VISUAL_STUDIO_PROFESSIONAL</c>
            | <c>OFFICE_PROFESSIONAL_PLUS</c> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.StartProductSubscriptionRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags that apply to the product subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.StartProductSubscriptionRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name from the identity provider of the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.StartProductSubscriptionResponse">
            <summary>
            This is the response object from the StartProductSubscription operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.StartProductSubscriptionResponse.ProductUserSummary">
            <summary>
            Gets and sets the property ProductUserSummary. 
            <para>
            Metadata that describes the start product subscription operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.StopProductSubscriptionRequest">
            <summary>
            Container for the parameters to the StopProductSubscription operation.
            Stops a product subscription for a user with the specified identity provider.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.StopProductSubscriptionRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The domain name of the Active Directory that contains the user for whom to stop the
            product subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.StopProductSubscriptionRequest.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            An object that specifies details for the identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.StopProductSubscriptionRequest.Product">
            <summary>
            Gets and sets the property Product. 
            <para>
            The name of the user-based subscription product.
            </para>
             
            <para>
            Valid values: <c>VISUAL_STUDIO_ENTERPRISE</c> | <c>VISUAL_STUDIO_PROFESSIONAL</c>
            | <c>OFFICE_PROFESSIONAL_PLUS</c> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.StopProductSubscriptionRequest.ProductUserArn">
            <summary>
            Gets and sets the property ProductUserArn. 
            <para>
            The Amazon Resource Name (ARN) of the product user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.StopProductSubscriptionRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name from the identity provider for the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.StopProductSubscriptionResponse">
            <summary>
            This is the response object from the StopProductSubscription operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.StopProductSubscriptionResponse.ProductUserSummary">
            <summary>
            Gets and sets the property ProductUserSummary. 
            <para>
            Metadata that describes the start product subscription operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Adds tags to a resource.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource that you want to tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to apply to the specified resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            <summary>
            The request was denied because of request throttling. Retry the request.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes tags from a resource.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource that you want to remove tags from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            The tag keys to remove from the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.UpdateIdentityProviderSettingsRequest">
            <summary>
            Container for the parameters to the UpdateIdentityProviderSettings operation.
            Updates additional product configuration settings for the registered identity provider.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.UpdateIdentityProviderSettingsRequest.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.UpdateIdentityProviderSettingsRequest.IdentityProviderArn">
            <summary>
            Gets and sets the property IdentityProviderArn. 
            <para>
            The Amazon Resource Name (ARN) of the identity provider to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.UpdateIdentityProviderSettingsRequest.Product">
            <summary>
            Gets and sets the property Product. 
            <para>
            The name of the user-based subscription product.
            </para>
             
            <para>
            Valid values: <c>VISUAL_STUDIO_ENTERPRISE</c> | <c>VISUAL_STUDIO_PROFESSIONAL</c>
            | <c>OFFICE_PROFESSIONAL_PLUS</c> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.UpdateIdentityProviderSettingsRequest.UpdateSettings">
            <summary>
            Gets and sets the property UpdateSettings. 
            <para>
            Updates the registered identity provider’s product related configuration settings.
            You can update any combination of settings in a single operation such as the:
            </para>
             <ul> <li> 
            <para>
            Subnets which you want to add to provision VPC endpoints.
            </para>
             </li> <li> 
            <para>
            Subnets which you want to remove the VPC endpoints from.
            </para>
             </li> <li> 
            <para>
            Security group ID which permits traffic to the VPC endpoints.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.UpdateIdentityProviderSettingsResponse">
            <summary>
            This is the response object from the UpdateIdentityProviderSettings operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.UpdateIdentityProviderSettingsResponse.IdentityProviderSummary">
            <summary>
            Gets and sets the property IdentityProviderSummary.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.UpdateSettings">
            <summary>
            Updates the registered identity provider’s product related configuration settings
            such as the subnets to provision VPC endpoints.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.UpdateSettings.AddSubnets">
            <summary>
            Gets and sets the property AddSubnets. 
            <para>
            The ID of one or more subnets in which License Manager will create a VPC endpoint
            for products that require connectivity to activation servers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.UpdateSettings.RemoveSubnets">
            <summary>
            Gets and sets the property RemoveSubnets. 
            <para>
            The ID of one or more subnets to remove.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.UpdateSettings.SecurityGroupId">
            <summary>
            Gets and sets the property SecurityGroupId. 
            <para>
            A security group ID that allows inbound TCP port 1688 communication between resources
            in your VPC and the VPC endpoints for activation servers.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            <summary>
            A parameter is not valid.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ILicenseManagerUserSubscriptionsPaginatorFactory">
             <summary>
             Paginators for the LicenseManagerUserSubscriptions service
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ILicenseManagerUserSubscriptionsPaginatorFactory.ListIdentityProviders(Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersRequest)">
             <summary>
             Paginator for ListIdentityProviders operation
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ILicenseManagerUserSubscriptionsPaginatorFactory.ListInstances(Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesRequest)">
             <summary>
             Paginator for ListInstances operation
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ILicenseManagerUserSubscriptionsPaginatorFactory.ListLicenseServerEndpoints(Amazon.LicenseManagerUserSubscriptions.Model.ListLicenseServerEndpointsRequest)">
             <summary>
             Paginator for ListLicenseServerEndpoints operation
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ILicenseManagerUserSubscriptionsPaginatorFactory.ListProductSubscriptions(Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsRequest)">
             <summary>
             Paginator for ListProductSubscriptions operation
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ILicenseManagerUserSubscriptionsPaginatorFactory.ListUserAssociations(Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsRequest)">
             <summary>
             Paginator for ListUserAssociations operation
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.IListIdentityProvidersPaginator">
             <summary>
             Paginator for the ListIdentityProviders operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IListIdentityProvidersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IListIdentityProvidersPaginator.IdentityProviderSummaries">
            <summary>
            Enumerable containing all of the IdentityProviderSummaries
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.IListInstancesPaginator">
             <summary>
             Paginator for the ListInstances operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IListInstancesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IListInstancesPaginator.InstanceSummaries">
            <summary>
            Enumerable containing all of the InstanceSummaries
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.IListLicenseServerEndpointsPaginator">
             <summary>
             Paginator for the ListLicenseServerEndpoints operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IListLicenseServerEndpointsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IListLicenseServerEndpointsPaginator.LicenseServerEndpoints">
            <summary>
            Enumerable containing all of the LicenseServerEndpoints
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.IListProductSubscriptionsPaginator">
             <summary>
             Paginator for the ListProductSubscriptions operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IListProductSubscriptionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IListProductSubscriptionsPaginator.ProductUserSummaries">
            <summary>
            Enumerable containing all of the ProductUserSummaries
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.IListUserAssociationsPaginator">
             <summary>
             Paginator for the ListUserAssociations operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IListUserAssociationsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IListUserAssociationsPaginator.InstanceUserSummaries">
            <summary>
            Enumerable containing all of the InstanceUserSummaries
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.LicenseManagerUserSubscriptionsPaginatorFactory">
             <summary>
             Paginators for the LicenseManagerUserSubscriptions service
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.LicenseManagerUserSubscriptionsPaginatorFactory.ListIdentityProviders(Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersRequest)">
             <summary>
             Paginator for ListIdentityProviders operation
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.LicenseManagerUserSubscriptionsPaginatorFactory.ListInstances(Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesRequest)">
             <summary>
             Paginator for ListInstances operation
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.LicenseManagerUserSubscriptionsPaginatorFactory.ListLicenseServerEndpoints(Amazon.LicenseManagerUserSubscriptions.Model.ListLicenseServerEndpointsRequest)">
             <summary>
             Paginator for ListLicenseServerEndpoints operation
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.LicenseManagerUserSubscriptionsPaginatorFactory.ListProductSubscriptions(Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsRequest)">
             <summary>
             Paginator for ListProductSubscriptions operation
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.LicenseManagerUserSubscriptionsPaginatorFactory.ListUserAssociations(Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsRequest)">
             <summary>
             Paginator for ListUserAssociations operation
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersPaginator">
            <summary>
            Base class for ListIdentityProviders paginators.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersPaginator.IdentityProviderSummaries">
            <summary>
            Enumerable containing all of the IdentityProviderSummaries
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesPaginator">
            <summary>
            Base class for ListInstances paginators.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesPaginator.InstanceSummaries">
            <summary>
            Enumerable containing all of the InstanceSummaries
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListLicenseServerEndpointsPaginator">
            <summary>
            Base class for ListLicenseServerEndpoints paginators.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListLicenseServerEndpointsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListLicenseServerEndpointsPaginator.LicenseServerEndpoints">
            <summary>
            Enumerable containing all of the LicenseServerEndpoints
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsPaginator">
            <summary>
            Base class for ListProductSubscriptions paginators.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsPaginator.ProductUserSummaries">
            <summary>
            Enumerable containing all of the ProductUserSummaries
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsPaginator">
            <summary>
            Base class for ListUserAssociations paginators.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsPaginator.InstanceUserSummaries">
            <summary>
            Enumerable containing all of the InstanceUserSummaries
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsRequest">
            <summary>
            Base class for LicenseManagerUserSubscriptions operation requests.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.ActiveDirectoryType">
            <summary>
            Constants used for properties of type ActiveDirectoryType.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.ActiveDirectoryType.AWS_MANAGED">
            <summary>
            Constant AWS_MANAGED for ActiveDirectoryType
            </summary>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.ActiveDirectoryType.SELF_MANAGED">
            <summary>
            Constant SELF_MANAGED for ActiveDirectoryType
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.ActiveDirectoryType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.ActiveDirectoryType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.ActiveDirectoryType.op_Implicit(System.String)~Amazon.LicenseManagerUserSubscriptions.ActiveDirectoryType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.LicenseServerEndpointProvisioningStatus">
            <summary>
            Constants used for properties of type LicenseServerEndpointProvisioningStatus.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.LicenseServerEndpointProvisioningStatus.DELETED">
            <summary>
            Constant DELETED for LicenseServerEndpointProvisioningStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.LicenseServerEndpointProvisioningStatus.DELETING">
            <summary>
            Constant DELETING for LicenseServerEndpointProvisioningStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.LicenseServerEndpointProvisioningStatus.DELETION_FAILED">
            <summary>
            Constant DELETION_FAILED for LicenseServerEndpointProvisioningStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.LicenseServerEndpointProvisioningStatus.PROVISIONED">
            <summary>
            Constant PROVISIONED for LicenseServerEndpointProvisioningStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.LicenseServerEndpointProvisioningStatus.PROVISIONING">
            <summary>
            Constant PROVISIONING for LicenseServerEndpointProvisioningStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.LicenseServerEndpointProvisioningStatus.PROVISIONING_FAILED">
            <summary>
            Constant PROVISIONING_FAILED for LicenseServerEndpointProvisioningStatus
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.LicenseServerEndpointProvisioningStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.LicenseServerEndpointProvisioningStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.LicenseServerEndpointProvisioningStatus.op_Implicit(System.String)~Amazon.LicenseManagerUserSubscriptions.LicenseServerEndpointProvisioningStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.LicenseServerHealthStatus">
            <summary>
            Constants used for properties of type LicenseServerHealthStatus.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.LicenseServerHealthStatus.HEALTHY">
            <summary>
            Constant HEALTHY for LicenseServerHealthStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.LicenseServerHealthStatus.NOT_APPLICABLE">
            <summary>
            Constant NOT_APPLICABLE for LicenseServerHealthStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.LicenseServerHealthStatus.UNHEALTHY">
            <summary>
            Constant UNHEALTHY for LicenseServerHealthStatus
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.LicenseServerHealthStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.LicenseServerHealthStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.LicenseServerHealthStatus.op_Implicit(System.String)~Amazon.LicenseManagerUserSubscriptions.LicenseServerHealthStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.ServerType">
            <summary>
            Constants used for properties of type ServerType.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.ServerType.RDS_SAL">
            <summary>
            Constant RDS_SAL for ServerType
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.ServerType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.ServerType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.ServerType.op_Implicit(System.String)~Amazon.LicenseManagerUserSubscriptions.ServerType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient">
             <summary>
             <para>Implementation for accessing LicenseManagerUserSubscriptions</para>
            
             With License Manager, you can create user-based subscriptions to utilize licensed
             software with a per user subscription fee on Amazon EC2 instances.
             </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor">
             <summary>
             Constructs AmazonLicenseManagerUserSubscriptionsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonLicenseManagerUserSubscriptionsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor(Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsConfig)">
             <summary>
             Constructs AmazonLicenseManagerUserSubscriptionsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonLicenseManagerUserSubscriptionsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonLicenseManagerUserSubscriptionsClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLicenseManagerUserSubscriptionsClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsConfig)">
            <summary>
            Constructs AmazonLicenseManagerUserSubscriptionsClient with AWS Credentials and an
            AmazonLicenseManagerUserSubscriptionsClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonLicenseManagerUserSubscriptionsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonLicenseManagerUserSubscriptionsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLicenseManagerUserSubscriptionsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor(System.String,System.String,Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsConfig)">
            <summary>
            Constructs AmazonLicenseManagerUserSubscriptionsClient with AWS Access Key ID, AWS Secret Key and an
            AmazonLicenseManagerUserSubscriptionsClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonLicenseManagerUserSubscriptionsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonLicenseManagerUserSubscriptionsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLicenseManagerUserSubscriptionsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor(System.String,System.String,System.String,Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsConfig)">
            <summary>
            Constructs AmazonLicenseManagerUserSubscriptionsClient with AWS Access Key ID, AWS Secret Key and an
            AmazonLicenseManagerUserSubscriptionsClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonLicenseManagerUserSubscriptionsClient Configuration Object</param>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.AssociateUserAsync(Amazon.LicenseManagerUserSubscriptions.Model.AssociateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Associates the user to an EC2 instance to utilize user-based subscriptions.
            
             <note> 
            <para>
            Your estimated bill for charges on the number of users and related costs will take
            48 hours to appear for billing periods that haven't closed (marked as <b>Pending</b>
            billing status) in Amazon Web Services Billing. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/invoice.html">Viewing
            your monthly charges</a> in the <i>Amazon Web Services Billing User Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AssociateUser service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/AssociateUser">REST API Reference for AssociateUser Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.CreateLicenseServerEndpointAsync(Amazon.LicenseManagerUserSubscriptions.Model.CreateLicenseServerEndpointRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a network endpoint for the Remote Desktop Services (RDS) license server.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicenseServerEndpoint service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLicenseServerEndpoint service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/CreateLicenseServerEndpoint">REST API Reference for CreateLicenseServerEndpoint Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.DeleteLicenseServerEndpointAsync(Amazon.LicenseManagerUserSubscriptions.Model.DeleteLicenseServerEndpointRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a <c>LicenseServerEndpoint</c> resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLicenseServerEndpoint service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLicenseServerEndpoint service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/DeleteLicenseServerEndpoint">REST API Reference for DeleteLicenseServerEndpoint Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.DeregisterIdentityProviderAsync(Amazon.LicenseManagerUserSubscriptions.Model.DeregisterIdentityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters the Active Directory identity provider from License Manager user-based
            subscriptions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterIdentityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterIdentityProvider service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/DeregisterIdentityProvider">REST API Reference for DeregisterIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.DisassociateUserAsync(Amazon.LicenseManagerUserSubscriptions.Model.DisassociateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Disassociates the user from an EC2 instance providing user-based subscriptions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisassociateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DisassociateUser service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/DisassociateUser">REST API Reference for DisassociateUser Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.ListIdentityProvidersAsync(Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the Active Directory identity providers for user-based subscriptions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListIdentityProviders service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListIdentityProviders service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/ListIdentityProviders">REST API Reference for ListIdentityProviders Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.ListInstancesAsync(Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the EC2 instances providing user-based subscriptions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListInstances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListInstances service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/ListInstances">REST API Reference for ListInstances Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.ListLicenseServerEndpointsAsync(Amazon.LicenseManagerUserSubscriptions.Model.ListLicenseServerEndpointsRequest,System.Threading.CancellationToken)">
            <summary>
            List the Remote Desktop Services (RDS) License Server endpoints
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseServerEndpoints service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLicenseServerEndpoints service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/ListLicenseServerEndpoints">REST API Reference for ListLicenseServerEndpoints Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.ListProductSubscriptionsAsync(Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the user-based subscription products available from an identity provider.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListProductSubscriptions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListProductSubscriptions service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/ListProductSubscriptions">REST API Reference for ListProductSubscriptions Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.ListTagsForResourceAsync(Amazon.LicenseManagerUserSubscriptions.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the list of tags for the specified resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.ListUserAssociationsAsync(Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists user associations for an identity provider.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUserAssociations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUserAssociations service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/ListUserAssociations">REST API Reference for ListUserAssociations Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.RegisterIdentityProviderAsync(Amazon.LicenseManagerUserSubscriptions.Model.RegisterIdentityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Registers an identity provider for user-based subscriptions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterIdentityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterIdentityProvider service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/RegisterIdentityProvider">REST API Reference for RegisterIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.StartProductSubscriptionAsync(Amazon.LicenseManagerUserSubscriptions.Model.StartProductSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a product subscription for a user with the specified identity provider.
            
             <note> 
            <para>
            Your estimated bill for charges on the number of users and related costs will take
            48 hours to appear for billing periods that haven't closed (marked as <b>Pending</b>
            billing status) in Amazon Web Services Billing. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/invoice.html">Viewing
            your monthly charges</a> in the <i>Amazon Web Services Billing User Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartProductSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartProductSubscription service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/StartProductSubscription">REST API Reference for StartProductSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.StopProductSubscriptionAsync(Amazon.LicenseManagerUserSubscriptions.Model.StopProductSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Stops a product subscription for a user with the specified identity provider.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopProductSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopProductSubscription service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/StopProductSubscription">REST API Reference for StopProductSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.TagResourceAsync(Amazon.LicenseManagerUserSubscriptions.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds tags to a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.UntagResourceAsync(Amazon.LicenseManagerUserSubscriptions.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes tags from a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.UpdateIdentityProviderSettingsAsync(Amazon.LicenseManagerUserSubscriptions.Model.UpdateIdentityProviderSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Updates additional product configuration settings for the registered identity provider.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateIdentityProviderSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateIdentityProviderSettings service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/UpdateIdentityProviderSettings">REST API Reference for UpdateIdentityProviderSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions">
             <summary>
             <para>Interface for accessing LicenseManagerUserSubscriptions</para>
            
             With License Manager, you can create user-based subscriptions to utilize licensed
             software with a per user subscription fee on Amazon EC2 instances.
             </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.AssociateUserAsync(Amazon.LicenseManagerUserSubscriptions.Model.AssociateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Associates the user to an EC2 instance to utilize user-based subscriptions.
            
             <note> 
            <para>
            Your estimated bill for charges on the number of users and related costs will take
            48 hours to appear for billing periods that haven't closed (marked as <b>Pending</b>
            billing status) in Amazon Web Services Billing. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/invoice.html">Viewing
            your monthly charges</a> in the <i>Amazon Web Services Billing User Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AssociateUser service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/AssociateUser">REST API Reference for AssociateUser Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.CreateLicenseServerEndpointAsync(Amazon.LicenseManagerUserSubscriptions.Model.CreateLicenseServerEndpointRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a network endpoint for the Remote Desktop Services (RDS) license server.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicenseServerEndpoint service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLicenseServerEndpoint service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/CreateLicenseServerEndpoint">REST API Reference for CreateLicenseServerEndpoint Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.DeleteLicenseServerEndpointAsync(Amazon.LicenseManagerUserSubscriptions.Model.DeleteLicenseServerEndpointRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a <c>LicenseServerEndpoint</c> resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLicenseServerEndpoint service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLicenseServerEndpoint service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/DeleteLicenseServerEndpoint">REST API Reference for DeleteLicenseServerEndpoint Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.DeregisterIdentityProviderAsync(Amazon.LicenseManagerUserSubscriptions.Model.DeregisterIdentityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters the Active Directory identity provider from License Manager user-based
            subscriptions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterIdentityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterIdentityProvider service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/DeregisterIdentityProvider">REST API Reference for DeregisterIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.DisassociateUserAsync(Amazon.LicenseManagerUserSubscriptions.Model.DisassociateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Disassociates the user from an EC2 instance providing user-based subscriptions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisassociateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DisassociateUser service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/DisassociateUser">REST API Reference for DisassociateUser Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.ListIdentityProvidersAsync(Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the Active Directory identity providers for user-based subscriptions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListIdentityProviders service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListIdentityProviders service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/ListIdentityProviders">REST API Reference for ListIdentityProviders Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.ListInstancesAsync(Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the EC2 instances providing user-based subscriptions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListInstances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListInstances service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/ListInstances">REST API Reference for ListInstances Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.ListLicenseServerEndpointsAsync(Amazon.LicenseManagerUserSubscriptions.Model.ListLicenseServerEndpointsRequest,System.Threading.CancellationToken)">
            <summary>
            List the Remote Desktop Services (RDS) License Server endpoints
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseServerEndpoints service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLicenseServerEndpoints service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/ListLicenseServerEndpoints">REST API Reference for ListLicenseServerEndpoints Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.ListProductSubscriptionsAsync(Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the user-based subscription products available from an identity provider.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListProductSubscriptions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListProductSubscriptions service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/ListProductSubscriptions">REST API Reference for ListProductSubscriptions Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.ListTagsForResourceAsync(Amazon.LicenseManagerUserSubscriptions.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the list of tags for the specified resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.ListUserAssociationsAsync(Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists user associations for an identity provider.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUserAssociations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUserAssociations service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/ListUserAssociations">REST API Reference for ListUserAssociations Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.RegisterIdentityProviderAsync(Amazon.LicenseManagerUserSubscriptions.Model.RegisterIdentityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Registers an identity provider for user-based subscriptions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterIdentityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterIdentityProvider service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/RegisterIdentityProvider">REST API Reference for RegisterIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.StartProductSubscriptionAsync(Amazon.LicenseManagerUserSubscriptions.Model.StartProductSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a product subscription for a user with the specified identity provider.
            
             <note> 
            <para>
            Your estimated bill for charges on the number of users and related costs will take
            48 hours to appear for billing periods that haven't closed (marked as <b>Pending</b>
            billing status) in Amazon Web Services Billing. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/invoice.html">Viewing
            your monthly charges</a> in the <i>Amazon Web Services Billing User Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartProductSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartProductSubscription service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/StartProductSubscription">REST API Reference for StartProductSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.StopProductSubscriptionAsync(Amazon.LicenseManagerUserSubscriptions.Model.StopProductSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Stops a product subscription for a user with the specified identity provider.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopProductSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopProductSubscription service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/StopProductSubscription">REST API Reference for StopProductSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.TagResourceAsync(Amazon.LicenseManagerUserSubscriptions.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds tags to a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.UntagResourceAsync(Amazon.LicenseManagerUserSubscriptions.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes tags from a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.UpdateIdentityProviderSettingsAsync(Amazon.LicenseManagerUserSubscriptions.Model.UpdateIdentityProviderSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Updates additional product configuration settings for the registered identity provider.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateIdentityProviderSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateIdentityProviderSettings service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/UpdateIdentityProviderSettings">REST API Reference for UpdateIdentityProviderSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
